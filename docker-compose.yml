# docker-compose.yml

services:
  # 백엔드 서비스 정의
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    volumes:
      # 로컬의 data와 faiss_index 폴더를 컨테이너와 동기화합니다.
      # 이렇게 하면 GitHub Actions로 DB가 업데이트될 때 컨테이너도 즉시 반영합니다.
      - ./data:/app/data
      - ./faiss_index:/app/faiss_index
    env_file:
      - .env # .env 파일의 API 키를 컨테이너 안에서 사용합니다.

  # 프론트엔드 서비스 정의
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "8501:8501"
    depends_on:
      - backend # 백엔드 서비스가 먼저 실행되도록 보장합니다.

      
  # 벡터 DB (ChromaDB) 서비스 정의
  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    ports:
      - "8001:8000"   # 호스트 8001 → 컨테이너 8000
    volumes:
      - ./chroma:/chroma/data   # 영구 저장을 위한 볼륨 마운트
    restart: unless-stopped
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  grafana-data:
{
    "1cowSISJEZF01b10Gf-ufN9OrumNCTEB0": "<table id='0' style='font-size:14px'><thead></thead><tbody><tr><td colspan=\"6\">[YBIGTA] 와빅 DB 유사 프로젝트 검색 에이전트</td></tr><tr><td>프로젝트 목표</td><td colspan=\"5\">젓 째, 와이빅타 창립 13주년을 맞아 학회 Gitnub, 활동 기주 Notion, 누적 GDrive들 DB와 하고, 진행된 프로젝트의 주세, 활동의 정보 등에 대한 방내한 양의 자료를 탐색하는 에이전트 설계한다. 둘 째,운영진 회의 및 컨퍼런스 주제 선정 등 DB로부터 유의미한 의사결정 정보를 얻을 수 있는 상황에서, 회의록 음성파일 투입 시 화자별 인사이트를 저보르 보추한 人 이도 로 하다 제공받고</td></tr><tr><td>담당자</td><td colspan=\"5\">박용우(팀장). 김현수(프런트엔드), 민세희(NLP), 박준서(백엔드), 조재관(STT)</td></tr><tr><td rowspan=\"3\">니즈</td><td colspan=\"5\">회의 중 특정 주제·발언자·결정 사항을 빠르게 찾을 방법이 제한적임. (수동 스크롤, 검색 필요)</td></tr><tr><td colspan=\"5\">다양한 회의 기록 검색, 회의별 스코프 검색 및 DB 기반 분석 가능</td></tr><tr><td colspan=\"5\">기존 서비스-회의 기록이 축적돼도 데이터베이스화가 안 되어 재활용이 어려움.</td></tr><tr><td rowspan=\"5\">산출물 목록</td><td>프로젝트 코드</td><td colspan=\"4\">app.py, query.py 등</td></tr><tr><td>DB</td><td colspan=\"4\">Input 데이터 Postgre DB에 저장</td></tr><tr><td>모델 파이프라인</td><td colspan=\"4\">Whisper STT, Diarization, Summarization, Text2SQL</td></tr><tr><td>문서</td><td colspan=\"4\">README.md, QUICK START.md</td></tr><tr><td>프런트엔드</td><td colspan=\"4\">streamlit 기반</td></tr><tr><td rowspan=\"2\">데이터셋</td><td>링크</td><td colspan=\"4\">AMI Meeting Corpus (Huggingface)</td></tr><tr><td>특징</td><td colspan=\"4\">나쿵 와사 외의 음성 데이터젯, 약 100시간 이상의 영어 외의 녹음, 일화사별 타임스탬프 포함 참고다르 데이터센 레퍼러스</td></tr><tr><td rowspan=\"4\">전체 파이프라인</td><td rowspan=\"3\">레퍼런스 시스템 구축</td><td colspan=\"4\">AMI Meeting Corpus (Carletta et al., 2005) → 공식 데이터셋 소개 논문: \"The AMI Meeting Corpus: A Pre-announcement\" 단계 설명</td></tr><tr><td colspan=\"4\">Audio Loader Speech-to-Text (STT) Database</td></tr><tr><td colspan=\"4\">음성 데이터 업로드 Whisper 기반 음성 → 텍스트 변환, 화자 분리 포함 Construction 텍스트/발화자/시간 정보를 PostgreSQL DB에 저장 Text2SQL 사용자 자연어 질의를 SQL로 변환 Query Execution DB에서 조건에 맞는 대화/요약/발언 추출</td></tr><tr><td>사용자 시나리오</td><td colspan=\"4\">wav 파일 업로드 사용자가 강의 또는 회의 녹음 파일 업로드 Auto Transcribe & Summarize 시스템이 STT 수행 및 요약본 PDF 생성 Search & Query 사용자가 \"OO 발언 언제 나왔어?\" 같은 자연어 질의 입력 Retrieve & Answer Text2SQL → DB 조회 → 결과 반환</td></tr><tr><td rowspan=\"2\">프로젝트 기능 명세서</td><td rowspan=\"2\">시스템 구축 파이프라인</td><td># 모듈</td><td>설명 입력</td><td>출력</td><td>비고</td></tr><tr><td>1 Audio Upload API 2 Whisper STT 3 Speaker Diarization 4 Text2SQL 5 FTS/ILIKE</td><td>WAV 업로드·저장·메타 생성 전사/세그먼트 생성 화자 라벨 정렬 NL → SQL(SELECT only) 키워드 검색/폴백</td><td colspan=\"2\">*.wav filename, meeting_id wav path segments(text,start,end,lang) wav path, se segments+speaker query, schemsql Upstage API query, meetirows</td></tr></tbody></table>\n<table id='1' style='font-size:14px'><thead></thead><tbody><tr><td rowspan=\"2\"></td><td rowspan=\"2\">사용자 실시간 흐름</td><td># 모듈</td><td>설명</td><td>입력</td><td>출력</td><td>비고</td></tr><tr><td>1 Audio Upload API 2 Query Exec 3 Answering</td><td>WAV 파일 업로드 SQL 실행/스코프 주입 한 줄 답변 생성</td><td>* .wav sql, params rows, query</td><td>filename, meeting_id rows 자연어 답변</td><td>Upstage API</td></tr><tr><td rowspan=\"2\" colspan=\"2\">대시보드 구성</td><td>섹션</td><td>구성 요소</td><td colspan=\"3\">예시</td></tr><tr><td>① Home ② 파일 업로드 ③ 자연어 검색 ④ 요약 생성 ⑤ 분석</td><td colspan=\"4\">기능 소개, 빠른 시작 안내 WAV 파일 업로드/처리 상태 표시 회의 선택, 모드(text2sql/fts) 선택, 결과 출 회의 선택 → 요약/액션/결정 보기 회의 수/발화 수/월별 추이/화자별 발화시간</td></tr></tbody></table>\n<figure id='2'><img style='font-size:18px' alt=\"Audio File Whisper STT Summarization\nUpload + Speaker Diarization Model\nOptional Feuter\nPDF Summary\nKeyword Index\nTimestamps\nETL Normalize SQL\" data-coord=\"top-left:(136,531); bottom-right:(1042,1097)\" /></figure>\n<figure id='3'><img style='font-size:14px' alt=\"PostgreSQL\n▶ meetings Query\nutterances Results\nactions\" data-coord=\"top-left:(142,129); bottom-right:(1043,542)\" /></figure>\n\n<br><table id='5' style='font-size:14px'><thead><tr><td>PIC(담당자)</td><td>업무 대분류</td><td>업무 수행 안내</td><td>업무 수행 공간</td><td>시작일</td><td>마감일</td><td>완료여부</td><td>제작자 업무 수행내역 기재</td><td>특이사항</td></tr></thead><tbody><tr><td>업스</td><td>all</td><td>업무 킥오프 미팅</td><td>킥오프 미팅노트</td><td>5/26</td><td>5/26</td><td>TRUE</td><td></td><td></td></tr><tr><td>업스</td><td>all</td><td>프로젝트 기능 명세서 작성</td><td>[Upstage ProductUseCae] 제작 현황 마스터시트</td><td>5/26</td><td>5/26</td><td>TRUE</td><td></td><td></td></tr><tr><td>YBIGTA</td><td>기타업무</td><td>리더 선정</td><td></td><td>5/26</td><td>5/27</td><td>TRUE</td><td></td><td></td></tr><tr><td>YBIGTA</td><td>프로젝트</td><td>프로젝트 설계</td><td>- 업무 진행 github 링크</td><td>5/26</td><td>6/4</td><td>FALSE</td><td></td><td></td></tr><tr><td>YBIGTA</td><td>프로젝트 가이드</td><td>프로젝트 가이드 작성</td><td>[Ext](데모 가이드)[c]1. 상담 기록 유형 분석 및 알림 자동화</td><td>5/26</td><td>6/4</td><td>FALSE</td><td></td><td></td></tr><tr><td>업스</td><td>프로젝트</td><td>프로젝트 코드 검수</td><td>[Upstage Product UseCae] 제작 현황 마스터시트</td><td>6/5</td><td>6/5</td><td>FALSE</td><td></td><td></td></tr><tr><td>업스</td><td>프로젝트 가이드</td><td>프로젝트 가이드 검수</td><td>[Upstage Product UseCae]제작 현황 마스터시트</td><td>6/5</td><td>6/5</td><td>FALSE</td><td></td><td></td></tr><tr><td>YBIGTA</td><td>all</td><td>검수 내역 반영</td><td>[Upstage Product UseCae]제작 현황 마스터시트</td><td>6/5</td><td>6/6</td><td>FALSE</td><td></td><td></td></tr><tr><td>YBIGTA</td><td>all</td><td>강의 최종본 검수 및 마무리 아카이빙</td><td>최종 가이드 링크 - 웹 데모 링크 · 최종 프로젝트 github</td><td>6/6</td><td>6/6</td><td>FALSE</td><td></td><td></td></tr><tr><td>업스</td><td>all</td><td>업무 마무리 미팅</td><td></td><td></td><td></td><td>FALSE</td><td></td><td></td></tr></tbody><caption id='4' style='font-size:20px'>Upstage Product UseCase : (1) 상담 기록 유형 분석 및 알림 자동화 업무 관리대장</caption></table>\n<p id='6' data-category='paragraph' style='font-size:20px'>프로젝트/ 프로젝트 가이드 검수내역</p>\n<br><table id='7' style='font-size:16px'><thead></thead><tbody><tr><td>검수자</td><td>콘텐츠 종류 콘텐츠명</td><td>검수항목</td><td>수정 필요 여부</td><td>검수 내역</td><td>정하였는지</td><td>세부 내용 기재& 반영하 확인(운영진</td><td>率 자료로 촬영 필수)</td></tr><tr><td>프로젝트</td><td>프로젝트 코드</td><td></td><td>필요</td><td></td><td></td><td>TRUE</td><td></td></tr><tr><td></td><td>프로젝트</td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td></tr><tr><td></td><td>퍼블리싱 문서</td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td></tr><tr><td></td><td>퍼블리싱 문서</td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td></tr></tbody></table>",
    "1lOZo6dRZWJ1ZppOdQ3jO9u70MPO3HaZP": "<header id='0' style='font-size:14px'>2025-2<br>YBIGTA</header>\n<h1 id='1' style='font-size:20px'>NotebookLocal<br>LLM MLOPS 성능개선</h1>\n<footer id='2' style='font-size:16px'>이재영</footer>\n<h1 id='3' style='font-size:18px'>What<br>I<br>want<br>to<br>do</h1>\n<br><figure id='4'><img alt=\"\" data-coord=\"top-left:(1280,167); bottom-right:(1718,612)\" /></figure>\n<h1 id='5' style='font-size:14px'>항상<br>공부를<br>할때<br>개념<br>간<br>흐름을<br>잡고<br>정리하는데<br>사용하는<br>시간이<br>많았고<br>그게<br>너무나도<br>아쉬웠습니다.</h1>\n<p id='6' data-category='paragraph' style='font-size:14px'>최근에<br>많은<br>사람들이<br>지피티나<br>노트북LM을<br>사용하지만<br>그것또한<br>귀찮고<br>내<br>컴퓨터<br>안에<br>있는<br>로컬<br>파일에서<br>바로바로<br>정리할<br>수<br>있길<br>원했습니다.</p>\n<p id='7' data-category='paragraph' style='font-size:14px'>그래서<br>옵시디언이라는<br>툴을<br>사용하게<br>되었습니다.<br><br>(쉽게<br>생각하면<br>로컬<br>fs에서<br>돌아가는<br>노션이라고<br>보면<br>됩니다!)<br></p>\n<h1 id='8' style='font-size:18px'>What<br>I<br>want<br>to<br>do</h1>\n<br><figure id='9'><img alt=\"\" data-coord=\"top-left:(1377,197); bottom-right:(1702,533)\" /></figure>\n<br><figure id='10'><img alt=\"\" data-coord=\"top-left:(1880,230); bottom-right:(2157,499)\" /></figure>\n<br><figure id='11'><img alt=\"\" data-coord=\"top-left:(2303,200); bottom-right:(2627,531)\" /></figure>\n<h1 id='12' style='font-size:14px'>로컬<br>file<br>system내에<br>있는<br>파일들을<br>커서처럼<br>탐색하여<br>수정하고<br>싶다.</h1>\n<p id='13' data-category='paragraph' style='font-size:14px'>Claude에<br>file<br>system<br>mcp를<br>달아서<br>옵시디언에서<br>사용하는<br>md<br>파일을<br>관리하면<br>되는<br>거<br>아니야?<br>←<br>처음<br>구상할때<br>클로드<br>앱에서<br>file<br>system<br>mcp를<br>지원하기<br>전이었음</p>\n<p id='14' data-category='paragraph' style='font-size:14px'>그래서<br>처음<br>구상할때<br>로컬에서<br>직접<br>모델을<br>서빙하고<br>홈서버를<br>돌려보자!<br>라는<br>차원에서<br>프로젝트를<br>출발하였습니다.</p>\n<h1 id='15' style='font-size:14px'>What<br>I<br>want<br>to<br>do</h1>\n<figure id='16'><img alt=\"\" data-coord=\"top-left:(786,431); bottom-right:(2229,1486)\" /></figure>\n<h1 id='17' style='font-size:18px'>What<br>I<br>want<br>to<br>do</h1>\n<figure id='18'><img alt=\"\" data-coord=\"top-left:(454,353); bottom-right:(2533,1437)\" /></figure>\n<p id='19' data-category='paragraph' style='font-size:14px'>https://www.mermaidchart.com/app/projects/a9713265-91de-4de1-9d48-3ce8dcac54a0/diagrams/d7fa3568-9178-4fe5-9d76-<br>bbccbc2c6d76/version/v0.1/edit</p>\n<h1 id='20' style='font-size:14px'>What<br>I<br>want<br>to<br>do</h1>\n<figure id='21'><img alt=\"\" data-coord=\"top-left:(0,305); bottom-right:(2990,1372)\" /></figure>\n<h1 id='22' style='font-size:14px'>What<br>I<br>want<br>to<br>do</h1>\n<figure id='23'><img alt=\"\" data-coord=\"top-left:(448,344); bottom-right:(2956,1907)\" /></figure>\n<br><h1 id='24' style='font-size:18px'>What<br>I<br>want<br>to<br>do</h1>\n<h1 id='25' style='font-size:14px'>메인<br>구현<br>파트<br>(1~5)</h1>\n<h1 id='26' style='font-size:14px'>1.<br>Document<br>Ingestion<br>&<br>Embedding</h1>\n<br><p id='27' data-category='list' style='font-size:14px'>폴더<br>감시<br>+<br>텍스트<br>추출<br>청크<br>분할<br>+<br>임베딩<br>생성<br>벡터<br>DB<br>저장<br>(Qdrant<br>등)<br>문서별<br>메타<br>정보<br>관리<br>rag<br>호출<br>조건<br></p>\n<h1 id='28' style='font-size:14px'>2.<br>RAG<br>Inference</h1>\n<br><p id='29' data-category='list' style='font-size:14px'>쿼리<br>임베딩<br>top-k<br>검색<br>+<br>컨텍스트<br>조합<br>LLM<br>호출<br>+<br>streaming<br>응답<br>프롬프트<br>구조<br>통일<br>(system<br>+<br>user<br>등)</p>\n<h1 id='30' style='font-size:14px'>3.<br>MLOps<br>Feedback<br>Loop</h1>\n<br><p id='31' data-category='list' style='font-size:14px'>Negative<br>response<br>수집<br>+<br>최근<br>N개<br>저장<br>good<br>response<br>수집<br>DPO<br>학습용<br>포맷<br>구축<br>로그<br>관리<br>+<br>모델<br>교체<br>(vLLM<br>reload)</p>\n<br><h1 id='32' style='font-size:14px'>4.<br>Training<br>Pipeline</h1>\n<br><p id='33' data-category='list' style='font-size:14px'>config<br>기반<br>학습<br>실행<br>DPO/LoRA<br>+<br>평가<br>+<br>버전링<br>메타<br>정보<br>저장</p>\n<h1 id='34' style='font-size:14px'>5.<br>Backend<br>API<br>&<br>Infra</h1>\n<br><p id='35' data-category='list' style='font-size:14px'>FastAPI<br>기반<br>API<br>SSE<br>streaming<br>Redis<br>연동<br>Plugin<br>↔<br>API<br>연결<br>구조</p>\n<p id='36' data-category='paragraph' style='font-size:18px'>What<br>I<br>want<br>to<br>do</p>\n<figure id='37'><img style='font-size:14px' alt=\"Problem\" data-coord=\"top-left:(305,478); bottom-right:(2304,1295)\" /></figure>\n<br><h1 id='38' style='font-size:14px'>Type<br>script로만<br>만들어진<br>monolithic<br>구성<br>So,<br>기존<br>구성에서<br>chatting을<br>하는<br>부분만<br>살려두고<br>나머지<br>부분은<br>분리해서<br>api의<br>형태로<br>소통하게끔<br><br>구성하는<br>것이<br>목표<br></h1>\n<p id='39' data-category='paragraph' style='font-size:14px'>https://github.com/logancyang/obsidian-copilot<br>Supports<br>plugin<br>for<br>(Edit<br>notes<br>via<br>chat,<br>QA<br>from<br>the<br>whole<br>vault,<br>Summarize<br>and<br>etc)</p>\n<h1 id='40' style='font-size:14px'>What<br>I<br>want<br>to<br>do</h1>\n<figure id='41'><img alt=\"\" data-coord=\"top-left:(124,474); bottom-right:(2992,1232)\" /></figure>\n<h1 id='42' style='font-size:18px'>What<br>I<br>want<br>to<br>do</h1>\n<h1 id='43' style='font-size:14px'>보조<br>구성<br>파트<br>(6~7)</h1>\n<h1 id='44' style='font-size:14px'>6.<br>Pipeline<br>설계<br>&<br>컴포넌트<br>설계</h1>\n<br><p id='45' data-category='list' style='font-size:14px'>전체<br>Mermaid<br>다이어그램<br>설계<br>유지<br>태스크<br>단위<br>흐름도<br>설계서<br>(RAG,<br>MLOps<br>등)<br>파라미터<br>/<br>chunk<br>size<br>/<br>임베딩<br>모델<br>설정<br>기준</p>\n<h1 id='46' style='font-size:14px'>7.<br>기존<br>Obsidian<br>Copilot<br>리팩터링</h1>\n<br><p id='47' data-category='list' style='font-size:14px'>plugin<br>내<br>prompt<br>전송부,<br>context<br>정리부<br>개선<br>새로운<br>API<br>구조에<br>맞춰서<br>요청<br>양식<br>수정<br>streaming<br>응답<br>처리<br>(SSE<br>listener<br>추가)<br>필요한<br>기능만<br>남기고<br>정리<br>(monolith<br>→<br>modular)</p>\n<p id='48' data-category='paragraph' style='font-size:14px'>현재<br>진행<br>상황</p>\n<h1 id='49' style='font-size:18px'>어필</h1>\n<p id='50' data-category='list' style='font-size:14px'>저는<br>저희<br>프로젝트가<br>놀이터가<br>될<br>수<br>있으면<br>좋겠습니다!<br>각자가<br>하고<br>싶은<br>내용을<br>맡아서<br>해당<br>테스크에<br>대해서<br>만족될때<br>까지<br>구현을<br>할<br>수<br>있으면<br>좋을<br>것<br>같습니다.</p>\n<h1 id='51' style='font-size:14px'>불필요한<br>회의는<br>없애고<br>정해진<br>파이프라인<br>속<br>구현<br>및<br>새<br>기능<br>탑재의<br>형태로<br>진행하고<br>싶습니다.</h1>\n<h1 id='52' style='font-size:14px'>팀장이<br>백수입니다!<br>(열심히<br>하겠습니다..!!)</h1>\n<p id='53' data-category='list' style='font-size:14px'>3090을<br>무제한으로<br>사용할<br>수<br>있습니다.<br>(저희<br>집<br>전기세에<br>기여를<br>할<br>수<br>있습니다!..)</p>\n<p id='54' data-category='list' style='font-size:14px'>로컬이라는<br>특수한<br>환경에서<br>돌려볼<br>수<br>있습니다.<br>(상상한거<br>거의<br>다<br>시도<br>가능!)</p>",
    "12qsMFN_Bqd5-JKV4fRvehYZiH8PbU-dI": "<h1 id='0' style='font-size:16px'>� � �</h1>\n<p id='1' data-category='paragraph' style='font-size:14px'>25' Y-Compass 학생창업팀<br>중간 창업 성과 보고회<br>July 24th, 2025</p>\n<br><p id='2' data-category='paragraph' style='font-size:20px'>이재우 임재민 조석희 김정인</p>\n<br><h1 id='3' style='font-size:22px'>Mindlog</h1>\n<h1 id='4' style='font-size:14px'>Punchline</h1>\n<p id='5' data-category='paragraph' style='font-size:18px'>Mindlog는 일기 형태로 누구나 스스로의 감정을 정리하고 돌아볼 수 있게 해주는 AI 기반 마인<br>드풀니스 어플리케이션입니다.사용자는 일기를 기반으로 AI 기반의 실시간 감정 모니터링, 마<br>음 진단은 물론 마음챙김을 위한 과학적인 컨텐츠를 제공합니다. 이를 통해 심리 상담을 받지 않<br>고는 기존에 불가능했던 전문적인 마음챙김을 가능하게 해 줍니다.</p>\n<h1 id='6' style='font-size:16px'>Motivation</h1>\n<p id='7' data-category='paragraph' style='font-size:18px'>일기 작심삼일 경험이 있는 YBIGTA 학회원 네 명이 일기를 쉽게 쓰려고 만들기 시작했습니다.<br>다양한 잠재 유저를 직접 만나보고, 단순한 일기가 아닌 AI를 이용한 마음 챙김 어플리케이션으<br>로 진화시키고 있습니다.</p>\n<p id='8' data-category='paragraph' style='font-size:14px'>User</p>\n<p id='9' data-category='paragraph' style='font-size:16px'>마인드로그는 감정 기록이 처음이거나 작심삼일로 끝났던 사람부터 체계적인 감정 관리를 필요<br>로 하는 사람들을 위한 AI 기반의 감정 기록 및 모니터링 어플입니다.</p>\n<br><p id='10' data-category='paragraph' style='font-size:14px'>USP</p>\n<p id='11' data-category='list' style='font-size:16px'>1. 그 날의 이미지만 업로드해도 AI가 그 날의 무드는 물론 함께한 사람, 방문한 장소를 기반으<br>로 데일리 로그 자동 생성<br>2. 누적된 일기를 위치, 감정, 시간 등의 기준으로 분석하여 대시보드로 시각화</p>\n<br><p id='12' data-category='list' style='font-size:18px'>3. 자체 개발 중인 고급 마음 진단 알고리즘과 상담심리 전문가와 협업하여 제작 중인 마음챙<br>김 컨텐츠 (개발 중)</p>\n<h1 id='13' style='font-size:20px'>Competitors</h1>\n<p id='14' data-category='paragraph' style='font-size:20px'>마보 (마음챙김 명상앱), 하루콩(이모지 기반 일기 어플리케이션), 애플 헬스</p>\n<p id='15' data-category='paragraph' style='font-size:22px'>Pricing</p>\n<p id='16' data-category='paragraph' style='font-size:18px'>Premium(₩6,000): 광고 제거 및 고급 시각화<br>Premium+(₩12,000): 자체 개발한 마음 진단 알고리즘 및 마음 챙김 컨텐츠</p>\n<footer id='17' style='font-size:20px'>MindLog</footer>\n<h1 id='18' style='font-size:20px'>Mindlog</h1>\n<figure id='19'><img style='font-size:14px' alt=\"9:41\n9:41 odong 9:41\n9:41 Kaesoi\n인왕산 나들이\nNew Log Feb 13 Kendrick Lamar GOD.\nPlace AF\nMindLog. Feb 13\n77\nPaju\nHan River\nGoyang\n357\nGMP\nBukhar\nSeoul 30 National\n새로운 아지트, 가좌동\n61\n壇�社 맘에 쏙 드는 아지트를 찾은 것 같아요.\nSun,Feb 10 집 주인의 허락은 받은 거죠?\n인왕\n서울에서 무당벌레를 볼 줄이야. 정말오래 살고볼일\n서울에서\n이다.\n오래살고볼일 이다.\nWhat best describe today's feeling?\nJoy Trust Fear Surprise 기쁨 감탄 만족 수용\nMon, Feb 11\nHello, 재우 ngnam\n오늘 하루, 무슨 일이 있었나요?\nWhat  S something from today that sticks with 도시 강가\nィ 종로구 사직동 NI 한옥 철수 즐거움\nyou? 5개의 로그 3개의 로그\n� 즐거움 Ⓡ 신뢰\n산 카페\n1개의 로그 2개의 로그\n21 Ready to Log\n← ↑ Share\nShare\" data-coord=\"top-left:(434,590); bottom-right:(3558,1732)\" /></figure>\n<footer id='20' style='font-size:16px'>MindLog</footer>\n<h1 id='21' style='font-size:20px'>이미지 기반 일기 증강</h1>\n<figure id='22'><img style='font-size:14px' alt=\"9:41\nⓧ\nWhat  S something from today that sticks with\nyou?\" data-coord=\"top-left:(1266,463); bottom-right:(1819,1592)\" /></figure>\n<br><figure id='23'><img style='font-size:16px' alt=\"9:41\n인왕산 나들이\nFeb 13\n壇稷社\nィ 종로구 사직동 川 한옥 철수 즐거움\n즐거움 신뢰\n[↑] Share\" data-coord=\"top-left:(2181,466); bottom-right:(2726,1600)\" /></figure>\n<p id='24' data-category='paragraph' style='font-size:18px'>MindLog</p>\n<h1 id='25' style='font-size:20px'>감정 분석 및 인사이트 제공</h1>\n<figure id='26'><img style='font-size:16px' alt=\"odono 9:41\nKaesor\n8 Place wa AH\n77\nPaju\nHan River\nGoyang\n357\nGMP\nBukhar\nSeoul 30 National\n61\n3\n8\nngnam\n도시 강가\n5개의 로그 3개의 로그\n산 카페\n1개의 로그 2개의 로그\n← ↑ Share\" data-coord=\"top-left:(1317,466); bottom-right:(1883,1634)\" /></figure>\n<br><figure id='27'><img style='font-size:14px' alt=\"9:41\nFeeling\nWeek Month Year\nState of mind Dec 8-14, 2024\nAnticipation Joy\nAnger Trust\nDisgust Fear\nSadness Surprise\nJoy Trust\n기쁨과만족 감탄과 수용\nFear Surprise\n공포와 긴장 경이와 놀람\nSadness Disgust\n슬픔과 우울 혐오와 지루\nAnger Anticipation\n격노와 불쾌 열망과 호기심\n← ↑ Share\" data-coord=\"top-left:(2111,466); bottom-right:(2681,1643)\" /></figure>\n<footer id='28' style='font-size:18px'>MindLog</footer>\n<h1 id='29' style='font-size:20px'>나만을 위한 컨텐츠</h1>\n<figure id='30'><img style='font-size:14px' alt=\"Kendrick Lamar · GOD. Kendrick Lamar - GOD. Kendrick Lamar · GOD.\n성장통과 함께한 2024년이었네요. 올해의 동반자, 석희 새로운 아지트, 가좌동\n103개의 소중한 순간들, 되돌아봐요\n무려 62번이나 만났어요. 사진만 143장이네요! 맘에 쏙 드는 아지트를 찾은 것 같아요.\n고마운 마음을 표현해 보는 건 어떨까요? 집 주인의 허락은 받은 거죠?\n하이라이트 필름은 아카이브에서 언제든 다시 확\n인할 수 있어요.\nKINU\" data-coord=\"top-left:(1048,456); bottom-right:(2938,1599)\" /></figure>\n<footer id='31' style='font-size:16px'>MindLog</footer>\n<table id='32' style='font-size:14px'><thead><tr><td>Week</td><td>계획</td><td>실제로 한 것</td><td>활동내용</td></tr></thead><tbody><tr><td>1</td><td>OT 및 로드맵 수립</td><td>OT 및 로드맵 수립</td><td>킥오프 미팅 전후로 2-30대 지인 7명을 대상으로 기존의 프로토타입과 함께 Mindlog 서비스에 대한 피 칭을 진행하였고, 공통된 반응은 '일기 어플'에 정기적으로 구독료를 내는 것이 꺼려진다'였음. 'AI + 일 기'라는 식상함을 넘어서기 위한 서비스의 고도화가 필요하다고 판단하였음.</td></tr></tbody></table>\n<table id='33' style='font-size:16px'><thead></thead><tbody><tr><td rowspan=\"2\">2</td><td rowspan=\"2\">개발 요구사항 정의서 고도화</td><td>상담심리 연계, DTx 등 대안적 BM 탐색</td><td>일기는 광의로 마음챙김 행동에 포함되며, 이와 관련된 스마트폰용 어플리케이션은 의학적 · 임상적 근 거의 유무를 기준으로 DTx(Digital Theraphutics)와 Wellness 어플로 구분됨.팀의 역량과 기존 서비 스 기획안을 고려했을 때 Wellness 기능 중심의 서비스 고도화가 필요하다고 판단하였음.</td></tr><tr><td>이미지 기반 자동 태그 생성 시스템 개선</td><td>ViT-L/14 모델 활용 및 배치 처리 지원 가능하도록 개선하였음. 또한 EXIF 데이터 추출 및 OSM API를 연동하여 GPS 위치 기반 태깅이 가능하도록 개선하였음. DeepFace 모델 파트에서 인물 얼굴 검출하 고 클러스터링까지 가능하도록 개선하였음.</td></tr><tr><td>3</td><td>프로토타입 개발</td><td>웰니스(마인드풀니스) 시장 탐색</td><td>시장 규모를 추정하고, 수험생· 심리상담 경험자 등 잠재 타겟 고객층을 탐색하였으며, 이를 바탕으로 HCI 관점의 이용자 분석 및 과업 분석 등 서비스 디자인 프로세스를 진행하였음.</td></tr><tr><td rowspan=\"2\">4</td><td rowspan=\"2\">TestFlight 배포 및 피드백 수집</td><td>상담심리 전문가 1명 자문 인터뷰 잠재 유저 대상 3명 FGI 진행</td><td>잠재 유저 3명을 대상으로 반구조화 인터뷰를 진행하였음. 또한 상담심리학 전공자를 대상으로 관련 컨 텐츠 자문, 추후 심리 상담 워크플로우와의 연계와 관련하여 자문 목적의 비구조화 인터뷰를 진행하였고, 현재 서비스 구조도 재작성 중임.</td></tr><tr><td>백엔드 코드 전반적 리팩토링 진행 중</td><td>사용자 인증에 기반하여 유저의 다이어리만을 생성, 조회, 수정, 삭제가 가능하게끔 개선하였음.위치 기 반 다이어리 조회 기능(Map View)에서 줌 정도에 따라 표시되는 다이어리의 수가 조정되도록 개선하였 음. 감정 태그를 바탕으로 시각화해주는 모듈을 설계 중임.</td></tr></tbody></table>\n<footer id='34' style='font-size:20px'>MindLog</footer>\n<p id='35' data-category='paragraph' style='font-size:14px'>Week</p>\n<br><p id='36' data-category='paragraph' style='font-size:16px'>계획</p>\n<br><p id='37' data-category='paragraph' style='font-size:18px'>활동 내용</p>\n<br><p id='38' data-category='paragraph' style='font-size:20px'>5-8 마음 챙김 컨텐츠 기획 및 개발<br>Working prototype 개발<br>AI 모델 서비스 레벨로 고도화</p>\n<footer id='39' style='font-size:20px'>MindLog</footer>\n<h1 id='40' style='font-size:20px'>왜 일기를 쓰는가?</h1>\n<br><table id='41' style='font-size:14px'><thead></thead><tbody><tr><td>까먹는 경우가 많아서 일상을 기록하고 싶음. 나중에 '내가 이때 이런 감정을 느꼈구나' 돌아보는 게 의미있음.</td></tr><tr><td>불안, 긴장, 우울과 같은 힘든 감정을 정리하는 데 도움이 됨. 연인 · 가족과의 갈등 이후 내 감정을 솔직히 적으면 진정됨.</td></tr></tbody></table>\n<br><p id='42' data-category='paragraph' style='font-size:16px'>시험을 앞두고 멘탈 관리할 때, 시험 끝나고 나서 마음을 정리하고 회고할 때 씀.</p>\n<p id='43' data-category='paragraph' style='font-size:14px'>Notion이나 Google Docs에 씀. 가장 자주 쓰는 어플이어서. 다이어리에 기록함. 바쁠 때는 쓰고 싶지만 못 쓰는 편임.</p>\n<br><p id='44' data-category='paragraph' style='font-size:22px'>어디에 일기를 쓰는가?</p>\n<br><p id='45' data-category='paragraph' style='font-size:14px'>아이폰 기본 노트 앱에 작성함. 시중 일기 어플보다 더 감성적이고 기능도 낫다고 생각함.</p>\n<p id='46' data-category='paragraph' style='font-size:14px'>일기는 유저가 직접 참여하면서 작성할 수 있으면 좋을 것 같음.</p>\n<br><p id='47' data-category='paragraph' style='font-size:22px'>원하는 일기 경험은?</p>\n<br><p id='48' data-category='paragraph' style='font-size:14px'>다이어리에 기록함. 바쁠 때는 쓰고 싶지만 못 쓰는 편임.</p>\n<p id='49' data-category='paragraph' style='font-size:14px'>아이폰 기본 노트 앱에 작성함. 시중 일기 어플보다 더 감성적이고 기능도 낫다고 생각함.</p>\n<footer id='50' style='font-size:18px'>MindLog</footer>\n<p id='51' data-category='paragraph' style='font-size:20px'>Entry User</p>\n<br><table id='52' style='font-size:14px'><thead></thead><tbody><tr><td>motivation</td><td>일기(감정 기록)에 관심이 생긴 사람</td><td>불안, 우울, 번아웃 등 감정적 위기 경험이 있으며, 체계적인 감정 루틴이 필요한 사람</td></tr><tr><td>needs</td><td>감정 이해의 시작점, 꾸준한 감정 기록의 필요성</td><td>감정의 흐름 파악, 자기 통찰 강화, 지속적 감정 케어 컨텐츠</td></tr><tr><td>value proposition</td><td>시간과 에너지 부담 없이 접근할 수 있는 감정 기록 경험, AI 기반 요약 및 시각화</td><td>상담심리학에 근거한 감정 모니터링 및 피드백, 필요 시 상담과 연계, 전문적인 감정 시각화</td></tr></tbody></table>\n<br><p id='53' data-category='paragraph' style='font-size:18px'>Active User</p>\n<footer id='54' style='font-size:16px'>MindLog</footer>\n<h1 id='55' style='font-size:20px'>Mindfulness 관여도 기반의<br>User segmentation 필요</h1>\n<p id='56' data-category='paragraph' style='font-size:16px'>상담 대체재 · 보완재로서의<br>포지셔닝</p>\n<p id='57' data-category='paragraph' style='font-size:14px'>MindLog</p>\n<p id='58' data-category='paragraph' style='font-size:18px'>https://github.com/lupin0326/MindLog</p>\n<p id='59' data-category='paragraph' style='font-size:14px'>MindLog</p>\n<table id='60' style='font-size:14px'><thead></thead><tbody><tr><td colspan=\"3\">TODO</td><td>WIP DONE</td></tr><tr><td>PLANNING</td><td>화면 정의서 재설계</td><td>외부 전문가 접촉 및 컨텐츠 개발 관련 제안</td><td>이해관계자 대상 FGI 진행 및 인사이트 도출</td></tr><tr><td>DEVELOPMENT</td><td>감정 기반 추천 콘텐츠 로딩 시간 최적화 一 성능 프로파일링 진행 예정</td><td>감정 이상 탐지 설계 및 개입 구조 구축</td><td>다이어리 CRUD 위치 기반 Map 조회 감정 통계 기능 사용자 인증/보안 이미지 업로드 및 S3 저장</td></tr><tr><td></td><td colspan=\"3\"><table><thead></thead><tbody><tr><td>AI</td><td>외부 자원 기반 이미지 처리 시스템 구축</td><td>AI 모델 최적화 (모델 임계값 조정)</td><td>AI 모델 기반 자동 태깅 시스템 구축 완료</td></tr><tr><td colspan=\"4\">AI 감정 분석 모듈 탑재 (자체 추론) 감정 모니터링 시스템 개발</td></tr></tbody></table></td></tr></tbody></table>\n<footer id='61' style='font-size:20px'>MindLog</footer>\n<figure id='62'><img style='font-size:14px' alt=\"HUMAN TOUCH AI\n사용자 감정의 생태학적 변화\n모니터링 및 개입 가능\n심리학 · 인지과학 · HCI에\n기반한 마음챙김 경험 제공\n정량적 신뢰를 담보하는\n과학적 감정 분석 체계.\" data-coord=\"top-left:(506,227); bottom-right:(3527,1989)\" /></figure>\n<footer id='63' style='font-size:18px'>MindLog</footer>\n<h1 id='64' style='font-size:18px'>번거로운 일기 쓰기, 쉽지 않은 심리 상담 없이도<br>자신의 마음을 객관적으로 들여다 볼 수 있게 해주자.</h1>\n<footer id='65' style='font-size:14px'>MindLog</footer>\n<h1 id='66' style='font-size:14px'></h1>\n<p id='67' data-category='paragraph' style='font-size:18px'>� ����</p>\n<figure id='68'><img style='font-size:14px' alt=\"PM으로서 다양한 사용자 중심의 AI 서비스 기획을 총 한국디지털미디어고등학교 웹프로그래밍과를 졸업하\n괄해 왔습니다. 자영업자 경영 업무 보조를 위한 AI 에이 고 연세대학교 컴퓨터과학과에 재학 중입니다. 비대면\n전트 기반의 일정/할일 관리 어플리케이션, 시각장애인 수업 Zoom 자동 종료 프로그램, 확증편향 완화 웹 서비\n의 스타일링 보조를 위한 CV 기반 어플리케이션 등의 스 등 실생활 문제 해결에 집중한 프로젝트를 주도했습\n이재우 PM・UX Designer 김정인 FE · BE Developer\n서비스를 기획하며 PM 역량과 협업 역량을 길러왔습니 니다. JAkorea 창업 놀이터, Upstage 해커톤 등 다양\n다. MindLog 프로젝트에서는 기획과, UX 디자인을 수 oizhq2062@yonsei.ac.kr jungin0210@yonsei.ac.kr 한 IT 관련 대회에 참가해 수상하며 실력을 인정받았습\n행했으며, 개발에도 기여하며 프로젝트 전반을 리딩했 니다. IT 전반에 대한 깊은 이해와 기술 응용 능력을 바\n습니다. 현재는 Yonsei HCI Lab에서 인턴으로 근무하 탕으로, 창의적이고 실용적인 솔루션을 만드는 데 강점\n며 인간과 AI의 상호작용에 대해 연구하고 있습니다. 을 지니고 있습니다.\n딥러닝 기반 항공사진 식생 분류 프로젝트에서 U-Net\n과 VGG 모델을 활용하고, 성능 개선을 주도한 경험이\n데이터 기반 마케팅 전문가이자 프론트엔드 개발자로\n있습니다. 교내 코딩 캠프에 참여하여 머신러닝 이론을\n서, 국내 최대 IT 기업 및 글로벌 프랜차이즈를 대상으로\n익히고, 쇼핑 및 음악 데이터를 활용한 분석 프로젝트를\nAmplitude를 활용한 마케팅 프로젝트를 수행한 경험\n수행하며 실전 감각을 키웠습니다. 또한 산업공학 복수\n이 있습니다. Mindlog 앱의 초기 프로토타입을 직접 개\n임재민 Management · FE Developer 조석희 AI Scientist 전공을 통해 공학적 기반을 다지고, 머신러닝·딥러닝 기\n발하여 학회 시연에서 좋은 평가를 받았으며, Tableau\n술의 산업 적용 가능성을 폭넓게 실습해보았습니다. 최\n및 데이터 분석 관련 캠프를 수료하여 데이터 해석과 시 woals7260@yonsei.ac.kr lupin0326@yonsei.ac.kr\n근에는 Upstage 해커톤에 참가해 RAG 기반 부동산\n각화에도 능숙합니다. 현재는 사내 업무 자동화를 위한\n투자 상품 기획 프로젝트를 수행하며, RAG 파이프라인\n챗봇 개발을 진행 중이며, 창업팀에서는 개발과 함께 회\n구축을 담당했습니다. 다양한 도메인과 데이터를 다룬\n계 및 마케팅 등 경영 전반을 담당하고자 합니다.\n경험을 바탕으로, 실질적 문제 해결을 위한 AI 개발에 강\n점을 가지고 있습니다.\nMindLog\" data-coord=\"top-left:(131,161); bottom-right:(3893,2182)\" /></figure>",
    "1I9-oM97K0Q8dc9SE-01kU4i01aYWmtl2": "<h1 id='0' style='font-size:20px'>💊</h1>\n<br><h1 id='1' style='font-size:20px'>복약 알림 & 부작용 안내 Agent</h1>\n<br><h1 id='2' style='font-size:16px'>: 사용자의 약물 정보를 바탕으로 맞춤 알림과 안내 제공 LLM 챗봇</h1>\n<h1 id='3' style='font-size:14px'>26기 엄윤희</h1>\n<h1 id='4' style='font-size:18px'>프로젝트 개요</h1>\n<h1 id='5' style='font-size:18px'>왜?</h1>\n<p id='6' data-category='list' style='font-size:14px'>만성질환자, 일반 사용자 모두를 위한 복약 실수 예방<br>실용적인 헬스케어 분야의 Agent<br>약 복용 시 인지하기 어려운 주의사항으로 인해 발생하는 불편함과 부작용</p>\n<h1 id='7' style='font-size:18px'>목적</h1>\n<br><figure id='8'><img alt=\"\" data-coord=\"top-left:(2411,717); bottom-right:(2809,1154)\" /></figure>\n<br><p id='9' data-category='list' style='font-size:14px'>사용자의 약물 복용 정보를 기반으로 한 복약 알림 및 부작용 안내 Agent<br>사용자 입력을 자동으로 저장</p>\n<h1 id='10' style='font-size:18px'>🗨사용 시나리오</h1>\n<h1 id='11' style='font-size:14px'>타이레놀 먹었는데<br>속 쓰려요 🥹</h1>\n<br><p id='12' data-category='paragraph' style='font-size:14px'>나 OO약 저녁에<br>먹어야 돼?</p>\n<p id='13' data-category='paragraph' style='font-size:14px'>공복에 먹으니까 그렇지.<br>밥을 먹고 드세요... 🍚</p>\n<br><p id='14' data-category='paragraph' style='font-size:14px'>그 약은 하루 2번이니까<br>먹어야지... 😮‍💨</p>\n<h1 id='15' style='font-size:18px'>📜사용 Dataset</h1>\n<br><h1 id='16' style='font-size:14px'>의약품안전나라에서 약물명, 부작용, 복용법 크롤링<br>(크롤링 규모보다는 간단한 데모 제작에 집중 예정)</h1>\n<h1 id='17' style='font-size:18px'>🖥개발 내용</h1>\n<br><p id='18' data-category='list' style='font-size:14px'>약물 정보 수집 및 프롬프트 설계<br>LangChain / GPT 연동 + 테스트<br>Streamlit UI 구성 및 연결</p>\n<p id='19' data-category='paragraph' style='font-size:18px'>💡간단한 플로우</p>\n<br><p id='20' data-category='paragraph' style='font-size:14px'>사용자 입력 → Prompt Template → LLM 응답 → Streamlit UI</p>\n<h1 id='21' style='font-size:18px'>🌟이런 분을 찾습니다</h1>\n<br><p id='22' data-category='list' style='font-size:14px'>Agent를 만들어보고 싶다!<br>난 짧은 시간 내에 집중해서 빠르게 끝내고 싶다!<br>8/16(토)-17(일)에 집중할 수 있다!<br>편하게 하고 싶은 역할을 말할 수 있다!</p>\n<br><figure id='23'><img alt=\"\" data-coord=\"top-left:(1467,683); bottom-right:(2682,1488)\" /></figure>\n<p id='24' data-category='paragraph' style='font-size:14px'>감사합니다<br>많관부...</p>",
    "1EQZoMRSnbmwnNpZOqF1921nJL0m0cG2M": "<h1 id='0' style='font-size:14px'>2025.08.05</h1>\n<h1 id='1' style='font-size:20px'>YBIGTA SEARCH AGENT</h1>\n<h1 id='2' style='font-size:16px'>여름방학 프로젝트 발제<br>DS 26기 강정묵</h1>\n<h1 id='3' style='font-size:20px'>문제 정의 및 배경</h1>\n<h1 id='4' style='font-size:18px'>YBIGTA의 모든 활동 정보·자료가 Notion, GitHub, Google Drive 등 여러 곳에 분산되어 있습니다.</h1>\n<p id='5' data-category='list' style='font-size:18px'>필요한 정보를 찾는 데 어려움</p>\n<p id='6' data-category='list' style='font-size:16px'>신입 부원 온보딩/적응에 시간 소요</p>\n<p id='7' data-category='list' style='font-size:16px'>! 지식 관리의 비효율성 발생</p>\n<p id='8' data-category='list' style='font-size:18px'>정보의 일관성 및 최신성 유지 어려움</p>\n<br><p id='9' data-category='paragraph' style='font-size:14px'>Notion</p>\n<br><h1 id='10' style='font-size:22px'>○</h1>\n<br><h1 id='11' style='font-size:14px'>GitHub</h1>\n<p id='12' data-category='paragraph' style='font-size:18px'>YBIGTA<br>Agent</p>\n<h1 id='13' style='font-size:14px'>Google Drive</h1>\n<h1 id='14' style='font-size:22px'>프로젝트 개요</h1>\n<h1 id='15' style='font-size:20px'>분산된 YBIGTA 정보를 통합하고 모든 부원이 쉽게 접근할 수 있는 RAG 기반 AI Agent 개발</h1>\n<p id='16' data-category='paragraph' style='font-size:20px'>목표: YBIGTA 내부 모든 자료를 빠르게 탐색·이용할 수 있는 RAG<br>기반 AI Agent 개발</p>\n<h1 id='17' style='font-size:20px'>핵심 기능: 자연어 질문에 대한 정확한 답변 제공 및 원본 출처 표시</h1>\n<p id='18' data-category='paragraph' style='font-size:20px'>C 지식 관리: Notion, GitHub, Google Drive의 문서를 자동으로 인<br>덱싱하고 최신 상태 유지</p>\n<p id='19' data-category='paragraph' style='font-size:20px'>사용자 피드백: 지속적인 답변 품질 개선을 위한 피드백 수집 및 분<br>석 시스템</p>\n<br><h1 id='20' style='font-size:18px'>사용자 질문</h1>\n<br><h1 id='21' style='font-size:18px'>RAG 기반AI</h1>\n<br><h1 id='22' style='font-size:20px'>Agent</h1>\n<br><p id='23' data-category='paragraph' style='font-size:18px'>지식 데이터베<br>이스</p>\n<h1 id='24' style='font-size:14px'>Notion</h1>\n<br><h1 id='25' style='font-size:14px'>GitHub</h1>\n<br><h1 id='26' style='font-size:14px'>Drive</h1>\n<p id='27' data-category='paragraph' style='font-size:18px'>활용 예시:</p>\n<p id='28' data-category='paragraph' style='font-size:16px'>\"작년 여름방학 RL 프로젝트 주<br>제는?\"</p>\n<br><p id='29' data-category='paragraph' style='font-size:16px'>\"작년 여름방학 RL 프로젝트는<br>'강화학습 기반 트레이딩 시스<br>템' 주제였습니다. [출처:<br>Github/ybigta-2024-summer]\"</p>\n<h1 id='30' style='font-size:22px'>기술 스택 소개</h1>\n<h1 id='31' style='font-size:18px'>YBIGTA AI Agent 개발에 활용되는 핵심 기술 및 프레임워크</h1>\n<h1 id='32' style='font-size:20px'>AI/ML</h1>\n<p id='33' data-category='paragraph' style='font-size:14px'>LangChain Llamalndex OpenAl API</p>\n<br><h1 id='34' style='font-size:16px'>A因 임베딩 모델</h1>\n<p id='35' data-category='paragraph' style='font-size:16px'>A KoBERT T 한국어 특화 모델</p>\n<h1 id='36' style='font-size:16px'>HuggingFace Hub</h1>\n<h1 id='37' style='font-size:16px'>Vector Database</h1>\n<p id='38' data-category='paragraph' style='font-size:16px'>FAISS ChromaDB (예정)</p>\n<h1 id='39' style='font-size:20px'>MLOps (CI/CD)</h1>\n<br><p id='40' data-category='paragraph' style='font-size:16px'>Web Framework & UI</p>\n<p id='41' data-category='paragraph' style='font-size:14px'>GitHub Actions Docker</p>\n<br><p id='42' data-category='paragraph' style='font-size:14px'>FastAPI 1~ Streamlit</p>\n<h1 id='43' style='font-size:20px'>RAG 시스템 아키텍처</h1>\n<p id='44' data-category='paragraph' style='font-size:16px'>데이터 수집 → 전처리 → 임베딩 → 벡터 DB 저장 → 검색 및 RAG 파이프라인 → 답변 생성 (참고문서 출처 포함)</p>\n<p id='45' data-category='list' style='font-size:18px'>1 데이터 수집: Notion, GitHub, Google Drive에서 문서 수집<br>2 데이터 전처리: 텍스트 추출, 정제, Chunking<br>3 임베딩 생성: KoBERT 등 한국어 특화 모델 활용<br>4 벡터 저장: FAISS 또는 ChromaDB에 벡터 인덱스 구축<br>5 유사 문서 검색: 사용자 질의와 관련된 문서 검색<br>6 LLM 기반 응답 생성: OpenAl API 활용<br>7 참고 문서 출처 표시: 정확한 정보 추적성 제공</p>\n<br><figure id='46'><img style='font-size:14px' alt=\"YBIGTA AI Agent Architecture\nUser Interface\n(Streamlit)\nUser Query Final Response\nAPI Server\n(FastAPI)\nAI Agent Core (LangChain)\nRAG Chain / Pipeline\nQuery + Context Generated Answer Retrieve Docs\nLarge Language Model Vector Database\n(e.g., GPT-4) (FAISS)\nKnowledge Base CI/CD Pipeline\n3. GitHub Actions Triggered\n1. Add/Update Docs 2. Git Push 4. Update\n(Notion, PDF, etc.) to Repository - Load & Parse Docs Vector DB\n- Embed Text Chunks\" data-coord=\"top-left:(1109,313); bottom-right:(1884,1080)\" /></figure>\n<h1 id='47' style='font-size:22px'>현재 구현 상황 (MVP)</h1>\n<p id='48' data-category='paragraph' style='font-size:18px'>\"수동으로 문서를 추가하면, 자동으로 지식이 업데이트되고, 사용자는 대화형 웹 앱을 통해 질문할 수 있는 AI Agent\" 데모 버전 완성</p>\n<p id='49' data-category='list' style='font-size:18px'>기본 RAG 파이프라인 완성</p>\n<p id='50' data-category='list' style='font-size:20px'>대화형 웹 인터페이스 (Streamlit)</p>\n<p id='51' data-category='list' style='font-size:20px'>자동화된 지식 업데이트 (GitHub Actions)</p>\n<p id='52' data-category='list' style='font-size:18px'>Docker 컨테이너화 및 간편 실행 환경</p>\n<p id='53' data-category='list' style='font-size:18px'>맥락 기억 및 후속 질문 가능</p>\n<br><p id='54' data-category='paragraph' style='font-size:14px'>작년 여름방학 RL 프로젝트는 어떤 주제였어?</p>\n<p id='55' data-category='paragraph' style='font-size:14px'>작년 여름방학 RL (강화학습) 프로젝트는 \"자율주행 환경<br>에서의 Deep Q-Network 적용\"이 주제였습니다.<br>YBIGTA 팀은 OpenAl Gym 환경을 활용하여 DQN,<br>DDQN 알고리즘을 구현했습니다. [출처: YBIGTA<br>GitHub/summer_2024_RL]</p>\n<h1 id='56' style='font-size:16px'>질문을 입력하세요...</h1>\n<br><p id='57' data-category='paragraph' style='font-size:18px'>↗</p>\n<h1 id='58' style='font-size:22px'>향후 개발 계획: Phase 1  실시간 데이터 연동</h1>\n<h1 id='59' style='font-size:18px'>현재 로컬 폴더 기반의 시스템을 확장하여, 실제 사용 중인 서비스들과 직접 연동하는 자동화 시스템 구축</h1>\n<h1 id='60' style='font-size:18px'>S Notion API 연동: NotionDirectoryLoader를 통해 YBIGTA<br>Notion 페이지/데이터베이스 실시간 접근</h1>\n<h1 id='61' style='font-size:18px'>Google Drive 연동: OAuth 2.0 인증을 통한 공유 문서/스프레드<br>시트 자동 동기화</h1>\n<p id='62' data-category='paragraph' style='font-size:18px'>8 GitHub 연동: YBIGTA 프로젝트 리포지토리 코드/문서 자동 크롤<br>링</p>\n<h1 id='63' style='font-size:18px'>데이터 관리: 변경된 데이터만 선별적으로 임베딩하여 효율성 증대</h1>\n<br><h1 id='64' style='font-size:14px'>Notion API</h1>\n<p id='65' data-category='paragraph' style='font-size:20px'>○</p>\n<br><h1 id='66' style='font-size:14px'>GitHub API</h1>\n<br><h1 id='67' style='font-size:16px'>YBIGTAAI Agent</h1>\n<h1 id='68' style='font-size:14px'>Google Drive API</h1>\n<h1 id='69' style='font-size:22px'>향후 개발 계획: Phase 2  인프라 확장</h1>\n<h1 id='70' style='font-size:18px'>프로덕션급 Vector DB 도입: ChromaDB 또는 Weaviate</h1>\n<br><h1 id='71' style='font-size:16px'>O</h1>\n<br><p id='72' data-category='list' style='font-size:20px'>C 업데이트 로직 구현: 새로운 문서나 변경된 문서만 선별하여 임베딩<br>처리 (리소스 효율화)</p>\n<br><h1 id='73' style='font-size:16px'>FAISS</h1>\n<p id='74' data-category='paragraph' style='font-size:20px'>대규모 데이터 처리 최적화: 수천 개 이상 문서의 효율적인 처리 구<br>조 개선</p>\n<br><p id='75' data-category='paragraph' style='font-size:18px'>ChromaDB</p>\n<br><h1 id='76' style='font-size:16px'>서버 방식</h1>\n<br><p id='77' data-category='paragraph' style='font-size:14px'>로컬 파일 기반<br>제한된 확장성</p>\n<p id='78' data-category='paragraph' style='font-size:20px'>� 성능 모니터링 시스템: 쿼리 속도, 메모리 사용량 등 핵심 지표 실시<br>간 추적</p>\n<br><h1 id='79' style='font-size:16px'>높은 확장성 및 성능</h1>\n<h1 id='80' style='font-size:20px'>업데이트 로직</h1>\n<h1 id='81' style='font-size:14px'>새 문서</h1>\n<br><p id='82' data-category='paragraph' style='font-size:16px'>식별</p>\n<br><h1 id='83' style='font-size:14px'>변경 부분</h1>\n<br><p id='84' data-category='paragraph' style='font-size:14px'>부분</p>\n<br><p id='85' data-category='paragraph' style='font-size:16px'>추출</p>\n<br><p id='86' data-category='paragraph' style='font-size:14px'>DB</p>\n<br><h1 id='87' style='font-size:14px'>임베딩</h1>\n<br><h1 id='88' style='font-size:16px'>업데이트</h1>\n<h1 id='89' style='font-size:20px'>향후 개발 계획: Phase 3  고성능 RAG/피드백</h1>\n<h1 id='90' style='font-size:18px'>사용자 피드백을 통해 지속적으로 개선되는 고성능 RAG 파이프라인을 구축합니다.</h1>\n<h1 id='91' style='font-size:18px'>사용자 피드백 시스템 구축: 답변마다 좋아요/싫어요 버튼 추가하여<br>성능 데이터 수집</h1>\n<p id='92' data-category='list' style='font-size:18px'>Re-ranking 적용: 검색된 문서를 관련성 기준으로 재정렬하여 정확<br>도 향상</p>\n<p id='93' data-category='list' style='font-size:18px'>Query Transformation: 모호한 질문을 LLM이 다양한 버전으로<br>변환하여 검색 성공률 개선</p>\n<p id='94' data-category='list' style='font-size:18px'>区 피드백 데이터 분석: '싫어요'가 많은 질문-답변 패턴 분석 및 문제점<br>파악</p>\n<p id='95' data-category='list' style='font-size:18px'>지속적 개선 체계: 분석 결과 기반 Chunking 전략, 임베딩 모델 교<br>체, 프롬프트 최적화</p>\n<br><h1 id='96' style='font-size:14px'>사용자 질의응답</h1>\n<br><h1 id='97' style='font-size:14px'>피드백 수집</h1>\n<p id='98' data-category='paragraph' style='font-size:14px'>파이프라인 개선</p>\n<br><h1 id='99' style='font-size:16px'>데이터 분석</h1>\n<h1 id='100' style='font-size:22px'>기대 효과 및 활용 방안</h1>\n<h1 id='101' style='font-size:16px'>YBIGTA AI Agent 도입을 통한 비즈니스 임팩트와 확장 가능성</h1>\n<h1 id='102' style='font-size:18px'>정보 접근성 개선</h1>\n<br><p id='103' data-category='paragraph' style='font-size:20px'>�</p>\n<br><p id='104' data-category='paragraph' style='font-size:14px'>분산된 정보를 통합하여 필요한 자료를 자연어로 빠르게 검색할<br>수 있어 시간 절약 및 업무 효율성 향상</p>\n<h1 id='105' style='font-size:20px'>지식 관리 체계화</h1>\n<br><p id='106' data-category='paragraph' style='font-size:14px'>학회의 모든 지적 자산이 통합 관리되어 지식의 재사용성 증가<br>및 프로젝트 품질 향상</p>\n<br><h1 id='107' style='font-size:20px'>신입 부원 온보딩 효율화</h1>\n<br><p id='108' data-category='paragraph' style='font-size:14px'>새로운 구성원이 학회 활동과 규정을 빠르게 파악하여 적응 시간<br>단축 및 조기 역량 발휘 가능</p>\n<h1 id='109' style='font-size:20px'>협업 효율성 증대</h1>\n<br><p id='110' data-category='paragraph' style='font-size:14px'>실시간 정보 공유로 팀 간 소통 개선 및 프로젝트 추진 속도 향<br>상, 중복 작업 방지</p>\n<h1 id='111' style='font-size:22px'>결론 및 Q&A</h1>\n<h1 id='112' style='font-size:18px'>프로젝트 의의 및 주요 학습 성과</h1>\n<p id='113' data-category='list' style='font-size:16px'>YBIGTA 내 분산된 지식 통합으로 정보 접근성 대폭 개선<br>RAG 기반 AI Agent 시스템 개발 경험 및 기술 역량 강화<br>MLOps 파이프라인 구축으로 지속적 성장형 시스템 설계<br>향후 학회 내외부 적용 및 확장 가능성 창출</p>\n<br><h1 id='114' style='font-size:20px'>질의응답</h1>\n<p id='115' data-category='paragraph' style='font-size:16px'>프로젝트에 대한 질문이나 의견을 자유롭게 나눠주세<br>요. 함께 더 나은 AI Agent를 만들어가겠습니다.</p>\n<p id='116' data-category='paragraph' style='font-size:14px'>YBIGTA AI Agent 개발 프로젝트</p>\n<br><h1 id='117' style='font-size:14px'>nickjmk@yonsei.ac.kr</h1>\n<br><h1 id='118' style='font-size:18px'>github.com/Mookjsi</h1>",
    "1HiobMsTuZQP0sRrm0n57RIMnRpYoz_A3": "<header id='0' style='font-size:14px'>2025-2<br>YBIGTA</header>\n<h1 id='1' style='font-size:20px'>Research Agent<br>방학 프로젝트</h1>\n<footer id='2' style='font-size:16px'>DS<br>팀장<br>김형진</footer>\n<br><h1 id='3' style='font-size:14px'>Research<br>Agent<br>-<br>발제계기<br></h1>\n<figure id='4'><img alt=\"\" data-coord=\"top-left:(128,356); bottom-right:(1379,838)\" /></figure>\n<figure id='5'><img alt=\"\" data-coord=\"top-left:(172,919); bottom-right:(1132,1083)\" /></figure>\n<br><figure id='6'><img alt=\"\" data-coord=\"top-left:(1504,305); bottom-right:(2787,901)\" /></figure>\n<figure id='7'><img alt=\"\" data-coord=\"top-left:(187,1109); bottom-right:(1196,1278)\" /></figure>\n<br><figure id='8'><img alt=\"\" data-coord=\"top-left:(1531,1039); bottom-right:(2772,1589)\" /></figure>\n<br><h1 id='9' style='font-size:18px'>LLM<br>agent-<br>Research<br><br></h1>\n<h1 id='10' style='font-size:14px'>CycleResearcher:<br>Improving<br>Automated<br>Research<br>via<br>Automated<br>Review(ICLR<br>2025)<br>Hierarchically<br>Encapsulated<br>Representation<br>for<br>Protocol<br>Design<br>in<br>Self-Driving<br>Labs(ICLR<br>2025)<br>AgentRxiv:<br>Towards<br>Collaborative<br>Autonomous<br>Research(2025<br>preprint)<br>Agent<br>Laboratory:<br>Using<br>LLM<br>Agents<br>as<br>Research<br>Assistants(2025<br>preprint)<br>AI-Researcher:<br>Autonomous<br>Scientific<br>Innovation(2025<br>preprint)<br>GraphEval:<br>A<br>Lightweight<br>Graph-Based<br>LLM<br>Framework<br>for<br>Idea<br>Evaluation(ICLR<br>2025)<br>Zochi:<br>The<br>World's<br>First<br>Artificial<br>Scientist(얘가<br>쓴<br>논문이<br>ACL<br>2025<br>붙음)<br>Meet<br>Carl:<br>The<br>First<br>AI<br>System<br>To<br>Produce<br>Academically<br>Peer-Reviewed<br>Research<br>(얘가<br><br>쓴<br>논문이<br>ICLR<br>2025<br>workshop<br>붙음)</h1>\n<br><h1 id='11' style='font-size:20px'>Research<br>Agent<br>-<br>발제계기<br></h1>\n<br><h1 id='12' style='font-size:16px'>The<br>AI<br>Scientist-v2(Sakana-AI)</h1>\n<figure id='13'><img alt=\"\" data-coord=\"top-left:(248,434); bottom-right:(2884,1510)\" /></figure>\n<p id='14' data-category='paragraph' style='font-size:14px'>https://arxiv.org/abs/2504.08066</p>\n<br><h1 id='15' style='font-size:20px'>Research<br>Agent<br>-<br>발제계기<br>1.<br>실적<br>있음<br></h1>\n<br><h1 id='16' style='font-size:16px'>The<br>AI<br>Scientist-v2(Sakana-AI)</h1>\n<footer id='17' style='font-size:14px'>https://arxiv.org/abs/2504.08066</footer>\n<br><h1 id='18' style='font-size:20px'>Research<br>Agent<br>-<br>발제계기<br>2.<br>오픈<br>소스<br>코드!!<br></h1>\n<br><h1 id='19' style='font-size:16px'>The<br>AI<br>Scientist-v2(Sakana-AI)</h1>\n<br><p id='20' data-category='paragraph' style='font-size:16px'>→<br>이<br>코드<br>기반으로<br>우리<br>가<br>맘대로<br>수정하면<br>된다.</p>\n<br><figure id='21'><img alt=\"\" data-coord=\"top-left:(138,323); bottom-right:(1879,1646)\" /></figure>\n<br><h1 id='22' style='font-size:16px'>이미<br>로컬<br>모델로<br>돌려봄.</h1>\n<p id='23' data-category='paragraph' style='font-size:14px'>https://arxiv.org/abs/2504.08066</p>\n<br><h1 id='24' style='font-size:20px'>Research<br>Agent<br>-<br>발제계기<br>2.<br>오픈<br>소스<br>코드!!<br></h1>\n<br><h1 id='25' style='font-size:16px'>The<br>AI<br>Scientist-v2(Sakana-AI)</h1>\n<figure id='26'><img alt=\"\" data-coord=\"top-left:(140,319); bottom-right:(1878,1644)\" /></figure>\n<br><h1 id='27' style='font-size:16px'>→<br>이거<br>가지고<br>단기간에<br>뭔가<br>해볼<br>수<br>있지<br>않을까?</h1>\n<br><h1 id='28' style='font-size:16px'>우리가<br>처음부터<br>코드를<br>쌓<br>아올릴<br>필요가<br>없다.</h1>\n<br><p id='29' data-category='paragraph' style='font-size:16px'>다만<br>우리가<br>세션때<br>배웠던<br>n8n,<br>langraph,langchain<br>아무것도<br>사용하지<br>않는다..</p>\n<p id='30' data-category='paragraph' style='font-size:14px'>https://arxiv.org/abs/2504.08066</p>\n<br><h1 id='31' style='font-size:18px'>Research<br>Agent<br><br><br>The<br>AI<br>Scientist-v2(Sakana-AI)</h1>\n<figure id='32' data-category='chart'><img data-coord=\"top-left:(246,544); bottom-right:(1403,1569)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Zochi</td><td>Al Scientist v2</td><td>Al Scientist</td><td>Agent Lab</td><td>Cari</td></tr></thead><tbody><tr><td>item_01</td><td>8</td><td>4</td><td>4</td><td>4</td><td>3</td></tr></tbody></table></figure>\n<br><h1 id='33' style='font-size:14px'>→<br>다만<br>이거보다<br>더<br>어썸한<br>Zochi라는<br>애가<br>나와서,<br>이쪽으로<br>갈아탈까<br>고민중.</h1>\n<br><h1 id='34' style='font-size:14px'>→<br>이걸로<br>ACL<br>2025<br>accept<br>시킴.</h1>\n<br><h1 id='35' style='font-size:14px'>→<br>근데<br>오픈<br>소스가<br>얘만<br>있어서...</h1>\n<br><h1 id='36' style='font-size:20px'>Research<br>Agent<br>-<br>질의<br>응답.<br><br>The<br>AI<br>Scientist-v2(Sakana-AI)</h1>\n<h1 id='37' style='font-size:14px'>Q:<br>문제<br>정의는?</h1>\n<br><p id='38' data-category='paragraph' style='font-size:16px'>문제<br>정의<br>A:<br>아이디어<br>내는<br>거부터<br>논문<br>작성하는<br>것까지..<br>직접하기<br>너무<br>귀찮다...<br>그냥<br>딸깍으로<br>할<br>순<br>없나??<br><br></p>\n<br><h1 id='39' style='font-size:20px'>Research<br>Agent<br>-<br>질의<br>응답.<br></h1>\n<br><h1 id='40' style='font-size:14px'>The<br>AI<br>Scientist-v2(Sakana-AI)</h1>\n<p id='41' data-category='list' style='font-size:14px'>Q:<br>구현하고자<br>하는<br>인풋?</p>\n<h1 id='42' style='font-size:16px'>인풋<br>A:<br>md<br>파일<br>형태의<br>명세서<br></h1>\n<br><h1 id='43' style='font-size:16px'>Research<br>Agent<br>-<br>질의<br>응답.<br><br>The<br>AI<br>Scientist-v2(Sakana-AI)</h1>\n<h1 id='44' style='font-size:14px'>Q:<br>구현하고자<br>하는<br>아웃풋?</h1>\n<h1 id='45' style='font-size:20px'>아웃풋<br>A:<br>우리가<br>아는<br>논문<br></h1>\n<br><h1 id='46' style='font-size:20px'>Research<br>Agent<br>-<br>질의<br>응답.<br><br>The<br>AI<br>Scientist-v2(Sakana-AI)</h1>\n<h1 id='47' style='font-size:14px'>Q:<br>필요한<br>데이터셋<br>및<br>활용방안은?</h1>\n<p id='48' data-category='list'></p>\n<br><p id='49' data-category='paragraph' style='font-size:16px'>필요한<br>데이터셋<br>및<br>활용방안<br>A:<br>n_shot으로<br>넣어줄만한<br>모범<br>논문들<br>과<br>그에<br>대한<br>고퀄의<br>리뷰데이터.<br>Open<br>review<br>참조<br>예정.</p>\n<br><h1 id='50' style='font-size:20px'>Research<br>Agent<br>-<br>질의<br>응답.<br><br>The<br>AI<br>Scientist-v2(Sakana-AI)</h1>\n<br><h1 id='51' style='font-size:14px'>Q:<br>필요한<br>역량은?</h1>\n<br><figure id='52'><img alt=\"\" data-coord=\"top-left:(1012,331); bottom-right:(1460,780)\" /></figure>\n<br><h1 id='53' style='font-size:16px'>필요역량<br>A:<br>Agent가<br>생성한<br>아이디어를<br>verify<br>할<br>수<br>있어야한다.<br>AI<br>Scientist-v2를<br>개량하여<br>더<br>좋은<br>성능을<br>내도록<br>개발<br>할<br>수<br>있어야한다.<br>(성능<br>=<br>성공률<br>up<br>or<br>퀼리티<br>up)</h1>\n<p id='54' data-category='paragraph' style='font-size:14px'>하지만<br>여기에<br>시간<br>투자<br>가능한가와<br>이거<br>재밌겠다고<br>생각하는가가<br>더<br>중요합니다.</p>\n<br><h1 id='55' style='font-size:20px'>Research<br>Agent<br>-<br>질의<br>응답.<br><br>The<br>AI<br>Scientist-v2(Sakana-AI)</h1>\n<br><h1 id='56' style='font-size:14px'>Q:<br>시도하고<br>싶은<br>것은?</h1>\n<p id='57' data-category='paragraph' style='font-size:16px'>시도<br>하고<br>싶은<br>것<br>A:<br><br>고려대<br>연합<br>해커톤<br>주제인<br>벤치마크<br>만들기를<br>고려하여,<br>벤치마크<br>아이디어를<br>잘<br>생성해<br>내는지<br>확인해보고<br>싶습니다.</p>\n<h1 id='58' style='font-size:14px'>감사합니다!</h1>",
    "1HYnbwucnzpsiwrXJD4HGiLXISMNkUcDm": "<header id='0' style='font-size:14px'>2025-2\u0001YBIGTA</header>\n<h1 id='1' style='font-size:20px'>Langchain</h1>\n<footer id='2' style='font-size:16px'>26기\u0001정민지</footer>\n<h1 id='3' style='font-size:18px'>목\u0001차</h1>\n<p id='4' data-category='list' style='font-size:14px'>1. Why\u0001Langchain?<br>2. What\u0001is\u0001Langchain?<br>3. RAG<br>4. 실전:\u0001LangChain으로\u0001RAG\u0001구현하기<br>4. 확장:\u0001Agent와의\u0001결합\u0001가능성..?</p>\n<h1 id='5' style='font-size:14px'>Why\u0001Langchain?</h1>\n<h1 id='6' style='font-size:22px'>LangChain이<br>필요한<br>이유<br></h1>\n<h1 id='7' style='font-size:18px'>기존<br>단일<br>LLM<br>사용의<br>한계</h1>\n<h1 id='8' style='font-size:20px'>🔒<br>지식<br>단절<br>(Knowledge<br>Cutoff)<br><br>🧮<br>외부<br>시스템과의<br>연동<br>어려움<br>🧱<br>복잡한<br>작업<br>처리의<br>한계<br>🧏<br>메모리<br>없음:<br>과거<br>대화/문맥을<br>기억<br>못함<br>🧠<br>Hallucination,<br>도메인<br>특화<br>지식<br>부족...등등</h1>\n<br><figure id='9'><img alt=\"\" data-coord=\"top-left:(1291,659); bottom-right:(1780,1030)\" /></figure>\n<br><h1 id='10' style='font-size:14px'>Why<br>Langchain?</h1>\n<figure id='11'><img style='font-size:14px' alt=\"나\n불렀어?\" data-coord=\"top-left:(1738,319); bottom-right:(2827,1230)\" /></figure>\n<br><p id='12' data-category='paragraph' style='font-size:16px'>LLM<br>한계<br>극복<br>!!</p>\n<header id='13' style='font-size:14px'>Why<br>Langchain?</header>\n<br><p id='14' data-category='paragraph' style='font-size:22px'>LangChain의<br>개입</p>\n<figure id='15'><img style='font-size:14px' alt=\"이\n몸,\n등장\" data-coord=\"top-left:(193,422); bottom-right:(1147,1262)\" /></figure>\n<br><h1 id='16' style='font-size:18px'><br><br><br>LLM을<br>\"실행<br>가능한<br>시스템\"으로<br>바꿔줍니다</h1>\n<br><p id='17' data-category='list' style='font-size:20px'>외부<br>지식<br>연결:<br>RAG<br>(검색<br>기반<br>응답)<br>툴<br>조합:<br>계산기,<br>검색기,<br>데이터베이스<br>질의<br>가능<br>(Agent)<br>복잡한<br>로직<br>&<br>작업<br>수행<br>→<br>Chain을<br>활용하여<br>구성!<br><br>Memory<br>관리:<br>사용자<br>맥락<br>기억<br>및<br>활용<br>가능<br>언어모델<br>쉽게<br>교체<br>가능</p>\n<p id='18' data-category='paragraph' style='font-size:16px'>→<br>LLM<br>+<br>도구<br>+<br>문서<br>+<br>구조화<br>→<br>실용적인<br>지능형<br>시스템</p>\n<h1 id='19' style='font-size:14px'>What\u0001is\u0001Langchain?</h1>\n<header id='20' style='font-size:14px'>What\u0001is\u0001Langchain?</header>\n\n<figure id='22'><img alt=\"\" data-coord=\"top-left:(176,426); bottom-right:(1481,1449)\" /><br><figcaption id='21' style='font-size:20px'>LangChain\u0001=\u0001Language\u0001+\u0001Chain</figcaption></figure>\n<br><h1 id='23' style='font-size:16px'>언어\u0001모델에\u0001기반한\u0001AI\u0001application을<br>쉽게\u0001개발할\u0001수\u0001있도록\u0001도와주는\u0001프레임워크</h1>\n<p id='24' data-category='list' style='font-size:16px'>2022년\u000110월\u0001개발.\u0001오픈소스.<br>GitHub에서\u0001가장\u0001빠르게\u0001성장한\u0001AI\u0001프로젝트<br>\u0001\u0001\u0001\u0001\u0001\u0001(2023년\u0001기준)</p>\n<p id='25' data-category='paragraph' style='font-size:16px'>랭체인의\u0001꽃:\u0001'연결'</p>\n<br><p id='26' data-category='paragraph' style='font-size:16px'>→\u0001단순한\u0001API\u0001래퍼X,\u0001생태계!!</p>\n<h1 id='27' style='font-size:14px'>What<br>is<br>Langchain?</h1>\n<br><h1 id='28' style='font-size:20px'>LangChain<br>아키텍처</h1>\n<br><h1 id='29' style='font-size:16px'>LCEL<br>(LangChain<br>Expression<br>Language)<br>:<br>복잡한<br>작업흐름을<br>간단하게<br>만들고<br>관리할<br>수<br>있도록<br>돕는<br>도구</h1>\n<figure id='30'><img style='font-size:14px' alt=\"Chain:\n작업흐름을\n연결하는\n것\nPrompt\nUser\nInput Retriever\n→\nLLM Output\nTemplate\nVectorDB Documents\" data-coord=\"top-left:(156,668); bottom-right:(2866,1306)\" /></figure>\n<h1 id='31' style='font-size:16px'>What<br>is<br>Langchain?</h1>\n<br><h1 id='32' style='font-size:22px'>LCEL<br>(LangChain<br>Expression<br>Language)</h1>\n<br><h1 id='33' style='font-size:20px'>:<br>복잡한<br>작업흐름을<br>간단하게<br>만들고<br>관리할<br>수<br>있도록<br>돕는<br>도구</h1>\n<h1 id='34' style='font-size:14px'>chain = prompt | model | output_parser 파이프(|)<br>연산자를<br>사용한<br>체인<br>구성</h1>\n<table id='35' style='font-size:18px'><thead></thead><tbody><tr><td></td><td>Prompt<br>Template과<br>함께라면 필요한<br>부분만<br>수정할<br>수<br>있어~</td><td><br><br><br>장점: 간결하고<br>직관적인<br>문법 스트리밍<br>지원 병렬<br>실행<br>최적화 비동기<br>처리<br>지원</td></tr></tbody></table>\n<header id='36' style='font-size:14px'>What<br>is<br>Langchain?</header>\n<br><h1 id='37' style='font-size:20px'>LangChain<br>Tools<br>vs<br>Function<br>Calling</h1>\n<h1 id='38' style='font-size:14px'><br>Function<br>Calling<br>(단일<br>LLM)</h1>\n<br><p id='39' data-category='list' style='font-size:16px'>OpenAI<br>GPT의<br>함수<br>호출<br>기능<br>모델이<br>직접<br>함수<br>실행<br>결정<br><br>제한된<br>도구<br>세트</p>\n<h1 id='40' style='font-size:14px'>Tools<br>(LangChain)</h1>\n<br><p id='41' data-category='list' style='font-size:16px'>다양한<br>외부<br>도구<br>연결<br>가능<br>도구<br>체이닝<br>및<br>조합<br>가능<br>사용자<br>정의<br>도구<br>생성<br>지원<br>Agent가<br>도구<br>선택<br>및<br>실행<br><br><br><br>ex)<br>인터넷<br>검색<br>기능<br>추가<br>등</p>\n<br><figure id='42'><img alt=\"\" data-coord=\"top-left:(1205,418); bottom-right:(2744,1502)\" /></figure>\n<header id='43' style='font-size:16px'>What<br>is<br>Langchain?</header>\n<br><h1 id='44' style='font-size:20px'>LangChain<br>메모리<br>시스템</h1>\n<table id='45' style='font-size:14px'><thead><tr><td>메모리<br>타입</td><td>설명</td><td>장점</td><td>단점</td></tr></thead><tbody><tr><td>ConversationBufferMemory</td><td>전체<br>대화<br>저장</td><td>완전한<br>맥락<br>유지</td><td>메모리<br>사용량<br>증가</td></tr><tr><td>ConversationBufferWindowMemory</td><td>최근<br>N개<br>메시지만<br>저장</td><td>메모리<br>효율적</td><td>오래된<br>정보<br>손실</td></tr><tr><td>ConversationSummaryMemory</td><td>대화<br>내용<br>요약<br>저장</td><td>중요<br>정보<br>압축</td><td>세부<br>정보<br>손실</td></tr><tr><td>ConversationTokenBufferMemory</td><td>토큰<br>수<br>기반<br>관리</td><td>API<br>비용<br>제어</td><td>복잡한<br>설정</td></tr></tbody></table>\n<h1 id='46' style='font-size:14px'>What<br>is<br>Langchain?</h1>\n<br><h1 id='47' style='font-size:20px'>그<br>외<br>장점</h1>\n<h1 id='48' style='font-size:16px'>인터넷<br>검색<br>도구<br>추가<br>기능</h1>\n<br><p id='49' data-category='list' style='font-size:16px'>Google<br>Search<br>(API<br>키<br>필요,<br>유료)<br>Bing<br>Search<br>(API<br>키<br>필요,<br>유료)<br>DuckDuckGo<br>Search<br>(무료,<br>추천!)<br>Tavily<br>Search<br>(AI<br>특화)</p>\n<br><h1 id='50' style='font-size:18px'><br><br><br>→<br>향후<br>RAG<br>구현에<br>도움</h1>\n<h1 id='51' style='font-size:16px'>언어<br>모델<br>교체<br>Easy</h1>\n<br><h1 id='52' style='font-size:16px'>선언부분만<br>수정</h1>\n<header id='53' style='font-size:14px'>What<br>is<br>Langchain?</header>\n<br><h1 id='54' style='font-size:20px'>언어<br>모델<br>선언<br>비교<br>ex.GPT<br>API</h1>\n<br><h1 id='55' style='font-size:16px'>기존<br>프로그램을<br>다른<br>언어모델로<br>변경하려면<br><br>코드<br>전반을<br>수정했어야<br>했다..</h1>\n<br><figure id='56'><img style='font-size:16px' alt=\"모델마다\n상이한\n호출방식\n\" data-coord=\"top-left:(182,328); bottom-right:(2135,1323)\" /></figure>\n<br><p id='57' data-category='paragraph' style='font-size:16px'>LangChain</p>\n<p id='58' data-category='paragraph' style='font-size:16px'>단일<br>LLM</p>\n<p id='59' data-category='paragraph' style='font-size:16px'>훨씬<br>간단해진<br>코드</p>\n<p id='60' data-category='paragraph' style='font-size:14px'>RAG<br>Retrieval-Augmented\u0001Generation</p>\n<header id='61' style='font-size:20px'>Why\u0001RAG?</header>\n<br><header id='62' style='font-size:14px'>RAG</header>\n<figure id='63'><img alt=\"\" data-coord=\"top-left:(936,387); bottom-right:(1985,1428)\" /></figure>\n<br><p id='64' data-category='paragraph' style='font-size:16px'>불쌍..외롭..<br>학습\u0001시점\u0001이후의\u0001바깥세상은\u0001몰라ㅠ</p>\n<p id='65' data-category='paragraph' style='font-size:16px'>어둠\u0001속에\u0001갇혀있는\u0001ChatGPT</p>\n<h1 id='66' style='font-size:20px'>Why\u0001RAG?</h1>\n<br><header id='67' style='font-size:14px'>RAG</header>\n<figure id='68'><img alt=\"\" data-coord=\"top-left:(285,376); bottom-right:(1330,1426)\" /></figure>\n<br><p id='69' data-category='paragraph' style='font-size:16px'>RAG와\u0001LangChain으로\u0001외부\u0001세상과\u0001연결</p>\n<br><figure id='70'><img alt=\"\" data-coord=\"top-left:(1612,376); bottom-right:(2645,1426)\" /></figure>\n<br><p id='71' data-category='paragraph' style='font-size:16px'>답변왕</p>\n<header id='72' style='font-size:14px'>RAG</header>\n<br><h1 id='73' style='font-size:20px'>RAG\u0001(Retrieval-Augmented\u0001Generation)</h1>\n<figure id='74'><img alt=\"\" data-coord=\"top-left:(171,387); bottom-right:(1755,1399)\" /></figure>\n<br><p id='75' data-category='paragraph' style='font-size:16px'>LLM에\u0001RAG를\u0001연결한\u0001플로우차트</p>\n<br><p id='76' data-category='list' style='font-size:16px'>외부\u0001지식을\u0001실시간으로\u0001검색하여<br>답변\u0001생성에\u0001활용<br>LLM의\u0001한계(지식\u0001단절,\u0001할루시네<br>이션)\u0001극복<br>특정\u0001도메인\u0001지식이\u0001부족한\u0001경우<br>보완\u0001가능<br>2020년\u0001Facebook\u0001AI\u0001Research<br>논문에서\u0001시작</p>\n<header id='77' style='font-size:14px'>RAG</header>\n<br><h1 id='78' style='font-size:22px'>RAG<br>구조<br>(Retriever<br>+<br>Generator)</h1>\n<h1 id='79' style='font-size:16px'>1)<br>검색<br>(Retrieval):<br>관련<br>문서/정보<br>찾기<br>2)<br>생성<br>(Generation):<br>검색<br>결과를<br>바탕으로<br>답변<br>생성</h1>\n<h1 id='80' style='font-size:18px'><br><br><br>핵심<br>구성요소</h1>\n<br><p id='81' data-category='list' style='font-size:16px'>Knowledge<br>Base<br>(지식<br>기반)<br>Retriever<br>(검색기)<br>Generator<br>(생성기)<br>기존<br>생성<br>모델과의<br>차이점:<br>출처<br>추적이<br>가능<br>→<br>정보의<br>신뢰성<br>향상</p>\n<br><p id='82' data-category='paragraph' style='font-size:20px'>RAG를<br>위한<br>Pre-Step</p>\n<br><p id='83' data-category='paragraph' style='font-size:20px'>:문서<br>로딩,<br>분할,<br>임베딩,<br>벡터DB</p>\n<h1 id='84' style='font-size:20px'>핵심<br>구성<br>요소</h1>\n<br><header id='85' style='font-size:14px'>RAG</header>\n<h1 id='86' style='font-size:14px'>문서<br>로딩</h1>\n<br><h1 id='87' style='font-size:16px'><br><br><br>지원하는<br>데이터<br>소스</h1>\n<br><p id='88' data-category='list' style='font-size:16px'>PDF,<br>Word,<br>TXT<br>파일<br>웹페이지<br>(Web<br>scraping)<br>데이터베이스<br>API<br>응답</p>\n<h1 id='89' style='font-size:16px'><br><br><br>주요<br>LangChain<br>Document<br>Loaders</h1>\n<br><p id='90' data-category='list' style='font-size:16px'>PyPDFLoader:<br>PDF<br>파일<br>WebBaseLoader:<br>웹페이지<br>CSVLoader:<br>CSV<br>파일</p>\n<br><p id='91' data-category='paragraph' style='font-size:16px'><br><br><br>장점:<br>메타데이터<br>보존으로<br>출처<br>추적<br>가능</p>\n<br><h1 id='92' style='font-size:14px'>임베딩</h1>\n<br><p id='93' data-category='list' style='font-size:16px'>텍스트를<br>고차원<br>벡터로<br>변환<br>의미적<br>유사도<br>측정<br>가능</p>\n<h1 id='94' style='font-size:16px'><br><br><br>주요<br>임베딩<br>모델:</h1>\n<br><p id='95' data-category='list' style='font-size:16px'>OpenAI<br>Embeddings<br>(ada-002)<br>-<br>유료,<br>고성능<br>SentenceTransformers<br>-<br>무료,<br>다양한<br>모델<br>HuggingFace<br>임베딩<br>모델<br>-<br>오픈소스<br>한국어<br>특화:<br>KoSentenceBERT</p>\n<p id='96' data-category='paragraph' style='font-size:14px'>벡터<br>DB</p>\n<br><p id='97' data-category='list' style='font-size:16px'>벡터<br>검색에<br>최적화된<br>데이터베이스<br>유사도<br>검색<br>(Similarity<br>Search)<br>지원</p>\n<p id='98' data-category='paragraph' style='font-size:16px'><br><br><br>주요<br>벡터<br>DB:<br>FAISS,<br>ChromaDB,<br>Pinecone,<br>Weaviate</p>\n<header id='99' style='font-size:14px'>RAG</header>\n<br><h1 id='100' style='font-size:20px'>RAG<br>종류</h1>\n<br><h1 id='101' style='font-size:18px'><br><br><br>Naive<br>RAG<br>(기본)</h1>\n<br><p id='102' data-category='list' style='font-size:16px'>단순한<br>검색<br>→<br>생성<br>파이프라인<br>구현<br>간단,<br>성능<br>제한적<br>대학생<br>프로젝트<br>시작점으로<br>추천</p>\n<h1 id='103' style='font-size:18px'><br><br><br>Advanced<br>RAG<br>(고급)</h1>\n<br><p id='104' data-category='list' style='font-size:16px'>Pre-Retrieval:<br>쿼리<br>개선,<br>인덱싱<br>최적화<br>Post-Retrieval:<br>리랭킹,<br>결과<br>필터링</p>\n<h1 id='105' style='font-size:18px'><br><br><br>Modular<br>RAG<br>(모듈식)</h1>\n<br><p id='106' data-category='list' style='font-size:16px'>각<br>단계별<br>모듈화<br>유연한<br>파이프라인<br>구성</p>\n<h1 id='107' style='font-size:20px'>Retriever</h1>\n<h1 id='108' style='font-size:16px'><br><br><br>주요<br>리트리버<br>타입</h1>\n<br><p id='109' data-category='list' style='font-size:16px'>VectorStoreRetriever:<br>벡터<br>유사도<br>기반<br>BM25Retriever:<br>키워드<br>기반<br>전통적<br>검색<br>HybridRetriever:<br>벡터<br>+<br>키워드<br>조합<br>MultiQueryRetriever:<br>여러<br>쿼리<br>변형</p>\n<h1 id='110' style='font-size:16px'><br><br><br>검색<br>파라미터</h1>\n<br><p id='111' data-category='list' style='font-size:16px'>k:<br>반환할<br>문서<br>수<br>score_threshold:<br>유사도<br>임계값</p>\n<br><h1 id='112' style='font-size:14px'>LLM<br>프롬프트<br>구성<br>예시</h1>\n<br><h1 id='113' style='font-size:14px'>다음<br>문서를<br>참고하여<br>질문에<br>답하시오.<br>문서:<br>{context}<br>질문:<br>{question}<br>답변:</h1>\n<br><header id='114' style='font-size:14px'>RAG</header>\n<h1 id='115' style='font-size:14px'><br><br><br>답변<br>품질<br>향상<br>KeyPoint</h1>\n<br><p id='116' data-category='list' style='font-size:14px'>명확한<br>지시사항<br>포함<br>출처<br>표기<br>요구<br>\"모르면<br>모른다고<br>답하기\"<br>지시<br>할루시네이션<br>방지</p>\n<h1 id='117' style='font-size:20px'>RAG<br>작동</h1>\n<br><header id='118' style='font-size:16px'>RAG</header>\n<figure id='119'><img style='font-size:14px' alt=\"문서\n로딩 텍스트\n분할 임베딩 벡터\n생성\n원본\n데이터\n가져오기 청크\n단위로\n분할 벡터로\n변환 벡터\nDB에\n저장\n사용자\n질문 유사한\n벡터\n찾기 LLM으로\n답변\n생성\" data-coord=\"top-left:(537,424); bottom-right:(2546,1366)\" /></figure>\n<p id='120' data-category='paragraph' style='font-size:14px'>실전:<br>LangChain으로\u0001RAG\u0001구현하기</p>\n<header id='121' style='font-size:14px'>직접<br>구현</header>\n<br><h1 id='122' style='font-size:20px'>DuckDuckGo<br>검색<br>RAG</h1>\n<br><h1 id='123' style='font-size:16px'>추천<br>이유:<br>완전<br>무료<br>(API<br>키<br>불필요)<br>구현<br>간단<br>(30분-1시간)<br>실시간<br>정보<br>접근<br>가능</h1>\n<br><h1 id='124' style='font-size:16px'>실습해보자!!</h1>\n<header id='125' style='font-size:14px'>직접\u0001구현</header>\n<br><h1 id='126' style='font-size:18px'>LangChain\u0001with\u0001RAG\u0001성능!</h1>\n<h1 id='127' style='font-size:14px'>확장:\u0001Agent와의\u0001결합\u0001가능성</h1>\n<header id='128' style='font-size:14px'>확장:\u0001Agent?</header>\n<br><h1 id='129' style='font-size:20px'>확장\u0001가능성\u0001with\u0001Agent</h1>\n<h1 id='130' style='font-size:16px'>Agent란?<br>언제\u0001Agent가\u0001필요한가?\u0001(Tool\u0001사용,\u0001다단계\u0001reasoning)<br>통합\u0001구조\u0001예시:\u0001RAG\u0001+\u0001Agent\u0001(검색\u0001+\u0001계산\u0001등)</h1>\n<p id='131' data-category='list' style='font-size:16px'>RAG는\u0001외부\u0001지식(검색)으로\u0001답변의\u0001품질을\u0001높여주는\u0001구조<br>Agent를\u0001조합하면\u0001RAG\u0001뿐만\u0001아니라\u0001추가적인\u0001계산,\u0001외부\u0001시스템\u0001연동,\u0001데이터\u0001처리\u0001등\u0001다양한\u0001복합\u0001작<br>업도\u0001한\u0001번에\u0001자동으로\u0001처리<br>예시:</p>\n<br><p id='132' data-category='paragraph' style='font-size:16px'>a.“삼성전자\u0001최신\u0001주가\u0001검색해줘”\u0001→\u0001RAG로\u0001실시간\u0001정보\u0001검색<br>b.“삼성전자\u00011년\u0001수익률\u0001계산해줘”\u0001→\u0001Agent가\u0001검색\u0001+\u0001계산\u0001툴\u0001조합</p>\n<h1 id='133' style='font-size:14px'>감사합니다!</h1>",
    "1q6VdaZSf6qXg2JBs1ijCs-BfDrymz-Q3": "from typing_extensions import TypedDict from langgraph.graph import StateGraph, START, END from langchain_google_genai import ChatGoogleGenerativeAI  # Gemini 모델용 import os\n\n# 환경 변수 또는 직접 키 입력 (환경 변수 추천) os.environ[\"GOOGLE_API_KEY\"] = \"api키조심!\"\n\n# 상태 정의\n\nclass State(TypedDict):\n\nuser_input: str\n\ndecision: str\n\nresult: str\n\n# Gemini LLM 준비 llm = ChatGoogleGenerativeAI(model=\"gemini-2.0-flash\")  # model 이름은 gemini-pro\n\n# 라우팅 노드: Gemini가 yes/no를 판단 def router(state: State) -> State: prompt = ( f\"다음 문장이 긍정인지 부정인지 판단하여 'yes' 또는 'no'만 출력하세요.\\n\" f\"문장: {state['user_input']}\" ) result = llm.invoke(prompt) decision = result.content.strip().lower() return {**state, \"decision\": decision}\n\n# 긍정 분기 처리\n\ndef handle_yes(state: State)\n\n> State:\n\nreturn {*\n\nstate, \"result\": \"긍정 처리\"}\n\n# 부정 분기 처리\n\ndef handle_no(state: State)\n\n> State:\n\nreturn {*\n\nstate, \"result\": \"부정 처리\"}\n\n# 그래프 구성\n\ngraph = StateGraph(State)\n\ngraph.add_node(\"router\", router)\n\ngraph.add_node(\"handle_yes\", handle_yes)\n\ngraph.add_node(\"handle_no\", handle_no)\n\ngraph.add_edge(START, \"router\")\n\n# 조건부 분기 def branching(state: State) -> str: return \"handle_yes\" if state[\"decision\"] == \"yes\" else \"handle_no\"\n\ngraph.add_conditional_edges(\n\n\"router\",\n\nbranching,\n\n{\"handle_yes\": \"handle_yes\", \"handle_no\": \"handle_no\"}\n\n)\n\ngraph.add_edge(\"handle_yes\", END)\n\ngraph.add_edge(\"handle_no\", END)\n\ncompiled = graph.compile()\n\n# 실행 예시 if __name__ == \"__main__\": result = compiled.invoke({ \"user_input\": \"이 서비스 너무 만족스러워요!\", \"decision\": \"\", \"result\": \"\" }) print(result)",
    "1y6n0f1JYawMXCPv3yGAoVdd1q_dg6KFs": "from typing_extensions import TypedDict from langgraph.graph import StateGraph, START, END\n\n# 최하위(손자) 서브그래프\n\nclass GrandChildState(TypedDict):\n\nmessage: str\n\ndef grandchild_1(state: GrandChildState): #    return {\"message\": #####수정해보세요###### + \", I love u\"}\n\ngrandchild_builder = StateGraph(GrandChildState)\n\ngrandchild_builder.add_node(\"grandchild_1\", grandchild_1)\n\ngrandchild_builder.add_edge(START, \"grandchild_1\")\n\ngrandchild_builder.add_edge(\"grandchild_1\", END)\n\ngrandchild_graph = grandchild_builder.compile()\n\n# 자식 서브그래프\n\nclass ChildState(TypedDict):\n\nchild_message: str\n\ndef call_grandchild_graph(state: ChildState): output = grandchild_graph.invoke({\"message\": state[\"child_message\"]}) #    return {\"child_message\": #####수정해보세요###### + \", and thank you.\"}\n\nchild_builder = StateGraph(ChildState)\n\nchild_builder.add_node(\"child_1\", call_grandchild_graph)\n\nchild_builder.add_edge(START, \"child_1\")\n\nchild_builder.add_edge(\"child_1\", END)\n\nchild_graph = child_builder.compile()\n\n# 상위(parent) 그래프\n\nclass ParentState(TypedDict):\n\nmain_message: str\n\ndef parent_1(state: ParentState): #    return {\"main_message\": \"Hi \" + #####수정해보세요######}\n\ndef call_child_graph(state: ParentState): output = child_graph.invoke({\"child_message\": state[\"main_message\"]}) #    return {\"main_message\": #####수정해보세요######}\n\nparent_builder = StateGraph(ParentState)\n\nparent_builder.add_node(\"parent_1\", parent_1)\n\nparent_builder.add_node(\"child\", call_child_graph)\n\nparent_builder.add_edge(START, \"parent_1\")\n\nparent_builder.add_edge(\"parent_1\", \"child\")\n\ngraph = parent_builder.compile()\n\n# 실행 result = graph.invoke({\"main_message\": \"YBIGTA\"}) print(result)  # 정답 {'main_message': 'Hi YBIGTA, I love u. and thank you.'}",
    "1ObFHNwXVBBVYFDefyHvPjZbebLq-_eRI": "from typing_extensions import TypedDict from langgraph.graph import StateGraph, START, END\n\n# 최하위(손자) 서브그래프\n\nclass GrandChildState(TypedDict):\n\nmessage: str\n\ndef grandchild_1(state: GrandChildState): return {\"message\": state[\"message\"] + \", I love u\"}\n\ngrandchild_builder = StateGraph(GrandChildState)\n\ngrandchild_builder.add_node(\"grandchild_1\", grandchild_1)\n\ngrandchild_builder.add_edge(START, \"grandchild_1\")\n\ngrandchild_builder.add_edge(\"grandchild_1\", END)\n\ngrandchild_graph = grandchild_builder.compile()\n\n# 자식 서브그래프\n\nclass ChildState(TypedDict):\n\nchild_message: str\n\ndef call_grandchild_graph(state: ChildState): output = grandchild_graph.invoke({\"message\": state[\"child_message\"]}) return {\"child_message\": output[\"message\"] + \", and thank you.\"}\n\nchild_builder = StateGraph(ChildState)\n\nchild_builder.add_node(\"child_1\", call_grandchild_graph)\n\nchild_builder.add_edge(START, \"child_1\")\n\nchild_builder.add_edge(\"child_1\", END)\n\nchild_graph = child_builder.compile()\n\n# 상위(parent) 그래프\n\nclass ParentState(TypedDict):\n\nmain_message: str\n\ndef parent_1(state: ParentState): return {\"main_message\": \"Hi \" + state[\"main_message\"]}\n\ndef call_child_graph(state: ParentState):\n\noutput = child_graph.invoke({\"child_message\": state[\"main_message\"]})\n\nreturn {\"main_message\": output[\"child_message\"]}\n\nparent_builder = StateGraph(ParentState)\n\nparent_builder.add_node(\"parent_1\", parent_1)\n\nparent_builder.add_node(\"child\", call_child_graph)\n\nparent_builder.add_edge(START, \"parent_1\")\n\nparent_builder.add_edge(\"parent_1\", \"child\")\n\ngraph = parent_builder.compile()\n\n# 실행 result = graph.invoke({\"main_message\": \"YBIGTA\"}) print(result)  # {'main_message': 'Hi Bob, how are you? today?'}",
    "1IXKPw414U6TCzMFOWMm-z-6aYhcOEmpb": "from typing_extensions import TypedDict from langgraph.graph import StateGraph, START\n\n# 공통 상태 정의\n\nclass State(TypedDict):\n\nfoo: str\n\n# 서브그래프 만들기 def subgraph_node_1(state: State): return {\"foo\": \"Hi! \" + state[\"foo\"]}\n\nsubgraph_builder = StateGraph(State)\n\nsubgraph_builder.add_node(subgraph_node_1)\n\nsubgraph_builder.add_edge(START, \"subgraph_node_1\")\n\nsubgraph = subgraph_builder.compile()\n\n# 상위(parent) 그래프에 서브그래프를 노드처럼 추가 builder = StateGraph(State) builder.add_node(\"subgraph\", subgraph) builder.add_edge(START, \"subgraph\") graph = builder.compile()\n\n# 실행 result = graph.invoke({\"foo\": \"YBIGTA\"}) print(result)  # {'foo': 'Hi! World'}",
    "1dFqH0aNQFLqwifT8any4FaByYnqDB98e": "from typing_extensions import TypedDict\n\n# 서브그래프용 상태\n\nclass SubgraphState(TypedDict):\n\nbar: str\n\nbaz: str\n\ndef subgraph_node_1(state: SubgraphState):\n\nreturn {\"baz\": state[\"baz\"]}\n\ndef subgraph_node_2(state: SubgraphState): return {\"bar\": state[\"bar\"] + state[\"baz\"]}\n\n# 서브그래프 생성 from langgraph.graph import StateGraph, START subgraph_builder = StateGraph(SubgraphState) subgraph_builder.add_node(subgraph_node_1) subgraph_builder.add_node(subgraph_node_2) subgraph_builder.add_edge(START, \"subgraph_node_1\") subgraph_builder.add_edge(\"subgraph_node_1\", \"subgraph_node_2\") subgraph = subgraph_builder.compile()\n\n# 상위 그래프의 상태\n\nclass ParentState(TypedDict):\n\nfoo: str\n\ndef node_1(state: ParentState): return {\"foo\": \"Hi! \" + state[\"foo\"]}\n\ndef node_2(state: ParentState): # 필요한 값만 추출해서 서브그래프에 입력 response = subgraph.invoke({\"bar\": state[\"foo\"], \"baz\": \"26th\"}) return {\"foo\": response[\"bar\"]}\n\nparent_builder = StateGraph(ParentState)\n\nparent_builder.add_node(\"node_1\", node_1)\n\nparent_builder.add_node(\"node_2\", node_2)\n\nparent_builder.add_edge(START, \"node_1\")\n\nparent_builder.add_edge(\"node_1\", \"node_2\")\n\ngraph = parent_builder.compile()\n\n# 실행\n\nresult = graph.invoke({\"foo\": \"YBIGTA\"})\n\nprint(result)",
    "1TjIfd-ksTrPiwP_1EArZbpcpvNBGxBya": "from typing_extensions import TypedDict from langgraph.graph import StateGraph, START\n\n# 상태 타입 1 정의 class ParentState(TypedDict): foo: str\n\n# 상태 타입 2 정의 (서브그래프는 상태 타입이 다름!) class SubgraphState(TypedDict): bar: str\n\n# 서브그래프 노드 def subgraph_node(state: SubgraphState): return {\"bar\": state[\"bar\"] + \" world\"}\n\n# 서브그래프 생성 (상태는 SubgraphState) subgraph_builder = StateGraph(SubgraphState) subgraph_builder.add_node(\"subgraph_node\", subgraph_node) subgraph_builder.add_edge(START, \"subgraph_node\") subgraph = subgraph_builder.compile()\n\n# 상위 그래프 생성 (상태는 ParentState) parent_builder = StateGraph(ParentState)\n\n# 오류 발생 지점: 상태 타입이 다른 서브그래프를 add_node에 추가 parent_builder.add_node(\"subgraph\", subgraph)  # 여기서 오류 발생 예상\n\nparent_builder.add_edge(START, \"subgraph\")\n\ngraph = parent_builder.compile()\n\n# 실행 시도\n\nresult = graph.invoke({\"foo\": \"Hello\"})\n\nprint(result)",
    "1irgrz9h4q0KmHUK5DOJchlh0ieCLzc4j": "<header id='0' style='font-size:14px'>2025-2\u0001YBIGTA</header>\n<h1 id='1' style='font-size:20px'>RL 기초</h1>\n<footer id='2' style='font-size:16px'>26기\u0001DS\u0001이준찬</footer>\n<h1 id='3' style='font-size:18px'>목\u0001차</h1>\n<p id='4' data-category='list' style='font-size:14px'>0. RL\u0001Intro\u0001&\u0001Bandit<br>1. MDP<br>2. Bellmann\u0001&\u0001DP<br>3. MC\u0001&\u0001TD\u0001-\u0001Model\u0001Base,\u0001Model\u0001Free<br>4. SARSA\u0001&\u0001Q-learning\u0001-\u0001On\u0001policy,\u0001Off\u0001policy</p>\n<h1 id='5' style='font-size:14px'>0.\u0001RL\u0001Intro</h1>\n<header id='6' style='font-size:14px'>RL<br>Intro</header>\n<br><h1 id='7' style='font-size:20px'>What<br>is<br>Reinforcement<br>Learning?</h1>\n<br><h1 id='8' style='font-size:18px'>지도학습 vs 강화학습</h1>\n<h1 id='9' style='font-size:18px'>지도학습</h1>\n<figure id='10'><img alt=\"\" data-coord=\"top-left:(294,665); bottom-right:(1314,1195)\" /></figure>\n<br><p id='11' data-category='list' style='font-size:16px'>Input - Output 데이터로 학습<br>-> 입력을 적합한 출력으로 변환</p>\n<p id='12' data-category='list' style='font-size:16px'>데이터마다 Label(정답 존재)</p>\n<br><h1 id='13' style='font-size:18px'>강화학습</h1>\n<figure id='14'><img alt=\"\" data-coord=\"top-left:(1610,754); bottom-right:(2791,995)\" /></figure>\n<p id='15' data-category='list' style='font-size:16px'>Agent가 환경과 상호작용하며 보상을 최대화<br>하는 행동을 학습</p>\n<p id='16' data-category='list' style='font-size:16px'>더 “잘” 하는건 있지만 명확한 “정답”은 없음</p>\n<h1 id='17' style='font-size:20px'>What\u0001is\u0001Reinforcement\u0001Learning?</h1>\n<br><h1 id='18' style='font-size:16px'>보상Reward극대화</h1>\n<br><header id='19' style='font-size:14px'>RL\u0001Intro</header>\n<figure id='20'><img alt=\"\" data-coord=\"top-left:(289,486); bottom-right:(1309,1202)\" /></figure>\n<br><figure id='21'><img alt=\"\" data-coord=\"top-left:(1865,477); bottom-right:(2585,1188)\" /><br><figcaption id='22' style='font-size:16px'>로봇의움직임체스의매한수한수에정답은없다</figcaption></figure>\n\n<p id='23' data-category='paragraph' style='font-size:16px'>하지만더나은동작더나은수는분명존재</p>\n<h1 id='24' style='font-size:20px'>What\u0001is\u0001Reinforcement\u0001Learning?<br>강화학습을구성하는요소</h1>\n<br><header id='25' style='font-size:14px'>RL\u0001Intro</header>\n<p id='26' data-category='paragraph' style='font-size:16px'>Agent</p>\n<br><h1 id='27' style='font-size:16px'>Environment</h1>\n<br><p id='28' data-category='paragraph' style='font-size:16px'>Action&Reward</p>\n<h1 id='29' style='font-size:16px'>State</h1>\n<figure id='30'><img alt=\"\" data-coord=\"top-left:(817,915); bottom-right:(2058,1291)\" /></figure>\n<p id='31' data-category='paragraph' style='font-size:16px'>Policy정책특정State에서의Action들의모음</p>\n<h1 id='32' style='font-size:14px'>1.1\u0001Bandit</h1>\n<header id='33' style='font-size:16px'>Bandit\u0001&\u0001MDP</header>\n<br><h1 id='34' style='font-size:20px'>Multi\u0001Armed\u0001Bandit<br>슬롯머신문제</h1>\n<h1 id='35' style='font-size:18px'>가장기본적인RL문제</h1>\n<h1 id='36' style='font-size:18px'>Action슬롯머신을선택</h1>\n<p id='37' data-category='paragraph' style='font-size:18px'>Reward코인반환</p>\n<br><figure id='38'><img alt=\"\" data-coord=\"top-left:(1271,555); bottom-right:(2221,1136)\" /></figure>\n<br><p id='39' data-category='list'></p>\n<p id='40' data-category='list'></p>\n<p id='41' data-category='list'></p>\n<p id='42' data-category='paragraph' style='font-size:14px'>밴디트문제플레이어는슬롯머신의가치기댓값을알지못하는상태에서1000번반복동안총코인을최대화해야한다</p>\n<p id='43' data-category='paragraph' style='font-size:14px'>→1000번머신을돌릴때까지최선의선택을하려한다면어떻게해야할까<br>→가장기댓값이높은슬롯머신을추정하고그슬롯머신만돌려야함→How</p>\n<header id='44' style='font-size:14px'>Bandit\u0001&\u0001MDP</header>\n<br><h1 id='45' style='font-size:20px'>Multi\u0001Armed\u0001Bandit<br>슬롯머신문제</h1>\n<h1 id='46' style='font-size:16px'>SState환경의상태지금문제에서는정의x</h1>\n<p id='47' data-category='list' style='font-size:16px'>AAction슬롯머신15중하나를선택</p>\n<p id='48' data-category='list' style='font-size:16px'>QQualityAction에대한Value보상의기댓값</p>\n<p id='49' data-category='paragraph' style='font-size:16px'>→qA=ER|AActionA의가치</p>\n<br><p id='50' data-category='paragraph' style='font-size:18px'>보상확률Rsa</p>\n<p id='51' data-category='paragraph' style='font-size:18px'>특정행동에대한R보상들의기댓값→행동의가치</p>\n<header id='52' style='font-size:16px'>Bandit\u0001&\u0001MDP</header>\n<br><h1 id='53' style='font-size:20px'>Multi\u0001Armed\u0001Bandit<br>정책예시EpsilonGreedy</h1>\n<h1 id='54' style='font-size:14px'>Greedy전략난제일좋았던것만파<br>하지만뭐가좋은지몇번보고알기어려움</h1>\n<br><p id='55' data-category='list' style='font-size:14px'>Epsilon확률ex01로나머지중랜덤을택하고<br>exploration</p>\n<p id='56' data-category='list' style='font-size:14px'>나머지1epsilon확률로가장좋았던것만고른다<br>exploitation</p>\n<br><h1 id='57' style='font-size:14px'>그래서→</h1>\n<p id='58' data-category='list' style='font-size:14px'>Exploration다른머신이좋은지아직잘모르는데쓰던거<br>말고다른거한번써볼까</p>\n<p id='59' data-category='list' style='font-size:14px'>Exploitation여태까지결과로봤을때제일잘나온거쓸래<br>Greedy</p>\n<br><figure id='60' data-category='chart'><img data-coord=\"top-left:(1884,1020); bottom-right:(2592,1617)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>0</td><td>1</td><td>2</td><td>3</td></tr></thead><tbody><tr><td>item_01</td><td>4</td><td>8</td><td>4</td><td>2</td></tr></tbody></table></figure>\n<h1 id='61' style='font-size:20px'>Multi\u0001Armed\u0001Bandit<br>Nonstationary</h1>\n<br><header id='62' style='font-size:16px'>부부제목?</header>\n<h1 id='63' style='font-size:14px'>Epsilon01일때승률이<br>가장빠르게최대화</h1>\n<figure id='64' data-category='chart'><img data-coord=\"top-left:(1754,626); bottom-right:(2645,1288)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>0</td><td>200</td><td>400</td><td>600</td><td>800</td><td>1000</td></tr></thead><tbody><tr><td>0.</td><td>0.5</td><td>0.6</td><td>0.65</td><td>0.7</td><td>0.75</td><td>0.8</td></tr><tr><td>0.3</td><td>0.0</td><td>0.75</td><td>0.75</td><td>0.75</td><td>0.8</td><td>0.8</td></tr><tr><td>0.01</td><td>0.5</td><td>0.75</td><td>0.75</td><td>0.75</td><td>0.75</td><td>0.8</td></tr></tbody></table></figure>\n<p id='65' data-category='paragraph' style='font-size:18px'>슬롯머신1000번돌리기시행200번반복각시행단계별승률평균시각화</p>\n<h1 id='66' style='font-size:22px'>Multi\u0001Armed\u0001Bandit</h1>\n<br><header id='67' style='font-size:16px'>부부제목?</header>\n<h1 id='68' style='font-size:20px'>Nonstationary</h1>\n<br><h1 id='69' style='font-size:20px'>최근데이터승률에가중비중</h1>\n<br><h1 id='70' style='font-size:14px'>최근값에가중평균</h1>\n<figure id='71' data-category='chart'><img data-coord=\"top-left:(407,659); bottom-right:(1138,1233)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>R</td><td>R2</td><td>R3</td><td>Rn-1</td><td>Rn</td></tr></thead><tbody><tr><td>item_01</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr></tbody></table></figure>\n<br><figure id='72' data-category='chart'><img data-coord=\"top-left:(1832,685); bottom-right:(2577,1136)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>R</td><td>R2</td><td>R3</td><td>R4</td><td>R5</td><td>R6</td><td>Rn-1</td><td>Rn</td></tr></thead><tbody><tr><td>item_01</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>30</td><td>40</td><td>60</td></tr></tbody></table></figure>\n<p id='73' data-category='paragraph' style='font-size:18px'>슬롯머신확률이매시행마다조금씩바뀐다면</p>\n<p id='74' data-category='paragraph' style='font-size:16px'>500번째시행에서499번째시행의가치를참고하는것이5번째를참고하는것보다훨씬유용</p>\n<h1 id='75' style='font-size:14px'>1.2\u0001MDP</h1>\n<header id='76' style='font-size:18px'>MDP</header>\n<br><h1 id='77' style='font-size:20px'>Markov<br>Decision<br>Process<br>행동과 상태변화</h1>\n<figure id='78'><img alt=\"\" data-coord=\"top-left:(318,748); bottom-right:(1204,1006)\" /></figure>\n<br><figure id='79'><img alt=\"\" data-coord=\"top-left:(1797,647); bottom-right:(2595,1115)\" /></figure>\n<br><p id='80' data-category='paragraph' style='font-size:14px'>Action : +1(우 1칸)<br>위치 : 0 → 1 이동<br>보상 : 0 (빈칸)</p>\n<p id='81' data-category='paragraph' style='font-size:16px'>A t : 시점 t 에서 agent의 행동<br>S t : 시점 t에서의 상태(위치)<br>R t : 시점 t에서의 행동에 의한 보상</p>\n<h1 id='82' style='font-size:22px'>Markov<br>Decision<br>Process<br>상태전이 / 보상 / 정책</h1>\n<br><header id='83' style='font-size:20px'>부부제목?</header>\n<table id='84' style='font-size:14px'><thead></thead><tbody><tr><td>p(s’|s,a)</td></tr><tr><td>중간 상태 - 오른쪽으로 이동하는 Action -> 100%로 우측으로 1칸 이동</td></tr><tr><td>상태전이확률</td></tr><tr><td></td></tr><tr><td>오른쪽 끝 상태 - 오른쪽으로 이동하는 Action 행동하면 상태가 바뀐다 ->100% 우측으로 1칸 이동</td></tr></tbody></table>\n<br><figure id='85'><img style='font-size:16px' alt=\"π(a|s)\n정책 (Policy) 상태 s에서 어떤 행동 a를 할 “확률”\n어떻게 행동할거야?\" data-coord=\"top-left:(647,548); bottom-right:(2956,993)\" /></figure>\n<br><h1 id='86' style='font-size:16px'>s’ 이 s에만 의존 → Markov Property</h1>\n<br><h1 id='87' style='font-size:18px'>r(s’,a,s)</h1>\n<p id='88' data-category='paragraph' style='font-size:16px'>보상확률</p>\n<p id='89' data-category='paragraph' style='font-size:16px'>행동하면 보상을 받는다</p>\n<br><p id='90' data-category='paragraph' style='font-size:14px'>+1에서 +2 상태로 전이하면 -2 Reward를 얻는다<br>-1에서 -2 상태로 전이하면 +1 Reward를 얻는다<br>빈칸으로 전이하면 0 Reward를 얻는다</p>\n<p id='91' data-category='paragraph' style='font-size:14px'>예제의 경우 action으로 s로 전이하면 결정적 보상을 받음</p>\n<p id='92' data-category='paragraph' style='font-size:18px'>A t : 시점 t 에서 agent의 행동<br>S t : 시점 t에서의 상태(위치)</p>\n<br><p id='93' data-category='paragraph' style='font-size:20px'>R t : 시점 t에서의 행동에 의한 보상</p>\n<h1 id='94' style='font-size:22px'>Markov\u0001Decision\u0001Process</h1>\n<br><header id='95' style='font-size:18px'>MDP</header>\n<h1 id='96' style='font-size:20px'>MDP문제의구성모델링</h1>\n<h1 id='97' style='font-size:14px'>환경→상태정책→행동행동→보상규칙정해주기</h1>\n<p id='98' data-category='list' style='font-size:14px'>에이전트는정책에따라행동<br>보상함수r에따라보상획득<br>환경은상태전이함수에의해변화</p>\n<br><h1 id='99' style='font-size:16px'>시점t에서의과정</h1>\n<h1 id='100' style='font-size:14px'>1.현재상태s→π에의해a선택<br>2.상태전이함수ps|sa에의해다음s결정<br>3.다음sas→rsas에의해보상획득<br>4.현재상태를s으로업데이트하고t+1로이동</h1>\n<p id='101' data-category='paragraph' style='font-size:14px'>보상함수r상태전이함수p를아는상태에서<br>정책Policy에이전트의행동을결정</p>\n<figure id='102'><img alt=\"\" data-coord=\"top-left:(179,1294); bottom-right:(253,1369)\" /></figure>\n<br><figure id='103'><img alt=\"\" data-coord=\"top-left:(940,629); bottom-right:(1927,920)\" /></figure>\n<header id='104' style='font-size:18px'>MDP</header>\n<br><h1 id='105' style='font-size:22px'>Markov<br>Decision<br>Process</h1>\n<br><h1 id='106' style='font-size:20px'>수익, 할인율, 상태가치함수</h1>\n<h1 id='107' style='font-size:14px'>전체<br>시점에서<br>보상을<br>최대화하는게<br>좋은<br>정책<br>→<br>전체<br>보상합을<br>정의하자!</h1>\n<h1 id='108' style='font-size:14px'>수익\u0001G :\u0001시점\u0001t\u0001이후부터의\u0001모든\u0001보상의\u0001할인율\u0001가중합\u0001(MDP)\u0001<br>t</h1>\n<p id='109' data-category='equation'>$$G_{t}=R_{t}+\\gamma R_{t+1}+\\gamma^{2}R_{t+2}+\\cdots$$</p>\n<h1 id='110' style='font-size:16px'>할인율\u0001\u0001γ\u0001:\u00010~1\u0001사이의\u0001값.\u0001값이\u0001작을수록\u0001보상을\u0001가까운\u0001시일내에\u0001받는\u0001것이\u0001유리하도록\u0001설정<br>(문제를\u0001정의하는데\u0001쓰이는\u0001하이퍼파라미터)\u0001</h1>\n<p id='111' data-category='paragraph' style='font-size:16px'>상태가치함수\u0001v_π(s)\u0001:\u0001특정\u0001상태\u0001S에서,\u0001정책\u0001pi\u0001를\u0001따라\u0001행동할\u0001때\u0001수익의\u0001기댓값\u0001<br>(탐색-착취처럼\u0001정책에\u0001따른\u0001행동이\u0001확률적이기\u0001때문에\u0001기댓값)\u0001</p>\n<p id='112' data-category='equation'>$$v_{\\pi}(s)=\\mathbb{E}_{\\pi}[G_{t}\\,|\\,S_{t}=s]$$</p>\n<h1 id='113' style='font-size:20px'>Markov<br>Decision<br>Process</h1>\n<br><h1 id='114' style='font-size:18px'>행동가치함수</h1>\n<br><header id='115' style='font-size:16px'>MDP</header>\n<h1 id='116' style='font-size:14px'>상태가치함수에서<br>해당상태에서의<br>a<br>→<br>이후<br>pi<br>를<br>따르는<br>정책의<br>가치함수</h1>\n<figure id='117'><img alt=\"\" data-coord=\"top-left:(241,1109); bottom-right:(855,1559)\" /></figure>\n<br><figure id='118'><img alt=\"\" data-coord=\"top-left:(1015,1100); bottom-right:(1425,1558)\" /></figure>\n<br><figure id='119' data-category='chart'><img data-coord=\"top-left:(1562,1060); bottom-right:(2135,1495)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Blue</td><td>Red</td></tr></thead><tbody><tr><td>item_01</td><td>-0.22</td><td>-0.43</td></tr></tbody></table></figure>\n<br><figure id='120' data-category='chart'><img data-coord=\"top-left:(2233,1069); bottom-right:(2794,1496)\" /><figcaption><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>0.65</td><td>0.8</td><td>0.67</td><td>0.9</td><td>0.75</td><td>0.69</td><td>R</td><td>R_</td><td>R_9</td><td>R_2</td><td>R_3</td><td>R_4</td><td>R_5</td><td>P_6</td><td>I_value</td></tr></thead><tbody><tr><td>item_01</td><td>0.7%</td><td>0.67%</td><td>0.74%</td><td>0.9%</td><td>0.85%</td><td>0.69%</td><td>1.0%</td><td>0.08%</td><td>-0.12%</td><td>0.0%</td><td>-0.28%</td><td>0.0%</td><td>-0.12%</td><td>0.0%</td><td>0.47%</td></tr></tbody></table></figure>\n<h1 id='121' style='font-size:22px'>Markov<br>Decision<br>Process</h1>\n<br><header id='122' style='font-size:16px'>MDP</header>\n<h1 id='123' style='font-size:20px'>최적정책</h1>\n<h1 id='124' style='font-size:14px'>최적<br>정책은<br>모든<br>상태에서<br>가장<br>가치(장기<br>보상의<br>기댓값)이<br>큰<br>정책</h1>\n<p id='125' data-category='list' style='font-size:18px'>최고의\u0001정책은\u0001모든\u0001상태\u0001S\u0001에서\u0001출발할\u0001때\u0001상태가치함수<br>가\u0001다른\u0001모든\u0001정책보다\u0001높은\u0001정책</p>\n<p id='126' data-category='list' style='font-size:18px'>그런게\u0001항상\u0001있나요?\u0001→\u0001MDP\u0001문제에서는\u0001항상\u0001존재</p>\n<p id='127' data-category='list' style='font-size:18px'>어떻게\u0001구하나요?\u0001→\u0001MDP에서는\u0001모든\u0001정책에\u0001대해\u0001모든<br>상태가치함수를\u0001구해\u0001찾음</p>\n<p id='128' data-category='paragraph' style='font-size:18px'>MDP\u0001에서는\u0001정책의\u0001행동을\u0001결정적으로\u0001봄</p>\n<br><figure id='129' data-category='chart'><img data-coord=\"top-left:(1694,732); bottom-right:(2746,1432)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>L</td><td>L2</td><td>L3</td><td>L4</td><td>L5</td></tr></thead><tbody><tr><td>item_01</td><td>1</td><td>2</td><td>1</td><td>4</td><td>7</td></tr></tbody></table></figure>\n<br><p id='130' data-category='list' style='font-size:14px'>정책\u0001pi\u0001에서\u0001상태\u0001+1일\u0001때의\u0001action\u0001은\u0001하나로\u0001결정<br>하지만\u0001epsilon\u0001greedy\u0001처럼\u0001다른걸\u0001선택할\u0001확률\u0001고려\u0001불가</p>\n<h1 id='131' style='font-size:14px'>2.1\u0001Bellman\u0001Equation</h1>\n<h1 id='132' style='font-size:22px'>Bellman<br>Equation</h1>\n<br><header id='133' style='font-size:18px'>벨만방정식</header>\n<h1 id='134' style='font-size:20px'>벨만방정식</h1>\n<h1 id='135' style='font-size:14px'><br>상태가치함수<br>어떻게<br>구하고<br>어떻게<br>최적<br>정책을<br>찾을거야?<br>→<br><br>이론적<br>답변</h1>\n<h1 id='136' style='font-size:20px'>정책 평가</h1>\n<p id='137' data-category='list' style='font-size:16px'>MDP 에서 정책 = 상태 s에서 a를 고르는 선택<br>하지만 정책이 확률적인 경우라면?</p>\n<p id='138' data-category='list' style='font-size:16px'>확률적 선택을 하는 정책에 대해 정책 가치 평가 식 제공<br>각 상태에서 정책 pi를 따랐을 때 상태가치함수</p>\n<br><h1 id='139' style='font-size:20px'>정책 제어</h1>\n<h1 id='140' style='font-size:16px'>연립방정식을 풀어서 closed form 최적 정책 찾기</h1>\n<h1 id='141' style='font-size:22px'>Bellman<br>Equation</h1>\n<br><header id='142' style='font-size:18px'>벨만방정식</header>\n<h1 id='143' style='font-size:20px'>벨만재귀 - 확률적 행동 정책에서 가치함수 구하기</h1>\n<h1 id='144' style='font-size:16px'>π (a|s)가 확률적으로 여러 선택을 하며 상태 전이</h1>\n<br><h1 id='145' style='font-size:14px'>→ 유한한 상태에서 서로 상태전이하면 재귀적으로 서로의 상태가치함수를 참조할 수 있지 않나?</h1>\n<figure id='146'><img alt=\"\" data-coord=\"top-left:(237,952); bottom-right:(1227,1440)\" /></figure>\n<br><figure id='147' data-category='chart'><img data-coord=\"top-left:(1349,842); bottom-right:(2855,1529)\" /><figcaption><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>ρ(s)−</td><td>ρ(s)−2</td></tr></thead><tbody><tr><td>item_01</td><td>2%</td><td>10%</td></tr></tbody></table></figure>\n<h1 id='148' style='font-size:22px'>Bellman<br>Equation</h1>\n<br><header id='149' style='font-size:18px'>벨만방정식</header>\n<h1 id='150' style='font-size:20px'>연립방정식 형태로 가치함수 모델링</h1>\n<figure id='151' data-category='chart'><img data-coord=\"top-left:(150,423); bottom-right:(3000,1441)\" /><figcaption><p>Chart Title: 벨만 방정식ᆢ상태 의 상태가치함수 다음에 취할 수 있는 상태’의 상태가치참수 관계 표현</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>상태 에서 정책과 상태전이에 의한 다음 상태 들에 대해</td><td>즉각 보상 rt 다음 상태 ᄎ들의 가치함수 총합</td></tr></thead><tbody><tr><td>=2(s) = 꼬(s)</td><td>0.2$</td><td>0.0$</td></tr><tr><td>Step t 즉각 Reward</td><td>0.0$</td><td>0.0$</td></tr><tr><td>== ε(a)s(r(s,a))rr(s,as)+ru(s)</td><td>0.0$</td><td>0.0$</td></tr><tr><td>ᆢ(43.5)</td><td>0.4$</td><td>0.0$</td></tr></tbody></table></figure>\n<footer id='152' style='font-size:16px'>상태가치함수 - 무한대 t 동안 보상의 기댓값 = 기대수익을 → 재귀적 연립방정식으로 수정!</footer>\n<h1 id='153' style='font-size:22px'>Bellman<br>Equation</h1>\n<br><header id='154' style='font-size:18px'>벨만방정식</header>\n<h1 id='155' style='font-size:20px'>최적 정책 찾기</h1>\n<h1 id='156' style='font-size:16px'>각<br>상태<br>S에서<br>pi<br>에<br>의한<br>행동<br>a를<br>greedy<br>하게<br>하는<br>정책이<br>최적</h1>\n<figure id='157'><img alt=\"\" data-coord=\"top-left:(330,843); bottom-right:(1496,1302)\" /></figure>\n<br><p id='158' data-category='paragraph' style='font-size:14px'>뒤의 값들을 놓고 greedy 한 선택 하나만 하게 하는 것이 최적정책 v*</p>\n<br><figure id='159'><img alt=\"\" data-coord=\"top-left:(1893,739); bottom-right:(2628,957)\" /></figure>\n<p id='160' data-category='paragraph' style='font-size:14px'>π (Left|s=2) = 1<br>π (Left|s=1) = 1<br>π (Left|s=0) = 1<br>π (Left|s=-1) = 1<br>π (Right|s=-2) = 1</p>\n<footer id='161' style='font-size:14px'>선형 연립방정식 해결로 - closed form 해를 구할 수 있다!</footer>\n<br><p id='162' data-category='paragraph' style='font-size:14px'>최적 정책은 결국 결정적이 된다!</p>\n<h1 id='163' style='font-size:14px'>2.2\u0001Dynamic\u0001Programming</h1>\n<header id='164' style='font-size:18px'>DP</header>\n<br><h1 id='165' style='font-size:22px'>Dynamic<br>Programming</h1>\n<br><h1 id='166' style='font-size:20px'>반복적 평가 및 개선 알고리즘</h1>\n<h1 id='167' style='font-size:14px'>closed<br>form<br>계산량이<br>너무<br>많아<br>→<br>DP로<br>정책을<br>반복<br>개선하며<br>근사<br>최적정책을<br>구하자</h1>\n<h1 id='168' style='font-size:20px'>반복적 정책 평가</h1>\n<br><h1 id='169' style='font-size:20px'>반복적 정책 개선</h1>\n<p id='170' data-category='list' style='font-size:16px'>Closed form 해를 구하기에 계산량이 너무 많다</p>\n<p id='171' data-category='list' style='font-size:16px'>회귀 Optimizing 도 closed form 대신 iterative 한<br>최적화 방법을 쓰듯이, 문제를 쪼개 근사해를 구하자!<br>가치함수가 업데이트 되는 양이 Threshold 이하면 그<br>정책을 가치함수 추정값으로 사용하기</p>\n<br><h1 id='172' style='font-size:16px'>근사해를 반복적으로 개선해 나가다가, 정책이 변하지 않으<br>면 최적정책</h1>\n<header id='173' style='font-size:16px'>DP</header>\n<br><h1 id='174' style='font-size:20px'>Dynamic<br>Programming</h1>\n<br><h1 id='175' style='font-size:18px'>반복적 정책 평가 - Bootstrapping</h1>\n<h1 id='176' style='font-size:14px'>추정치를<br>사용해<br>추정치를<br>업데이트<br>반복<br>→<br>부트스트래핑</h1>\n<p id='177' data-category='equation'>$$v_{\\pi}(s)=\\sum_{a,s^{\\prime}}\\pi(a\\mid s)\\,\\beta(s^{\\prime}\\mid s,a)\\,\\{r(s,a,s^{\\prime})+\\gamma v_{\\pi}(s^{\\prime})\\}$$</p>\n<p id='178' data-category='equation'>$$\\left|\\begin{array}{c}{{\\left\\langle\\left|\\phantom{\\left|\\begin{array}{c}{{j}}\\\\ {{\\left|\\left|\\left|\\begin{array}{\\right|}{\\end{array}\\right|}\\right|\\left\\langle\\left|\\right|}\\right|\\right|\\left|\\phantom{\\left|\\begin{array}{\\right|}{\\left|\\left|\\begin{array}{\\right|}}{{\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\begin{array}{\\right|}{\\left|\\left|\\left|}}\\right|\\left|\\right|\\left|\\left|\\left|\\left|\\left|\\frac{\\right|}{\\left|\\left|\\left|\\left|\\left|}\\right|}\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|}}}\\\\ {{\\left|\\left|\\right|\\right|\\right|\\right\\rangle^{j}\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\left|\\right|\\left|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right|\\right\\ |\\right|\\right\\rangle\\right|\\right|}\\right|\\right|\\left|\\right|\\left|\\right|\\right|\\left|\\left|\\left|\\left|\\right|\\left|\\right|\\right|\\left|\\right|\\left|\\left|$$</p>\n<p id='179' data-category='paragraph' style='font-size:16px'>개선되는 값이 일정 크기 Threshold 이하가 되면 정지</p>\n<header id='180' style='font-size:18px'>DP</header>\n<br><h1 id='181' style='font-size:22px'>Dynamic<br>Programming</h1>\n<br><h1 id='182' style='font-size:20px'>반복적 정책 개선 - 정책 개선 정리</h1>\n<h1 id='183' style='font-size:16px'>그냥</h1>\n<h1 id='184' style='font-size:16px'>평가하고</h1>\n<h1 id='185' style='font-size:14px'>정책보장</h1>\n<br><table id='186' style='font-size:14px'><thead></thead><tbody><tr><td></td><td>평가와<br>개선<br>반복<br>→<br>정책이<br>더이상<br>변하지<br>않으면<br>최적<br>정책</td></tr><tr><td>랜덤선택 정책 시작 개선하기 반복</td><td><figcaption><p>Chart Title: 그림 4-18 정책 반복법에 의한 가치 함수와 정책의 개선 과정</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>냐 펑가</td><td>V*</td><td>평가 ᆞ</td></tr></thead><tbody><tr><td>팸화</td><td>0m</td><td>0m</td><td>0m</td></tr><tr><td>평가</td><td>0m</td><td>0m</td><td>0m</td></tr><tr><td>V</td><td>0m</td><td>0m</td><td>0m</td></tr><tr><td>팅욕화</td><td>0m</td><td>0m</td><td>0m</td></tr><tr><td>ᄆ</td><td>0m</td><td>0m</td><td>0m</td></tr></tbody></table> 이 최적</td></tr></tbody></table>\n<caption id='187' style='font-size:18px'>정책 - s일 때마다 action 모음 - 이 더 이상 업데이트되지 않으면 정지</caption>\n<h1 id='188' style='font-size:14px'>3.1\u0001Monte\u0001Carlo</h1>\n<h1 id='189' style='font-size:22px'>Monte<br>Carlo</h1>\n<br><h1 id='190' style='font-size:20px'>Model Free 정책평가</h1>\n<br><header id='191' style='font-size:18px'>벨만방정식</header>\n<h1 id='192' style='font-size:14px'>상태전이확률?<br>보상확률?<br>그런거<br>문제에서<br>안알려줬는데?<br>→<br>노가다해서<br>찾자</h1>\n<h1 id='193' style='font-size:20px'>Model Base</h1>\n<p id='194' data-category='list' style='font-size:16px'>환경의 상태전이확률이 사전에 주어짐<br>각 보상함수 r(s’, a, s) 가 사전에 주어짐<br>주어진 값들로 최적해를 계산</p>\n<br><h1 id='195' style='font-size:20px'>Model Free</h1>\n<p id='196' data-category='list' style='font-size:16px'>??? 저게 얼만지 내가 어떻게 알지<br>모르니까 가치함수 노가다해서 구할래<br>정책 개선은 DP와 동일 (Greedy)</p>\n<br><figure id='197' data-category='chart'><img data-coord=\"top-left:(2388,705); bottom-right:(2897,1210)\" /><figcaption><p>Chart Title: Monte Carlo Simulation for n</p><p>X-Axis: δ</p><p>Y-Axis: Y</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>-1.00</td><td>-0.75</td><td>-0.50</td><td>-0.25</td><td>0.00</td><td>0.25</td><td>0.50</td><td>0.75</td><td>1.00</td></tr></thead><tbody><tr><td>item_01</td><td>1.0</td><td>1.0</td><td>1.0</td><td>1.0</td><td>1.0</td><td>1.0</td><td>1.0</td><td>1.0</td><td>1.0</td></tr></tbody></table></figure>\n<br><p id='198' data-category='paragraph' style='font-size:14px'>보상과 상태전이를 정의하는 Model 이 주어지지 않은 문제<br>이전 DP 케이스는 Model 이 주어진 Model Base</p>\n<figure id='199'><img alt=\"\" data-coord=\"top-left:(250,1404); bottom-right:(318,1475)\" /></figure>\n<header id='200' style='font-size:18px'>부부제목?</header>\n<br><h1 id='201' style='font-size:22px'>Monte<br>Carlo</h1>\n<br><h1 id='202' style='font-size:20px'>Model Free</h1>\n<h1 id='203' style='font-size:16px'>정책 pi 에 대해 상태 s에서 시작하는 끝까지의 시행 1회<br>→ 수익 총합 계산 (Sampling 1회)</h1>\n<p id='204' data-category='list' style='font-size:16px'>state S에 대해 기대수익, 즉 상태가치함수 Sampling<br>을 충분히 많이 해 가치함수 값 구하기</p>\n<p id='205' data-category='list' style='font-size:16px'>랜덤정책으로 시작하면 어차피 각 상태들을 지나기 때문<br>에 모든 상태에 대해 가치함수 각각 sampling 가능</p>\n<br><figure id='206'><img style='font-size:14px' alt=\"s\ns’ s’’’\ns’’\" data-coord=\"top-left:(616,1122); bottom-right:(1096,1553)\" /></figure>\n<br><figure id='207'><img alt=\"\" data-coord=\"top-left:(1497,539); bottom-right:(2956,1394)\" /></figure>\n<br><p id='208' data-category='paragraph' style='font-size:14px'>상태 A의 경로를 따라가다 보면 상태 B에서 시작하는 가치<br>함수 값도 같이 Sampling 할 수 있다</p>\n<h1 id='209' style='font-size:20px'>Example<br>Prob<br>DP 적용 예시</h1>\n<br><header id='210' style='font-size:16px'>DP</header>\n<h1 id='211' style='font-size:14px'>모델이<br>주어진<br>상태에서<br>평가와<br>개선<br>반복<br>→<br>최적<br>정책<br>확정</h1>\n<figure id='212' data-category='chart'><img data-coord=\"top-left:(302,693); bottom-right:(1006,1185)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Green</td><td>Blue</td></tr></thead><tbody><tr><td>item_01</td><td>1</td><td>1</td></tr></tbody></table></figure>\n<p id='213' data-category='paragraph' style='font-size:18px'>무작위 정책의 가치함수</p>\n<br><figure id='214' data-category='chart'><img data-coord=\"top-left:(1178,642); bottom-right:(2668,1242)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>처음</td><td>마지막(네 번째 갱신)</td></tr></thead><tbody><tr><td>item_01</td><td>-0.022</td><td>0.73</td></tr><tr><td>item_02</td><td>-0.03</td><td>0.66</td></tr><tr><td>item_03</td><td>-0.02</td><td>0.73</td></tr><tr><td>item_04</td><td>-0.02</td><td>0.91</td></tr><tr><td>item_05</td><td>-0.02</td><td>0.91</td></tr><tr><td>item_06</td><td>-0.03</td><td>0.91</td></tr><tr><td>item_07</td><td>-0.03</td><td>-0.02</td></tr><tr><td>item_08</td><td>-0.02</td><td>-0.02</td></tr><tr><td>item_09</td><td>-0.02</td><td>-0.02</td></tr><tr><td>item_10</td><td>-0.04</td><td>-0.03</td></tr></tbody></table></figure>\n<br><p id='215' data-category='paragraph' style='font-size:18px'>반복적 평가 -개선 후 완성된 최적정책</p>\n<h1 id='216' style='font-size:22px'>Example<br>Prob</h1>\n<br><header id='217' style='font-size:18px'>DP</header>\n<h1 id='218' style='font-size:20px'>MC 적용 예시</h1>\n<h1 id='219' style='font-size:14px'>모델<br>없이<br>랜덤정책<br>→<br>가치함수<br>sampling<br>→<br>개선<br>→<br>...<br>반복</h1>\n<figure id='220' data-category='chart'><img data-coord=\"top-left:(248,689); bottom-right:(982,1202)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Gray</td><td>Red</td></tr></thead><tbody><tr><td>item_01</td><td>100</td><td>70</td></tr></tbody></table></figure>\n<br><figure id='221' data-category='chart'><img data-coord=\"top-left:(1145,694); bottom-right:(1872,1241)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>-0.09</td><td>-0.19</td><td>-0.4</td><td>-0.76</td></tr></thead><tbody><tr><td>item_01</td><td>-0.03</td><td>-0.19</td><td>-0.4</td><td>-0.76</td></tr></tbody></table></figure>\n<br><p id='222' data-category='paragraph' style='font-size:16px'>DP로 구한 Model Based 가치함<br>수와 비슷한 값으로 수렴</p>\n<br><figure id='223' data-category='chart'><img data-coord=\"top-left:(2016,698); bottom-right:(2754,1247)\" /><figcaption><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>(0.7)</td><td>(0.69)</td><td>(0.72)</td><td>(0.58)</td><td>(0.64)</td><td>(0.42)</td><td>(0.47)</td><td>(0.10)</td><td>(0.35)</td><td>(0.14)</td><td>(0.0</td><td>(0.</td></tr></thead><tbody><tr><td>item_01</td><td>0.65%</td><td>0.8%</td><td>0.57%</td><td>0.72%</td><td>0.58%</td><td>0.55%</td><td>0.42%</td><td>0.47%</td><td>0.0%</td><td>0.03%</td><td>-0.14%</td><td>-0.0%</td></tr></tbody></table></figure>\n<p id='224' data-category='paragraph' style='font-size:18px'>정책 제어 - epsilon Greedy</p>\n<h1 id='225' style='font-size:14px'>3.2\u0001Temporal\u0001Difference</h1>\n<header id='226' style='font-size:16px'>TD</header>\n<br><h1 id='227' style='font-size:22px'>Temporal<br>Difference</h1>\n<br><h1 id='228' style='font-size:20px'>DP 방식과 MC 방식을 합한 정책평가 방법</h1>\n<h1 id='229' style='font-size:14px'>DP<br>단점<br>-<br>MC<br>단점<br>합쳐서<br>상쇄<br>-<br>모델을<br>몰라도,<br>무한<br>과제에도<br>적용<br>가능</h1>\n<h1 id='230' style='font-size:20px'>DP 장단</h1>\n<p id='231' data-category='list' style='font-size:14px'>가중치로 가중치를 평가 → 반복적 정책 개선으로 최적<br>추정치가 추정치를 계산하는 부트스트래핑<br>모델을 모르면?</p>\n<br><h1 id='232' style='font-size:20px'>MC 장단</h1>\n<p id='233' data-category='paragraph' style='font-size:18px'>TD 는 MC 방식에서 끝날 때까지의 수익 합이 아닌 다음 n step 의 추정치만으로 정책 평가</p>\n<br><p id='234' data-category='list' style='font-size:14px'>모델을 몰라도 가치함수 평가 가능<br>끝이 있는 과제에 대해서만 적용<br>Goal State(끝) 까지 매번 시행 → 계산 부담</p>\n<header id='235' style='font-size:16px'>TD</header>\n<br><h1 id='236' style='font-size:20px'>Temporal\u0001Difference</h1>\n<p id='237' data-category='list' style='font-size:16px'>DP가중치부트스트래핑</p>\n<p id='238' data-category='list' style='font-size:16px'>MC끝까지시행후Sampling</p>\n<h1 id='239' style='font-size:16px'>TD이후nstep만시행후sampling</h1>\n<br><h1 id='240' style='font-size:16px'>→가중치로부트스트래핑</h1>\n<br><figure id='241'><img alt=\"\" data-coord=\"top-left:(1211,633); bottom-right:(2867,1243)\" /></figure>\n<footer id='242' style='font-size:14px'>끝날때까지끝까지구해계산vs다음nstepex1의추정치로만계산</footer>\n<h1 id='243' style='font-size:20px'>Temporal\u0001Difference</h1>\n<br><header id='244' style='font-size:16px'>TD</header>\n<h1 id='245' style='font-size:18px'>행동가치함수기반정책제어</h1>\n<p id='246' data-category='equation'>$$V_{\\pi}^{\\prime}(\\mathrm{S}_{\\iota})=V_{\\pi}(\\mathrm{S}_{\\iota})+\\alpha\\{R_{\\iota}+\\gamma\\,V_{\\pi}(\\mathrm{S}_{\\iota\\,+1})-V_{\\pi}(\\mathrm{S}_{\\iota})\\}$$</p>\n<p id='247' data-category='equation'>$$Q_{x}^{\\prime}(S_{r},A_{r})=Q_{x}(S_{r},A_{r})+\\alpha\\left\\{R_{t}+\\gamma Q_{x}(S_{t+1},A_{t+1})-Q_{x}(S_{r},A_{r})\\right\\}\\qquad[\\delta^{\\prime},A_{r})-0.$$</p>\n<p id='248' data-category='paragraph' style='font-size:14px'>Gt끝날때까지끝까지구해계산vs다음nstepex1의추정치로만계산</p>\n<h1 id='249' style='font-size:22px'>Dynamic<br>Programming</h1>\n<br><h1 id='250' style='font-size:20px'>3x4 Grid World 문제 적용 예시</h1>\n<br><header id='251' style='font-size:18px'>DP</header>\n<h1 id='252' style='font-size:14px'>평가와<br>개선<br>반복<br>→<br>정책이<br>더이상<br>변하지<br>않으면<br>최적<br>정책</h1>\n<figure id='253'><img alt=\"\" data-coord=\"top-left:(245,772); bottom-right:(1195,1431)\" /></figure>\n<br><h1 id='254' style='font-size:16px'>상태집합 S : 좌표</h1>\n<br><p id='255' data-category='list' style='font-size:16px'>ex) (0,0), (4,3)<br>회색 칸 이동 불가, 벽 통과 X</p>\n<br><h1 id='256' style='font-size:16px'>행동집합 A : 상하좌우 1칸 이동</h1>\n<br><p id='257' data-category='list' style='font-size:16px'>ex) left, up...<br>벽보고 이동하면 제자리</p>\n<br><p id='258' data-category='list' style='font-size:16px'>보상집합 R : Goal State 에 도달하면<br>+1 받으며 종료<br>할인율 : 시점 t → t+1 1 차이당 기대수<br>익 0.9</p>\n<h1 id='259' style='font-size:14px'>4.1\u0001SARSA,\u0001Q-learning</h1>\n<h1 id='260' style='font-size:20px'>SARSA</h1>\n<br><header id='261' style='font-size:16px'>부부제목?</header>\n<p id='262' data-category='paragraph' style='font-size:18px'>Onpolicy상황SARSA가치함수갱신알고리즘</p>\n<p id='263' data-category='list' style='font-size:16px'>현재SA→R→다음SA수집</p>\n<p id='264' data-category='list' style='font-size:16px'>TD법에서행동가치함수값업데이트</p>\n<p id='265' data-category='list' style='font-size:16px'>epsilongreedy같은정책을선택하면정책에맞게<br>Q함수와epsilon등을고려해a업데이트</p>\n<br><figure id='266'><img alt=\"\" data-coord=\"top-left:(1636,688); bottom-right:(2687,986)\" /></figure>\n<p id='267' data-category='paragraph' style='font-size:14px'>1epsilon확률로greedy하게S_t에서의a선택<br>epsilon확률로랜덤행동으로업데이트</p>\n<h1 id='268' style='font-size:22px'>On<br>policy<br>Off<br>Policy</h1>\n<br><header id='269' style='font-size:18px'>부부제목?</header>\n<h1 id='270' style='font-size:20px'>직접 정책적용 - 평가하면서 개선 vs 다른 정책의 실험 데이터로 개선</h1>\n<h1 id='271' style='font-size:14px'>최대화<br>할<br>정책을<br>만드는데<br>꼭<br>탐험을<br>직접<br>해가면서<br>해야<br>해?</h1>\n<p id='272' data-category='paragraph' style='font-size:16px'>MC 에서 Epsilon Greedy 예시 : 모델<br>을 몰라 가치함수 Sampling 이 필요</p>\n<p id='273' data-category='paragraph' style='font-size:16px'>→ pi 가 직접 상태 탐색도 하면서<br>개선도 하면 비효율적</p>\n<p id='274' data-category='list' style='font-size:16px'>탐험용 정책 μ가 데이터 수집 → π 정책<br>의 상태가치함수 계산</p>\n<p id='275' data-category='list' style='font-size:16px'>이때 두 정책간의 차이를 중요도<br>Sampling 으로 교정</p>\n<br><table id='276' style='font-size:14px'><thead><tr><td></td><td>On\u0001policy</td><td>off\u0001policy</td></tr></thead><tbody><tr><td>탐험</td><td>매\u0001업데이트마다\u0001π를\u0001실행\u0001 →\u0001\u0001학습이\u0001느림,\u0001위험</td><td>탐험\u0001전용\u0001μ\u0001유지,\u0001π는\u0001점진적\u0001개선</td></tr><tr><td>비용</td><td>새로운\u0001정책\u0001실험\u0001어려움</td><td>안전한\u0001μ로\u0001수집,\u0001π는\u0001오프라인으로\u0001시험</td></tr><tr><td>예시</td><td>SARSA,\u0001A2C,\u0001PPO</td><td>Q‐learning,\u0001DQN,\u0001DDPG,\u0001CQL</td></tr><tr><td>안정</td><td>안정적</td><td>중요도\u0001Sampling\u0001편향\u0001및\u0001발산\u0001위험</td></tr></tbody></table>\n<h1 id='277' style='font-size:20px'>On\u0001policy\u0001Off\u0001Policy<br>예시</h1>\n<br><header id='278' style='font-size:14px'>부부제목?</header>\n<p id='279' data-category='list' style='font-size:16px'>결국직접탐색하면서실행하기어려운환경규제안전트래픽비용</p>\n<p id='280' data-category='list' style='font-size:16px'>과거에종료된환경로그데이터만존재</p>\n<p id='281' data-category='list' style='font-size:16px'>피드백을시뮬레이션하기어려움</p>\n<br><p id='282' data-category='list' style='font-size:16px'>ex수술의사로봇약처방알고리즘실험자체가보수적이어야함<br>ex자율주행등→학습데이터는주행하는알고리즘이수집but여기서실험x<br>ex손실위험이큰금융</p>\n<h1 id='283' style='font-size:20px'>Q-learning</h1>\n<br><header id='284' style='font-size:16px'>부부제목?</header>\n<h1 id='285' style='font-size:14px'><br>“다음<br>행동을<br>실제로<br>쓰느냐(SARSA)<br>vs<br>가상<br>최적이라<br>가정하느냐(Q‑learning)”</h1>\n<p id='286' data-category='equation'>$$Q^{\\prime}(S_{\\jmath},A_{\\imath})=Q(S_{\\imath},A_{\\imath})+\\alpha\\left\\{R_{\\imath}+\\gamma\\ \\mathrm{max}\\ Q(S_{\\imath+\\gamma},a)-Q(S_{\\jmath},A_{\\imath})\\right\\}$$</p>\n<figure id='287' data-category='chart'><img data-coord=\"top-left:(549,992); bottom-right:(1245,1510)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>G*(St, At)</td><td>St</td><td>At</td><td>p(s'|s, a)</td></tr></thead><tbody><tr><td>item_01</td><td>1</td><td>1</td><td>1</td><td>1</td></tr></tbody></table></figure>\n<br><figure id='288'><img alt=\"\" data-coord=\"top-left:(1611,967); bottom-right:(2555,1510)\" /></figure>\n<h1 id='289' style='font-size:14px'>감사합니다!</h1>",
    "1nQndu_u9892a7lP_-plfcjfjEq3dd9OH": "<header id='0' style='font-size:14px'>2025-2\u0001YBIGTA</header>\n<h1 id='1' style='font-size:20px'>LangGraph</h1>\n<footer id='2' style='font-size:16px'>윤희찬,\u0001이준찬</footer>\n<h1 id='3' style='font-size:20px'>목\u0001차</h1>\n<p id='4' data-category='list' style='font-size:14px'>1. LangGraph란?</p>\n<p id='5' data-category='list' style='font-size:16px'>2. 나만의\u0001그래프\u0001만들기</p>\n<p id='6' data-category='list' style='font-size:16px'>3. LLM\u0001+\u0001LangGraph</p>\n<p id='7' data-category='list' style='font-size:16px'>4. 메모리\u0001관리</p>\n<h1 id='8' style='font-size:14px'>LangGraph란?</h1>\n<h1 id='9' style='font-size:20px'>Langchain과\u0001LangGraph</h1>\n<br><header id='10' style='font-size:14px'>LangGraph란?</header>\n<h1 id='11' style='font-size:18px'>vs</h1>\n<br><h1 id='12' style='font-size:16px'>LangChain</h1>\n<br><p id='13' data-category='list' style='font-size:16px'>주요\u0001용도\u0001:\u0001에이전트\u0001/\u0001체인\u0001구축<br>메모리\u0001컴포넌트\u0001/\u0001벡터\u0001DB\u0001/\u0001React\u0001등\u0001구현\u0001가능<br>→\u0001그래프\u0001기반\u0001workflow\u0001작동\u0001통제\u0001/\u0001노드별\u0001상<br>태\u0001추적은\u0001제한적<br>사용\u0001예시\u0001:\u0001단계별\u0001추적이\u0001불필요한\u0001RAG\u0001챗봇</p>\n<h1 id='14' style='font-size:16px'>LangGraph</h1>\n<br><p id='15' data-category='list' style='font-size:16px'>주요\u0001용도\u0001:\u0001노드별\u0001상태\u0001관리\u0001/\u0001분기\u0001제어<br>그래프\u0001구축\u0001/\u0001state\u0001관리\u0001등의\u0001기능\u0001제공<br>\u0001\u0001\u0001\u0001\u0001\u0001→\u0001단계별\u0001state를\u0001통한\u0001상태,\u0001분기\u0001제어\u0001가능<br>사용\u0001예시\u0001:\u0001명확한\u0001파이프라인이\u0001필요한\u0001개<br>선대책서\u0001작성\u0001에이전트</p>\n<h1 id='16' style='font-size:20px'>LangGraph\u0001개념\u0001소개</h1>\n<br><header id='17' style='font-size:14px'>LangGraph란?</header>\n<figure id='18'><img alt=\"\" data-coord=\"top-left:(410,565); bottom-right:(1446,1326)\" /></figure>\n<br><h1 id='19' style='font-size:16px'>주요\u0001용어\u0001정리</h1>\n<br><h1 id='20' style='font-size:16px'>State\u0001:\u0001어플리케이션의\u0001현재\u0001상태</h1>\n<br><p id='21' data-category='list' style='font-size:16px'>\u0001\u0001\u0001\u0001\u0001\u0001→\u0001이\u0001때,\u0001노드\u0001별로\u0001state를\u0001공유해야하므로,<br>\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001사전에\u0001typedDict\u0001또는\u0001Pydantic\u0001BaseModel<br>\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001로\u0001정의필요<br>Nodes\u0001:\u0001실제\u0001작업을\u0001수행하는\u0001Python\u0001함수들<br>\u0001\u0001\u0001\u0001\u0001\u0001→\u0001특정\u0001로직을\u0001수행하는\u0001클래스들</p>\n<br><p id='22' data-category='list' style='font-size:16px'>Edges\u0001:\u0001노드\u0001간의\u0001연결을\u0001정의하는\u0001요소<br>\u0001\u0001\u0001\u0001\u0001\u0001→\u0001워크플로우의\u0001흐름\u0001제어\u0001(조건부\u0001라우팅)</p>\n<h1 id='23' style='font-size:14px'>나만의\u0001그래프\u0001만들기</h1>\n<header id='24' style='font-size:14px'>나만의<br>그래프<br>만들기</header>\n<br><h1 id='25' style='font-size:20px'>먼저<br>내가<br>쓸<br>State를<br>정의하자!</h1>\n<table id='26' style='font-size:16px'><thead></thead><tbody><tr><td></td><td>State를<br>정의하는<br>2가지<br>방법</td></tr><tr><td>1. TypedDict state를<br>관리하기<br>위해<br>특정<br>형식에<br>맞지<br>않는</td><td>2. Pydantic<br>사용<br>(BaseModel<br>상속)<br> 데이터를<br>관리하기<br>위해<br>Pydantic<br>편리 →<br>코드를<br>보면,<br>유효하지<br>않은<br>State가<br>왔을 때<br>편리하게<br>관리할<br>수<br>있는<br>모습을<br>볼<br>수<br>있음 필요한<br>경우,<br>Public<br>state와<br>Private<br>state를 따로<br>만들어서<br>관리<br>가능함.</td></tr></tbody></table>\n<header id='27' style='font-size:14px'>나만의\u0001그래프\u0001만들기</header>\n<br><h1 id='28' style='font-size:20px'>정의한\u0001State는\u0001어떻게\u0001쓰이는가</h1>\n<h1 id='29' style='font-size:16px'>State\u0001내에\u0001다양한\u0001기능들을\u0001구현\u0001가능<br>→\u0001왼쪽\u0001코드\u0001예시\u0001:\u0001State\u0001에\u0001user_input\u0001/<br>history를\u0001구현하여\u0001노드\u0001간에\u0001공유하도록\u0001설정</h1>\n<h1 id='30' style='font-size:16px'>State를\u0001활용한\u0001노드\u0001흐름\u0001제어\u0001가능<br>→\u0001사용자\u0001입력에\u0001따라\u0001State를\u0001변경하고,\u0001이<br>에\u0001따라\u0001원하는\u0001노드\u0001흐름으로\u0001유도\u0001가능</h1>\n<p id='31' data-category='paragraph' style='font-size:16px'>→\u0001코드\u0001설명</p>\n<br><p id='32' data-category='list' style='font-size:16px'>사용자의\u0001input을\u0001history에\u0001누적<br>사용자의\u0001input을\u0001user_input으로\u0001State<br>에\u0001저장한\u0001후\u0001이에\u0001따라\u0001노드\u0001분기\u0001결정</p>\n<header id='33' style='font-size:14px'>나만의<br>그래프<br>만들기</header>\n<br><h1 id='34' style='font-size:20px'>그래프를<br>만드는<br>법</h1>\n<h1 id='35' style='font-size:18px'>그렇다면<br>이러한<br>State를<br>활용한<br>분기를<br>활용<br>하기<br>위해<br>그래프를<br>어떻게<br>구축해야하는가?</h1>\n<h1 id='36' style='font-size:16px'><br>1.<br>StateGraph<br>클래스로<br>상태<br>기반<br>흐름을<br>정의</h1>\n<br><p id='37' data-category='list' style='font-size:16px'>State외에<br>다른<br>워크플로우도<br>존재<br>MessageGraph<br>:<br>메세지<br>목록만을<br>가짐<br>(챗봇)<br>Subgraph<br>:<br>사전에<br>정의해둔<br>그래프를<br>삽입<br>(모듈화)</p>\n<figure id='38'><img alt=\"\" data-coord=\"top-left:(144,1285); bottom-right:(1394,1572)\" /></figure>\n<br><p id='39' data-category='list' style='font-size:16px'>2.<br>그래프에<br>사용할<br>노드<br>정의<br>-<br>add_node<br>3.<br>노드<br>간의<br>간선<br>정의<br>-<br>add_edge<br><br>4.<br>그래프<br>간<br>조건에<br>따른<br>노드<br>분기<br>설정<br>-<br>conditional_edges<br></p>\n<header id='40' style='font-size:14px'>나만의<br>그래프<br>만들기</header>\n<br><h1 id='41' style='font-size:20px'>그래프를<br>만드는<br>법<br>-<br>모듈화(Subgraph<br>활용)</h1>\n<h1 id='42' style='font-size:18px'>그래프를<br>모듈화하여<br>사용하는<br>법</h1>\n<br><h1 id='43' style='font-size:18px'>첫번째<br>예시<br>:<br>동일한<br>상태<br>스키마<br>공유</h1>\n<p id='44' data-category='list' style='font-size:16px'><br>1.<br>subgraph를<br>정의<br>2.<br>모듈화된<br>subgraph를<br>상위<br>parent<br>graph에<br>노드처럼<br>추가</p>\n<h1 id='45' style='font-size:16px'>현재<br>코드에서는<br>subgraph가<br>stategraph와<br>동일한<br>state<br>를<br>공유하고<br>있는<br>것을<br>알<br>수<br>있음<br></h1>\n<header id='46' style='font-size:14px'>나만의<br>그래프<br>만들기</header>\n<br><p id='47' data-category='paragraph' style='font-size:20px'>서로<br>다른<br>스키마를<br>활용하여<br>모듈화하는<br>법</p>\n<p id='48' data-category='paragraph' style='font-size:16px'>서로<br>다른<br>스키마를<br>사용하는법</p>\n<br><p id='49' data-category='list' style='font-size:16px'>서로<br>다른<br>State를<br>정의하여<br>상속<br>subgraph<br>:<br>SubgraphState<br>상속<br>parentgraph<br>:<br>ParentState<br>상속</p>\n<br><figure id='50'><img alt=\"\" data-coord=\"top-left:(1584,327); bottom-right:(2743,1187)\" /><figcaption id='51' style='font-size:16px'>서로<br>다른<br>스키마를<br>사용할<br>때<br>주의사항</figcaption></figure>\n\n<br><p id='52' data-category='list' style='font-size:16px'>다른<br>State를<br>상속받은<br>node는<br>연결불가<br>ParentState를<br>상속받은<br>node내에서<br><br><br><br><br><br><br>감싸서<br>활용해야함</p>\n<header id='53' style='font-size:14px'>나만의<br>그래프<br>만들기</header>\n<br><p id='54' data-category='paragraph' style='font-size:20px'>Subgraph<br>중첩<br>활용<br>(<br>다중<br>모듈<br>활용<br>)<br>-<br>실습</p>\n<h1 id='55' style='font-size:16px'>실습<br>:<br>비어<br>있는<br>칸들을<br>채워서<br>다음<br>출력이<br>나오도록<br>만들어보기<br>각주가<br>된<br>#####수정해보세요#####를<br>수정하시면<br>됩니다.</h1>\n<h1 id='56' style='font-size:16px'>출력<br>:<br>Hi<br>YBIGTA,<br>I<br>love<br>u,<br>and<br>thank<br>you.</h1>\n<h1 id='57' style='font-size:14px'>LLM\u0001+\u0001LangGraph</h1>\n<header id='58' style='font-size:14px'>LLM<br>적용</header>\n<br><p id='59' data-category='paragraph' style='font-size:20px'>그래서<br>LLM을<br>LangGraph<br>에<br>어떻게<br>쓰나요?</p>\n<h1 id='60' style='font-size:16px'>그렇다면<br>그래프를<br>만드는<br>법은<br>알겠는데,<br>실제<br>LLM을<br>어떻게<br>쓰나요?</h1>\n<p id='61' data-category='list' style='font-size:16px'>1. LLM<br>객체를<br>준비한다<br>2. LLM<br>router<br>node에<br>LLM을<br>집어넣고,<br><br><br><br><br><br><br>입출력<br>등을<br>집어넣는다.<br><br><br><br>3.<br>실제<br>분기를<br>처리할<br>함수를<br>정의하고,<br><br><br><br><br><br><br><br>그래프를<br>정의하여<br>조건부<br>라우팅을<br>구현</p>\n<p id='62' data-category='paragraph' style='font-size:16px'>→<br>기존에<br>노드<br>안에<br>판단<br>주체가<br>LLM이<br>되는<br>것!</p>\n<h1 id='63' style='font-size:20px'>LLM을<br>활용한<br>조건부<br>라우팅</h1>\n<br><header id='64' style='font-size:14px'>LLM<br>적용</header>\n<h1 id='65' style='font-size:16px'>→<br>예시<br>코드</h1>\n<br><p id='66' data-category='list' style='font-size:16px'>LLM을<br>router<br>함수<br>내에<br>prompt를<br>활용하여<br>분기를<br><br><br><br><br><br><br>직접<br>결정하도록<br>유도<br>결정된<br>state를<br>바탕으로<br>node<br>분기<br>결정<br>(branching)<br>결과<br>출력<br></p>\n<p id='67' data-category='paragraph' style='font-size:16px'>→<br>실행을<br>원하시는<br>분은<br>google<br>api<br>key를<br>발급받으신<br>후<br>직<br>접<br>실행해보시면<br>됩니다<br><br>(<br>langgraph4.py<br>파일<br>실습<br>)</p>\n<h1 id='68' style='font-size:14px'>메모리\u0001관리</h1>\n<h1 id='69' style='font-size:20px'>체크포인터<br>활용해보기!</h1>\n<h1 id='70' style='font-size:16px'>State<br>내에<br>history<br>등의<br>복잡한<br>context를<br>구현<br>할<br>수<br>있지만<br>checkpointer<br>기능도<br>활용가능</h1>\n<br><p id='71' data-category='list' style='font-size:16px'>State의<br>정의는<br>자유롭기에<br>얼마든지<br>원하는<br>형태로<br>context를<br>관리할<br>수<br>있다!<br>그러한<br>중간<br>State를<br>저장하는게<br>체크포인터</p>\n<br><h1 id='72' style='font-size:16px'>Checkpointer<br>의<br>핵심<br>기능</h1>\n<br><h1 id='73' style='font-size:16px'>멀티턴<br>대화<br>/<br>멀티<br>유저<br>세션<br>/<br>중단<br>-<br>재개<br>등<br>의<br>다양한<br>메모리<br>관리<br>기능<br>구현<br>가능</h1>\n<p id='74' data-category='paragraph' style='font-size:16px'>MemorySaver를<br>그래프에<br>연결할<br>경우<br>실행<br>단계<br>후<br>각<br>상태를<br>memory에<br>저장<br>→<br>이렇게<br>저장한<br>memory를<br>세션<br>/<br>조건부<br>체크포<br>인터<br>로<br>활용하여<br>나중에<br>다시<br>불러올<br>수<br>있음<br>→<br>커스텀<br>체크포인터<br>:<br>저장<br>조건<br>직접<br>제어<br>가능</p>\n<br><header id='75' style='font-size:14px'>메모리<br>관리</header>\n<h1 id='76' style='font-size:14px'>감사합니다!</h1>",
    "1XeyV0bL3S_ExS2k2HgL7dwPEek78q-B9": "<header id='0' style='font-size:14px'>2025-2<br>YBIGTA</header>\n<h1 id='1' style='font-size:20px'>Multiagent<br>System</h1>\n<footer id='2' style='font-size:16px'>26기<br>DE<br>손재훈</footer>\n<p id='3' data-category='paragraph' style='font-size:16px'>_Contents</p>\n<br><h1 id='4' style='font-size:20px'>00</h1>\n<br><p id='5' data-category='list' style='font-size:14px'>1. Intro<br>2. google-adk<br>3. Agent<br>protocols</p>\n<figure id='6'><img alt=\"\" data-coord=\"top-left:(0,1266); bottom-right:(370,1656)\" /></figure>\n<br><figure id='7'><img style='font-size:18px' alt=\"01\" data-coord=\"top-left:(2344,0); bottom-right:(2898,543)\" /></figure>\n<figure id='8'><img alt=\"\" data-coord=\"top-left:(0,1265); bottom-right:(368,1656)\" /></figure>\n<br><h1 id='9' style='font-size:14px'>Intro</h1>\n<header id='10' style='font-size:14px'>Intro</header>\n<br><h1 id='11' style='font-size:20px'>Google<br>Cloud<br>NEXT<br>2025</h1>\n<h1 id='12' style='font-size:18px'>ADK와<br>A2A</h1>\n<figure id='13'><img alt=\"\" data-coord=\"top-left:(197,522); bottom-right:(1384,1312)\" /></figure>\n<br><h1 id='14' style='font-size:16px'>2025년<br>4월<br>9일,<br>Google<br>Cloud<br>Next<br>2025에서는<br>AI<br>기술<br>의<br>새로운<br>장을<br>여는<br>혁신들이<br>대거<br>공개되었습니다.</h1>\n<h1 id='15' style='font-size:16px'>그<br>중에서도<br>2025년의<br>키워드로<br>급부상한<br>주제는<br>바로<br>멀티<br>에이전트<br>시스템(Multi-Agent<br>System)<br>이었습니다.</h1>\n<h1 id='16' style='font-size:16px'>Google은<br>이를<br>지원하기<br>위해<br><br>두<br>가지<br>핵심<br>프레임워크를<br>새롭게<br>발표했습니다:</h1>\n<br><p id='17' data-category='list' style='font-size:16px'>ADK<br>(Agent<br>Development<br>Kit)<br>A2A<br>(Agent-to-Agent<br>Protocol)</p>\n<p id='18' data-category='paragraph' style='font-size:16px'>이<br>발표에서는,<br>이<br>두<br>기술이<br>무엇인지,<br>그리고<br>어떻게<br>활용<br>할<br>수<br>있는지<br>구체적으로<br>알아보겠습니다.</p>\n<br><p id='19' data-category='paragraph' style='font-size:18px'>02</p>\n<h1 id='20' style='font-size:14px'>ADK</h1>\n<figure id='21'><img alt=\"\" data-coord=\"top-left:(0,1265); bottom-right:(368,1656)\" /></figure>\n<p id='22' data-category='paragraph' style='font-size:14px'>ADK</p>\n<br><h1 id='23' style='font-size:20px'>ADK<br>Intro</h1>\n<h1 id='24' style='font-size:18px'>Agent<br>Development<br>Kit</h1>\n<br><h1 id='25' style='font-size:16px'>ADK(Agent<br>Development<br>Kit)는<br>단일<br>목적의<br>프롬프트<br>기반<br>모델을<br>넘어,<br>더<br>지능적이고<br>자율적인<br>멀<br>티<br>에이전트<br>시스템을<br>구축하기<br>위한<br>구글의<br>프레임워크입니다.</h1>\n<h1 id='26' style='font-size:16px'>기존에는<br>하나의<br>LLM이<br>단독으로<br>문제를<br>해결했다면,<br>ADK는<br>서로<br>다른<br>역할을<br>수행하는<br>에이전트들이<br>팀처럼<br>협력하도록<br>설계되어<br>있습니다.</h1>\n<h1 id='27' style='font-size:16px'>사용자는<br>복잡한<br>프롬프트<br>체이닝<br>없이도,<br>구조화된<br>설계,<br>상태<br>관리,<br>통신<br>프로토콜,<br>평가<br>시스템<br>등을<br>활용해<br>엔터프라이즈<br>환경에<br>적합한<br>다중<br>에이전트<br>시스템을<br>쉽게<br>개발할<br>수<br>있습니다.</h1>\n<figure id='28'><img alt=\"\" data-coord=\"top-left:(1753,1145); bottom-right:(2034,1466)\" /></figure>\n<h1 id='29' style='font-size:20px'>Why<br>ADK?</h1>\n<br><header id='30' style='font-size:16px'>ADK</header>\n<h1 id='31' style='font-size:18px'>ADK<br>vs<br>.</h1>\n<table id='32' style='font-size:14px'><thead><tr><td></td><td>Google ADK</td><td>LangGraph / Autogen / Agno 등</td></tr></thead><tbody><tr><td>워크플로우 제어</td><td>Sequential, Parallel, Loop, LlmAgent</td><td>직접 코드 작성 필요</td></tr><tr><td>멀티‑에이전트 아키텍처</td><td>계층화 및 협업 내장</td><td>그래프 또는 FSM 중심, 명시 설계 필 요</td></tr><tr><td>멀티‑에이전트 아키텍처</td><td>로컬 + GUI + 트레이스 제공</td><td>코드 중심 디버깅</td></tr><tr><td>배포·인프라</td><td>Google Cloud 통합 배포 지원</td><td>프레임워크만 제공, 배포 별도</td></tr><tr><td>평가·모니터링</td><td>테스트기반 평가 + 추적 기능 포함</td><td>로깅 중심, 수작업 필요</td></tr></tbody></table>\n<br><figure id='33'><img alt=\"\" data-coord=\"top-left:(2240,1099); bottom-right:(2828,1401)\" /></figure>\n<header id='34' style='font-size:14px'>ADK</header>\n<br><h1 id='35' style='font-size:20px'>Why<br>ADK?</h1>\n<h1 id='36' style='font-size:16px'>ADK<br>vs<br>.</h1>\n<h1 id='37' style='font-size:14px'>1.<br>구조화된<br>오케스트레이션<br>모델<br>내장</h1>\n<h1 id='38' style='font-size:14px'>ADK는<br>Sequential,<br>Parallel,<br>Loop,<br>LlmAgent<br>같은<br>워크<br>플로우<br>에이전트<br>클래스를<br>통해,<br>직렬<br>또는<br>병렬<br>실행,<br>반복,<br>LLM<br>기반<br>동적<br>라우팅<br>등<br>다양한<br>흐름<br>제어를<br>지원합니다.</h1>\n<h1 id='39' style='font-size:14px'>덕분에<br>복잡한<br>업무를<br>“선언적<br>구조”로<br>구현할<br>수<br>있습니다.</h1>\n<h1 id='40' style='font-size:14px'>2.<br>계층화된<br>멀티-에이전트<br>아키텍처<br>지원</h1>\n<p id='41' data-category='paragraph' style='font-size:14px'>ADK는<br>계층<br>구조를<br>통해<br>여러<br>에이전트<br>간의<br>협업과<br>역할<br>전<br>환(예:<br>고수준<br>Orchestrator<br>→<br>하위<br>에이전트)을<br>자연스럽<br>게<br>구현합니다<br>.</p>\n<br><figure id='42'><img alt=\"\" data-coord=\"top-left:(1592,463); bottom-right:(2910,1424)\" /></figure>\n<header id='43' style='font-size:14px'>ADK</header>\n<br><h1 id='44' style='font-size:20px'>Why<br>ADK?</h1>\n<h1 id='45' style='font-size:16px'>ADK<br>vs<br>.</h1>\n<h1 id='46' style='font-size:14px'>3.<br>엔터프라이즈급<br>통합과<br>배포</h1>\n<h1 id='47' style='font-size:14px'>ADK는<br>Vertex<br>AI<br>Agent<br>Engine,<br>Google<br>Cloud<br>서비스<br>(Cron<br>job,<br>BigQuery,<br>Apigee<br>등)와<br>원활히<br>연결되며,<br>배<br>포,<br>인증·인가,<br>보안을<br>아우르는<br>완전<br>관리형<br>에코시스템을<br>지원합니다</h1>\n<h1 id='48' style='font-size:14px'>4.<br>강력한<br>평가,<br>관찰(observability)<br>메커니즘</h1>\n<p id='49' data-category='paragraph' style='font-size:14px'>테스트<br>케이스<br>기반의<br>응답<br>평가<br>및<br>실행<br>궤적<br>추적<br>기능이<br>기<br>본<br>포함되어<br>있어,<br>품질<br>검증과<br>모니터링이<br>체계적입니다</p>\n<br><figure id='50'><img alt=\"\" data-coord=\"top-left:(1979,356); bottom-right:(2264,582)\" /></figure>\n<figure id='51'><img alt=\"\" data-coord=\"top-left:(1480,844); bottom-right:(2777,1475)\" /></figure>\n<header id='52' style='font-size:14px'>ADK</header>\n<br><h1 id='53' style='font-size:18px'>ADK<br>사용해보기</h1>\n<figure id='54'><img alt=\"\" data-coord=\"top-left:(2045,487); bottom-right:(2842,1063)\" /></figure>\n<header id='55' style='font-size:16px'>ADK</header>\n<br><h1 id='56' style='font-size:20px'>ADK-Agents</h1>\n<p id='57' data-category='list' style='font-size:14px'>LlmAgent:<br>일반적으로<br>알고<br>있는,<br>“언어모델”이<br>탑재된<br>에이전트.<br>실제로<br>Task를<br>수행하는<br>주체</p>\n<p id='58' data-category='list' style='font-size:14px'>SequentialAgent:<br>정의된<br>에이전트를<br>순차<br>실행<br>할<br>수<br>있는<br>에이전트</p>\n<p id='59' data-category='list' style='font-size:14px'>ParallelAgent:<br>정의된<br>에이전트를<br>병렬로<br>실행할<br>수<br>있는<br>에이전트</p>\n<br><figure id='60'><img alt=\"\" data-coord=\"top-left:(1357,421); bottom-right:(2897,1145)\" /></figure>\n<br><p id='61' data-category='list' style='font-size:14px'>CustomAgent:<br>위에서<br>정의된<br>에이전트를<br>넘어<br>더<br>복잡한<br>워크플로우를<br>실행하고자<br>할<br>때<br>사용하<br>는<br>에이전트</p>\n<h1 id='62' style='font-size:20px'>ADK-Sample</h1>\n<br><header id='63' style='font-size:16px'>ADK</header>\n<h1 id='64' style='font-size:18px'>google에서<br>adk<br>활용법에<br>관한<br>예시들을<br>많이<br>두었으<br>니,<br>쉽게<br>참고하면서<br>보시면<br>됩니다.</h1>\n<h1 id='65' style='font-size:18px'>그리고<br>adk<br>신봉자답게...<br>저도<br>회사<br>관련<br>투자<br>리서치<br>에이전트를<br>만들어보았으니<br>참고해주세요!</h1>\n<br><figure id='66'><img alt=\"\" data-coord=\"top-left:(1447,333); bottom-right:(2826,960)\" /></figure>\n<p id='67' data-category='paragraph' style='font-size:14px'>https://github.com/google/adk-samples<br>https://github.com/wognsths/adk-agent-sample</p>\n<br><figure id='68'><img style='font-size:18px' alt=\"02.5\" data-coord=\"top-left:(1775,0); bottom-right:(2912,540)\" /></figure>\n<h1 id='69' style='font-size:14px'>시연<br>영상!</h1>\n<figure id='70'><img alt=\"\" data-coord=\"top-left:(0,1266); bottom-right:(368,1656)\" /></figure>\n<header id='71' style='font-size:18px'>ADK</header>\n<br><h1 id='72' style='font-size:20px'>Example</h1>\n<h1 id='73' style='font-size:14px'>https://github.com/wognsths/adk-agent-sample<br>https://drive.google.com/file/d/12udGldxeaSJobmnPgTtJQk7Y-YTFUiYi/view?usp=drive_link</h1>\n<figure id='74'><img alt=\"\" data-coord=\"top-left:(195,554); bottom-right:(1810,994)\" /></figure>\n<p id='75' data-category='paragraph' style='font-size:16px'>중요한<br>점은...<br>만드는데<br>하루도<br>걸리지<br>않았다는<br>것!!</p>\n<br><figure id='76'><img style='font-size:18px' alt=\"03\" data-coord=\"top-left:(2244,0); bottom-right:(2917,547)\" /></figure>\n<figure id='77'><img alt=\"\" data-coord=\"top-left:(0,1266); bottom-right:(368,1656)\" /></figure>\n<br><p id='78' data-category='paragraph' style='font-size:14px'>Agent<br>Protocols</p>\n<header id='79' style='font-size:16px'>Agent<br>Protocols</header>\n<br><h1 id='80' style='font-size:20px'>_MCP</h1>\n<br><h1 id='81' style='font-size:18px'>Why<br>MCP?</h1>\n<h1 id='82' style='font-size:14px'>사실<br>MCP는<br>그냥<br>HTTP<br>통신<br>기반<br>데이터를<br>받을<br>수<br>있는<br>tool입니<br>다.<br>그럼에도<br>왜<br>MCP가<br>유용한<br>것인가요?</h1>\n<p id='83' data-category='list' style='font-size:14px'>표준화:<br>USB<br>포트에<br>비유하기도<br>하죠.<br>클라이언트는<br>MCP에<br>연<br>결하기<br>위해<br>MCP의<br>내부<br>구조를<br>알<br>필요가<br>없습니다.<br>표준화되<br>어<br>“어떻게<br>연결하는지”만<br>알고<br>있으면<br>되니까요.<br>확장성:<br>연결만<br>하면<br>끝.<br>그러면<br>제가<br>제<br>입맛대로<br>마음대로<br>연결<br>하면<br>되겠네요!</p>\n<p id='84' data-category='paragraph' style='font-size:14px'>그냥<br>tool을<br>만든다고<br>하면,<br>인풋<br>형태부터<br>아웃풋<br>형태<br>정해주고,<br>프<br>롬프트에<br>어떻게<br>써야<br>하는지<br>상세히<br>알려줘야<br>하고...<br>한두번이면<br>몰<br>라도<br>너무<br>힘든<br>것<br>같아요.</p>\n<p id='85' data-category='paragraph' style='font-size:14px'>너무<br>MCP가<br>주는<br>효용에<br>대해서<br>짧게<br>이야기했지만,<br>이<br>정도면<br>Agent<br>protocol이<br>무엇을<br>하기<br>위해<br>있는<br>것인지<br>알<br>수<br>있겠죠?</p>\n<br><figure id='86'><img alt=\"\" data-coord=\"top-left:(1662,506); bottom-right:(2824,1172)\" /></figure>\n<header id='87' style='font-size:16px'>Agent<br>Protocols</header>\n<br><h1 id='88' style='font-size:20px'>Agent<br>Protocol</h1>\n<br><h1 id='89' style='font-size:18px'>Agent<br>Protocol은<br>무엇을<br>갖추어야<br>하는가?</h1>\n<h1 id='90' style='font-size:14px'>결국<br>Agent<br>Protocol은,<br>MCP와<br>같이<br>입/출력<br>형식이<br>통일된<br>프로<br>토콜입니다.</h1>\n<h1 id='91' style='font-size:14px'>MCP도<br>설계<br>철학이<br>있죠.<br>도구,<br>리소스,<br>프롬프트<br>등의<br>컨텍스트를<br>구조화되게<br>제공하거나,<br>AI<br>모델이<br>동적으로<br>리소스를<br>탐색하고<br>호출<br>할<br>수<br>있도록<br>설계됩니다.</h1>\n<h1 id='92' style='font-size:14px'>Agent<br>Protocol은<br>에이전트<br>간<br>프로토콜이기<br>때문에,<br>MCP보다는<br>더욱<br>발전된<br>설계<br>철학이<br>필요합니다.</h1>\n<p id='93' data-category='list' style='font-size:14px'>에이전트<br>자율성<br>강화:<br>에이전트는<br>자신의<br>기능을<br>명시적으로<br>광<br>고하고,<br>독립적으로<br>판단하여<br>동작할<br>수<br>있어야<br>합니다.<br>즉<br>자신<br>의<br>능력을<br>공개하고,<br>필요<br>시<br>동료<br>에이전트를<br>호출하거나<br>결과를<br>위임할<br>수<br>있어야<br>하죠.<br>협업:<br>단순<br>요청-응답<br>구조를<br>넘어서,<br>에이전트<br>간<br>상호작용을<br>잘<br>할<br>수<br>있도록<br>설계되어야<br>합니다.</p>\n<br><figure id='94'><img alt=\"\" data-coord=\"top-left:(1719,410); bottom-right:(2833,1409)\" /></figure>\n<header id='95' style='font-size:16px'>Agent<br>Protocols</header>\n<br><h1 id='96' style='font-size:20px'>Agent<br>Protocol</h1>\n<br><h1 id='97' style='font-size:18px'>Agent<br>Protocols...<br>춘추전국시대?</h1>\n<table id='98' style='font-size:14px'><thead></thead><tbody><tr><td>프로토콜</td><td>주요 기능 계층</td><td>핵심 특징</td></tr><tr><td>ACP (Agent Communication Protocol)</td><td>메시징 및 협업</td><td>REST+스트리밍, 멀티파트 메시지, 대기형/비동기 협업, BeeAI 플랫폼 기반 (IBM, IBM Research, Niklas Heidloff)</td></tr><tr><td>A2A (Agent-to-Agent Protocol)</td><td>직접 협업(P2P)</td><td>Agent Card로 기능 광고/탐색, 위임 중심, 리눅스재단 오픈 거버넌스 (Google Developers Blog, linuxfoundation.org, Descope, Google Cloud)</td></tr><tr><td>ANP (Agent Network Protocol)</td><td>분산 네트워크 구조</td><td>DID 기반 신원·디스커버리, JSON-LD, 분산형 에이전트 마켓플레이스 지향 (GitHub, arXiv, Medium, AIbase)</td></tr><tr><td>Agora Protocol</td><td>메타 메시징 협상</td><td>대형 에이전트 네트워크 대상 메타 프로토콜, 구조적 통신 협상, 확장성 중심 (arXiv, thebytebeat.substack.com, AZoAi)</td></tr><tr><td>LMOS (Language Model Operating System)</td><td>운영·오케스트레이션</td><td>멀티 에이전트를 OS 스타일로 관리, 메모리·툴 공유·경로 라우팅 지원 (eclipse.dev, eclipse.dev, projects.eclipse.org)</td></tr><tr><td>AITP (Agent Interaction & Transaction Protocol)</td><td>보안·거래</td><td>신뢰 경계 간 안전한 거래/트랜잭션, 웹2/웹3 지원, 경제적 주체 모델(NEAR AI, aitp.dev, Binance, X (formerly Twitter))</td></tr></tbody></table>\n<header id='99' style='font-size:14px'>Agent<br>Protocols</header>\n<br><h1 id='100' style='font-size:20px'>Agent<br>Protocol</h1>\n<br><h1 id='101' style='font-size:18px'>Agent<br>Protocols...<br>아직인<br>것<br>같아요!</h1>\n<h1 id='102' style='font-size:16px'>완전히<br>자유로운<br>멀티에이전트<br>자체에<br>아직<br>한계가<br>있습니다!</h1>\n<h1 id='103' style='font-size:16px'><br>아직<br>정립되지<br>않은<br>에이전트<br>프로토콜</h1>\n<br><h1 id='104' style='font-size:16px'>그리고<br>MCP와<br>다르게<br>활용도가<br>저조한<br>에이전트<br>프로토콜들...</h1>\n<br><figure id='105'><img alt=\"\" data-coord=\"top-left:(1862,444); bottom-right:(2835,749)\" /></figure>\n<h1 id='106' style='font-size:16px'>지나치게<br>복잡함</h1>\n<br><h1 id='107' style='font-size:16px'>MCP가<br>유행이<br>되었을<br>때에는<br>센세이션이라는<br>대중의<br>반응들에<br>반해,<br>대중들은<br>에이전트<br>프로토콜에는<br>아직<br>피로감을<br>보입니다.<br>직관적이지<br>않고<br>복잡하다는<br>단점이<br>있죠.</h1>\n<p id='108' data-category='paragraph' style='font-size:16px'>메모리/컨텍스트<br>관리의<br>어려움</p>\n<br><p id='109' data-category='paragraph' style='font-size:16px'>메모리<br>설계의<br>발전은<br>아직<br>속도가<br>더딘<br>것<br>같아요.</p>\n<br><figure id='110'><img alt=\"\" data-coord=\"top-left:(1854,895); bottom-right:(2134,1504)\" /></figure>\n<br><figure id='111'><img alt=\"\" data-coord=\"top-left:(2143,880); bottom-right:(2495,1503)\" /></figure>\n<br><figure id='112'><img alt=\"\" data-coord=\"top-left:(2508,883); bottom-right:(2821,1514)\" /></figure>\n<h1 id='113' style='font-size:14px'>Thank<br>you!!</h1>",
    "1oT6X7CvwvtPTFRax0wuTlIWzL-vpled9": "<header id='0' style='font-size:14px'>2025-2\u0001YBIGTA</header>\n<h1 id='1' style='font-size:20px'>강화학습 심화?</h1>\n<br><h1 id='2' style='font-size:18px'>그냥\u0001이런\u0001저런\u0001주제들</h1>\n<footer id='3' style='font-size:16px'>DS\u0001팀장\u0001김형진</footer>\n<h1 id='4' style='font-size:20px'>목\u0001차</h1>\n<p id='5' data-category='list' style='font-size:14px'>1. RL\u0001with\u0001LLM</p>\n<p id='6' data-category='list' style='font-size:16px'>2. RL\u0001with\u0001Diffusion</p>\n<p id='7' data-category='list' style='font-size:16px'>3. MARL</p>\n<p id='8' data-category='list' style='font-size:16px'>4. Online\u0001RL\u0001&\u0001Offline\u0001RL</p>\n<p id='9' data-category='list' style='font-size:16px'>5. IRL</p>\n<h1 id='10' style='font-size:14px'>RL\u0001with\u0001LLM</h1>\n<br><h1 id='11' style='font-size:14px'>LLM\u0001alignment<br>PPO(Open\u0001AI\u00012017)</h1>\n<br><figure id='12'><img alt=\"\" data-coord=\"top-left:(122,239); bottom-right:(2864,1614)\" /></figure>\n<br><h1 id='13' style='font-size:18px'>LLM\u0001alignment<br>PPO(Open\u0001AI\u00012017)</h1>\n<p id='14' data-category='equation'>$$r_{t}(\\theta)\\;=\\;\\frac{\\pi_{\\theta^{0}(a t\\mid s_{t})}}{\\pi_{\\theta_{014}(a t\\mid s_{t})}},{\\mathrm{~so~}}r(\\theta_{01\\mathrm{d}})\\;=\\;1.$$</p>\n<p id='15' data-category='paragraph' style='font-size:14px'>https://arxiv.org/pdf/1707.06347</p>\n<br><h1 id='16' style='font-size:18px'>LLM\u0001alignment<br>당시\u0001LLM의\u0001한계</h1>\n<br><figure id='17'><img style='font-size:14px' alt=\"Pretraining\u0001→\u0001Finetuning\nEX\u0001:문법은\u0001맞지만\u0001쓸모\u0001없는\u0001답변생성\n\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001:사람이\u0001원하는\u0001방식과\u0001미묘하게\u0001다름\n\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001:사실처럼\u0001보이지만\u0001잘못된\u0001정보\u0001생성\n미묘한\u0001답변성능\" data-coord=\"top-left:(107,310); bottom-right:(2995,1596)\" /></figure>\n<br><h1 id='18' style='font-size:18px'>LLM\u0001alignment<br>RLHF(Open\u0001AI\u00012022)</h1>\n<br><h1 id='19' style='font-size:14px'>RLHF를\u0001통해\u0001사람이\u0001선호하는\u0001답변이\u0001생성하도록\u0001함.</h1>\n<figure id='20'><img alt=\"\" data-coord=\"top-left:(486,624); bottom-right:(776,1450)\" /></figure>\n<br><figure id='21'><img alt=\"\" data-coord=\"top-left:(1201,625); bottom-right:(1501,1586)\" /></figure>\n<br><figure id='22'><img alt=\"\" data-coord=\"top-left:(1907,636); bottom-right:(2282,1576)\" /></figure>\n<br><h1 id='23' style='font-size:14px'>LLM\u0001alignment<br>RLHF(Open\u0001AI\u00012022)</h1>\n<br><figure id='24'><img alt=\"\" data-coord=\"top-left:(329,238); bottom-right:(2826,1595)\" /></figure>\n<br><h1 id='25' style='font-size:20px'>LLM\u0001alignment</h1>\n<br><h1 id='26' style='font-size:16px'>RLHF</h1>\n<br><figure id='27'><img alt=\"\" data-coord=\"top-left:(366,195); bottom-right:(2838,1602)\" /></figure>\n<br><footer id='28' style='font-size:14px'>https://arxiv.org/abs/2203.02155</footer>\n<br><p id='29' data-category='paragraph' style='font-size:14px'>LLM\u0001alignment<br>ChatGPT</p>\n<br><figure id='30'><img alt=\"\" data-coord=\"top-left:(696,188); bottom-right:(2796,1603)\" /></figure>\n\n<figure id='32'><img alt=\"\" data-coord=\"top-left:(224,479); bottom-right:(700,1093)\" /><br><figcaption id='31' style='font-size:18px'>LLM<br>alignment<br>Example</figcaption></figure>\n<br><figure id='33'><img alt=\"\" data-coord=\"top-left:(750,346); bottom-right:(2846,1297)\" /></figure>\n<p id='34' data-category='paragraph' style='font-size:14px'>https://blog.scatterlab.co.kr/luda-rlhf</p>\n<br><h1 id='35' style='font-size:14px'>DeepSeek-R1<br>GRPO\u0001+\u0001RLVR</h1>\n<h1 id='36' style='font-size:18px'>R1\u0001모델학습을\u0001위해\u0001GRPO와\u0001RLVR<br>을\u0001사용한\u0001것으로\u0001알려져\u0001있음.</h1>\n<p id='37' data-category='paragraph' style='font-size:18px'>RLVR은\u0001GPT-o1에도\u0001사용된\u0001것으로<br>알려져\u0001있음.</p>\n\n<figure id='39'><img alt=\"\" data-coord=\"top-left:(129,355); bottom-right:(2852,1582)\" /><br><figcaption id='38' style='font-size:18px'>DeepSeek-R1<br>GRPO(DeepSeek-AI\u00012024)</figcaption></figure>\n<br><p id='40' data-category='paragraph' style='font-size:14px'>https://arxiv.org/pdf/2402.03300</p>\n<br><p id='41' data-category='paragraph' style='font-size:18px'>DeepSeek-R1<br>RLVR</p>\n<br><figure id='42'><img alt=\"\" data-coord=\"top-left:(1041,163); bottom-right:(2719,998)\" /></figure>\n<br><figure id='43'><img alt=\"\" data-coord=\"top-left:(1349,962); bottom-right:(1970,1520)\" /></figure>\n<p id='44' data-category='paragraph' style='font-size:14px'>https://wikidocs.net/278478</p>\n<p id='45' data-category='paragraph' style='font-size:14px'>RL\u0001with<br>Diffusion</p>\n<br><h1 id='46' style='font-size:20px'>RL\u0001with\u0001Diffusion</h1>\n<br><h1 id='47' style='font-size:16px'>Training\u0001Diffusion\u0001Models\u0001with\u0001Reinforcement\u0001Learning</h1>\n<figure id='48'><img alt=\"\" data-coord=\"top-left:(124,419); bottom-right:(2955,1188)\" /></figure>\n<footer id='49' style='font-size:14px'>https://arxiv.org/abs/2305.13301</footer>\n<br><h1 id='50' style='font-size:20px'>RL\u0001with\u0001Diffusion</h1>\n<br><p id='51' data-category='paragraph' style='font-size:16px'>Training\u0001Diffusion\u0001Models\u0001with\u0001Reinforcement\u0001Learning(ICLR\u00012024)</p>\n<p id='52' data-category='paragraph' style='font-size:14px'>https://arxiv.org/abs/2305.13301</p>\n<br><figure id='53'><img alt=\"\" data-coord=\"top-left:(1819,400); bottom-right:(2204,793)\" /></figure>\n<figure id='54'><img alt=\"\" data-coord=\"top-left:(568,795); bottom-right:(970,1191)\" /></figure>\n<br><figure id='55'><img alt=\"\" data-coord=\"top-left:(1815,801); bottom-right:(2205,1192)\" /></figure>\n<br><figure id='56'><img alt=\"\" data-coord=\"top-left:(575,399); bottom-right:(968,793)\" /></figure>\n<figure id='57'><img alt=\"\" data-coord=\"top-left:(2212,1200); bottom-right:(2608,1588)\" /></figure>\n<br><figure id='58'><img alt=\"\" data-coord=\"top-left:(972,797); bottom-right:(1366,1191)\" /></figure>\n<br><figure id='59'><img alt=\"\" data-coord=\"top-left:(2215,803); bottom-right:(2609,1188)\" /></figure>\n<br><figure id='60'><img alt=\"\" data-coord=\"top-left:(1417,399); bottom-right:(1810,794)\" /></figure>\n<figure id='61'><img alt=\"\" data-coord=\"top-left:(175,797); bottom-right:(564,1191)\" /></figure>\n<br><figure id='62'><img alt=\"\" data-coord=\"top-left:(971,396); bottom-right:(1367,794)\" /></figure>\n<figure id='63'><img alt=\"\" data-coord=\"top-left:(1418,798); bottom-right:(1808,1191)\" /></figure>\n<figure id='64'><img alt=\"\" data-coord=\"top-left:(1815,1198); bottom-right:(2206,1588)\" /></figure>\n<br><figure id='65'><img alt=\"\" data-coord=\"top-left:(174,400); bottom-right:(564,796)\" /></figure>\n<figure id='66'><img alt=\"\" data-coord=\"top-left:(970,1194); bottom-right:(1368,1593)\" /></figure>\n<br><figure id='67'><img alt=\"\" data-coord=\"top-left:(2216,399); bottom-right:(2608,792)\" /></figure>\n<figure id='68'><img alt=\"\" data-coord=\"top-left:(1417,1200); bottom-right:(1807,1589)\" /></figure>\n<br><figure id='69'><img alt=\"\" data-coord=\"top-left:(574,1193); bottom-right:(971,1590)\" /></figure>\n<br><figure id='70'><img alt=\"\" data-coord=\"top-left:(174,1196); bottom-right:(565,1590)\" /></figure>\n<h1 id='71' style='font-size:14px'>MARL</h1>\n<br><h1 id='72' style='font-size:18px'>MARL</h1>\n<br><h1 id='73' style='font-size:14px'>여태까지는\u0001항상\u0001하나의\u0001Agent만을\u0001가정해왔다.</h1>\n<figure id='74'><img alt=\"\" data-coord=\"top-left:(283,405); bottom-right:(2096,1620)\" /></figure>\n<br><h1 id='75' style='font-size:18px'>MARL</h1>\n<br><h1 id='76' style='font-size:14px'>하지만\u0001현실에는\u0001여러\u0001에이전트를\u0001\u0001가정해야하는\u0001상황이\u0001존재한다.</h1>\n<figure id='77'><img alt=\"\" data-coord=\"top-left:(206,382); bottom-right:(2161,1649)\" /></figure>\n<br><h1 id='78' style='font-size:18px'>MARL</h1>\n<br><h1 id='79' style='font-size:14px'>이를\u0001위해\u0001등장한\u0001것이\u0001Multi-agent\u0001RL이다.</h1>\n<br><h1 id='80' style='font-size:18px'>MARL</h1>\n<br><h1 id='81' style='font-size:14px'>MARL의\u0001대표적인\u0001환경은\u0001다음과\u0001같다.</h1>\n<br><h1 id='82' style='font-size:18px'>MARL</h1>\n<br><figure id='83'><img alt=\"\" data-coord=\"top-left:(1845,87); bottom-right:(2123,349)\" /></figure>\n<br><h1 id='84' style='font-size:14px'>SMAC(StarCraft\u0001Multi-Agent\u0001Challenge)</h1>\n<figure id='85'><img alt=\"\" data-coord=\"top-left:(162,410); bottom-right:(2534,1574)\" /></figure>\n<br><h1 id='86' style='font-size:18px'>MARL<br>PettingZoo</h1>\n<br><h1 id='87' style='font-size:14px'>MPE\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001SISL</h1>\n<figure id='88'><img alt=\"\" data-coord=\"top-left:(61,582); bottom-right:(2940,1629)\" /></figure>\n<br><h1 id='89' style='font-size:18px'>MARL</h1>\n<br><h1 id='90' style='font-size:14px'>QMIX\u0001(JMLR\u00012020)</h1>\n<figure id='91'><img alt=\"\" data-coord=\"top-left:(176,393); bottom-right:(2811,1456)\" /></figure>\n<br><h1 id='92' style='font-size:18px'>MARL</h1>\n<br><h1 id='93' style='font-size:14px'>CTDE(Centralized\u0001Training\u0001Decentralized\u0001Execution)</h1>\n<figure id='94'><img alt=\"\" data-coord=\"top-left:(52,406); bottom-right:(2035,1590)\" /></figure>\n<br><p id='95' data-category='paragraph' style='font-size:18px'>축구:<br>central\u0001하게\u0001훈련\u0001&<br>decentral\u0001하게\u0001행동</p>\n<br><h1 id='96' style='font-size:14px'>MARL</h1>\n<br><h1 id='97' style='font-size:14px'>FlickerFusion:\u0001Intra-trajectory\u0001Domain\u0001Generalizing\u0001Multi-agent<br>Reinforcement\u0001Learning(ICLR\u00012025)</h1>\n<figure id='98'><img alt=\"\" data-coord=\"top-left:(376,504); bottom-right:(2599,1598)\" /></figure>\n<h1 id='99' style='font-size:14px'>Online\u0001RL\u0001&\u0001Offline\u0001RL</h1>\n<h1 id='100' style='font-size:18px'>Online\u0001RL</h1>\n<br><h1 id='101' style='font-size:14px'>초기\u0001강화학습은\u0001대부분\u0001OpenAI\u0001Gym이나\u0001게임\u0001환경,\u0001시뮬레이터에서\u0001연구되었다.</h1>\n<p id='102' data-category='paragraph' style='font-size:14px'>DQN(DeepMind\u00012013)\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001AlphaGo(DeepMind\u00012017)</p>\n<figure id='103'><img alt=\"\" data-coord=\"top-left:(226,685); bottom-right:(1056,1632)\" /></figure>\n<br><figure id='104'><img alt=\"\" data-coord=\"top-left:(1517,696); bottom-right:(2428,1614)\" /></figure>\n<h1 id='105' style='font-size:20px'>Online\u0001RL</h1>\n<br><h1 id='106' style='font-size:14px'>초기\u0001강화학습은\u0001대부분\u0001OpenAI\u0001Gym이나\u0001게임\u0001환경,\u0001시뮬레이터에서\u0001연구되었다.</h1>\n<h1 id='107' style='font-size:14px'>AlphaGo(DeepMind\u00012017)</h1>\n<figure id='108'><img alt=\"\" data-coord=\"top-left:(245,671); bottom-right:(1157,1583)\" /></figure>\n<br><h1 id='109' style='font-size:16px'>시뮬레이터\u0001or\u0001게임이라\u0001환경에\u0001직접\u0001접근\u0001가능<br>=\u0001데이터를\u0001계속\u0001실시간으로\u0001수집\u0001가능<br>\u0001=\u0001이걸로\u0001바로바로\u0001학습\u0001시킬\u0001수\u0001있다!</h1>\n<h1 id='110' style='font-size:18px'>Online\u0001RL\u0001&\u0001Offline\u0001RL</h1>\n<br><h1 id='111' style='font-size:14px'>하지만\u0001현실\u0001세계는\u0001이게\u0001불가능한\u0001케이스가\u0001존재한다.</h1>\n<h1 id='112' style='font-size:14px'>자율주행<br>(사고\u0001내면서\u0001학습하면\u0001안\u0001됨)</h1>\n<figure id='113'><img alt=\"\" data-coord=\"top-left:(195,828); bottom-right:(1235,1523)\" /></figure>\n<br><h1 id='114' style='font-size:14px'>수술로봇\u0001제어<br>(사고\u0001내면서\u0001학습하면\u0001안\u0001됨)</h1>\n<figure id='115'><img alt=\"\" data-coord=\"top-left:(1753,838); bottom-right:(2369,1516)\" /></figure>\n<h1 id='116' style='font-size:18px'>\u0001Offline\u0001RL</h1>\n<br><h1 id='117' style='font-size:14px'>이\u0001때문에\u0001등장하게\u0001된\u0001것이\u0001Offline\u0001RL이다.<br>이미\u0001수집된\u0001데이터셋을\u0001이용하여\u0001학습한다.</h1>\n<figure id='118'><img alt=\"\" data-coord=\"top-left:(169,596); bottom-right:(2862,1552)\" /></figure>\n<br><h1 id='119' style='font-size:18px'>\u0001Offline\u0001RL<br>CQL(NeurIPS\u00012020)</h1>\n<figure id='120'><img alt=\"\" data-coord=\"top-left:(210,556); bottom-right:(2780,1318)\" /></figure>\n<footer id='121' style='font-size:14px'>https://ropiens.tistory.com/144</footer>\n<h1 id='122' style='font-size:14px'>IRL</h1>\n<h1 id='123' style='font-size:18px'>IRL</h1>\n<br><h1 id='124' style='font-size:14px'>일반적인\u0001RL은\u0001보상\u0001함수가\u0001주어지면\u0001그걸\u0001기반으로\u0001좋은\u0001정책을\u0001학습한다.<br>Environment\u0001+\u0001Reward\u0001function</h1>\n<figure id='125'><img alt=\"\" data-coord=\"top-left:(233,593); bottom-right:(2604,1469)\" /></figure>\n<h1 id='126' style='font-size:18px'>IRL</h1>\n<br><h1 id='127' style='font-size:14px'>하지만\u0001모든\u0001케이스에서\u0001Reward\u0001function을\u0001구할\u0001수\u0001있는\u0001것은\u0001아니다.<br>사실\u0001현실에\u0001있는\u0001대부분의\u0001케이스에서\u0001설계하기\u0001어렵다.</h1>\n<figure id='128'><img alt=\"\" data-coord=\"top-left:(165,566); bottom-right:(1616,1523)\" /></figure>\n<br><h1 id='129' style='font-size:14px'>EX:\u0001\u0001운전자의\u0001의도를\u0001파악해\u0001움직이는<br>\u0001\u0001\u0001\u0001\u0001\u0001\u0001차량\u0001Agent\u0001설계하기.</h1>\n<h1 id='130' style='font-size:20px'>IRL</h1>\n<br><h1 id='131' style='font-size:16px'>때문에\u0001등장한\u0001것이\u0001IRL(Inverse\u0001RL)이다.<br>전문가의\u0001policy를\u0001보고,\u0001그\u0001policy를\u0001토대로\u0001reward\u0001function을\u0001추정하는것이다.</h1>\n<figure id='132'><img alt=\"\" data-coord=\"top-left:(73,636); bottom-right:(2950,1529)\" /></figure>\n<p id='133' data-category='paragraph' style='font-size:14px'>https://velog.io/@corone_hi/%EC%97%AD%EA%B0%95%ED%99%94%ED%95%99%EC%8A%B5-Inverse-Reinforcement-Learning-IRL</p>\n<h1 id='134' style='font-size:20px'>IRL</h1>\n<br><h1 id='135' style='font-size:16px'>때문에\u0001등장한\u0001것이\u0001IRL(Inverse\u0001RL)이다.</h1>\n<figure id='136'><img alt=\"\" data-coord=\"top-left:(74,429); bottom-right:(2961,1385)\" /></figure>\n<footer id='137' style='font-size:14px'>https://velog.io/@corone_hi/%EC%97%AD%EA%B0%95%ED%99%94%ED%95%99%EC%8A%B5-Inverse-Reinforcement-Learning-IRL</footer>\n<h1 id='138' style='font-size:20px'>IRL</h1>\n<br><h1 id='139' style='font-size:16px'>Visual\u0001IRL\u0001for\u0001Human-Like\u0001Robotic\u0001Manipulation\u0001(2024)</h1>\n<br><p id='140' data-category='paragraph' style='font-size:16px'>사람이\u0001작업을\u0001수행하는\u0001장면을\u0001관찰\u0001→\u0001그로부터\u0001보상\u0001함수\u0001학습</p>\n<br><p id='141' data-category='list' style='font-size:16px'>→\u0001로봇이\u0001그\u0001보상에\u0001따라\u0001작업을\u0001수행하도록\u0001policy\u0001학습<br>→\u0001로봇\u0001관절로\u0001변환하여\u0001실제로\u0001작업을\u0001수행.</p>\n<figure id='142'><img alt=\"\" data-coord=\"top-left:(99,796); bottom-right:(2920,1533)\" /></figure>\n<footer id='143' style='font-size:14px'>https://arxiv.org/abs/2412.11360</footer>\n<h1 id='144' style='font-size:14px'>감사합니다!</h1>",
    "1iF35ACxk_eQUWOOCABLYpcJYrsszj6w-": "from fastmcp import FastMCP\n\nimport asyncio\n\nimport json\n\nfrom typing import Optional, List, Dict, Any\n\nmcp = FastMCP(\"YBIGTA Members API\")\n\n# 멤버 데이터 (원본과 동일)\n\nmembers = [\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"강정묵\",\n\n\"학번\": \"22\",\n\n\"주전공/복수전공\": \"응용통계학\",\n\n\"휴대폰 번호\": \"01026950085\",\n\n\"이메일 주소\": \"nickjmk@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"김이지\",\n\n\"학번\": \"20\",\n\n\"주전공/복수전공\": \"컴퓨터과학과\",\n\n\"휴대폰 번호\": \"01090498258\",\n\n\"이메일 주소\": \"yiji_kim@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"김정인\",\n\n\"학번\": \"24\",\n\n\"주전공/복수전공\": \"컴퓨터과학과\",\n\n\"휴대폰 번호\": \"01022134083\",\n\n\"이메일 주소\": \"jungin0210@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"김현운\",\n\n\"학번\": \"23\",\n\n\"주전공/복수전공\": \"응용통계\",\n\n\"휴대폰 번호\": \"01073800910\",\n\n\"이메일 주소\": \"kimhyenwoon@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"김형진\",\n\n\"학번\": \"20\",\n\n\"주전공/복수전공\": \"응용통계학\",\n\n\"휴대폰 번호\": \"01039531704\",\n\n\"이메일 주소\": \"gudwls5789@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"박하늘\",\n\n\"학번\": \"20\",\n\n\"주전공/복수전공\": \"산업공학과\",\n\n\"휴대폰 번호\": \"01046362027\",\n\n\"이메일 주소\": \"0haneu1@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"성우제\",\n\n\"학번\": \"19\",\n\n\"주전공/복수전공\": \"산업공학과\",\n\n\"휴대폰 번호\": \"01025213982\",\n\n\"이메일 주소\": \"wjpandadavid@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"손재훈\",\n\n\"학번\": \"21\",\n\n\"주전공/복수전공\": \"응용통계학과\",\n\n\"휴대폰 번호\": \"01046347512\",\n\n\"이메일 주소\": \"2021122006@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"송휘린\",\n\n\"학번\": \"23\",\n\n\"주전공/복수전공\": \"응용통계학과\",\n\n\"휴대폰 번호\": \"01041628693\",\n\n\"이메일 주소\": \"hwisle1212@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"엄윤희\",\n\n\"학번\": \"22\",\n\n\"주전공/복수전공\": \"컴퓨터과학과\",\n\n\"휴대폰 번호\": \"01072556685\",\n\n\"이메일 주소\": \"uyh0331@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"윤희찬\",\n\n\"학번\": \"20\",\n\n\"주전공/복수전공\": \"응용통계학과\",\n\n\"휴대폰 번호\": \"01091350295\",\n\n\"이메일 주소\": \"jason0295@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"이경민\",\n\n\"학번\": \"23\",\n\n\"주전공/복수전공\": \"인공지능학과\",\n\n\"휴대폰 번호\": \"01099027505\",\n\n\"이메일 주소\": \"spacenasa30@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"이서현\",\n\n\"학번\": \"23\",\n\n\"주전공/복수전공\": \"컴퓨터과학과\",\n\n\"휴대폰 번호\": \"01087362748\",\n\n\"이메일 주소\": \"ttony0709@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"이재영\",\n\n\"학번\": \"21\",\n\n\"주전공/복수전공\": \"응용통계학과\",\n\n\"휴대폰 번호\": \"01041638140\",\n\n\"이메일 주소\": \"jaeyoung02@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"이재우\",\n\n\"학번\": \"20\",\n\n\"주전공/복수전공\": \"언론홍보영상학부\",\n\n\"휴대폰 번호\": \"01054202534\",\n\n\"이메일 주소\": \"oizhq2062@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"이준찬\",\n\n\"학번\": \"19\",\n\n\"주전공/복수전공\": \"산업공학\",\n\n\"휴대폰 번호\": \"01062854638\",\n\n\"이메일 주소\": \"stars3621@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"임재민\",\n\n\"학번\": \"19\",\n\n\"주전공/복수전공\": \"경영학과\",\n\n\"휴대폰 번호\": \"01030487260\",\n\n\"이메일 주소\": \"woals7260@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"정민지\",\n\n\"학번\": \"23\",\n\n\"주전공/복수전공\": \"인공지능학과\",\n\n\"휴대폰 번호\": \"01027159044\",\n\n\"이메일 주소\": \"mjjung23@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"조석희\",\n\n\"학번\": \"20\",\n\n\"주전공/복수전공\": \"문헌정보학과/산업공학과\",\n\n\"휴대폰 번호\": \"01086260326\",\n\n\"이메일 주소\": \"lupin0326@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"조요셉\",\n\n\"학번\": \"21\",\n\n\"주전공/복수전공\": \"응용통계학과\",\n\n\"휴대폰 번호\": \"01073802021\",\n\n\"이메일 주소\": \"joseph44@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"26기\",\n\n\"이름\": \"조태연\",\n\n\"학번\": \"20\",\n\n\"주전공/복수전공\": \"응용통계학과\",\n\n\"휴대폰 번호\": \"01025316953\",\n\n\"이메일 주소\": \"ajm0924@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"강성우\",\n\n\"학번\": \"24\",\n\n\"주전공/복수전공\": \"응용통계\",\n\n\"휴대폰 번호\": \"01030620665\",\n\n\"이메일 주소\": \"r191d1ty.w00@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"강예서\",\n\n\"학번\": \"23\",\n\n\"주전공/복수전공\": \"경영\",\n\n\"휴대폰 번호\": \"01022468390\",\n\n\"이메일 주소\": \"yeseo@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"구남혁\",\n\n\"학번\": \"22\",\n\n\"주전공/복수전공\": \"응용통계학과\",\n\n\"휴대폰 번호\": \"01054965483\",\n\n\"이메일 주소\": \"knh0815nick@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"김서정\",\n\n\"학번\": \"23\",\n\n\"주전공/복수전공\": \"인공지능학과\",\n\n\"휴대폰 번호\": \"01055927306\",\n\n\"이메일 주소\": \"elley0120@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"김우진\",\n\n\"학번\": \"24\",\n\n\"주전공/복수전공\": \"인공지능\",\n\n\"휴대폰 번호\": \"01049953690\",\n\n\"이메일 주소\": \"smilebear0830@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"김지학\",\n\n\"학번\": \"01(대학원 학번 24)\",\n\n\"주전공/복수전공\": \"언어정보학협동과정 한국어교육정보학\",\n\n\"휴대폰 번호\": \"01028577121\",\n\n\"이메일 주소\": \"jihakbabu@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"김현수\",\n\n\"학번\": \"23\",\n\n\"주전공/복수전공\": \"응용통계학과\",\n\n\"휴대폰 번호\": \"01066413478\",\n\n\"이메일 주소\": \"hshs6641@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"노유빈\",\n\n\"학번\": \"22\",\n\n\"주전공/복수전공\": \"전기전자공학부\",\n\n\"휴대폰 번호\": \"01072510429\",\n\n\"이메일 주소\": \"nohyoobin@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"목동현\",\n\n\"학번\": \"21\",\n\n\"주전공/복수전공\": \"컴퓨터과학과\",\n\n\"휴대폰 번호\": \"01038994647\",\n\n\"이메일 주소\": \"2021147591@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"문영운\",\n\n\"학번\": \"20\",\n\n\"주전공/복수전공\": \"문헌정보학과/경제학과\",\n\n\"휴대폰 번호\": \"01086620734\",\n\n\"이메일 주소\": \"mn3271@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"민세희\",\n\n\"학번\": \"22\",\n\n\"주전공/복수전공\": \"인공지능학과\",\n\n\"휴대폰 번호\": \"01024781334\",\n\n\"이메일 주소\": \"minsehee@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"박용우\",\n\n\"학번\": \"21\",\n\n\"주전공/복수전공\": \"산업공학과\",\n\n\"휴대폰 번호\": \"01025353169\",\n\n\"이메일 주소\": \"yongwoo38@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"박준서\",\n\n\"학번\": \"22\",\n\n\"주전공/복수전공\": \"정치외교학과/응용통계학과\",\n\n\"휴대폰 번호\": \"01091455094\",\n\n\"이메일 주소\": \"junseo5094@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"박채연\",\n\n\"학번\": \"22\",\n\n\"주전공/복수전공\": \"언더우드학부 경제학과 / 응용통계학과\",\n\n\"휴대폰 번호\": \"01051229570\",\n\n\"이메일 주소\": \"scipsclara@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"안시연\",\n\n\"학번\": \"23\",\n\n\"주전공/복수전공\": \"건축공학과/산업공학과\",\n\n\"휴대폰 번호\": \"01030354147\",\n\n\"이메일 주소\": \"anseeyeon@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"어예지\",\n\n\"학번\": \"21\",\n\n\"주전공/복수전공\": \"응용통계학과\",\n\n\"휴대폰 번호\": \"01084351376\",\n\n\"이메일 주소\": \"yezzi320@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"엄준서\",\n\n\"학번\": \"20\",\n\n\"주전공/복수전공\": \"산업공학\",\n\n\"휴대폰 번호\": \"01027994465\",\n\n\"이메일 주소\": \"jseom818@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"이재열\",\n\n\"학번\": \"24\",\n\n\"주전공/복수전공\": \"컴퓨터과학과\",\n\n\"휴대폰 번호\": \"01092387273\",\n\n\"이메일 주소\": \"yonseiconu@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"이주원\",\n\n\"학번\": \"20\",\n\n\"주전공/복수전공\": \"응용통계학과\",\n\n\"휴대폰 번호\": \"01026027426\",\n\n\"이메일 주소\": \"leeju1_424@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"이지민\",\n\n\"학번\": \"21\",\n\n\"주전공/복수전공\": \"응용통계학과/컴퓨터과학과\",\n\n\"휴대폰 번호\": \"01064157799\",\n\n\"이메일 주소\": \"jimiracle@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"이지용\",\n\n\"학번\": \"21\",\n\n\"주전공/복수전공\": \"응용통계학과\",\n\n\"휴대폰 번호\": \"01026815122\",\n\n\"이메일 주소\": \"jiyong18@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"이하람\",\n\n\"학번\": \"24\",\n\n\"주전공/복수전공\": \"컴퓨터과학\",\n\n\"휴대폰 번호\": \"01092738240\",\n\n\"이메일 주소\": \"rammma@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"정다은\",\n\n\"학번\": \"25\",\n\n\"주전공/복수전공\": \"문헌정보학과\",\n\n\"휴대폰 번호\": \"01098763967\",\n\n\"이메일 주소\": \"da3967@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"정지윤\",\n\n\"학번\": \"22\",\n\n\"주전공/복수전공\": \"컴퓨터과학과\",\n\n\"휴대폰 번호\": \"01051551851\",\n\n\"이메일 주소\": \"rhjiyoon@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"정진욱\",\n\n\"학번\": \"18\",\n\n\"주전공/복수전공\": \"사회환경시스템공학/기계공학\",\n\n\"휴대폰 번호\": \"01036982736\",\n\n\"이메일 주소\": \"mech991011@gmail.com\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"조재관\",\n\n\"학번\": \"21\",\n\n\"주전공/복수전공\": \"컴퓨터과학과\",\n\n\"휴대폰 번호\": \"01047473123\",\n\n\"이메일 주소\": \"jjgs1235@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"최원준\",\n\n\"학번\": \"20\",\n\n\"주전공/복수전공\": \"산업공학과\",\n\n\"휴대폰 번호\": \"01092872466\",\n\n\"이메일 주소\": \"danny0112@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"한원석\",\n\n\"학번\": \"21\",\n\n\"주전공/복수전공\": \"산업공학과\",\n\n\"휴대폰 번호\": \"01077535655\",\n\n\"이메일 주소\": \"hwonsuk@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"27기\",\n\n\"이름\": \"한지수\",\n\n\"학번\": \"23\",\n\n\"주전공/복수전공\": \"인공지능학과\",\n\n\"휴대폰 번호\": \"01047246554\",\n\n\"이메일 주소\": \"hanjisu1002@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"24기\",\n\n\"이름\": \"김채현\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01051023279\",\n\n\"이메일 주소\": \"kimchaehyun0315@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"25기\",\n\n\"이름\": \"방준현\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01039822144\",\n\n\"이메일 주소\": \"bangjunhyun2001@gmail.com\"\n\n},\n\n{\n\n\"기수\": \"25기\",\n\n\"이름\": \"정다연\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01027003705\",\n\n\"이메일 주소\": \"ziah20014@yonsei.ac.ke\"\n\n},\n\n{\n\n\"기수\": \"25기\",\n\n\"이름\": \"임도근\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01044243510\",\n\n\"이메일 주소\": \"lgsc0409kr@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"25기\",\n\n\"이름\": \"김준호\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01051428570\",\n\n\"이메일 주소\": \"cikciki98@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"25기\",\n\n\"이름\": \"정재빈\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01096356169\",\n\n\"이메일 주소\": \"jaebincheong@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"25기\",\n\n\"이름\": \"백준호\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01047062519\",\n\n\"이메일 주소\": \"junho6610@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"25기\",\n\n\"이름\": \"최서영\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01024703247\",\n\n\"이메일 주소\": \"choi613504@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"25기\",\n\n\"이름\": \"김예찬\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01032656682\",\n\n\"이메일 주소\": \"blueflaver@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"25기\",\n\n\"이름\": \"김성환\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01086529296\",\n\n\"이메일 주소\": \"happysnail06@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"24기\",\n\n\"이름\": \"박정양\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01071736256\",\n\n\"이메일 주소\": \"wjddid000624@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"25기\",\n\n\"이름\": \"박준형\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01062407884\",\n\n\"이메일 주소\": \"gitpdeathwa@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"25기\",\n\n\"이름\": \"최수현\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01091854208\",\n\n\"이메일 주소\": \"gydbs0925@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"25기\",\n\n\"이름\": \"문찬우\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01096695418\",\n\n\"이메일 주소\": \"2020143514@yonsei.ac.kr\"\n\n},\n\n{\n\n\"기수\": \"24기\",\n\n\"이름\": \"이승준\",\n\n\"학번\": \"\",\n\n\"주전공/복수전공\": \"\",\n\n\"휴대폰 번호\": \"01092969943\",\n\n\"이메일 주소\": \"happyjunlee@gmail.com\"\n\n}\n\n]\n\ndef filter_sensitive_info(member: Dict[str, Any], include_contact: bool = False) -> Dict[str, Any]:\n\n\"\"\"민감한 개인정보 필터링\"\"\"\n\nfiltered = {\n\n\"기수\": member[\"기수\"],\n\n\"이름\": member[\"이름\"],\n\n\"학번\": member[\"학번\"],\n\n\"주전공/복수전공\": member[\"주전공/복수전공\"]\n\n}\n\nif include_contact:\n\nfiltered[\"휴대폰 번호\"] = member[\"휴대폰 번호\"]\n\nfiltered[\"이메일 주소\"] = member[\"이메일 주소\"]\n\nreturn filtered\n\n# Gemini 호환을 위해 모든 Optional을 제거하고 기본값 사용\n\n@mcp.tool()\n\nasync def search_members(\n\nname: str = \"\",\n\ngeneration: str = \"\",\n\nmajor: str = \"\",\n\ninclude_contact: bool = False,\n\nlimit: int = 10\n\n) -> str:\n\n\"\"\"YBIGTA 멤버를 검색합니다. 이름, 기수, 전공으로 검색 가능합니다.\"\"\"\n\nfiltered_members = members.copy()\n\n# 이름 필터링\n\nif name:\n\nfiltered_members = [\n\nm for m in filtered_members\n\nif name.lower() in m[\"이름\"].lower()\n\n]\n\n# 기수 필터링\n\nif generation:\n\nfiltered_members = [\n\nm for m in filtered_members\n\nif m[\"기수\"] == generation\n\n]\n\n# 전공 필터링\n\nif major:\n\nfiltered_members = [\n\nm for m in filtered_members\n\nif major.lower() in m[\"주전공/복수전공\"].lower()\n\n]\n\n# 결과 제한\n\nlimited_results = filtered_members[:limit]\n\n# 민감한 정보 필터링\n\nsafe_results = [\n\nfilter_sensitive_info(member, include_contact)\n\nfor member in limited_results\n\n]\n\nresult = {\n\n\"results\": safe_results,\n\n\"total_found\": len(filtered_members),\n\n\"returned_count\": len(safe_results),\n\n\"search_criteria\": {\n\n\"name\": name,\n\n\"generation\": generation,\n\n\"major\": major,\n\n\"include_contact\": include_contact\n\n}\n\n}\n\nreturn json.dumps(result, ensure_ascii=False, indent=2)\n\n@mcp.tool()\n\nasync def get_generation_stats() -> str:\n\n\"\"\"기수별 통계를 반환합니다.\"\"\"\n\ngeneration_counts = {}\n\nmajor_counts = {}\n\nfor member in members:\n\n# 기수별 카운트\n\ngen = member[\"기수\"]\n\ngeneration_counts[gen] = generation_counts.get(gen, 0) + 1\n\n# 전공별 카운트 (주전공만)\n\nmajor = member[\"주전공/복수전공\"].split(\"/\")[0].split(\"과\")[0].strip()\n\nif major:\n\nmajor_counts[major] = major_counts.get(major, 0) + 1\n\nresult = {\n\n\"total_members\": len(members),\n\n\"generation_distribution\": generation_counts,\n\n\"major_distribution\": major_counts,\n\n\"available_generations\": list(generation_counts.keys()),\n\n\"most_common_majors\": sorted(\n\nmajor_counts.items(),\n\nkey=lambda x: x[1],\n\nreverse=True\n\n)[:5]\n\n}\n\nreturn json.dumps(result, ensure_ascii=False, indent=2)\n\n@mcp.tool()\n\nasync def find_member_by_email(email_domain: str = \"yonsei.ac.kr\") -> str:\n\n\"\"\"이메일 도메인으로 멤버를 찾습니다.\"\"\"\n\nmatching_members = [\n\nfilter_sensitive_info(member, include_contact=False)\n\nfor member in members\n\nif email_domain.lower() in member[\"이메일 주소\"].lower()\n\n]\n\nresult = {\n\n\"domain\": email_domain,\n\n\"matching_members\": matching_members,\n\n\"count\": len(matching_members)\n\n}\n\nreturn json.dumps(result, ensure_ascii=False, indent=2)\n\n# 간단한 도구 추가 - 멤버 수 세기\n\n@mcp.tool()\n\nasync def count_members_by_generation(generation: str) -> str:\n\n\"\"\"특정 기수의 멤버 수를 반환합니다.\"\"\"\n\ncount = sum(1 for member in members if member[\"기수\"] == generation)\n\nreturn json.dumps({\n\n\"generation\": generation,\n\n\"count\": count\n\n}, ensure_ascii=False)\n\n# 간단한 도구 추가 - 전공 목록\n\n@mcp.tool()\n\nasync def list_all_majors() -> str:\n\n\"\"\"모든 전공 목록을 반환합니다.\"\"\"\n\nmajors = set()\n\nfor member in members:\n\nmajor_info = member[\"주전공/복수전공\"]\n\nfor major in major_info.split(\"/\"):\n\nclean_major = major.strip()\n\nif clean_major:\n\nmajors.add(clean_major)\n\nreturn json.dumps({\n\n\"majors\": sorted(list(majors)),\n\n\"count\": len(majors)\n\n}, ensure_ascii=False)\n\n# 리소스로 기수 목록 제공\n\n@mcp.resource(\"ybigta://generations\")\n\nasync def get_available_generations() -> str:\n\n\"\"\"사용 가능한 기수 목록을 반환합니다.\"\"\"\n\ngenerations = sorted(list(set(member[\"기수\"] for member in members)))\n\nreturn json.dumps({\n\n\"available_generations\": generations,\n\n\"description\": \"YBIGTA에서 활동 중인 기수들\"\n\n}, ensure_ascii=False, indent=2)\n\n# 리소스로 전공 목록 제공\n\n@mcp.resource(\"ybigta://majors\")\n\nasync def get_available_majors() -> str:\n\n\"\"\"사용 가능한 전공 목록을 반환합니다.\"\"\"\n\nmajors = set()\n\nfor member in members:\n\n# 주전공과 복수전공 분리\n\nmajor_info = member[\"주전공/복수전공\"]\n\nfor major in major_info.split(\"/\"):\n\nclean_major = major.strip().replace(\"과\", \"\").replace(\"학부\", \"\").replace(\"학과\", \"\")\n\nif clean_major:\n\nmajors.add(clean_major)\n\nreturn json.dumps({\n\n\"available_majors\": sorted(list(majors)),\n\n\"description\": \"YBIGTA 멤버들의 전공 분야\"\n\n}, ensure_ascii=False, indent=2)\n\n# 동적 리소스로 개별 멤버 정보 제공\n\n@mcp.resource(\"ybigta://member/{member_name}\")\n\nasync def get_member_info(member_name: str) -> str:\n\n\"\"\"특정 멤버의 정보를 반환합니다.\"\"\"\n\nmatching_members = [\n\nm for m in members\n\nif member_name.lower() in m[\"이름\"].lower()\n\n]\n\nif not matching_members:\n\nreturn json.dumps({\n\n\"error\": f\"'{member_name}' 이름을 가진 멤버를 찾을 수 없습니다.\",\n\n\"suggestion\": \"정확한 이름을 입력하거나 search_members 도구를 사용해보세요.\"\n\n}, ensure_ascii=False, indent=2)\n\n# 민감한 정보 제거\n\nsafe_members = [\n\nfilter_sensitive_info(member, include_contact=False)\n\nfor member in matching_members\n\n]\n\nreturn json.dumps({\n\n\"query\": member_name,\n\n\"members\": safe_members,\n\n\"count\": len(safe_members)\n\n}, ensure_ascii=False, indent=2)\n\nif __name__ == \"__main__\":\n\n# SSE transport로 실행 (원격 접근 가능)\n\nmcp.run(transport=\"sse\", host=\"0.0.0.0\", port=8080, path=\"/sse\", log_level=\"debug\")",
    "16nVmdcdxtb1Nww6dC6izQcIR9nGAzA6I": "<header id='0' style='font-size:14px'>2025-2\u0001YBIGTA</header>\n<h1 id='1' style='font-size:20px'>n8n</h1>\n<footer id='2' style='font-size:16px'>YBIGTA\u0001윤희찬</footer>\n<p id='3' data-category='paragraph' style='font-size:18px'>_Contents</p>\n<p id='4' data-category='list' style='font-size:14px'>1. MCP</p>\n<p id='5' data-category='list' style='font-size:16px'>2. n8n</p>\n<br><h1 id='6' style='font-size:20px'>00</h1>\n<br><p id='7' data-category='list' style='font-size:16px'>3. 시연\u0001타임</p>\n<p id='8' data-category='paragraph' style='font-size:16px'>4. Conclusion</p>\n<br><figure id='9'><img alt=\"\" data-coord=\"top-left:(0,1267); bottom-right:(366,1656)\" /></figure>\n<br><figure id='10'><img style='font-size:18px' alt=\"01\" data-coord=\"top-left:(2345,0); bottom-right:(2897,543)\" /></figure>\n<figure id='11'><img alt=\"\" data-coord=\"top-left:(0,1266); bottom-right:(368,1656)\" /></figure>\n<br><h1 id='12' style='font-size:14px'>MCP</h1>\n<h1 id='13' style='font-size:20px'>MCP</h1>\n<p id='14' data-category='paragraph' style='font-size:18px'>mcp란<br>무엇인가?</p>\n<br><header id='15' style='font-size:14px'>Intro</header>\n<figure id='16'><img alt=\"\" data-coord=\"top-left:(153,527); bottom-right:(1158,1415)\" /></figure>\n<br><h1 id='17' style='font-size:16px'><br>(Model<br>Context<br>Protocol)<br>→<br>대형<br>언어<br>모델(LLM)과<br>외부<br>데이터<br>소스,<br>다양<br>한<br>도구를<br>안전하고<br>표준화된<br>방식으로<br>연결해주는<br>개방형<br>프로토콜</h1>\n<h1 id='18' style='font-size:16px'>한마디로<br>:<br>AI(LLM)에<br>도구를<br>달아주는<br>표준화된<br>방법</h1>\n<h1 id='19' style='font-size:16px'>MCP의<br>주요구성<br>요소</h1>\n<br><h1 id='20' style='font-size:16px'>MCP<br>호스트<br>/<br>MCP<br>클라이언트<br>/<br>MCP<br>서버</h1>\n<p id='21' data-category='paragraph' style='font-size:16px'>MCP의<br>작동<br>방식</p>\n<br><p id='22' data-category='list' style='font-size:16px'>사용자가<br>AI(호스트)에<br>질문<br>입력<br>MCP<br>클라이언트가<br>이를<br>MCP<br>서버에<br>요청<br>MCP<br>서버가<br>결과를<br>반환,<br>LLM이<br>해당<br>결과를<br>바탕으로<br>응답<br>생성</p>\n<header id='23' style='font-size:14px'>Intro</header>\n<br><h1 id='24' style='font-size:20px'>MCP를<br>만드는<br>법</h1>\n<h1 id='25' style='font-size:18px'>MCP<br>서버를<br>만드는<br>법<br>in<br>PYTHON<br>(FastMCP)</h1>\n<br><h1 id='26' style='font-size:16px'>무엇을<br>구현해야<br>하는가?</h1>\n<br><p id='27' data-category='list' style='font-size:16px'>Tool<br>등록<br>(데코레이터<br>-<br>mcp.tool)<br>통신<br>방식<br>(transport)<br>필요한<br>경우<br>:<br>log_level<br>/<br>path<br>등<br>지정<br>가능</p>\n<h1 id='28' style='font-size:16px'>@mcp.tool</h1>\n<br><p id='29' data-category='list' style='font-size:16px'>→<br>각<br>tool을<br>외부에서<br>호출<br>가능한<br>엔드포인트화<br>→<br>LLM에게<br>함수<br>파라미터<br>등의<br>스키마<br>자동<br>제공</p>\n<h1 id='30' style='font-size:16px'>Transport<br>정의</h1>\n<br><p id='31' data-category='list' style='font-size:16px'>주요<br>방식<br>:<br>STDIO<br>/<br>SSE<br>/<br>HTTP<br>FastMCP의<br>경우<br>내부적으로<br>FastAPI<br>등의<br>인스턴<br>스를<br>제공하므로<br>HTTP<br>서버로<br>호스팅<br>가능<br></p>\n<header id='32' style='font-size:14px'>Intro</header>\n<br><h1 id='33' style='font-size:20px'>MCP를<br>만드는<br>법</h1>\n<h1 id='34' style='font-size:18px'>조금<br>더<br>low<br>level로<br>한<br>번<br>살펴보자</h1>\n<br><h1 id='35' style='font-size:16px'>Tool을<br>등록하여<br>제공한다는게<br>무엇인가?<br>LLM은<br>어떻게<br>도구를<br>인식하는가?</h1>\n<p id='36' data-category='list' style='font-size:16px'>1. <br>초기화<br>시<br>Tool<br>목록<br>요청<br>(list_tools<br>호출)<br>2. <br>LLM은<br>받은<br>Tool<br>목록과<br>이에<br>대한<br>설명을<br>바탕<br>으로<br>도구를<br>인식<br>3. <br>필요한<br>경우<br>LLM<br>도구<br>호출</p>\n<p id='37' data-category='paragraph' style='font-size:16px'>←<br>Tool<br>정보를<br>어떻게<br>주는지<br>Low<br>level<br>로<br>구현<br>(@mcp.tool의<br>경우<br>왼쪽과<br>같은<br>스키마<br>자동<br>생성)</p>\n<h1 id='38' style='font-size:20px'>MCP를<br>만드는<br>법</h1>\n<br><header id='39' style='font-size:14px'>Intro</header>\n<h1 id='40' style='font-size:18px'>조금<br>더<br>low<br>level로<br>한<br>번<br>살펴보자</h1>\n<br><h1 id='41' style='font-size:16px'>MCP<br>서버는<br>도구<br>호출을<br>어떻게<br>처리하는가?</h1>\n<br><h1 id='42' style='font-size:16px'>1. LLM이<br>도구를<br>사용하려<br>할<br>경우<br>이름과<br>파라미터<br>를<br>JSON<br>형태로<br>MCP<br>서버에<br>전달<br>2. MCP<br>서버는<br>call_tool()<br>핸들러로<br>JSON<br>을<br>파싱<br>3. 적절한<br>서버<br>내의<br>도구<br>로직<br>실행<br>후<br>결과<br>반환</h1>\n<h1 id='43' style='font-size:16px'>MCP의<br>표준화된<br>엔드포인트</h1>\n<br><p id='44' data-category='paragraph' style='font-size:18px'>02</p>\n<h1 id='45' style='font-size:14px'>n8n</h1>\n<figure id='46'><img alt=\"\" data-coord=\"top-left:(0,1265); bottom-right:(368,1657)\" /></figure>\n<h1 id='47' style='font-size:20px'>n8n이란<br>무엇인가</h1>\n<h1 id='48' style='font-size:18px'>나도<br>Agent<br>써서<br>업무자동화<br>해보고<br>싶은데....</h1>\n<br><h1 id='49' style='font-size:16px'>Details</h1>\n<h1 id='50' style='font-size:14px'>접근성이<br>떨어지는<br>Langchain과<br>Langgraph...</h1>\n<h1 id='51' style='font-size:14px'>심지어<br>Google<br>등등과<br>연동하려다<br>보면<br>늘어나는<br>모듈들과<br>한숨..</h1>\n<h1 id='52' style='font-size:14px'>→<br>워크플로우<br>자동화에<br>최적화된<br>로우<br>코드<br>기반<br>자동화<br>플랫폼</h1>\n<h1 id='53' style='font-size:14px'>오픈<br>소스이므로<br>n8n<br>깃허브에서<br>직접<br>다운받아<br>docker로<br>구동<br>가능</h1>\n<h1 id='54' style='font-size:16px'>https://github.com/n8n-io/n8n</h1>\n<br><figure id='55'><img alt=\"\" data-coord=\"top-left:(1877,131); bottom-right:(2370,764)\" /></figure>\n<br><h1 id='56' style='font-size:14px'>Google<br>연동<br>등<br>다양한<br>기능<br>이용<br>가능</h1>\n<figure id='57'><img alt=\"\" data-coord=\"top-left:(1871,867); bottom-right:(2983,1499)\" /></figure>\n<br><p id='58' data-category='paragraph' style='font-size:14px'>코드<br>없이<br>딸깍<br>하면<br>끝</p>\n<br><figure id='59'><img style='font-size:18px' alt=\"03\" data-coord=\"top-left:(2245,0); bottom-right:(2916,547)\" /></figure>\n<h1 id='60' style='font-size:14px'>시연\u0001타임</h1>\n<figure id='61'><img alt=\"\" data-coord=\"top-left:(0,1265); bottom-right:(368,1656)\" /></figure>\n<br><figure id='62'><img style='font-size:18px' alt=\"03\" data-coord=\"top-left:(2244,0); bottom-right:(2917,546)\" /></figure>\n<figure id='63'><img alt=\"\" data-coord=\"top-left:(0,1265); bottom-right:(368,1656)\" /></figure>\n<br><h1 id='64' style='font-size:14px'>Conclusion</h1>\n<header id='65' style='font-size:14px'>Conclusion</header>\n<br><h1 id='66' style='font-size:20px'>Conclusion</h1>\n<h1 id='67' style='font-size:18px'>대<br>Agent의<br>시대.<br>우리는<br>어떤<br>툴을<br>활용하여<br>Agent를<br>쓸<br>것인가?</h1>\n<h1 id='68' style='font-size:16px'>MCP<br>생태계가<br>구축되면서<br>LLM의<br>확장성이<br>폭발적으로<br>증가<br>→<br>개인도<br>얼마든지<br>본인의<br>필요에<br>따라<br>LLM에게<br>내가<br>원하는<br>도구(MCP)를<br>쥐어줄<br>수<br>있으며<br><br><br><br><br>이를<br>바탕으로<br>업무<br>자동화<br>/<br>서비스<br>제작<br>등이<br>가능한<br>시대</h1>\n<h1 id='69' style='font-size:16px'>로우<br>코드<br>수준의<br>간단한<br>업무<br>자동화를<br>원한다면<br>n8n</h1>\n<h1 id='70' style='font-size:16px'>도구를<br>쥐어준<br>React<br>agent를<br>원한다면<br>Langchain</h1>\n<h1 id='71' style='font-size:16px'>node<br>간의<br>복잡한<br>분기<br>등<br>설계를<br>원하면<br>Langgraph</h1>\n<h1 id='72' style='font-size:14px'>Thank\u0001you!!</h1>",
    "1V3c1lBVnebRCUi1VT1fPkWn4VrsgJZvB": "<figure id='0'><img style='font-size:22px' alt=\"🌊\" data-coord=\"top-left:(143,170); bottom-right:(236,246)\" /></figure>\n<br><h1 id='1' style='font-size:20px'>M Lflow 실습</h1>\n<p id='2' data-category='paragraph' style='font-size:14px'>1. MLflow 설치<br>2. MLflow tracking server 띄워보기<br>3. Example code 살펴보기<br>4. Example code 실행<br>5. MLflow 데이터 저장 방식<br>과제</p>\n<h1 id='3' style='font-size:20px'>1. MLflow 설치</h1>\n<br><p id='4' data-category='paragraph' style='font-size:16px'>Prerequisite</p>\n<br><p id='5' data-category='paragraph' style='font-size:16px'>터미널 사용이 가능한 os</p>\n<br><p id='6' data-category='paragraph' style='font-size:16px'>Ubuntu 20.04 사용</p>\n<br><p id='7' data-category='paragraph' style='font-size:16px'>python 가상 환경</p>\n<br><p id='8' data-category='paragraph' style='font-size:16px'>conda</p>\n<br><p id='9' data-category='paragraph' style='font-size:16px'>mlflow models serve 할 때(서빙할 때) 필요</p>\n<br><p id='10' data-category='paragraph' style='font-size:18px'>3.10.사용</p>\n<br><p id='11' data-category='paragraph' style='font-size:16px'>3.13처럼 너무 높으면 안됨</p>\n<br><h1 id='12' style='font-size:16px'>How to Install</h1>\n<p id='13' data-category='paragraph' style='font-size:16px'># 새로운 디렉토리를 하나 생성한 뒤, 이동해주세요<br>mkdir mlflow-tutorial<br>cd mlflow-tutorial</p>\n<p id='14' data-category='paragraph' style='font-size:16px'># conda 가상환경 세팅<br>conda create -n mlflow-env python=3.10 -y<br>conda activate mlflow-env</p>\n<p id='15' data-category='paragraph' style='font-size:16px'># 필요라이브러리 다운<br>pip install -r https://raw.githubusercontent.com/yechance7/mlops/main/requiremen<br>ts.txt</p>\n<footer id='16' style='font-size:14px'>MLflow 실습</footer>\n<br><footer id='17' style='font-size:14px'>1</footer>\n<p id='18' data-category='paragraph' style='font-size:16px'># python 버전 확인<br>python V</p>\n<p id='19' data-category='paragraph' style='font-size:16px'># mlflow, version 2.22.0<br>mlflow --version</p>\n<h1 id='20' style='font-size:20px'>2. MLflow tracking server 띄워보기</h1>\n<p id='21' data-category='paragraph' style='font-size:16px'>mlflow ui --help<br># mlflow tracking server 를 띄웁니다.<br># UI (dashboard) 의 default url 은 http://localhost:5000 입니다.<br># 5000 포트가 열려있는지 확인해주세요.<br># production 용으로는 mlflow ui 대신 mlflow server 를 사용하라는 안내가 출력됩니다.</p>\n<p id='22' data-category='paragraph' style='font-size:16px'>mlflow server --help<br># mlflow server 는 worker 를 여러 개 띄울 수 있고, prometheus 가 metrics 을 가져갈 수<br>있도록 엔드포인트를 제공하는 등의 추가적인 기능이 존재합니다.</p>\n<p id='23' data-category='paragraph' style='font-size:18px'>둘중에 고르면 됩니다.</p>\n<p id='24' data-category='paragraph' style='font-size:16px'># 여기가 좀 더 가벼움<br>mlflow ui</p>\n<p id='25' data-category='paragraph' style='font-size:16px'># server<br>mlflow server \\</p>\n<br><p id='26' data-category='list' style='font-size:16px'>--backend-store-uri sqlite:///mlflow.db \\<br>--default-artifact-root ./mlruns \\<br>--host 0.0.0.0 \\<br>--port 5000</p>\n<p id='27' data-category='paragraph' style='font-size:16px'>노트북에서 5000 번 포트가 사용중이 아니었다면, 다음과 같이 http://127.0.0.15000 로 접속하면 된<br>다는 안내가 출력됩니다.</p>\n<br><p id='28' data-category='paragraph' style='font-size:16px'>포트 확인 및 삭제법</p>\n<p id='29' data-category='paragraph' style='font-size:16px'>sudo lsof -i 5000</p>\n<p id='30' data-category='paragraph' style='font-size:16px'>sudo kill 9 12345</p>\n<footer id='31' style='font-size:14px'>MLflow 실습</footer>\n<br><footer id='32' style='font-size:14px'>2</footer>\n<p id='33' data-category='paragraph' style='font-size:18px'>일반적인 경우라면 127.0.0.1 과 localhost 는 동일하게 여러분의 컴퓨터 자신을 접속하는<br>주소를 의미합니다.</p>\n<p id='34' data-category='paragraph' style='font-size:18px'>해당 터미널을 켜둔 상태에서, http://localhost:5000 으로 접속합니다.</p>\n<br><p id='35' data-category='paragraph' style='font-size:18px'>터미널이 꺼지면 MLflow tracking server 도 종료됩니다.</p>\n<br><p id='36' data-category='paragraph' style='font-size:18px'>아래와 같은 화면이 나타난다면, 정상적으로 MLflow tracking server 가 생성된 것을 의미합니<br>다.</p>\n<figure id='37'><img alt=\"\" data-coord=\"top-left:(258,693); bottom-right:(1017,1390)\" /></figure>\n<p id='38' data-category='paragraph' style='font-size:18px'>다른 터미널을 열어서, 동일한 디렉토리로 이동하여, mlruns 라는 디렉토리가 생성된 것을 확인합<br>니다.</p>\n<footer id='39' style='font-size:14px'>MLflow 실습</footer>\n<br><footer id='40' style='font-size:14px'>3</footer>\n<p id='41' data-category='paragraph' style='font-size:14px'>mlflow ui 실행 시 --backend-store-uri , --default-artifact-root 옵션을 주지 않은 경우, mlflow ui 를<br>실행한 디렉토리에 mlruns 라는 디렉토리를 생성한 뒤, 이 곳에 실험 관련 데이터를 저장하게<br>됩니다.</p>\n<p id='42' data-category='paragraph' style='font-size:18px'>cd mlflow-tutorial</p>\n<p id='43' data-category='paragraph' style='font-size:18px'>이 디렉토리만 존재한다면, mlflow ui 터미널을 종료한 뒤, 다시 실행시켜도 동일한 화면을 볼 수<br>있게 됩니다.</p>\n<h1 id='44' style='font-size:22px'>3. Example code 살펴보기</h1>\n<br><p id='45' data-category='paragraph' style='font-size:18px'>https://github.com/mlflow/mlflow/tree/master/examples/sklearn_elasticnet_diabetes</p>\n<p id='46' data-category='paragraph' style='font-size:18px'>wget https://raw.githubusercontent.com/yechance7/mlops/main/train.py</p>\n<p id='47' data-category='paragraph' style='font-size:16px'>mlflow 에서 example 로 제공해주는 다양한 example 중 하나인 train.py</p>\n<br><p id='48' data-category='list' style='font-size:18px'>scikit-learn 패키지에서 제공하는 diabetes(당뇨병) 진행도 예측용 데이터로 ElasticNet<br>모델을 학습하여, predict 한 뒤 그 evaluation metric 을 MLflow 에 기록하는 예제</p>\n<br><p id='49' data-category='list' style='font-size:18px'>442 명의 당뇨병 환자를 대상으로, 나이, 성별, bmi 등의 10 개의 독립변수(X) 를 가지고 1<br>년 뒤 당뇨병의 진행률 (y) 를 예측하는 문제</p>\n<br><p id='50' data-category='paragraph' style='font-size:18px'>데이터에 대한 자세한 분석과 ElasticNet 에 대한 자세한 설명은 생략하겠습니다.</p>\n<br><p id='51' data-category='paragraph' style='font-size:18px'>ElasticNet  Linear Regression  L1 Regularization  L2 Regularization</p>\n<br><p id='52' data-category='paragraph' style='font-size:18px'>parameter</p>\n<br><p id='53' data-category='list' style='font-size:18px'>alpha  Regularization coefficient</p>\n<br><p id='54' data-category='list' style='font-size:18px'>l1_ratio  L1 Regularization 과 L2 Regularization 의 비율</p>\n<br><p id='55' data-category='paragraph' style='font-size:20px'>코드를 함께 살펴보겠습니다.</p>\n<br><p id='56' data-category='paragraph' style='font-size:18px'>mlflow 와 연관된 부분에 주목해주세요.</p>\n<p id='57' data-category='list' style='font-size:14px'>mlflow.log_param</p>\n<p id='58' data-category='list' style='font-size:14px'>mlflow.log_metric</p>\n<p id='59' data-category='list' style='font-size:14px'>mlflow.log_model</p>\n<footer id='60' style='font-size:14px'>MLflow 실습</footer>\n<br><p id='61' data-category='paragraph' style='font-size:18px'>ls<br>cd mlruns<br>cat 0/meta.yaml<br># 무언가 채워진 것을 확인할 수 있습니다.</p>\n<footer id='62' style='font-size:14px'>4</footer>\n<header id='63' style='font-size:14px'>mlflow.log_artifact</header>\n<h1 id='64' style='font-size:20px'>4. Example code 실행</h1>\n<p id='65' data-category='paragraph' style='font-size:16px'># mlflow ui 를 수행한 디렉토리와 같은 디렉토리로 이동<br>cd mlflow-tutorial</p>\n<p id='66' data-category='paragraph' style='font-size:16px'># vmware등 가상환경이라면 git 관련 설정 무시<br>export GIT_PYTHON_REFRESH=quiet</p>\n<p id='67' data-category='paragraph' style='font-size:16px'># example 코드를 실행 후 mlflow 에 기록되는 것 확인<br>python train.py</p>\n<p id='68' data-category='paragraph' style='font-size:16px'>model 관련 meta 정보와 더불어 pkl 파일이 저장된 것을 확인</p>\n<footer id='69' style='font-size:14px'>MLflow 실습</footer>\n<br><footer id='70' style='font-size:14px'>5</footer>\n<br><figure id='71'><img alt=\"\" data-coord=\"top-left:(279,1130); bottom-right:(1005,1542)\" /></figure>\n<p id='72' data-category='paragraph' style='font-size:16px'>parameters, metrics, artifacts</p>\n<br><p id='73' data-category='paragraph' style='font-size:16px'>다양한 parameter 로 테스트 후 mlflow 확인</p>\n<p id='74' data-category='paragraph' style='font-size:16px'>python train.py 0.01 0.01<br>python train.py 0.01 0.75<br>python train.py 0.01 1.0<br>python train.py 0.05 1.0<br>python train.py 0.05 0.01<br>python train.py 0.5 0.8<br>python train.py 0.8 1.0</p>\n<p id='75' data-category='paragraph' style='font-size:16px'>다음과 같은 화면이 출력되며, metrics 와 parameter 를 한 눈에 비교할 수 있습니다.</p>\n<figure id='76'><img alt=\"\" data-coord=\"top-left:(193,615); bottom-right:(1088,911)\" /></figure>\n<h1 id='77' style='font-size:20px'>5. MLflow 데이터 저장 방식</h1>\n<p id='78' data-category='paragraph' style='font-size:16px'>cd mlruns/0<br>ls<br># 굉장히 많은 디렉토리가 생성되었습니다.<br># (각각의 알 수 없는 폴더명은 mlflow 의 run-id 를 의미합니다.)</p>\n<p id='79' data-category='paragraph' style='font-size:18px'># 아무 디렉토리에나 들어가보겠습니다.<br>cd <특정 디렉토리><br>ls</p>\n<p id='80' data-category='paragraph' style='font-size:16px'># artifacs, metrics, params, tag 와 같은 디렉토리가 있고 그 안에 실제 mlflow run 의 메타<br>정보가 저장된 것을 확인할 수 있습니다.</p>\n<h1 id='81' style='font-size:20px'>과제</h1>\n<footer id='82' style='font-size:14px'>MLflow 실습</footer>\n<br><footer id='83' style='font-size:14px'>6</footer>\n<figure id='84'><img alt=\"\" data-coord=\"top-left:(242,151); bottom-right:(1005,497)\" /></figure>\n<h1 id='85' style='font-size:18px'>해당 실습 따라한거 화면 캡쳐 하나 올려주시면 됩니다</h1>\n<footer id='86' style='font-size:14px'>MLflow 실습</footer>\n<br><footer id='87' style='font-size:14px'>7</footer>",
    "1Pm3czQqjEzoyqMWJN-Hkza9JNSImR4B5": "<header id='0' style='font-size:14px'>2025-1<br>YBIGTA</header>\n<h1 id='1' style='font-size:20px'>MLOps</h1>\n<footer id='2' style='font-size:16px'>YBIGTA<br>MLOps<br>스터디<br>팀</footer>\n<h1 id='3' style='font-size:20px'>_Contents</h1>\n<p id='4' data-category='list' style='font-size:18px'>1. Intro</p>\n<p id='5' data-category='list' style='font-size:18px'>2. Details</p>\n<br><h1 id='6' style='font-size:22px'>00</h1>\n<br><h1 id='7' style='font-size:18px'>3. Conclusion</h1>\n<p id='8' data-category='paragraph' style='font-size:14px'>https://github.com/wognsths/MLOps-ybigta</p>\n<br><p id='9' data-category='paragraph' style='font-size:14px'>https://www.notion.so/MLOps-1ee3613839b1806b981ec956322a6f4a</p>\n<br><p id='10' data-category='paragraph' style='font-size:16px'>Contributors!!</p>\n<br><p id='11' data-category='paragraph' style='font-size:14px'>YBIGTA<br>24기<br>DS<br>양인혜<br>YBIGTA<br>26기<br>DS<br>송휘린<br>YBIGTA<br>26기<br>DE<br>손재훈<br>YBIGTA<br>26기<br>DE<br>엄윤희<br>YBIGTA<br>26기<br>DE<br>윤희찬</p>\n<br><figure id='12'><img style='font-size:18px' alt=\"01\" data-coord=\"top-left:(2344,0); bottom-right:(2898,543)\" /></figure>\n<figure id='13'><img alt=\"\" data-coord=\"top-left:(0,1265); bottom-right:(368,1656)\" /></figure>\n<br><h1 id='14' style='font-size:14px'>Intro</h1>\n<h1 id='15' style='font-size:22px'>MLOps</h1>\n<p id='16' data-category='paragraph' style='font-size:18px'>MLOps란<br>무엇인가?</p>\n<br><header id='17' style='font-size:14px'>Intro</header>\n<figure id='18' data-category='chart'><img data-coord=\"top-left:(165,566); bottom-right:(1454,1282)\" /><figcaption><p>Chart Title: MLOps Cycle</p><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>Data Prep</td><td>EDA</td><td>Review</td><td>Director</td><td>MoNITOR</td><td>Databricks</td></tr></thead><tbody><tr><td>item_01</td><td>30%</td><td>20%</td><td>15%</td><td>10%</td><td>10%</td><td>5%</td></tr></tbody></table></figure>\n<br><h1 id='19' style='font-size:16px'><br>머신러닝<br>모델의<br>개발부터<br>운영까지<br>전<br>과정을<br>자동화하고<br>체계적으로<br>관리하는<br>일련의<br>방법<br>론과<br>문화</h1>\n<h1 id='20' style='font-size:16px'>MLOps에<br>대한<br>흔한<br>오해<br>→<br>MLOps는<br>특정한<br>라이브러리나<br>방법이<br>아님</h1>\n<h1 id='21' style='font-size:20px'>❌<br>잘못된<br>인식</h1>\n<br><p id='22' data-category='list' style='font-size:16px'>“MLOps는<br>MLflow다”<br>“Kubeflow를<br>쓰면<br>MLOps가<br>되는<br>거지?”<br>“MLOps는<br>CI/CD<br>파이프라인<br>구축<br>도구다”</p>\n<p id='23' data-category='paragraph' style='font-size:16px'>→<br>단일<br>도구나<br>라이브러리가<br>아니라,<br>여러<br>도구,<br>인프라,<br>전략이<br>조합된<br>총체적<br>시스템<br>운영<br>방법론</p>\n<h1 id='24' style='font-size:20px'>MLOps</h1>\n<p id='25' data-category='paragraph' style='font-size:18px'>MLOps의<br>전형적인<br>Workflow</p>\n<figure id='26' data-category='chart'><img data-coord=\"top-left:(166,564); bottom-right:(1453,1280)\" /><figcaption><p>Chart Title: MLOps Cycle</p><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>Data Prep</td><td>EDA</td><td>Review</td><td>Director</td><td>Mon/TOR</td><td>Databricks</td></tr></thead><tbody><tr><td>item_01</td><td>30%</td><td>20%</td><td>15%</td><td>10%</td><td>10%</td><td>5%</td></tr></tbody></table></figure>\n<br><header id='27' style='font-size:14px'>Intro</header>\n<h1 id='28' style='font-size:16px'>1. 데이터<br>수집<br>및<br>정제<br>2. 실험<br>관리<br>/<br>모델<br>학습<br>3. 모델<br>패키징<br>및<br>배포<br>4. 모델<br>모니터링<br>5. 재학습<br>및<br>롤백</h1>\n<h1 id='29' style='font-size:16px'>왜<br>MLOps가<br>필요한가?<br>→<br>머신러닝의<br>문제<br>(데이터<br>변화<br>/<br>재현<br>불가능성<br>/<br>복잡한<br>파이프라인<br>등)<br>을<br>해결하기<br>위해<br>지속적<br>으로<br>운영<br>가능한<br>체계를<br>구현해야함.</h1>\n<header id='30' style='font-size:14px'>Intro</header>\n<br><p id='31' data-category='paragraph' style='font-size:20px'>Motivation</p>\n<h1 id='32' style='font-size:18px'>무엇이<br>문제였는가?</h1>\n<figure id='33'><img alt=\"\" data-coord=\"top-left:(176,465); bottom-right:(1149,1523)\" /></figure>\n<br><h1 id='34' style='font-size:16px'>Colab<br>딸깍으로<br>모델링을<br>하던<br>시절...</h1>\n<h1 id='35' style='font-size:16px'>패러미터<br>서칭을<br>하는데<br>기록은<br>없고,</h1>\n<h1 id='36' style='font-size:16px'>좋은<br>결과<br>나오면<br>패러미터<br>복사<br>후<br>메모장<br>붙여넣기</h1>\n<h1 id='37' style='font-size:16px'>그러다가<br>귀찮으니<br>패스하다가<br>처음부터<br>다시<br>시작</h1>\n<h1 id='38' style='font-size:18px'>Project<br>Overview</h1>\n<br><header id='39' style='font-size:14px'>Intro</header>\n<figure id='40'><img alt=\"\" data-coord=\"top-left:(157,376); bottom-right:(2852,1577)\" /></figure>\n<br><p id='41' data-category='paragraph' style='font-size:18px'>02</p>\n<h1 id='42' style='font-size:14px'>Details</h1>\n<figure id='43'><img alt=\"\" data-coord=\"top-left:(0,1266); bottom-right:(368,1656)\" /></figure>\n<p id='44' data-category='paragraph' style='font-size:20px'>Procedure</p>\n<br><header id='45' style='font-size:16px'>Details</header>\n<figure id='46'><img alt=\"\" data-coord=\"top-left:(154,411); bottom-right:(1365,757)\" /></figure>\n<br><h1 id='47' style='font-size:14px'>비트코인<br>api를<br>EC2에서<br>Kafka를<br>통해<br>produce하고,<br>S3에<br>저장되도록<br>하자!</h1>\n<figure id='48'><img alt=\"\" data-coord=\"top-left:(428,855); bottom-right:(1912,1173)\" /></figure>\n<figure id='49'><img alt=\"\" data-coord=\"top-left:(2172,1323); bottom-right:(2335,1506)\" /></figure>\n<br><figure id='50'><img alt=\"\" data-coord=\"top-left:(2473,1304); bottom-right:(2689,1522)\" /></figure>\n<h1 id='51' style='font-size:20px'>Ec2-Kafka-S3</h1>\n<h1 id='52' style='font-size:18px'>비트코인<br>api를<br>EC2에서<br>Kafka를<br>통해<br>produce하고,<br>S3에<br>저장되도록<br>하자!</h1>\n<h1 id='53' style='font-size:14px'>그렇다면...<br>Producer와<br>Consumer<br>코드를<br>구현해서<br>EC2에<br>올리고,<br>S3에<br>저장<br>하도록<br>로직을<br>설계하면<br>되겠네???</h1>\n<h1 id='54' style='font-size:14px'>그러나<br>단순<br>데이터<br>저장에<br>굳이<br>consumer<br>코드를<br>만들어서<br>저장할<br>필요가<br>있는<br>가?</h1>\n<h1 id='55' style='font-size:14px'>Kafka<br>Connect<br>S3<br>Sink를<br>이용하면<br>간단한<br>설정만으로도<br>배치<br>저장,<br>에러<br>복구<br>및<br>재시도를<br>할<br>수<br>있다!</h1>\n<p id='56' data-category='paragraph' style='font-size:14px'>원래는<br>bitcoin<br>connector까지<br>사용해서<br>코드<br>없이<br>하려고<br>했으나...<br>text<br>type<br>데이터를<br>json형식으로<br>변환하는<br>것이<br>까다로워<br>producer은<br>파이썬<br>코드로<br>실행</p>\n<p id='57' data-category='paragraph' style='font-size:16px'>https://docs.confluent.io/kafka-connectors/s3-sink/current/overview.html<br>https://github.com/wognsths/MLOps-ybigta/tree/dev/src/bitcoin-kafka-s3_connector</p>\n<br><header id='58' style='font-size:16px'>Details</header>\n<figure id='59'><img alt=\"\" data-coord=\"top-left:(1990,513); bottom-right:(2922,1356)\" /></figure>\n<p id='60' data-category='paragraph' style='font-size:14px'>진짜<br>딸깍<br>캐뤼가<br>가능한<br>상황<br>ㅇㅇ;;</p>\n<h1 id='61' style='font-size:20px'>권한은<br>조상님이<br>만들어주시냐?</h1>\n<h1 id='62' style='font-size:18px'>IAM<br>권한과<br>정책<br>연결을<br>늘<br>습관화하자!<br>안하면...<br>힘들어진다<br>ㅠㅠ</h1>\n<h1 id='63' style='font-size:14px'>아마<br>AWS<br>서비스를<br>하나<br>완성하고<br>뭔가<br>실행이<br>안되는데<br>코드는<br>문제가<br>없고...<br>그렇다면<br>거의<br>IAM<br>권한<br>설정<br>때문이<br>라<br>보면<br>돼요.</h1>\n<br><h1 id='64' style='font-size:14px'>IAM은<br>AWS<br>서비스<br>간의<br>신뢰<br>관계를<br>정의하는<br>핵심<br>도구입<br>니다.<br>적절한<br>권한<br>부여를<br>통해서<br>철통같은<br>보안을<br>이룰<br>수<br>있는<br>것이죠!</h1>\n<h1 id='65' style='font-size:14px'>예를<br>들어서,<br>이후에<br>다룰<br>Lambda가<br>S3의<br>데이터를<br>읽고<br>전처리를<br>해서<br>저장을<br>한다고<br>하면,<br>Lambda에는</h1>\n<p id='66' data-category='paragraph' style='font-size:14px'>1.<br>s3:GetObject<br>2.<br>s3:PutObject</p>\n<h1 id='67' style='font-size:14px'>와<br>같은<br>권한<br>설정을<br>해줘야겠죠.</h1>\n<br><h1 id='68' style='font-size:16px'>Details</h1>\n<figure id='69'><img alt=\"\" data-coord=\"top-left:(2280,240); bottom-right:(2851,685)\" /></figure>\n<h1 id='70' style='font-size:14px'>권한<br>설정을<br>하지<br>않으면,<br>이런<br>식으로<br>오류가<br>뜨더라고요.</h1>\n<h1 id='71' style='font-size:20px'>Procedure</h1>\n<br><header id='72' style='font-size:16px'>Details</header>\n<figure id='73'><img style='font-size:14px' alt=\"S3에\n쌓이는\n데이터를\n주기적으로\n검사하고,\n특정\n조건이\n되면\n학습이\n진행되도록\n하자!\" data-coord=\"top-left:(117,255); bottom-right:(2971,1586)\" /></figure>\n<h1 id='74' style='font-size:20px'>EventBridge<br>&<br>Lambda</h1>\n<h1 id='75' style='font-size:18px'>EventBridge<br>그리고<br>Lambda의<br>효험과<br>효능과<br>어쩌구...<br></h1>\n<h1 id='76' style='font-size:14px'>지속적<br>학습과<br>모니터링의<br>첫걸음은<br>EventBridge라고<br>할<br>수<br>있죠.</h1>\n<h1 id='77' style='font-size:14px'>EventBridge는<br>일정<br>기반,<br>이벤트<br>기반<br>등으로<br>AWS<br>내부<br>서비스<br>뿐만<br>아니라<br>외부<br>서비스까지<br>연결해주는<br>오케스트레이션<br>허브<br>역할을<br>합니다.</h1>\n<h1 id='78' style='font-size:14px'>비트코인<br>가격을<br>보고<br>“언제<br>학습을<br>다시<br>해야<br>하지?”라는<br>고민이<br>듭니다.<br>그러<br>기<br>위해서는<br>주기적으로<br>데이터를<br>관찰할<br>필요가<br>있습니다.<br>이<br>때<br>EventBridge는<br>“언제<br>언제<br>관찰<br>함수를<br>가동시켜<br>줘!”라는<br>제<br>요구사항을<br>들<br>어줍니다.</h1>\n<p id='79' data-category='paragraph' style='font-size:14px'>그럼<br>그<br>함수는<br>어디서<br>가동하나요?<br>서버<br>안에<br>함수를<br>두고<br>실행할까요?<br>그것<br>도<br>좋지만<br>Sagemaker에<br>학습<br>명령을<br>내릴<br>수<br>있고,<br>서버리스<br>환경이라<br>간편한<br>Lambda를<br>사용하면<br>됩니다.</p>\n<h1 id='80' style='font-size:16px'>https://github.com/wognsths/MLOps-ybigta/tree/dev/lambda</h1>\n<br><figure id='81'><img style='font-size:16px' alt=\"Details\" data-coord=\"top-left:(1948,131); bottom-right:(2877,590)\" /></figure>\n<br><h1 id='82' style='font-size:14px'>CloudWatch로<br>로그까지<br>확인<br>가능</h1>\n<figure id='83'><img alt=\"\" data-coord=\"top-left:(1963,752); bottom-right:(2832,1496)\" /><br><figcaption id='84' style='font-size:14px'>서버<br>없이<br>함수<br>딸깍<br>하면<br>끝</figcaption></figure>\n\n<header id='85' style='font-size:16px'>Details</header>\n<br><h1 id='86' style='font-size:20px'>Lambda<br>&<br>Sagemaker</h1>\n<h1 id='87' style='font-size:18px'>Lambda로<br>중요한<br>이벤트를<br>감지하고,<br>Sagemaker을<br>가동시키자!</h1>\n<h1 id='88' style='font-size:14px'>중요한<br>이벤트가<br>감지되어<br>학습을<br>새로<br>한다고<br>해봅시다!</h1>\n<h1 id='89' style='font-size:14px'>그러면<br>Sagemaker에서<br>training<br>job을<br>생성할<br>수<br>있도록<br>코드를<br>설정할<br>수<br>있어<br>요.</h1>\n<h1 id='90' style='font-size:14px'>그러면<br>그<br>Sagemaker에게<br>1.어떤<br>학습<br>이미지로<br>학습할<br>것인지<br>2.어떤<br>데이터를<br>줄<br>것인지,<br>권한은<br>어떻게<br>부여할<br>것인지<br>3.어떤<br>인스턴스를<br>이용해서<br>학습할<br>것인지<br>4.하이퍼패러미터를<br>어떻게<br>설정할<br>것인지</h1>\n<p id='91' data-category='paragraph' style='font-size:14px'>등등을<br>설정하여<br>학습을<br>시작하도록<br>할<br>수<br>있어요!<br>뿐만<br>아니라,<br>MLflow로<br>tracking도<br>할<br>수<br>있도록<br>설정해줄<br>수<br>있어요.</p>\n<h1 id='92' style='font-size:14px'>그런데,<br>여기서<br>학습<br>이미지는<br>어디서<br>로드하는<br>것인가요?</h1>\n<h1 id='93' style='font-size:20px'>Sagemaker<br>Studio</h1>\n<h1 id='94' style='font-size:16px'>AWS에서<br>제공하는<br>완전관리형<br>머신러닝<br>플랫폼</h1>\n<h1 id='95' style='font-size:14px'>1.<br>Fully<br>Managed<br>Infrastructure</h1>\n<br><p id='96' data-category='list' style='font-size:14px'>EC2<br>인스턴스를<br>직접<br>띄우고<br>환경을<br>세팅할<br>필요<br>없이,<br>SageMaker가<br>자동으로<br>인스턴스를<br>관리,<br>필요시<br>확장<br>(autoscaling)까지!</p>\n<h1 id='97' style='font-size:14px'>2.<br>End-to-End<br>Workflow<br>지원</h1>\n<br><p id='98' data-category='list' style='font-size:14px'>데이터<br>준비<br>→<br>모델<br>학습<br>→<br>하이퍼파라미터<br>튜닝<br>→<br>배포<br>→<br>모니터링<br>→<br>재학습<br><br>이<br>모든<br>과정을<br>한<br>플랫폼<br>내에서<br>처리<br>가능.</p>\n<br><h1 id='99' style='font-size:14px'>AWS에서<br>제공되는<br>EventBridge<br>(Trigger)<br>와<br>같은<br>기능<br>을<br> 사용하여<br> SageMaker<br> Pipeline을<br> 통해<br> 실험을<br> 자동화<br>할<br>수<br>있다.</h1>\n<br><h1 id='100' style='font-size:14px'>Details</h1>\n<h1 id='101' style='font-size:14px'><br>→<br>MLOps<br>스터디에서는<br>S3에<br>데이터가<br>업로드<br>되는<br>주기<br>또는<br>데이터의<br>변동성에<br>따라<br>추가학습이<br>필요하다고<br>판단<br>되면,<br> Lambda의<br> 조건을<br> 통해<br> EventBridge가<br>Sagemaker를<br>호출하여<br>자동으로<br>재학습<br>되도록<br>설계</h1>\n<header id='102' style='font-size:14px'>Details</header>\n<br><h1 id='103' style='font-size:20px'>MLflow</h1>\n<h1 id='104' style='font-size:16px'><br>머신러닝<br>실험(Experiment)을<br>관리하기<br>위한<br>오픈소스<br>플랫폼</h1>\n<h1 id='105' style='font-size:14px'><br>핵심:<br>Tracking<br>기능<br>–<br>실험<br>기록<br>&<br>로그<br>관리</h1>\n<h1 id='106' style='font-size:14px'>→<br>예시<br>:<br>파이썬에서<br>mlflow<br>라이브러리를<br>통해<br>log를<br>생<br>성하고<br>이를<br>저장한<br>다음,<br>이를<br>MLflow<br>UI에서<br>실험별로<br>관<br>리<br>가능</h1>\n<h1 id='107' style='font-size:14px'>→<br>백엔드<br>스토리지<br>설정을<br>통해<br>관리가<br>용이<br>→<br>PyTorch,<br>TensorFlow,<br>XGBoost<br>등이<br>각각<br>API를<br>제<br>공하기<br>때문에<br>관리가<br>굉장히<br>쉽다</h1>\n<p id='108' data-category='paragraph' style='font-size:14px'>이런<br>식으로<br>다양한<br>실험<br>결과를<br>한눈에!<br>→<br></p>\n<br><figure id='109' data-category='chart'><img data-coord=\"top-left:(1758,802); bottom-right:(2703,1485)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>0</td><td>2</td><td>4</td><td>6</td><td>8</td></tr></thead><tbody><tr><td>stallful-gnat-351 (train_loss)</td><td>0.015</td><td>0.062</td><td>0.062</td><td>0.011</td><td>0.067</td></tr><tr><td>wse-wren-383 (train_loss)</td><td>0.02</td><td>0.021</td><td>0.013</td><td>0.013</td><td>0.011</td></tr><tr><td>delightful-fox-744 (train_loss)</td><td>0.024</td><td>0.022</td><td>0.01</td><td>0.01</td><td>0.01</td></tr><tr><td>luxuriant-midge-384 (train_loss)</td><td>0.093</td><td>0.02</td><td>0.023</td><td>0.01</td><td>0.01</td></tr></tbody></table></figure>\n<h1 id='110' style='font-size:20px'>Project<br>Overview</h1>\n<br><header id='111' style='font-size:16px'>Details</header>\n<figure id='112'><img alt=\"\" data-coord=\"top-left:(227,453); bottom-right:(486,716)\" /></figure>\n<br><figure id='113'><img alt=\"\" data-coord=\"top-left:(577,473); bottom-right:(801,712)\" /></figure>\n<figure id='114'><img alt=\"\" data-coord=\"top-left:(2170,1323); bottom-right:(2336,1505)\" /><br><figcaption id='115' style='font-size:14px'>학습이<br>다<br>되었음을<br>감지하고,<br>Webhook으로<br>Serving<br>서버에<br>모델을<br>전달하고<br>ONNX로<br>서빙하자!</figcaption></figure>\n\n<figure id='116'><img alt=\"\" data-coord=\"top-left:(2470,1304); bottom-right:(2688,1521)\" /></figure>\n<header id='117' style='font-size:14px'>Details</header>\n<br><h1 id='118' style='font-size:20px'>Sagemaker<br>&<br>EventBridge</h1>\n<h1 id='119' style='font-size:16px'>학습<br>결과도<br>알아서<br>저장해준다!</h1>\n<h1 id='120' style='font-size:14px'>Sagemaker는<br> 학습이<br> 완료된<br> 경우<br> 학습된<br> 모델의<br> 패러미터와<br>아티팩트<br>등을<br>S3에<br>저장해줍니다.<br>만약<br>학습된<br>모델을<br>웹<br>서빙<br>을<br>통해<br>배포하는<br>것이<br>목적이라면<br>.onnx,<br>.mar<br>파일도<br>생성해서<br>저장해줄<br>수<br>있어요.<br>옵션으로<br>체크포인트도<br>저장할<br>수<br>있고요!</h1>\n<h1 id='121' style='font-size:16px'>또<br>EventBridge<br>너야????</h1>\n<h1 id='122' style='font-size:14px'>EventBridge에서<br> cron을<br> 통해서<br> 주기적인<br> 모니터링도<br> 가능하<br>다고<br>했었어요.<br>뿐만<br>아니라<br>Sagemaker의<br>학습이<br>완료되었음을<br>감지할<br>수도<br>있습니다.</h1>\n<p id='123' data-category='paragraph' style='font-size:14px'>이제...<br>모델을<br>서빙할<br>차례입니다.<br>어떻게<br>해야<br>하나요?</p>\n<header id='124' style='font-size:14px'>Details</header>\n<br><h1 id='125' style='font-size:20px'>Webhook</h1>\n<h1 id='126' style='font-size:16px'>서버가<br>클라이언트에게<br>알림을<br>주는<br>방식</h1>\n<br><figure id='127'><img alt=\"\" data-coord=\"top-left:(2602,419); bottom-right:(2788,612)\" /></figure>\n<br><p id='128' data-category='paragraph' style='font-size:14px'>기본적인<br>웹<br>통신<br>방식으로,<br>클라이언트가<br>요청(Request)<br>-<br>서버가<br>응답(Response)하는<br>방식을<br>알<br>고<br>있을<br>겁니다.</p>\n<p id='129' data-category='paragraph' style='font-size:14px'>그런데<br>모델을<br>서빙하는<br>클라이언트의<br>측면에서,<br>새로운<br>모델이<br>준비되었는지<br>아닌지는<br>직접<br>알<br>수<br>없<br>어요.<br></p>\n<h1 id='130' style='font-size:14px'>주기적인<br>요청-응답<br>구조를<br>갖는<br>Polling을<br>하기에는,<br>너무<br>비효율적일<br>것<br>같아요.</h1>\n<p id='131' data-category='paragraph' style='font-size:14px'>반면<br>Webhook는<br>클라이언트가<br>요청을<br>보내는<br>방식이<br>아닌,<br>서버가<br>클라이언트에게<br>신호를<br>전달하<br>는<br>방식입니다.</p>\n<p id='132' data-category='paragraph' style='font-size:14px'>그러면...<br>Sagemaker가<br>학습이<br>끝났음을<br>EventBridge가<br>감지하고,<br>EventBridge는<br>Lambda를<br>연<br>결해서,<br>Lambda가<br>webhook을<br>통해<br>모델<br>서버에<br>데이터를<br>전달해주면<br>되겠네요!</p>\n<br><figure id='133'><img alt=\"\" data-coord=\"top-left:(2597,1234); bottom-right:(2792,1464)\" /></figure>\n<header id='134' style='font-size:16px'>Details</header>\n<br><h1 id='135' style='font-size:20px'>Model<br>Serving<br>by<br>ONNX</h1>\n<h1 id='136' style='font-size:18px'>어떻게<br>가볍게<br>모델<br>서빙을<br>할<br>수<br>있지?</h1>\n<h1 id='137' style='font-size:16px'>PyTorch로<br>학습을<br>진행했어요.<br>그러면<br>.pt<br>또는<br>.pth<br>파일이<br>반환되겠죠.<br>너무<br>무겁습니다<br>ㅠㅠ<br>PyTorch<br>모델은<br>전체<br>PyTorch<br>프레임워크가<br>필요하거든요.<br>→<br>서빙할<br>때<br>PyTorch<br>모델을<br>그대로<br>사용한다..?<br>절대<br>노노..<br>ONNX는<br>이러한<br>프레임워크에<br>독립하여,<br>모델<br>구조와<br>모델<br>가중치를<br>.onnx<br>단일<br>파일에<br>그래프<br>구조로<br>직렬화하여<br>추론<br>속도를<br>최대한<br>빠르게<br>합니다.</h1>\n<br><table id='138' style='font-size:14px'><thead><tr><td>구성<br>요소</td><td>설명</td><td>예시</td></tr></thead><tbody><tr><td>1.<br>계산<br>그래프</td><td>연산<br>흐름을<br>구성하는<br>연산자<br>노드들의<br>연결<br>정보</td><td>Conv<br>→<br>BatchNorm<br>→<br>Relu<br>→<br>FC</td></tr><tr><td>2.<br>텐서<br>(가중치)</td><td>각<br>연산자에<br>연결된<br>파라미터<br>값<br>(weight,<br>bias<br>등)</td><td>Conv.weight,<br>FC.bias<br>등</td></tr><tr><td>3.<br>메타데이터</td><td>모델의<br>입출력<br>이름,<br>타입,<br>버전,<br>저자<br>등<br>부가<br>정보</td><td>input_0:<br>float32[1,<br>3,<br>224,<br>224]</td></tr></tbody></table>\n<p id='139' data-category='paragraph' style='font-size:16px'>이러한<br>구성<br>요소들을<br>전부<br>직렬화한<br>뒤,<br>Protobuf<br>포맷으로<br>저장한다고<br>합니다.<br>(이진<br>직렬화)</p>\n<header id='140' style='font-size:16px'>Details</header>\n<br><h1 id='141' style='font-size:20px'>ONNX<br>vs<br>TorchServe</h1>\n<br><h1 id='142' style='font-size:18px'>모델<br>서빙을<br>할<br>때<br>나오는<br>두<br>프레임워크를<br>비교해봅시다!</h1>\n<table id='143' style='font-size:14px'><thead><tr><td></td><td>TorchServe</td><td>ONNX<br>Runtime</td></tr></thead><tbody><tr><td>기본<br>런타임</td><td>Python<br>+<br>PyTorch<br>기반</td><td>C++<br>기반<br>경량<br>런타임</td></tr><tr><td>프레임워크<br>의존성</td><td>✅<br>PyTorch<br>필요</td><td>❌<br>프레임워크<br>독립<br>(PyTorch<br>불필요)</td></tr><tr><td>모델<br>형식</td><td>.pth,<br>.pt<br>(TorchScript)</td><td>.onnx<br>(Protobuf<br>직렬화)</td></tr><tr><td>정적<br>그래프<br>최적화</td><td>✅<br>TorchScript로<br>일부<br>지원</td><td>✅<br>기본<br>구조<br>자체가<br>정적<br>그래프로<br>최적화<br>가능</td></tr><tr><td>연산자<br>Fusion</td><td>❌<br>직접<br>지원<br>없음<br>(TorchScript로<br>일부<br>수동<br>적용<br>가능)</td><td>✅<br>지원<br>(Conv<br>+<br>BN<br>+<br>Relu<br>등<br>자동<br>병합<br>가능)</td></tr><tr><td>양자화<br>(INT8,<br>FP16)</td><td>❌<br>TorchServe<br>자체는<br>지원<br>안<br>함</td><td>✅<br>지원<br>(양자화-aware<br>or<br>post-training<br>quantization)</td></tr><tr><td>배치<br>추론<br>최적화</td><td>✅<br>지원<br>(max_batch_size,<br>delay<br>설정)</td><td>❌<br>수동<br>구현<br>필요<br>(NumPy<br>stacking<br>등으로<br>가능)</td></tr><tr><td>멀티<br>워커/프로세스</td><td>✅<br>모델당<br>워커<br>수<br>설정<br>가능<br>(config.properties)</td><td>❌<br>기본<br>런타임<br>단일<br>프로세스,<br>병렬<br>실행은<br>앱<br>단에서<br>처리</td></tr><tr><td>GPU<br>가속</td><td>✅<br>PyTorch의<br>cuda<br>사용</td><td>✅<br>ONNX<br>Runtime<br>GPU<br>패키지<br>or<br>TensorRT로<br>극한<br>최적화</td></tr><tr><td>추론<br>속도<br>(CPU)</td><td>중간<br>(GIL,<br>Python<br>오버헤드<br>존재)</td><td>빠름<br>(C++<br>기반,<br>병렬<br>처리<br>최적화)</td></tr><tr><td>추론<br>속도<br>(GPU)</td><td>빠름<br>(PyTorch<br>GPU<br>연산<br>활용)</td><td>매우<br>빠름<br>(TensorRT,<br>CUDA<br>kernel<br>level<br>최적화)</td></tr><tr><td>서빙<br>배포<br>편의성</td><td>✅<br>내장<br>REST<br>API<br>+<br>.mar<br>패키지</td><td>❌<br>API<br>없음<br>→<br>FastAPI,<br>Flask<br>등으로<br>별도<br>구성<br>필요</td></tr><tr><td>모델<br>경량화<br>수준</td><td>❌<br>PyTorch<br>모델<br>그<br>자체</td><td>✅<br>ONNX<br>자체가<br>경량<br>+<br>최적화<br>가능<br>구조</td></tr></tbody></table>\n<br><figure id='144'><img style='font-size:18px' alt=\"03\" data-coord=\"top-left:(2244,0); bottom-right:(2917,546)\" /></figure>\n<figure id='145'><img alt=\"\" data-coord=\"top-left:(0,1266); bottom-right:(368,1656)\" /></figure>\n<br><h1 id='146' style='font-size:14px'>Conclusion</h1>\n<header id='147' style='font-size:14px'>Conclusion</header>\n<br><h1 id='148' style='font-size:20px'>Takeaways</h1>\n<h1 id='149' style='font-size:18px'>배울<br>것이<br>정말<br>많았던<br>스터디</h1>\n<h1 id='150' style='font-size:16px'>사용한<br>기술들을<br>보면,<br>사실<br>이<br>정도로<br>할<br>필요는<br>없는<br>규모의<br>프로젝트이기는<br>해요.</h1>\n<h1 id='151' style='font-size:16px'>Binance<br>API를<br>통한<br>데이터를<br>받는<br>것도<br>Kafka로<br>할<br>필요도<br>없고<br>AWS의<br>서비<br>스를<br>이용하며<br>데이터를<br>저장하고<br>학습하고<br>하는<br>것보다는<br>로컬에서<br>환경만<br>잘<br>만들어도<br>충분한<br>수준이었죠.<br>오류<br>투성이에<br>이리<br>치이고<br>저리<br>치이고<br>힘들었지<br>만요<br>ㅠㅠ</h1>\n<p id='152' data-category='paragraph' style='font-size:16px'>그럼에도<br>불구하고<br>지금까지<br>DE에서<br>배운<br>기술들을<br>활용하고,<br>현업에서<br>사용할<br>만한<br>방법들을<br>최대한<br>사용하면서<br>많은<br>경험들을<br>쌓을<br>수<br>있었던<br>것<br>같습니다!</p>\n<p id='153' data-category='paragraph' style='font-size:16px'>무엇보다<br>저를<br>잘<br>지도해준<br>팀원들이<br>정말<br>고맙고요...ㅎㅎ</p>\n<header id='154' style='font-size:14px'>Conclusion</header>\n<br><h1 id='155' style='font-size:20px'>Next<br>steps</h1>\n<h1 id='156' style='font-size:18px'>Scale<br>up,<br>Scale<br>out!</h1>\n<h1 id='157' style='font-size:16px'>우선<br>이번<br>프로젝트의<br>최대<br>한계는,<br>모델링에는<br>아무<br>집중도<br>하지<br>않았다는<br>것이죠.<br>따<br>라서,<br>다음<br>MLOps<br>스터디에서는<br>모델링에도<br>힘을<br>쓰면서<br>MLOps의<br>본질에<br>조금<br>더<br>다가가고자<br>합니다.</h1>\n<h1 id='158' style='font-size:16px'>규모도<br>더<br>키워야겠죠?<br>아직<br>사용하지<br>못한<br>기술<br>스택도<br>많고,<br>특히<br>Kafka를<br>엄청<br>활용<br>해보지는<br>못한<br>것<br>같아요.<br>Airflow와<br>CI/CD도<br>써볼<br>예정입니다.</h1>\n<p id='159' data-category='paragraph' style='font-size:16px'>최적화도<br>더<br>잘<br>해서<br>“진정한”<br>실시간<br>배포도<br>해보고<br>싶어요.<br>동시에<br>다른<br>다양한<br>서비<br>스들과도<br>연결해보고<br>싶기도<br>합니다.</p>\n<p id='160' data-category='paragraph' style='font-size:16px'>마지막으로,<br>이렇게<br>스터디가<br>이곳저곳에서<br>많은<br>관심을<br>받게<br>되어<br>기뻤습니다.<br>그렇기<br>에<br>컨텐츠를<br>더<br>멋지게<br>확장해보고자<br>하는<br>욕심이<br>많이<br>나네요<br>ㅎㅎ.<br>다음<br>스터디도<br>기<br>대해주시길<br>바랍니다!</p>\n<h1 id='161' style='font-size:14px'>Thank<br>you!!</h1>",
    "1kQWnOTm_6RQzbG1OcTP5BOpzlkm2lHOr": "<h1 id='0' style='font-size:20px'>dataiku</h1>\n<h1 id='1' style='font-size:18px'>Dataiku</h1>\n<h1 id='2' style='font-size:14px'>DX/AIX 실무 MLops툴 - 특징과 사용 사례</h1>\n<h1 id='3' style='font-size:16px'>DA 26기 김현운</h1>\n<h1 id='4' style='font-size:20px'>Dataiku란?</h1>\n<h1 id='5' style='font-size:18px'>● Low-code 아이템 多:</h1>\n<br><p id='6' data-category='list' style='font-size:14px'>● 지정된 Item을 통해, Custom Python을 최소한으로 사용<br>● 그럼, 원하는 Python, SQL, Pyspark, ... 구현 못하는거 아냐? � �<br>● \"전처리\"는 입맛대로, \"분석 및 시각화\"는 내장 Low code로!</p>\n<h1 id='7' style='font-size:18px'>● 분석 workflow 자동화:</h1>\n<br><p id='8' data-category='list' style='font-size:16px'>● 수집 → 정제 → 분석 및 모델링 → 백데이터 재적재 → 시각화 및 배포<br>● Start: DataLake(S3, GCS, kafka..) or 실시간 크롤링/수기 업로드 등<br>● End: Tableau, Dashboard...</p>\n<h1 id='9' style='font-size:18px'>End to End 파이 프라인 자동화</h1>\n<figure id='10'><img style='font-size:14px' alt=\"데이터 데이터 자동\n배포\n엑세스 전처리 머신러닝\nVisual recipes\nVISUAL\nT\nSync Prepare Sample/Fitter Greup Deninct Window\nE\n||||||\nJoin whi, Spilt TopN Som Pivot Stack\nPrefathe JIARDON\nFORSST_ REGRTMONI Code recipes\nTig\nPython 利 soc Sholl 코드\n(CODE)\nぎ +\n1eve Impata ng Spark SQL Spark Scrio PySpark\nR\nSpark 국\n거버넌스, 감사, 재사용\" data-coord=\"top-left:(133,419); bottom-right:(1581,1001)\" /></figure>\n<h1 id='11' style='font-size:18px'>데이터이쿠의 엔드 투 엔드 AI 통합 플랫폼</h1>\n<figure id='12'><img style='font-size:14px' alt=\"앱 및 시각화 타사 BI 플랫폼 자체 비즈니스 애플리케이션에 통합\n모든 데이터\n현업 API\n통합 관리 안전한 관리 및 확장 가능한 프레임워크 규제 증명\nLow 코드 설계 및 실험 프로덕션 및 오케스트레이션\n분석 AI 세대\naws 엽구축 배포 모니터링 CVCD\n데이터 준비 머신 러닝\n리스크/통제\n관리자\nFull 코드 데이터 분석가 데이터 데이터/ML 운영/관리자\n사이언티스트 엔지니어\n감사 및 책임 기업 맞춤형\n적응형 인프라\n컴퓨트 기초 모델 ML 확장성\n다양한 커넥터 snowfoker Spa aws AI21 labe\nmtflow\n(로컬 시스템, SQL,\nNoSQL. 타일, Awn 돈을 kubernetes � AI\ndatabricks\n애플리케이션)\" data-coord=\"top-left:(164,312); bottom-right:(1552,981)\" /></figure>\n<h1 id='13' style='font-size:20px'>ML 모델링 - AutoML 활용</h1>\n<p id='14' data-category='paragraph' style='font-size:18px'>KEYPOINT AutoML 방식의 비주얼 머신 러닝은 GUI에서 추천 알고리즘을 사용한 예측, 클러스터링, 시계열, 딥러닝, 이미지 모델, 인과<br>모델 등 다양한 모델 학습을 지원하며, 코드 기반 머신 러닝도 지원하여 다양한 고급 분석을 수행할 수 있습니다</p>\n<figure id='15'><img style='font-size:16px' alt=\"Visual ML\nAutoML Time Series Causal\nPrediction Forecasting Prediction\nAutoML Object Image\nClustering Detection Classification\" data-coord=\"top-left:(75,450); bottom-right:(572,775)\" /></figure>\n<br><figure id='16'><img style='font-size:14px' alt=\"Predict authorized_ flag Its DESIGN 士 RESULT TRAIN\nFeatures Handling COPY TO... COPY FROM\nBASIC\n11 Dataset Filter Handling of 'purchase_dow'\nTarget\nTrain / Test Set  著 transaction ld Role Reject Variable type A Categorical\nOFF\njected, unlov\nMetrics Input ■ Numerical\n□ # authorized_ flag I Text\nDebugging Target variable\n[]Vector\nFEATURES □ A purchase_ date\nON\nDummy encoding Numerical handling Keeping as a regular numerica Missing values Impute\nFeatures handling\n□ # purchase_ date_ parsed Rescaling Standard rescaling Impute with Average ofvalues\nON\nFeature generation Cyclical datetime encoding\nMake derived feats. □ 네이지,\nFeature reduction □ 을 purchase year\nected. 100 many\nDistribution\nMODELING\n□ 을 purchase month\nMinimum 1 Mean 3.8216 Distinct values 7 Empty cells 0.0%\ntoo ma equal\nAlgorithms Maximum 7 StdDev 1.9271 Mode 2 Invalid cells 0.0%\nMedian 4\n□ # purchase_ day ON\nHyperparameters\nAvg-std rescaling\nADVANCED # purchase_ dow\n☑\nON\nAvg-std rescaling\nRuntime environment\n□ # purchase_ weekend\nON\nWeighting strategy Avg. std rescaling\nProbability calibration # purchase_ hour\n□\nON\nAvg-std rescaling\n1.0\" data-coord=\"top-left:(589,448); bottom-right:(1672,1018)\" /></figure>\n<h1 id='17' style='font-size:20px'>ML 모델링 - AutoML 활용</h1>\n<p id='18' data-category='paragraph' style='font-size:18px'>KEYPOINT Explainable AI - 모 델의 학습 과정과 결과에 대한 다양한 설명이 자동 제공되므로 쉽게 모델을 이해하고 활용할 수 있습니다.</p>\n<figure id='19'><img style='font-size:14px' alt=\"What if? EXPLORE NEIGHBORHOOD\nADD TO COMPARE Prediction for authorized_flag: 1\nCOMPARATOR (0)\nProbability for 1: 56.51%\nDataset Q Filte\npurchase_date\nThreshold * 0.0%\n2017- A 0\n1- 56.51%\n0-43.49%\npurchase_date_parsed\n2017-04\npurchase_day\n/\n1 14 31\n0 20 40 60 80 100\npurchase_ dow\n# 0\n1 4 7\npurchase weekend Most influential features for authorized_flag (ICE) ON\n#\n0 1\npurchase_ hour purchase_date\n# ☑ 0 purchase_date_parsed\n0 15 23\nsignature_provided\ncard_ id\nWhat-if 시뮬레이션\" data-coord=\"top-left:(59,431); bottom-right:(817,1042)\" /></figure>\n<br><figure id='20'><img style='font-size:14px' alt=\"Confusion matrix Threshold (cut-off) 1 0.000 BACK TO OPTIMAL\nDisplay: Record count\n'Optimal' cut was found by\noptimizing for F1 Score.\nPredicted Predicted\nTotal\n1 0 Description\nA classifier produces a probability\nActually 1 18039 0 18039\nthat a given object belongs to the\nclass (e.g. that authorized_flag\nActually 0 2049 2049\nis 1 ), The threshold (or 'cut-off') is\nthe number beyond which the\nprediction is considered positive. If\nset too low, it may predict 1 too\nAccuracy 90%\noften, if set too high, too rarely.\nPrecision 90% classification\nOne way to assess a\nmodel's performance is to use a\nRecall 100%\n'confusion matrix', which compares\nactual values (from the test set) to\nF1-Score 95%\npredicted values. Be careful though,\n0% 50% 100% the figures are highly dependent on\nthe probability cutoff chosen to\nCost matrix classify a record. Depending on your\nuse case, you might want to adjust\nand value is the gain the cutoff to optimize a specific\n1 x 18039 일 18,039.00\nIf model 1 is metric.\npredicts\n1 but value is the gain Metrics definitions\n0 3 2049 61470\" data-coord=\"top-left:(908,423); bottom-right:(1669,1031)\" /></figure>\n<br><h1 id='21' style='font-size:16px'>Confusion Matrix</h1>\n<h1 id='22' style='font-size:18px'>N8N과는 무 엇이 다르지?</h1>\n<table id='23' style='font-size:14px'><thead></thead><tbody><tr><td></td><td>N8N</td><td>Dataiku</td></tr><tr><td>주요 역할</td><td>워크플로우 자동화</td><td>데이터 분석 및 머신러닝 파이프라인 구동</td></tr><tr><td>기반 구조</td><td>이벤트 기반 / Node Flow</td><td>데이터 기반 / Recipe Flow</td></tr><tr><td>강점</td><td>API 호출, 크롤링, GPT 연결 등 자동화</td><td>대용량 데이터 처리 및 ML 파이프라인 설계, ETL 자동화</td></tr><tr><td>확장성</td><td>JS Function Node, GPT 연동 등 사용 가능한 노드가 많다!</td><td>Spark, AutoML, SQL, 시각화까지 분석 과정 에서의 다채로운 가공 가능</td></tr><tr><td>코딩</td><td>No-code / Low-code</td><td>Low-code + 코드 확장 가능 (Python, SQL)</td></tr><tr><td>예시</td><td>SaaS기업 자동화 agent 구축..</td><td>제조업 생산, 실적, 수요 관리 SCM 대시보드 제작 / 수율 ML모델 제작 등</td></tr></tbody></table>\n<h1 id='24' style='font-size:22px'>DT/AIX 플젝, 어떨 때 써보자 하면 되는지?</h1>\n<h1 id='25' style='font-size:20px'>· \"특정 주기마다 자동적으로 돌아가야 하는\"</h1>\n<br><h1 id='26' style='font-size:16px'>· 재무성과, 생산계획, 출하일정 등 주, 월단위 Batch Process가 구동되어야..</h1>\n<br><h1 id='27' style='font-size:20px'>· \"트랜잭션 단위 대용량 데이터가 추출 및 적재되어야 하는\"</h1>\n<br><p id='28' data-category='list' style='font-size:14px'>· Excel << SQL <<<< Pyspark<br>· Ex1) 실시간 대규모 크롤링/고객 로그데이터 기반 Kafka 연동, 5분단위 구동 가능<br>· Ex2) 송금 기록 n주간 누적 저장, 파티션 기반 Spark 연동, n주 단위 구동 가능</p>\n<h1 id='29' style='font-size:18px'>● \"데이터의 출처가 다채로운\"</h1>\n<br><p id='30' data-category='list' style='font-size:14px'>● 사내 KPI를 모니터링하는 대시보드를 만들고 싶은데,, 원천 데이터소스가 너무 많아!!<br>· SAP ERP, Amazon S3, 수기 업로드 엑셀파일... 등등 활용성 good</p>\n<h1 id='31' style='font-size:18px'>● 전형적인 금융/제조업/유통/커머스 도메인 불문 \"MLops\" 소화 가능</h1>\n<h1 id='32' style='font-size:22px'>SK그룹, 'SK 제조 설루션 데이' 개최...DT 고삐 된다</h1>\n<p id='33' data-category='paragraph' style='font-size:14px'>SK하이닉스는 반도체 생산 공장에서 자동화를 넘어 자율 공장으로 가고 있는 사례를 공유했다. 2014년부터 추진해온 엔<br>지니어링 업무 자동화로 시작해 새로운 시스템 적용을 통해 생산성 향상을 이뤄낸 과정을 설명했다.</p>\n<br><h1 id='34' style='font-size:18px'>언급된 모든 회사 Dataiku 사용</h1>\n<p id='35' data-category='paragraph' style='font-size:14px'>SK텔레콤에서는 제조 AI와 마켓 인텔리전스 등 제조 역량 강화를 위한 AI 적용 방향을 설명했다. 에이닷비즈 기능 확대와<br>데이터, 대형언어모델(LLM) 통합 관리도 소개했다.</p>\n<p id='36' data-category='paragraph' style='font-size:14px'>SK텔레콤 측은 \"마켓인텔리전스의 경우 공통 플랫폼을 구축해 현장의 문제를 함께 해결해 나간다면 시간과 비용을 줄일<br>수 있을 것\"이라고 강조하기도 했다.</p>\n<p id='37' data-category='paragraph' style='font-size:14px'>이 밖에도 SK하이닉스와 SK에너지, SK케미칼 등의 담당자들이 DT 관점의 제조 현장 혁신 사례 등을 공유한 것으로 알려<br>졌다.</p>\n<p id='38' data-category='paragraph' style='font-size:14px'>SK는 분기마다 제조 설루션 데이 행사를 열고 그룹 관계사의 DT 추진에 속도를 낼 방침이다.</p>\n<br><h1 id='39' style='font-size:20px'>최근엔 LLMops도 가속화</h1>\n<p id='40' data-category='paragraph' style='font-size:18px'>옆 팀 플젝이 데이터이쿠 활용 LLMops였음!<br>플랫폼을 쓰게 되면 lang시리즈 쓸때보다 DB,<br>MCP, API 등 다양한 소스에 연동이 자유로워<br>져 스케일이 매우 커진다고 함</p>\n<p id='41' data-category='paragraph' style='font-size:18px'>Built-in Item에 프롬프트 엔지니어링 관련 아<br>이템도 추가 개발하고 있다는 소식이..!</p>\n<h1 id='42' style='font-size:18px'>SK AX/디스커버리 쓰실분들 데이터이쿠 언급<br>하면 매우좋아하심..</h1>\n<br><h1 id='43' style='font-size:18px'>결국 Dataiku는 DT 도입을 위한 데이터ops 플랫폼!</h1>\n<h1 id='44' style='font-size:16px'><DX/AX 준비하시는 분들 위한 벤치마크 영상><br>LG화학- https://www.youl.be.com/watch?x=mj/NGe5we<br>Sk Hynix - https://www.putube.com/watch/h=g(b4w110</h1>\n<br><p id='45' data-category='paragraph' style='font-size:18px'>(원래 데이터이쿠 외국계라 한국에 오피스 없<br>이 하이브리드로 일했는데 sk가 돈을 퍼다주<br>니까 오피스 만들고 한국지사 영업 시작함)</p>\n<h1 id='46' style='font-size:20px'>SK Hynix, Dataiku AI 기반 수율 자동 분석 시스템 구축</h1>\n<h1 id='47' style='font-size:18px'>Dataiku's Scope of use - 데이터 분석 Pilot</h1>\n<p id='48' data-category='list' style='font-size:16px'>Design Node 에서 Pilot 형태의 빠른 데이터 분석<br>· Flow 기반으로 분석 단계 확인</p>\n<figure id='49'><img style='font-size:14px' alt=\"Data Source\n(Mart)\nYield Data\nFactory Data\nETC Data\" data-coord=\"top-left:(171,458); bottom-right:(1661,1093)\" /></figure>\n<h1 id='50' style='font-size:20px'>Dataiku 내 아이 템들을 톺아보자</h1>\n<h1 id='51' style='font-size:16px'>Datasets: ETL에서 E,L 의 출발지이자 도착지 담당 / Node 역할 수행</h1>\n<figure id='52'><img style='font-size:14px' alt=\"New dataset Go to Launchpad to add or remove connections 폴더로 감싸서 폴더 내에 올려도 됨\n혹은 그냥 raw file 단위로도 만들 수\nUpload your files Search and import...\n있음\nFiles SQL Cloud Storages NoSQL\nUpload your files Snowflake MS Fabric Warehouse Amazon S3 FTP\nDatabricks Oracle Azure Blob Storage SFTP\nAmazon Redshift Teradata Google Cloud Storage SCP New folder x\nAzure Synapse Greenplum SharePoint Online HTTP\nGoogle BigQuery Google AlloyDB SharePoint List HTTP (with ca\nPostgreSQL Athena\nMySQL Trino\nMS SQL Server Vertica\nSAP Hana\nIBM Netezza Label ybigta\nOther SQL\nStore into dataiku-managed-storage\nSocial DSS Import existing\nTwitter Files in folder Import from Data Collection\nManaged dataset Import dataset from another project Partitioning Not partitioned\nFolder Import indexed table\nEvaluation store Import from connection\nMetrics Import from feature store\nInternal stats Import DSS item from another project\nEditable CANCEL CREATE\" data-coord=\"top-left:(33,416); bottom-right:(1727,1069)\" /></figure>\n<h1 id='53' style='font-size:20px'>Datasets</h1>\n<h1 id='54' style='font-size:16px'>강수량</h1>\n<br><figure id='55'><img style='font-size:14px' alt=\"강수량 ▼ 2 files, 56.58 KB\nTrying to split Excel Workbook(s) into multiple datasets? Install the Excel Sheet Importer plugin. Then run Ex\nName Last Modification Size\n강수량관련.csv Today at 22:17 24.22 KB\n강수량관련.xlsx Today at 21:57 32.36 KB\nDrag and drop your files here or ADD A FILE\" data-coord=\"top-left:(23,301); bottom-right:(776,977)\" /></figure>\n<br><figure id='56'><img style='font-size:16px' alt=\"Type Amazon S3\nS3 connection dataiku-managed-storage\nPath in bucket /managed-ds-data/S(projectKey//Slodbld) BROWSE.\ngis-data-ap-northeast-1 / managed-dss-data / YBIGTA /\nZqHz1KzY\n강수량관련.csv\n강수량관련.xlsx\nCANCEL OK\n현재는 무료버전이라 내장 디렉토리 매니징\n회사계정 사용 시 S3 connection 생성 가능\" data-coord=\"top-left:(809,309); bottom-right:(1740,923)\" /></figure>\n<br><h1 id='57' style='font-size:18px'>Extract, Load 가능</h1>\n<h1 id='58' style='font-size:20px'>Notebooks</h1>\n<p id='59' data-category='list' style='font-size:18px'>● 통상적으로 코랩 돌릴때 나오는 Jupyter Notebook(.ipynb)<br>● 파이프라인의 Flow에 반영되지 않는, 로직 설계 및 디버깅용 노트북<br>● 전처리 코드, 적재 코드 등을 로컬 환경에서 디버깅 X 데이터이쿠에서 0<br>● 왜냐하면 import dataiku를 통해 내장 패키지를 불러와, 맞춤 문법을 사<br>용해야 하기 때문</p>\n<p id='60' data-category='list' style='font-size:16px'>● Ex 1) 로컬이 아닌 데이터이쿠 Datasets의 파일 or Folder 추출, 적재<br>● Ex 2) Datalake와 Dataiku가 연동된 상황, 커넥션 유지하며 디버깅할 필요 O</p>\n<p id='61' data-category='list' style='font-size:14px'>· 소규모 회사일수록 S3 경로 정리 불투명, 체계적인 IT계열사 없으면 디버깅 어려운 경우 많음<br>· Datalake 뿐 아니라 개발/운영/배포 서버까지 엮인 복잡한 상황 多 → Dataiku Studio 환경 내<br>에서 로직 설계 및 디버깅해야 함!</p>\n<h1 id='62' style='font-size:20px'>merging</h1>\n<br><p id='63' data-category='paragraph' style='font-size:16px'>{} CODE SAMPLES + CREATE RECIPE C FORCE RELOAD 0 EDIT IN CODE STUDIO</p>\n<table id='64' style='font-size:18px'><thead></thead><tbody><tr><td colspan=\"2\"><figure><img alt=\"\" data-coord=\"top-left:(172,210); bottom-right:(213,251)\" /></figure> merging Last Checkpoint: 한 시간 전 (autosaved) Jupyter <table><thead></thead><tbody><tr><td>T ↑ ↓ ▶ Run C Code V</td><td>File Edit View Insert Cell Kernel Widgets Help</td><td>Not Trusted</td><td>Python in CPU-M-1-cpu-4Gb-Ram (builtin env)</td></tr></tbody></table></td></tr><tr><td>In [9] In [12] : <table><thead></thead><tbody><tr><td>In [14] :</td><td>▼ # 직접 선택한 파일 경로 입력 file_path = /기온관련 CSV\" ▼ with tempenature.get_downlcad_stream(jie_path) as f: in_mem_file = io.Bytesl0(f.read()) temperature_df = pd.read_csv(in_mem_file, encoding=' cp949 ) temperature_df head( )</td></tr></tbody></table></td><td>impor t dataiku f rom dataiku import pandasutils as pdu import pandas as pd import dataiku impor t io ▼ # 데이터이쿠 내부 패키지가 있기때문에 내부 아이템 호출하려면 사용법에 익숙해져야. temperature = dataiku.Folder(\"기온관련\") file_list = temperature. list_paths_in_partition() pr int ( \"업로드된 파일 목록: file_ list) 업로드된 파일 목록: [ /기온관련 CSV 8 /기온관련 . xlsx ] Out[14] : 지점명 일시 평균기온 최고기온 최고기온시각 최저기온 최저기온시각 일교차 <table><thead></thead><td>0</td><td>서울 2022-01-01</td><td>-4.3 2.3</td><td></td><td></td><td></td><td>15:44 -10.2 7:10</td><td>12.5</td></tr><tr><td>1</td><td>서울</td><td>2022-01-02</td><td>-1.3 3.0</td><td>15:51</td><td>-5.2</td><td>23:56</td><td>8.2</td></tr></tbody></table></td></tr></tbody></table>\n<h1 id='65' style='font-size:18px'>In [18] :</h1>\n<br><table id='66' style='font-size:18px'><thead></thead><tbody><tr><td>df_merge_ 1 = pd.merge(temperature_df, rain_df, on= ( \"지점명 \"일시 ) how= \"outer H ) df_mer ge. 1 .head()</td></tr></tbody></table>\n<br><h1 id='67' style='font-size:20px'>Out[18]:</h1>\n<br><table id='68' style='font-size:16px'><thead><tr><td>지점명</td><td>일시</td><td>평균기온</td><td>최고기온</td><td>최고기온시각</td><td>최저기온</td><td>최저기온시각</td><td>일교차</td><td>강수량</td><td>1시간최다강수량</td><td>1시간최다강수량시각</td></tr></thead><tbody><tr><td>0 서울</td><td>2022-01-01</td><td>-4.3</td><td>2.3</td><td>15:44</td><td>-10.2</td><td>7:10</td><td>12.5</td><td>NaN</td><td>NaN</td><td>NaN</td></tr><tr><td>1 서울</td><td>2022-01-02</td><td>-1.3</td><td>3.0</td><td>15:51</td><td>-5.2</td><td>23:56</td><td>8.2</td><td>0.3</td><td>NaN</td><td>NaN</td></tr><tr><td>2 서울</td><td>2022-01-03</td><td>-1.9</td><td>2.5</td><td>15:42</td><td>-8.0</td><td>7:14</td><td>10.5</td><td>0.0</td><td>NaN</td><td>NaN</td></tr><tr><td>3 서울</td><td>2022-01-04</td><td>-2.5</td><td>1.0</td><td>14:45</td><td>-5.6</td><td>24:00:00</td><td>6.6</td><td>0.0</td><td>NaN</td><td>NaN</td></tr><tr><td>4 서울</td><td>2022-01-05</td><td>-2.8</td><td>1.9</td><td>15:18</td><td>-7.8</td><td>6:34</td><td>9.7</td><td>NaN</td><td>NaN</td><td>NaN</td></tr></tbody></table>\n<table id='69' style='font-size:14px'><thead></thead><tbody><tr><td>In [33] :</td><td>▼ # 파티션 컬럼 생성 df _merge_1[ \"partition\" ] = pd to_datet ime(df_merge_ 1[ \" 일시 == ] ) · dt · str ft ime( \"%Y%m ) df _mer ge_ 1 head()</td></tr><tr><td>Out [33] :</td><td>Export this dataframe (5 rows, 12 cols)</td></tr></tbody></table>\n<table id='70' style='font-size:14px'><thead><tr><td></td><td>지점명</td><td>일시</td><td>평균기온</td><td>최고기온</td><td>최고기온시각</td><td>최저기온</td><td>최저기온시각</td><td>일교차</td><td>강수량</td><td>1시간최다강수량 1시간최다강수량시각</td><td>partition</td></tr></thead><tbody><tr><td>0</td><td>서울</td><td>2022-01-01</td><td>-4.3</td><td>2.3</td><td>15:44</td><td>-10.2</td><td>7:10 12.5</td><td>NaN</td><td>NaN</td><td>NaN</td><td>202201</td></tr><tr><td>1</td><td>서울</td><td>2022-01-02</td><td>-1.3</td><td>3.0</td><td>15:51</td><td>-5.2</td><td>23:56</td><td>8.2</td><td>0.3 NaN</td><td>NaN</td><td>202201</td></tr><tr><td>2</td><td>서울</td><td>2022-01-03</td><td>-1.9</td><td>2.5</td><td>15:42</td><td>-8.0 7:14</td><td>10.5</td><td>0.0</td><td>NaN</td><td>NaN</td><td>202201</td></tr><tr><td>3</td><td>서울</td><td>2022-01-04</td><td>-2.5</td><td>1.0</td><td>14:45 -5.6</td><td>24:00:00</td><td>6.6</td><td>0.0</td><td>NaN</td><td>NaN</td><td>202201</td></tr><tr><td>4</td><td>서울</td><td>2022-01-05</td><td>-2.8</td><td>1.9</td><td>15:18 -7.8</td><td>6:34</td><td>9.7</td><td>NaN</td><td>NaN</td><td>NaN</td><td>202201</td></tr></tbody></table>\n<figure id='71'><img style='font-size:14px' alt=\"In [31] : ▼ # 폴더 객체\nf inal _fol der data i ku  Fol der ( ' 아웃풋 )\n# 파티션별 업로드\n▼ for part , df_part in df_merge_1 .groupby('partition ' ) :\nfile_path = f'{part}/merged_weather_{part} CSV'\n# CSV를 바이트로 인코딩\ncsv_bytes = df_part . to_csv( index-False) · encode( 'utf-8-sig )\nbuffer = io.Bytesl0(csv_bytes)\nf ina I folder · up load_stream(fi le_path, buffer )\" data-coord=\"top-left:(48,862); bottom-right:(1538,1104)\" /></figure>\n<h1 id='72' style='font-size:16px'>아웃풋</h1>\n<br><h1 id='73' style='font-size:22px'>아웃풋</h1>\n<figure id='74'><img style='font-size:14px' alt=\"Storage Partitioning Advanced\nPattern : /%Y%M/.*\nDimension\nName : month Period: MONTH\nD TIME DIMENSION ADD DISCRETE DIMENSION\nThere can only be one time dimension.\nQ LIST PARTITIONS\" data-coord=\"top-left:(695,236); bottom-right:(1708,770)\" /></figure>\n<br><figure id='75'><img style='font-size:14px' alt=\"\n아웃풋 36 files, 0 KB\nName Last Modification Size\n202201\n202202\n■ 202203\n■ 202204\n202205\n202206\n202207\n202208\n202209\n202210\n202211\n202212\n202301\nDrag and drop your files here or ADD AFILE\" data-coord=\"top-left:(31,192); bottom-right:(698,800)\" /></figure>\n<br><h1 id='76' style='font-size:20px'>**Partition: 대용량 시점별, 시계열, 날짜별 데이터를 효율적으로 유지보수 및 관리하기 위한 방식</h1>\n<p id='77' data-category='paragraph' style='font-size:18px'>DE 분산처리 개념을 생각해보면, kafka 던 spark던 병렬적으로 빠르게 처리해야 하는데, 분산처리가 가능<br>토록 하는 핵심 단위가 파티션!</p>\n<h1 id='78' style='font-size:22px'>● 해당 Notebook은 \"기온관련\",\"강수량관련\" Dataiku Folder(Datasets객체)<br>를 사용</h1>\n<h1 id='79' style='font-size:20px'>● 만들고자 하는 파이프라인 정의:</h1>\n<br><p id='80' data-category='list' style='font-size:18px'>● 두 폴더 내 파일을 Datasets로 하여, key 기준 merge 후 일자의 yyyymm 기준<br>partitioning하여 월별 관리 용이하도록 적재!</p>\n<p id='81' data-category='list' style='font-size:16px'>● Notebook은 로직 설계 및 디버깅 용.. 그럼 실제 파이프라인에 반영하려면?</p>\n<p id='82' data-category='list' style='font-size:14px'>● \"Recipe\"라는 아이템을 사용해야 함. Notebook을 Recipe로 전환!!</p>\n<figure id='83'><img style='font-size:14px' alt=\"Ybigta </> do ... Notebooks esign Node Search DSS.\nmerging {} CODE SAMPLES + CREATE RECIPE C FORCE RELOAD EDIT IN CODE STUDIO ACTIONS\nJupyter merging Last Checkpoint: 한 시간 전 (autosaved)\nFile Edit View Insert Cell Kernel Widgets Help Not Trusted I Python in CPU-M-1-cpu-4Gb-Ram (builtin env)\n↑ ↓ Run C ▶▶ Code\" data-coord=\"top-left:(44,826); bottom-right:(1680,1063)\" /></figure>\n<h1 id='84' style='font-size:22px'>Recipe</h1>\n<br><p id='85' data-category='paragraph' style='font-size:20px'>● 실제 파이프라인 내 input & output datasets를 연결하는 Edge<br>● Notebook(ipynb) 을 활용해 설계 후 디버깅 마친 로직을 파이프라인화 (py 역할)</p>\n<figure id='86'><img style='font-size:14px' alt=\"recipe_from_notebook_merging Code Inputs/Outputs Advanced History SAVED! EDIT IN NOTEBOOK ACTIONS\nInput Output\n아웃풋\n강수량\nPartitioned by: month (period: month)\nADD\n기온관련\nADD\" data-coord=\"top-left:(1,424); bottom-right:(1753,795)\" /></figure>\n<p id='87' data-category='list' style='font-size:16px'>· Recipe의 필수 조건: \"Output Dataset (Dataiku객체)\"이 존재해야 함</p>\n<p id='88' data-category='list' style='font-size:18px'>● 본질적 특징: 파일이던 폴더던, 한 Output Dataset은 Parent Recipe를 단 하나만 가질 수 있음</p>\n<br><p id='89' data-category='list' style='font-size:14px'>● 서로 다른 두 recipe가 같은 Output Dataset을 산출 불가<br>● 1 번 recipe의 output dataset이 2번 recipe의 input dataset이 될 수는 있음.</p>\n<h1 id='90' style='font-size:22px'>FLOW(파이프라인 실체)</h1>\n<br><h1 id='91' style='font-size:16px'>파란 박스는 Dataiku Dataset 中 \"Folder\"을 의미</h1>\n<h1 id='92' style='font-size:18px'>주황 아이템은 Dataiku Recipe 의미</h1>\n<br><figure id='93'><img style='font-size:14px' alt=\"강수량\n2\n기온관련 아웃풋\" data-coord=\"top-left:(76,260); bottom-right:(449,556)\" /></figure>\n<br><h1 id='94' style='font-size:20px'>강수량, 기온관련 폴더를 인풋으로 사용해 아웃풋 dataset에 적재!</h1>\n<h1 id='95' style='font-size:16px'>아래 사진에 노랑 원은? Custom Recipe가 아니고, Dataiku 내장 정제&가공 item</h1>\n<br><figure id='96'><img style='font-size:14px' alt=\"2\nAPI_keys\ncluster_ combinations cluster_ driving times T\nkaggle submission\ntest. test_raw_ prepared\nml. dataset_ clustered O\nml. dataset_prepared\nml. dataset_ cluster\ntaxifares, data T window\nkaggle submissio test scored\nscored prepared\ncluster models fare\ntrain_raw train_sample ml_ dataset\nts. eval_results\nall\nfare_ revenue. forecast\n↑ C\ndataset_ geojoined fares time\nNYC_ parking garage NYC_ parking, garage NYC_ garages_geoloc\nlist prepared\" data-coord=\"top-left:(3,624); bottom-right:(1747,1084)\" /></figure>\n<h1 id='97' style='font-size:20px'>Scenario</h1>\n<br><h1 id='98' style='font-size:18px'>● Langgraph에 비유하자면, 앞선 item인 Recipe는 엣지!</h1>\n<h1 id='99' style='font-size:16px'>● 그럼 결국 전체 파이프라인을 구동시키려면? Main함수 필요</h1>\n<br><h1 id='100' style='font-size:14px'>● 랭그래프 구동 시 \"Next Node\"가 None이거나 End로 정의된 노드에 도달하면<br>플로우가 종료되는 것과 비슷</h1>\n<p id='101' data-category='paragraph' style='font-size:16px'>● Scenario 지정 시 파이프라인을 부분적으로도, 전체적으로도 구동 가능!</p>\n<p id='102' data-category='list' style='font-size:18px'>● Scenario Build 시 타겟 Output Dataset를 지정하면, 해당 데이터셋을<br>만드는 데에 필요한 모든 Recipe가 Scenario에 배정되는 구조</p>\n<p id='103' data-category='list' style='font-size:20px'>● 즉 최종 데이터셋을 Scenario의 타겟 데이터셋으로 지정 시 전체 파<br>이프라인 구동, 중간 데이터셋을 지정 시 딱 타겟 데이터셋을 만드는<br>마지막 Recipe까지 작동</p>\n<h1 id='104' style='font-size:18px'>Scenario Build</h1>\n<figure id='105'><img style='font-size:14px' alt=\"ybigta_jjang Settings Steps Last runs History SAVED! ▶ RUN ▼ ACTIONS\nRun\nAuto-triggers OFF Run the scenario when a trigger activates.\nRun as Last author of scenario (kimhyenv ▼\nTriggers ADD TRIGGER\nReporters ADD REPORTER\nTest\nMark as a test scenario Mark it as a test scenario to get specific information about its last execution in the test dashboard\nLearn more on testing with DSS in our Knowledge base\" data-coord=\"top-left:(100,347); bottom-right:(1667,971)\" /></figure>\n<h1 id='106' style='font-size:22px'>Scenario Build - Trigger 기반 자동화</h1>\n<figure id='107'><img style='font-size:14px' alt=\"Auto-triggers ON Run the scenario when a trigger activates.\nSuppress triggers while running ✓ Triggers don't execute while the scenario is running\nDelay runs ✓ Triggers firing during a scenario run enqueue another scenario run\nSquash delayed runs ✓ Runs enqueued during a scenario run are squashed into a single run Time-based trigger\nTrigger on dataset change\nRun as Last author of scenario (kimhyen) ▼\nTrigger on sql query change\nTrigger after scenario\nCustom trigger\nTriggers ADD TRIGGER ▼\" data-coord=\"top-left:(86,270); bottom-right:(1610,849)\" /></figure>\n<br><h1 id='108' style='font-size:20px'>Reporters</h1>\n<br><p id='109' data-category='paragraph' style='font-size:14px'>ADD REPORTER ▼</p>\n<p id='110' data-category='paragraph' style='font-size:16px'>Ex 1) 당사 작월 매출실적 집계 완료 → SAP ERP에 작월 파티션 생성 → 연동된 S3에 새로운 파티션 감지<br>→ Trigger on Dataset Change 설정 시 반응 → Scenario 자동 Run → 파이프라인 구동</p>\n<br><p id='111' data-category='paragraph' style='font-size:18px'>Ex 2) 태블로, BI와 연결된 대시보드 \"백데이터\" 생성 Scenario 이후 대시보드 업데이트 및 배포 Scenario</p>\n<h1 id='112' style='font-size:18px'>Scenario Build - Trigger 기반 자동화</h1>\n<header id='113' style='font-size:14px'>ON</header>\n<br><figure id='114'><img style='font-size:16px' alt=\"Time-based\nRepeat every 1 hours\nStarting from 2025-07-08 □ 오전 12:19\nUsing timezone Server timezone (UTC)\" data-coord=\"top-left:(59,453); bottom-right:(1081,801)\" /></figure>\n<h1 id='115' style='font-size:20px'>● Time-based: 단순 시간 간격 지정 기반, 실시간 크롤링에 적합</h1>\n\n<br><p id='117' data-category='paragraph' style='font-size:16px'>Settings Steps Last runs History</p>\n<br><p id='118' data-category='paragraph' style='font-size:14px'>SAVE</p>\n<br><p id='119' data-category='paragraph' style='font-size:14px'>RUN ▼</p>\n<br><header id='120' style='font-size:14px'>ACTIONS</header>\n<table id='121' style='font-size:16px'><thead></thead><tbody><tr><td>□</td><td rowspan=\"2\"><figure><img alt=\"Custom Python Step #3\nThis step runs Python code, which can use the Scenario API.\nCode env Inherit project default (DSS builtin env)\nScript 1 from datetime import datetime\n2 # 다이나믹 파라미터 지정 , 자동화 시 하드코딩 기반 X, 유연한 파라미터 설정 needed\n3\n4 today = datetime. today()\n5\ncurrent_ym = today strftime('%Y%m')\nIgnore failure Continue the scenario even if the script fails\nRun this step If no prior step failed\nMaximal number of retries 0 Number of additional attempts before considering the step definitively failed\" data-coord=\"top-left:(409,214); bottom-right:(1618,878)\" /></figure></td></tr><tr><td><table><thead></thead><tbody><tr><td>Custom Python Step #3</td></tr><tr><td></td></tr><tr><td>Build Step #1</td></tr><tr><td>Export dashboard Step #2</td></tr></tbody></table> ADD STEP</td></tr></tbody><caption id='116' style='font-size:18px'>ybigta_jjang</caption></table>\n<h1 id='122' style='font-size:20px'>● 하드코딩 하면 안되는 다이나믹 파라미터 지정 가능(시간,날짜 등)</h1>\n<br><p id='123' data-category='paragraph' style='font-size:20px'>· Ex) 월 별 KPI 업데이트→ 현월, 작월 등 날짜 파라미 터는 이 번 달 기준으로 자동 전환</p>\n<br><h1 id='124' style='font-size:22px'>● Recipe는 Parent Scenario의 파라미 터를 상속받아 사용</h1>\n<p id='125' data-category='paragraph' style='font-size:16px'>Build Step #1</p>\n<p id='126' data-category='paragraph' style='font-size:16px'>Export dashboard Step #2</p>\n<br><figure id='127'><img style='font-size:14px' alt=\"Export dashboard Step #2\nThis step generates a dashboard export that you store in a managed folder.\nDashboard - No dashboard selected -\nFile Type PDF ▼\nSize A4 ▼\nOrientation Landscape\nDestination folder - No folder selected -\nFilters by Slide + ADD NEW FILTER\nIgnore failure Continue the scenario even if the creation fails\nRun this step If no prior step failed\nMaximal number of retries 0 Number of additional attempts before considering the step definitively failed\" data-coord=\"top-left:(468,159); bottom-right:(1655,781)\" /></figure>\n<h1 id='128' style='font-size:20px'>● 정기적으로 보고받 는 차트를 생성하는 파이프라인일 경우,<br>Dashboard로 추출 가능, 이걸 Slack, gmail로 보 낼수도!</h1>\n<h1 id='129' style='font-size:20px'>Build</h1>\n<br><p id='130' data-category='paragraph' style='font-size:20px'>ybigta _jjang</p>\n<p id='131' data-category='paragraph' style='font-size:16px'>This step builds one or several \"computable\" items of the Flow (build datasets, build managed folders, train saved models)</p>\n<p id='132' data-category='paragraph' style='font-size:16px'>For partitioned datasets (and folders), you can use partitioning specs</p>\n<p id='133' data-category='paragraph' style='font-size:14px'>Item</p>\n<br><p id='134' data-category='paragraph' style='font-size:16px'>Partitions</p>\n<br><table id='135' style='font-size:18px'><thead></thead><tbody><tr><td>아웃풋</td><td>YYYYMM</td><td></td></tr></tbody></table>\n<h1 id='136' style='font-size:14px'>+ ADD ITEM</h1>\n<figure id='137'><img style='font-size:14px' alt=\"Build mode Build only this\nSync. Hive metastore ✓\nOutcome on warnings Warning Outcome of the step when the check produces warnings\nIgnore failure Don't mark the scenario as failed, even if the build fails (warning: the datasets' states may be incoherent)\nRun this step If no prior step failed\nMaximal number of retries 0 Number of additional attempts before considering the step definitively failed\" data-coord=\"top-left:(152,612); bottom-right:(1363,919)\" /></figure>\n<p id='138' data-category='paragraph' style='font-size:22px'>· 핵심 Build 블록: Build 하고자 하는 Item(아웃풋 파일)을 지정하면, 해당 item의 parent Recipe<br>가 자동으로 할당 → 본 Scenario는 비로소 해당 Recipe의 Parent Scenario가 되는 것!</p>\n<h1 id='139' style='font-size:22px'>Dataiku Jobs - Recipe/Scenario 실행 결과 모니터링</h1>\n<p id='140' data-category='paragraph' style='font-size:20px'>그래서.. Pipeline의 main 함수와도 같은 Scenario를 돌리면? 자식 Recipe가 돌아감 성공!<br>에러가 나면 오류 메시지 및 Pyspark log등을 보여줌.</p>\n<figure id='141'><img style='font-size:16px' alt=\"� Search jobs...\nNewest ▼ Done ▼ All users ▼ Clear filters\nBuild 아웃풋 (2025-07)\nK\n9 minutes ago I 23s\nBuild 아웃풋 (2025-07)\n✓ K\n13 minutes ago I 22s\" data-coord=\"top-left:(3,363); bottom-right:(553,645)\" /></figure>\n<br><figure id='142'><img style='font-size:16px' alt=\"강수량\nG\n기온관련 아웃풋\" data-coord=\"top-left:(762,387); bottom-right:(1002,594)\" /></figure>\n<br><p id='143' data-category='paragraph' style='font-size:14px'>↙</p>\n<h1 id='144' style='font-size:20px'>1 Activity</h1>\n<h1 id='145' style='font-size:16px'>� Search activities</h1>\n<br><p id='146' data-category='paragraph' style='font-size:16px'>1 HIDE FLOW</p>\n<br><p id='147' data-category='paragraph' style='font-size:18px'>Activity Log ☑ CHOOSE LOG</p>\n<br><p id='148' data-category='paragraph' style='font-size:18px'>Show summary RECIPE FOLDER</p>\n<p id='149' data-category='paragraph' style='font-size:18px'>娃 STATUS</p>\n<p id='150' data-category='paragraph' style='font-size:20px'>recipe_from_notebook_...</p>\n<br><p id='151' data-category='paragraph' style='font-size:16px'>2025-07</p>\n<br><p id='152' data-category='paragraph' style='font-size:16px'>22s</p>\n<br><table id='153' style='font-size:14px'><thead></thead><tbody><tr><td>[15:45:09]</td><td>[INFO] [dku] running recipe_ from_notebook_merging_2825-07 ·</td></tr><tr><td>[15:45:09]</td><td>[INFO] [dku] running recipe_ from_notebook_merging_2825-07 - DSS startup: jek version:13.5.5</td></tr><tr><td>[15:45:09]</td><td>[INFO] [dku] running recipe_ from_notebook_merging_2825-87 - DSS home: /data/dataiku/datadir</td></tr><tr><td>[15:45:09]</td><td>[INFO] [dku] running recipe_from_notebook_menging_2825-07 - OS: Linux 6.1.148-154.222.amzn2023. x86_ 64 amd64 - Java: Red Hat, Inc.</td></tr><tr><td colspan=\"2\">17.0.15</td></tr><tr><td>[15:45:09]</td><td>[INFO] [dku. flow. jobrunner] running recipe_ from_notebook_ merging_2025-07 - Allocated a slot for this activity!</td></tr><tr><td>[15:45:09]</td><td>[DEBUG] [dku. flow.jobrunner] running recipe_ from_notebook_ merging_2025-07 = Calling runActivity</td></tr><tr><td>[15:45:09]</td><td>[INFO] [dku. flow.jobrunner] running recipe_from_notebook_merging_2825-87 - Run activity</td></tr><tr><td>[15:45:09]</td><td>[INFO] [dku. flow.activity] running recipe_ from_notebook_merging_2825-07 - Executing default pre-activity lifecycle hook</td></tr><tr><td>[15:45:09]</td><td>[INFO] [dku. managedfolders.handler] running recipe_from_notebook_merging_2825-07 - Create provider for YBIGTA.B9eogLz5 with path</td></tr><tr><td>/managed-dss-data/YBISTA/B9eogLz5</td><td></td></tr><tr><td colspan=\"2\">[15:45:09] [INFO] [dku. fs.s3] running recipa_from_notabook_merging_2825-87 - Created S3 FS provider bucket=gis-data-ap-northeast-1</td></tr><tr><td colspan=\"2\">www.dw.come364mo+584.tamphatchatcheqd from 'space-e80bfcb2-dku/node-b7561d7d' and · /managed-dss- data/YBIGTA/B9eogLz5 · [15:45:09] Checking ready</td></tr><tr><td></td><td>[INFO] [dku. flow. activity] running recipe_from_notebook_menging_2825-87 - if sources are</td></tr><tr><td>[15:45:10]</td><td>[DEBUG] [dku. db. internal] running recipe_ from_notebook_merging_2825-87 - Created DSSDBConnection dssdb-h2-flow_state-QCkDOus</td></tr><tr><td>[15:45:10]</td><td>[INFO] [dku. flow. activity] running recipe_from_notebook_menging_2825-07 - Will check readiness of YBIGTA.ZqHz1KzY p=NP</td></tr><tr><td>[15:45:10]</td><td>[INFO] [dku.managedfolders.handler] running recipe_from_notebook_merging_2825-87 - Enumerating managed folder prefix= Create YBIGTA.ZqHz1KzY with path</td></tr><tr><td colspan=\"2\">[15:45:10] [INFO] [dku.managedfolders.handler] running recipe_from_notebook_merging_2825-87 - provider for /managed-dss-data/YBIGTA/ZqHz1KzY</td></tr><tr><td colspan=\"2\">[15:45:10] [INFO] [dku. fs.s3] running recipe_from_notebook_merging_2825-67 - Created S3 FS provider bucket=gis-data-ap-northeast-1 whittiedwaradeetiw-who/But,opprostalizicall from · space-e00bfcb2-dku/node-b7561d7d' and · /managed-dss-</td></tr><tr><td colspan=\"2\">data/YBIGTA/ZqHz1KzY'</td></tr><tr><td colspan=\"2\">[15:45:10] [INFO] [dku. aws . credentials] running recipe_fron_notebook_merging_2825-87 - AWS connection=dataiku-managed-storage authCtx=kimhyenwoon@gmail . com assuming role=arn: aws:iam: NE9205mlicamomed.dwate Bas.twhodes Hw [15:45:10] [DEBUG] [dku. aws . credentials] running recipe_from_notebook_merging_2625-87 - Credentials cache miss</td></tr></tbody></table>\n<h1 id='154' style='font-size:22px'>번외 - Builtin Recipe가 뭐가 있는데?</h1>\n<br><h1 id='155' style='font-size:20px'>● Custom Python Recipe 최소한으로 사용, 빌트인(No-code)</h1>\n<br><figure id='156'><img style='font-size:14px' alt=\"Visual\naA LLM Recipe\nNew recip\n</> Code\nHadoop & Spark\nNo plugins yet. Visit the\nstore.\" data-coord=\"top-left:(277,305); bottom-right:(511,500)\" /></figure>\n<br><h1 id='157' style='font-size:18px'>Join: 병합 기준 key 자동인식</h1>\n<h1 id='158' style='font-size:18px'>Statistics: EDA할 때 자주 씀</h1>\n<h1 id='159' style='font-size:18px'>Sort: 정렬을 유지해야 하는 컬럼이 흐트<br>러졌을 때 자동 유지</h1>\n<h1 id='160' style='font-size:16px'>Group: groupby sum 빈번히 사용</h1>\n<br><figure id='161'><img style='font-size:14px' alt=\"Visual\nPrompt aA LLM Recipes\nClassify text </> Code\nNew recipe\nSummarize text Hadoop & Spark\nNo plugins yet. Visit the\nER D Embed dataset\nstore.\nFine tune\nEvaluate LLM\nPython � Code\nSQL SQL Hadoop 8\nNo plugins yet. VIS\nShell\nSpark SQL Hadoop & Spark\nNo plugins ye New recip\nPySpark\" data-coord=\"top-left:(943,305); bottom-right:(1749,1012)\" /></figure>\n<br><p id='162' data-category='list' style='font-size:14px'>Data preparation<br>Sync<br>Y Sample / Filter<br>Group<br>Distinct<br>Window<br>Join<br>Fuzzy join<br>Geo join<br>Split<br>Top N<br>に Sort<br>B Pivot<br>Stack vertically<br>Generate features<br>Generate statistics<br>Labeling<br>Merge folders<br>List Folder Contents<br>Embed documents<br>Push to Editable<br>Export</p>\n<h1 id='163' style='font-size:20px'>마무리하며</h1>\n<br><p id='164' data-category='list' style='font-size:14px'>● 실무 툴이다 보니, 학생들은 쓸 용도 및 방안 적합 X</p>\n<p id='165' data-category='list' style='font-size:16px'>● AutoML 등 다양한 기능 탑재 + 여러 플랫폼들과 협약으로 인한 무시무<br>시한 가격(AutoML 진짜 좋은데 무료에선 적합한 모델 찾는것도 스스로<br>해야해서 못보여드린게 아쉽.. 원래는 모델선정이랑 튜닝까지 해줌)</p>\n<p id='166' data-category='list' style='font-size:18px'>● 이미 DX가 이뤄졌거나, 이뤄지는 중인 조직에 들어가야 사용 가능<br>(Databricks, Snowflake 등 경쟁사도 마찬가지)</p>\n<p id='167' data-category='list' style='font-size:18px'>● 한국어 교육 영상이 없어서 직접 써보면서 배워야 함, 다만 SI 회사/ IT컨<br>설팅/ 인하우스 데이터조직에 있으면 Dataiku, Databricks, Snowflake는<br>거의 무조건 쓸 상황이 발생. 다룰 줄 알아야 한다..!</p>",
    "1M7AkUDsp8pQP94V0hgm_ZKXBzKTrCSPV": "<h1 id='0' style='font-size:18px'>Agent</h1>\n<br><h1 id='1' style='font-size:14px'>2025-2 공유세션</h1>\n<p id='2' data-category='paragraph' style='font-size:18px'>Agentic Workflow</p>\n<figure id='3'><img alt=\"\" data-coord=\"top-left:(407,1159); bottom-right:(1252,2051)\" /></figure>\n<br><figure id='4'><img alt=\"\" data-coord=\"top-left:(2923,1530); bottom-right:(3429,2138)\" /></figure>\n<br><p id='5' data-category='paragraph' style='font-size:14px'>9</p>\n<p id='6' data-category='paragraph' style='font-size:18px'>LLM-Based Agent</p>\n<figure id='7'><img alt=\"\" data-coord=\"top-left:(386,1083); bottom-right:(873,2016)\" /></figure>\n<br><figure id='8'><img alt=\"\" data-coord=\"top-left:(1293,805); bottom-right:(2085,2035)\" /></figure>\n<br><figure id='9'><img alt=\"\" data-coord=\"top-left:(2354,1020); bottom-right:(3795,2030)\" /></figure>\n<p id='10' data-category='paragraph' style='font-size:14px'>9</p>\n<h1 id='11' style='font-size:20px'>Reflection</h1>\n<figure id='12'><img alt=\"\" data-coord=\"top-left:(297,603); bottom-right:(2001,2019)\" /></figure>\n<br><p id='13' data-category='list'></p>\n<p id='14' data-category='paragraph' style='font-size:16px'>https://arxiv.org/abs/2303.17651<br>https://arxiv.org/abs/2303.11366</p>\n<p id='15' data-category='paragraph' style='font-size:14px'>9</p>\n<h1 id='16' style='font-size:20px'>Tool Use</h1>\n<figure id='17'><img alt=\"\" data-coord=\"top-left:(305,642); bottom-right:(1989,1787)\" /></figure>\n<br><p id='18' data-category='list'></p>\n<p id='19' data-category='paragraph' style='font-size:16px'>https://arxiv.org/abs/2305.15334<br>https://arxiv.org/abs/2303.11381</p>\n<br><p id='20' data-category='paragraph' style='font-size:14px'>9</p>\n<h1 id='21' style='font-size:20px'>Planning</h1>\n<figure id='22'><img alt=\"\" data-coord=\"top-left:(290,629); bottom-right:(1676,1770)\" /></figure>\n<br><p id='23' data-category='list'></p>\n<p id='24' data-category='paragraph' style='font-size:16px'>https://arxiv.org/abs/2201.11903<br>https://arxiv.org/abs/2303.17580</p>\n<p id='25' data-category='paragraph' style='font-size:14px'>9</p>\n<h1 id='26' style='font-size:14px'>Context Engineering</h1>\n<figure id='27'><img alt=\"\" data-coord=\"top-left:(231,399); bottom-right:(1696,855)\" /></figure>\n<h1 id='28' style='font-size:14px'>Context Engineering</h1>\n<figure id='29'><img alt=\"\" data-coord=\"top-left:(111,400); bottom-right:(543,945)\" /></figure>\n<br><figure id='30'><img alt=\"\" data-coord=\"top-left:(560,399); bottom-right:(995,938)\" /></figure>\n<br><figure id='31'><img alt=\"\" data-coord=\"top-left:(1024,408); bottom-right:(1446,940)\" /></figure>\n<br><figure id='32'><img alt=\"\" data-coord=\"top-left:(1467,412); bottom-right:(1899,935)\" /></figure>\n<h1 id='33' style='font-size:20px'>Multi Agent</h1>\n<figure id='34'><img alt=\"\" data-coord=\"top-left:(273,620); bottom-right:(1715,1810)\" /></figure>\n<br><p id='35' data-category='list'></p>\n<p id='36' data-category='paragraph' style='font-size:16px'>https://arxiv.org/abs/2307.07924<br>https://arxiv.org/abs/2308.08155</p>\n<p id='37' data-category='paragraph' style='font-size:14px'>9</p>\n<h1 id='38' style='font-size:18px'>RAG</h1>\n<br><h1 id='39' style='font-size:14px'>2025-2 공유세션</h1>\n<h1 id='40' style='font-size:20px'>RAG 등장 배경</h1>\n<h1 id='41' style='font-size:16px'>• LLM의 한계</h1>\n<h1 id='42' style='font-size:14px'>??</h1>\n<p id='43' data-category='list'></p>\n<h1 id='44' style='font-size:14px'>RAG 등장 배경</h1>\n<p id='45' data-category='list'></p>\n<p id='46' data-category='list'></p>\n<br><figure id='47'><img alt=\"\" data-coord=\"top-left:(997,455); bottom-right:(1946,926)\" /></figure>\n<h1 id='48' style='font-size:18px'>Naïve RAG</h1>\n<h1 id='49' style='font-size:14px'>LLM에 '검색' 기능을 추가하여 기존 LLM의 답변 생성 과정을 향상시킨 초기 RAG 모델</h1>\n<figure id='50'><img alt=\"\" data-coord=\"top-left:(332,335); bottom-right:(1659,1080)\" /></figure>\n<h1 id='51' style='font-size:18px'>[Part1] Vector DB 구축하기</h1>\n<h1 id='52' style='font-size:14px'>Document Loading → Chunking → Embedding → Vector DB에 저장</h1>\n<figure id='53'><img alt=\"\" data-coord=\"top-left:(318,328); bottom-right:(1659,1090)\" /></figure>\n<h1 id='54' style='font-size:20px'>[Part1] Document Loading</h1>\n<br><h1 id='55' style='font-size:14px'>다양한 형태의 문서를 RAG 전용 객체로 불러들이는 절차</h1>\n<h1 id='56' style='font-size:16px'>• 데이터 형식 고려</h1>\n<br><h1 id='57' style='font-size:16px'>• Excel/CSV, PDF, txt …</h1>\n<h1 id='58' style='font-size:16px'>• 텍스트 종류 고려</h1>\n<br><h1 id='59' style='font-size:16px'>• 한글 인코딩, 특수 문자 …</h1>\n<h1 id='60' style='font-size:16px'>• 메타데이터 종류 고려</h1>\n<br><h1 id='61' style='font-size:16px'>• 페이지 번호, 표 차트, 좌표 …</h1>\n<br><figure id='62'><img alt=\"\" data-coord=\"top-left:(888,379); bottom-right:(1846,934)\" /></figure>\n<h1 id='63' style='font-size:18px'>[Part1] Chunking(Text Splitting)</h1>\n<h1 id='64' style='font-size:14px'>큰 문서를 처리가 쉽도록 문단, 문장 또는 구 단위의 작은 크기(chunk)로 분할하는 과정</h1>\n<p id='65' data-category='paragraph' style='font-size:14px'>• LLM 모델이나 API의 입력 크기에 대한 제한이 있기 때문에, 제한에 걸리지 않도록 적정한 크기로 텍스트의 길이를 줄일 필요가 있음.</p>\n<br><p id='66' data-category='list' style='font-size:14px'>• 더 큰 청크: 더 많은 컨텍스트를 제공할 수 있지만, 더 많은 노이즈(관련 없는 맥락을 포함)를 생성, 더 긴 처리 시간과 더 높은 비용이 필요<br>• 더 작은 청크: 문장을 더 많이 조각 내며, 충분한 컨텍스트가 부족할 수 있지만 노이즈는 적음, 검색 횟수를 개선하고 처리 시간을 단축</p>\n<br><h1 id='67' style='font-size:14px'>• 적절히 조절된 크기로 문서를 분할하는 경우 검색 결과의 정확성과 관련도가 크게 향상될 수 있음.</h1>\n<h1 id='68' style='font-size:14px'>→ 문장을 적절한 크기로 나누는 것이 RAG 시스템 결과의 충실도(Faithfulness) 및 관련성(Relevancy)에 영향을 줌</h1>\n<footer id='69' style='font-size:14px'>※충실도: 응답이 환각인지 또는 검색된 텍스트와 일치하는지 측정.<br>※관련성: 검색된 텍스트와 응답이 쿼리와 일치하는지 측정.</footer>\n<h1 id='70' style='font-size:14px'>[Part1] Chunking(Text Splitting)</h1>\n<figure id='71'><img alt=\"\" data-coord=\"top-left:(562,537); bottom-right:(983,660)\" /></figure>\n<br><figure id='72'><img alt=\"\" data-coord=\"top-left:(560,383); bottom-right:(981,508)\" /></figure>\n<figure id='73'><img alt=\"\" data-coord=\"top-left:(562,853); bottom-right:(974,974)\" /></figure>\n<br><figure id='74'><img alt=\"\" data-coord=\"top-left:(560,690); bottom-right:(990,820)\" /></figure>\n<h1 id='75' style='font-size:14px'>[Part1] Chunking(Text Splitting)</h1>\n<figure id='76'><img alt=\"\" data-coord=\"top-left:(587,627); bottom-right:(656,733)\" /></figure>\n<br><figure id='77'><img alt=\"\" data-coord=\"top-left:(286,723); bottom-right:(924,896)\" /></figure>\n<h1 id='78' style='font-size:20px'>[Part1] Embedding</h1>\n<h1 id='79' style='font-size:18px'>텍스트의 의미나 문맥을 숫자로 이뤄진 벡터로 변환하는 과정</h1>\n<p id='80' data-category='list' style='font-size:18px'>• Semantic Search 작업 수행<br>• 문서에 적합한 임베딩 모델을 선택하는 것이 중요<br>• 임베딩 모델: OpenAIEmbeddings, GoogleGenerativeAIEmbeddings, HuggingFaceEmbeddings, OllamaEmbeddings 등</p>\n<figure id='81'><img alt=\"\" data-coord=\"top-left:(210,576); bottom-right:(822,941)\" /></figure>\n<br><p id='82' data-category='paragraph' style='font-size:16px'>Embedding Leaderboard (multilingual)</p>\n<footer id='83' style='font-size:14px'>https://arxiv.org/abs/2502.13595</footer>\n<h1 id='84' style='font-size:20px'>[Part1] Vector DB 저장</h1>\n<h1 id='85' style='font-size:16px'>임베딩된 고차원 벡터들을 저장하고 효율적으로 검색할 수 있게 도와주는 데이터베이스</h1>\n<figure id='86'><img alt=\"\" data-coord=\"top-left:(432,382); bottom-right:(1537,946)\" /></figure>\n<br><h1 id='87' style='font-size:14px'>Vector Database의 춘추전국시대</h1>\n<h1 id='88' style='font-size:18px'>[Part1] Vector DB 저장</h1>\n<figure id='89'><img alt=\"\" data-coord=\"top-left:(372,272); bottom-right:(1643,839)\" /></figure>\n<p id='90' data-category='paragraph' style='font-size:14px'>인덱스 구축(Indexing)<br>벡터 공간에 데이터를 저장하면서, 유사성을 기준으로 클러스터 또는 그래프 구조 생성<br>→ 검색 범위를 줄여 빠르게 유사한 데이터 검색 가능!</p>\n<h1 id='91' style='font-size:18px'>[Part1] Vector DB 구축하기</h1>\n<h1 id='92' style='font-size:14px'>Document Loading → Chunking → Embedding → Vector DB에 저장</h1>\n<figure id='93'><img alt=\"\" data-coord=\"top-left:(319,329); bottom-right:(1660,1089)\" /></figure>\n<p id='94' data-category='paragraph' style='font-size:18px'>[Part2] Retriever</p>\n<p id='95' data-category='paragraph' style='font-size:14px'>질문(쿼리) 임베딩 → 벡터 유사도 비교 → 상위 문서 선정 → 문서 정보 반환</p>\n<figure id='96'><img alt=\"\" data-coord=\"top-left:(331,322); bottom-right:(1670,1080)\" /></figure>\n<p id='97' data-category='paragraph' style='font-size:18px'>[Part2] Retriever</p>\n<h1 id='98' style='font-size:14px'>검색 방식</h1>\n<h1 id='99' style='font-size:20px'>[Part2] Retriever</h1>\n<h1 id='100' style='font-size:14px'>사용자 질문의 의도를 파악하여 고품질 답변 내놓아야 함</h1>\n<p id='101' data-category='list' style='font-size:16px'>• 대충 질문해도 좋은 답변이 나왔으면..<br>→ Multi-query</p>\n<p id='102' data-category='list' style='font-size:16px'>• 앞뒤 문맥을 잘 담았으면..<br>→ Parent-Document</p>\n<h1 id='103' style='font-size:16px'>• 오래된 자료는 덜 참고했으면..</h1>\n<br><h1 id='104' style='font-size:16px'>→ Time-weighted</h1>\n<h1 id='105' style='font-size:20px'>[Part2] Retriever - Multi-query</h1>\n<h1 id='106' style='font-size:16px'>대충 질문해도 찰떡 같이 알아듣도록, 사용자 질문을 여러 개의 유사 질문으로 재생성</h1>\n<figure id='107'><img style='font-size:14px' alt=\"Chunk A\n사용자 쿼리 Vector Store LLM\n와이빅타 어때? 와이빅타 좋아\" data-coord=\"top-left:(128,394); bottom-right:(1767,544)\" /></figure>\n<figure id='108'><img style='font-size:14px' alt=\"재생성 질문\n와이빅타 사람들 어때?\nChunk A, B, C\n사용자 쿼리 재생성 질문 Vector Store LLM\n와이빅타 분위기 어때? 와이빅타 요약\n와이빅타 어때?\n- 사람들: …\n재생성 질문 - 분위기: …\n- 아웃풋: …\n와이빅타 아웃풋 어때?\" data-coord=\"top-left:(120,638); bottom-right:(1768,1024)\" /></figure>\n<h1 id='109' style='font-size:18px'>[Part2] Retriever - Parent Document</h1>\n<h1 id='110' style='font-size:14px'>유사 문서의 부모 문서를 참고하므로, LLM에 추가적인 맥락 제공 가능</h1>\n<figure id='111'><img style='font-size:14px' alt=\"Page 1 Page 2 LLM\n1-1 1-2 1-3 2-1 2-2 2-3\nVector Store\n사용자 쿼리 최종 답변\" data-coord=\"top-left:(139,363); bottom-right:(1765,861)\" /></figure>\n<h1 id='112' style='font-size:20px'>[Part2] Retriever - Time weighted</h1>\n<h1 id='113' style='font-size:16px'>가장 최근에 이용된 문서를 먼저 참고하도록 하여 답변의 Freshness 유지</h1>\n<h1 id='114' style='font-size:14px'>사용자 쿼리</h1>\n<p id='115' data-category='paragraph' style='font-size:14px'>평점 9점 이상인 영화 중 SF 영화를 추천해줘</p>\n<h1 id='116' style='font-size:14px'>사용자 의도</h1>\n<br><h1 id='117' style='font-size:16px'>시간이 지난 만큼 페널티 부여</h1>\n<p id='118' data-category='paragraph' style='font-size:14px'>“최신 영화 중에” + 평점 9점 이상 + SF 영화</p>\n<h1 id='119' style='font-size:18px'>[Part3] Generator</h1>\n<h1 id='120' style='font-size:14px'>프롬프트 → LLM → 최종 응답</h1>\n<figure id='121'><img alt=\"\" data-coord=\"top-left:(334,335); bottom-right:(1662,1077)\" /></figure>\n<h1 id='122' style='font-size:20px'>[Part3] Generator - Prompt</h1>\n<h1 id='123' style='font-size:14px'>검색된 정보를 바탕으로 LLM을 위한 질문 구성</h1>\n<p id='124' data-category='list' style='font-size:16px'>• 지시사항(Instruction)<br>• 쿼리(사용자 입력)<br>• 문맥(검색된 정보)</p>\n<figure id='125'><img alt=\"\" data-coord=\"top-left:(1184,736); bottom-right:(1513,945)\" /></figure>\n<h1 id='126' style='font-size:18px'>[Part3] Generator - LangChain/LangGraph</h1>\n<h1 id='127' style='font-size:14px'>RAG 시스템 구현 프레임워크 – 다다음주에 계속…</h1>\n<figure id='128'><img alt=\"\" data-coord=\"top-left:(282,469); bottom-right:(853,856)\" /></figure>",
    "1jjV1ITZCeSC0PuHdvnI0CiZoCS7a_xd9": "<header id='0' style='font-size:18px'>팀 내규 개정안 ver 1.0</header>\n<h1 id='1' style='font-size:18px'>와이빅타 엔지니어링팀 내규 요약</h1>\n<h1 id='2' style='font-size:18px'>1. 각 팀의 정의</h1>\n<br><h1 id='3' style='font-size:18px'>엔지니어링팀 팀원</h1>\n<br><p id='4' data-category='list' style='font-size:14px'> 엔지니어링팀에 새롭게 합류한 신입 기수<br> 엔지니어링팀에서 교육 세션을 이수한 기존 기수<br> 타 팀에서 의무 활동 기간을 충족하고 이적한 기존 기수<br> 엔지니어링팀을 수료한 인원</p>\n<br><h1 id='5' style='font-size:18px'>액팅 인원</h1>\n<br><p id='6' data-category='paragraph' style='font-size:14px'> 위 3 가지 조건에 해당되며 아직 수료하지 않은 인원</p>\n<h1 id='7' style='font-size:18px'>2. 운영진 구성</h1>\n<br><p id='8' data-category='paragraph' style='font-size:18px'>운영진 직책: 팀장, 부팀장<br>팀장의 역할: 팀 세션 장소 예약, 공지, 학습 환경 조성<br>부팀장의 역할 : 팀장 보조 및 대리, 신입 교육 및 분위기 조성, 기타 관련 업무<br>운영진의 권한</p>\n<br><p id='9' data-category='list' style='font-size:18px'> 팀 활동에 비협조적이거나 불성실한 경우 제명 가능<br> 활동 의무 미이행, 범법 행위, 부적절한 언행 시 제명<br> 수용 인원 초과 시 선발 제한 가능</p>\n<h1 id='10' style='font-size:18px'>3. 세션 정의</h1>\n<br><p id='11' data-category='list' style='font-size:18px'> 교육 세션: 소속 이후 첫 학기 및 방학 (교육 중심)<br> 강의 세션: 그 이후 학기 및 방학 (본인 주도 세션 중심)</p>\n<h1 id='12' style='font-size:18px'>4. 활동 인원 정의</h1>\n<br><h1 id='13' style='font-size:18px'>액팅 인원</h1>\n<br><p id='14' data-category='paragraph' style='font-size:14px'> 교육 및 활동에 실질적으로 참여하는 수료 전 인원</p>\n<p id='15' data-category='paragraph' style='font-size:18px'>5. 의무와 권리<br>액팅 인원의 의무</p>\n<p id='16' data-category='list' style='font-size:16px'> 교육 세션: 출석률 및 과제 제출률 2/3 이상</p>\n<br><p id='17' data-category='list' style='font-size:16px'> 강의 세션: 학기/방학 통틀어 2 회 이상 본인 주도 세션 (단, 타 팀 이적자는 예외)</p>\n<br><p id='18' data-category='list' style='font-size:16px'> 스터디: 2/3 이상 출석 및 발제 참여</p>\n<br><p id='19' data-category='list' style='font-size:16px'> 발제자 후보에 해당하는 활동 기수는 기존 관습에 따라 출결을 발제 일정을 제외하고<br>자유화한다.</p>\n<br><h1 id='20' style='font-size:16px'>불이행 시 제재</h1>\n<br><p id='21' data-category='list' style='font-size:14px'> 엔지니어링팀 제명<br> 알럼나이 톡방 참가 제한<br> 벌금 5 만원</p>\n<h1 id='22' style='font-size:16px'>6. 팀 세션 및 스터디 구성</h1>\n<br><h1 id='23' style='font-size:16px'>강의 및 실습 기준</h1>\n<br><p id='24' data-category='list' style='font-size:14px'> 발표 자료는 강의 직전까지 수정 가능<br> 실습 강의는 사전 실습 검증 필수<br> 과제가 있을 경우:</p>\n<br><p id='25' data-category='list' style='font-size:14px'>o 발표자가 강의 후 24 시간 이내 과제 업로드<br>o 다음 강의 전날까지 정답 업로드</p>\n<br><h1 id='26' style='font-size:16px'>장소 예약</h1>\n<br><p id='27' data-category='list' style='font-size:16px'> 팀 세션: 팀장이 금요일까지 장소 예약 및 공지<br> 스터디: 발제자가 사전 예약 및 공지<br> 비대면 진행 시 화상 회의 링크 포함 공지</p>\n<h1 id='28' style='font-size:16px'>7. 지각 및 결석 규정</h1>\n<br><h1 id='29' style='font-size:20px'>지각 (스터디 및 팀 세션)</h1>\n<br><p id='30' data-category='paragraph' style='font-size:16px'> 정해진 도착 시간으로부터 10 분 경과 시 지각.</p>\n<br><h1 id='31' style='font-size:16px'>결석</h1>\n<br><p id='32' data-category='paragraph' style='font-size:14px'> 정해진 도착 시간으로부터 30 분 경과 시 결석</p>\n<br><h1 id='33' style='font-size:16px'>조퇴</h1>\n<br><p id='34' data-category='list' style='font-size:16px'> 정당한 사유 없이 조퇴 시 결석 처리한다.<br> 부득이한 경우 운영진 재량으로 예외 처리 가능</p>\n<br><h1 id='35' style='font-size:16px'>발표 미준비</h1>\n<h1 id='36' style='font-size:18px'> 발표 미준비 시 결석으로 처리한다.</h1>\n<br><p id='37' data-category='paragraph' style='font-size:18px'>과제 미제출</p>\n<br><p id='38' data-category='paragraph' style='font-size:18px'> 과제 2 회 미제출 시 결석으로 처리한다.</p>\n<br><p id='39' data-category='paragraph' style='font-size:18px'>징계</p>\n<br><p id='40' data-category='list' style='font-size:18px'> 지각 2 회는 결석 1 회로 취급한다.</p>\n<br><p id='41' data-category='list' style='font-size:18px'> 결석 3 회를 초과할 경우 해당 인원은 징계 위원회를 열어 회장단과 DE 팀장단 회의 하에<br>징계안을 확정한다. 단, 이 때 징계안은 5 인 중 과반의 찬성이 있어야 한다.</p>\n<h1 id='42' style='font-size:18px'>8. 공금 사용 항목</h1>\n<br><h1 id='43' style='font-size:14px'> 팀 식사 또는 회식 등 전체 참여 행사</h1>\n<p id='44' data-category='paragraph' style='font-size:18px'>-</p>\n<br><p id='45' data-category='paragraph' style='font-size:18px'>이 때 일부만이 참여한 경우에는 공금 사용이 불가하다. 그러나 전체 팀원의 참여가<br>가능한 공식적인 세션의 뒷풀이의 경우, 참여 인원들만을 위한 공금 사용이<br>가능하다.</p>\n<br><p id='46' data-category='list' style='font-size:14px'> 강의자에 대한 음료 제공<br> 강의 교재 및 필요한 물품<br> 클라우드 비용<br> 우수 강의자 및 수강자, 선배 세션자에 대한 상품<br> 장소 대관</p>\n<br><p id='47' data-category='paragraph' style='font-size:18px'>※ 공금 사용은 운영진의 재량에 따라 결정되며, 위 사용 항목 외 공금 사용 시 DE 팀장단 2 인<br>전원의 동의와 회장단 3 인의 동의가 필요함.</p>\n<h1 id='48' style='font-size:18px'>9. 수료 조건</h1>\n<br><p id='49' data-category='list' style='font-size:18px'> 신입 기수 방학 세션을 포함하여, 2 번의 방학 세션과 2 번의 학기 세션을 이수한 경우 수료<br>조건을 만족한다.</p>\n<br><p id='50' data-category='list' style='font-size:18px'> 방학 세션과 학기 세션 이수 기준은 액팅 인원의 의무를 모두 만족한 경우에 한한다.</p>\n<p id='51' data-category='paragraph' style='font-size:18px'>10. 예외 조건</p>\n<br><p id='52' data-category='list' style='font-size:18px'> 본 팀 내규를 적용함에 있어, YBigta 전체 회칙을 우선시한다.<br> 내규 적용 시 필요할 경우 회장단 전원과 팀장단 전원의 동의 하에 내규 적용을 완화하거나<br>예외를 둘 수 있다.</p>",
    "1oyjS1LcDJ2A6SYje9rKKbIg8PIm9_7wH": "<h1 id='0' style='font-size:20px'>연세대학교 빅데이터 학회 YBIGTA 회칙</h1>\n<p id='1' data-category='paragraph' style='font-size:14px'>최초 공시일 : 2013년 2월 5일<br>개정안 작성일 : 2025년 3월 11일<br>개정안 발의일: 2025년 3월 11일<br>의결 일자 : 2025년 3월 11일<br>공표일 : 2025년 3월 11일</p>\n<p id='2' data-category='paragraph' style='font-size:16px'>제 1 장 총칙</p>\n<br><p id='3' data-category='paragraph' style='font-size:16px'>1 조 (명칭): 본 학회는 연세대학교 빅데이터학회 YBIGTA 라 칭한다.<br>2 조 (목적)</p>\n<br><p id='4' data-category='list' style='font-size:16px'>(1) 빅데이터에 대한 기초지식을 쌓는다.<br>(2) 빅데이터 관련 최신 트렌드에 대한 이해를 향상시킨다.<br>(3) 구현 기술 및 구현 툴 사용에 대해 학습한다.<br>(4) 이를 기반으로 빅데이터 분야의 다양한 학술 및 실무 활동을 진행한다.</p>\n<br><p id='5' data-category='paragraph' style='font-size:16px'>3 조 (활동): YBIGTA 는 제 2 조를 달성하기 위해 다음과 같은 활동을 진행한다.</p>\n<br><p id='6' data-category='list' style='font-size:16px'>(1) 정규 세션 진행<br>(2) 팀 세션 및 프로젝트 진행<br>(3) 팀 및 교차 스터디 진행<br>(4) 산학협력 프로젝트 진행 및 컨퍼런스 주최<br>(5) 빅데이터 관련 경진대회 참여, 주최, 진행<br>(6) 그 외 학회의 목적에 부합하는 다양한 활동</p>\n<br><p id='7' data-category='paragraph' style='font-size:16px'>4 조 (용어): YBIGTA 에서 사용되는 주요 용어는 다음과 같다.</p>\n<br><p id='8' data-category='list' style='font-size:16px'>(1) 학기 : 정규학기와 정규학기 이전 방학을 포함하여 한 학기로 칭한다.(예: 1 학기는<br>겨울방학과 봄 학기를 포함, 2 학기는 여름방학과 가을 학기를 포함한다.)<br>(2) 팀: 데이터 분석의 과정을 세분화하여 학습하기 위해 구성된 학술 모임을 지칭한다. 데이터<br>애널리틱스, 데이터 사이언스, 데이터 엔지니어링 세 가지로 구성된다.<br>(3) 부서: 학회 운영을 위한 행정 조직을 지칭한다.<br>(4) 전체 세션: 학술적인 목적을 갖는 활동회원 전체의 모임을 지칭한다.<br>(5) 팀 세션: 팀별로 진행되는 정기적인 모임을 팀 세션이라 지칭한다.<br>(6) 교육 세션: 방학 중 진행되는 신 회원 교육을 목적으로 하는 모임을 지칭한다.<br>(7) 오픈 세션 / 컨퍼런스: 학기 중 프로젝트 결과물을 학회 외부인에게 발표하는 행사를<br>지칭한다.</p>\n<p id='9' data-category='paragraph' style='font-size:16px'>제 2 장 회원</p>\n<br><p id='10' data-category='paragraph' style='font-size:16px'>1 조 (지원자격): 연세대학교 학부생 혹은 대학원생으로, YBIGTA 에 가입을 희망하는 자.<br>2 조 (가입): 지원자격을 갖추었으며 신입 학회원 모집시기에 지원하여 서류와 면접을 통과하여<br>최종 합격한 자.<br>3 조 ( 학회원 구성): YBIGTA 의 학회원 구성은 다음과 같다.</p>\n<br><p id='11' data-category='paragraph' style='font-size:16px'>(1) 신입회원:</p>\n<br><p id='12' data-category='paragraph' style='font-size:16px'>(a) 제 2 장 2 조를 충족하여 YBIGTA 에 가입한 학회원</p>\n<h1 id='13' style='font-size:14px'>(b) 가입 후 첫 방학의 교육 기간동안으로 한정된다.</h1>\n<br><h1 id='14' style='font-size:14px'>(2) 정회원:</h1>\n<br><p id='15' data-category='list' style='font-size:14px'>(a) 신입 회원 중 교육기간 동안 제 2 장 8 조에 의해 자격을 박탈당하지 않은 학회원<br>(b) 정회원의 개념은 의무 활동 기간 동안으로 한정된다.<br>(c) 단, 수료회원 중 YBIGTA 의 운영진으로 참여하는 경우 정회원으로 간주한다.</p>\n<br><p id='16' data-category='list' style='font-size:14px'>(3) 수료회원: 제 2 장 8 조에 따라 수료 기준을 충족한 정회원. 팀별 수료 기준은 팀별 내규에<br>따른다.<br>(4) 휴면회원: 정회원 중 회장단의 승인 하에 휴면을 신청한 회원<br>(5) 연장회원:</p>\n<br><p id='17' data-category='list' style='font-size:14px'>(a) 수료회원 중 YBIGTA 활동을 이어나가고자 하는 회원으로, 기존 팀을 유지할 수<br>있으며, 팀을 변경하거나 수료 기준을 충족한 팀을 포함한 두 개의 팀에서 동시에<br>활동할 수 있다.<br>(b) 기존의 수료 기준을 충족한 팀은 완화된 팀별 내규를 기준으로 한다. 새로운 팀은<br>해당 팀의 정회원과 같은 기준을 따른다.</p>\n<br><h1 id='18' style='font-size:14px'>(6) 활동회원: 연장회원과 정회원을 합친, 해당 학기에 공식으로 활동하는 회원.</h1>\n<br><p id='19' data-category='paragraph' style='font-size:14px'>4 조 (권리): YBIGTA 회원의 권리는 다음과 같다.</p>\n<br><p id='20' data-category='list' style='font-size:14px'>(1) 회원은 YBIGTA 의 자치 활동에 참여할 권리를 가지며 회칙이 정하는 바에 따라 YBIGTA<br>의 활동에 관련한 제반 의견 개진, 의사 결정에 투표할 권리를 가진다.<br>(2) 회원은 YBIGTA 의 운영진과 산하 단체의 선거에서 선거권과 피선거권을 가진다.<br>(3) 회원은 YBIGTA 의 목적 달성을 위한 활동의 권리를 보장받는다.<br>(4) 1 학기 활동( 신입기수 교육세션 및 1 개 정규학기) 을 완료한 정회원은 YBIGTA<br>정보공유방에 초대된다.</p>\n<br><p id='21' data-category='paragraph' style='font-size:14px'>5 조 (의무): YBIGTA 회원의 의무는 다음과 같다.</p>\n<br><p id='22' data-category='list' style='font-size:14px'>(1) 활동회원은 YBIGTA 회칙을 준수하며 적극적으로 활동할 의무를 갖는다.<br>(2) 정회원의 의무 활동 기간은 두 학기로 규정한다.</p>\n<br><p id='23' data-category='list' style='font-size:14px'>(a) 의무 활동 기간은 연속된 두 학기를 원칙으로 한다.<br>(b) 정회원이 희망하는 경우 의무활동 중 휴면을 신청할 수 있다. 휴면은 총합 두<br>학기까지 가능하다.</p>\n<br><p id='24' data-category='list' style='font-size:14px'>(3) 활동회원은 YBIGTA 에서 진행되는 세션 ( 전체 세션, 팀 세션, 교육 세션) 을 적극적으로<br>참여할 의무를 갖는다.<br>(4) 정회원은 의무 활동 기간 중 YBIGTA 에서 진행하는 오픈 세션 혹은 컨퍼런스에 참여할<br>의무를 갖는다.<br>(5) 정회원은 의무 활동 기간 중 2 개 정규 학기와 2 개 방학에 각각 최소 1 개의 스터디에<br>참여하여야 한다.</p>\n<br><p id='25' data-category='list' style='font-size:14px'>(a) 학회의 목적과 관련없는 스터디 참여는 위 의무에 부합하지 않는다. (ex. 자기계발<br>스터디, 영어공부 스터디)<br>(b) 해당 기수 회장단 및 운영진의 인정을 받은 프로젝트, 논문 작성 등으로 위의 스터디<br>의무 참여를 대체할 수 있다. 해당 프로젝트 및 논문 작성 등은 YBIGTA 활동 기수<br>만으로 구성되어야 하며, 보고서 등 활동 증명을 위한 자료를 제출해야 한다.</p>\n<p id='26' data-category='list' style='font-size:14px'>(6) 정회원은 YBIGTA 의 부서와 팀에 각각 소속되어 부서 및 팀 활동을 적극적으로 참여할<br>의무를 갖는다.<br>(7) 의무 활동 기간 동안 위 의무 및 제 2 장 8 조를 충족한 회원은 YBIGTA 를 수료하여,<br>수료회원이 된다.</p>\n<br><h1 id='27' style='font-size:14px'>6 조 (회비)</h1>\n<br><p id='28' data-category='list' style='font-size:14px'>(1) 회비의 사용은 반드시 회원 모집, 세션 준비, 장비 구입 등 공공을 위해서만 지출되어야<br>한다.<br>(2) 활동하는 모든 정회원은 매 학기 초에 4 만원의 회비를 내야 한다.</p>\n<br><p id='29' data-category='list' style='font-size:14px'>(a) 운영진 회의를 통해 회비를 조정할 수 있다.<br>(b) 학회비는 환불되지 않는다.<br>(c) 연장회원은 회비를 지불하지 않는다.</p>\n<br><p id='30' data-category='list' style='font-size:14px'>(3) 회비는 YBIGTA 의 회계부장이 개설한 신규 계좌를 통해 관리된다.<br>(4) 운영진의 임기가 종료되면 신임 운영진에게 잔여 회비를 인계해야 한다.<br>(5) 뒤풀이와 같이 활동회원 전체가 모이지 않는 행사는 각출을 해야 한다.</p>\n<br><h1 id='31' style='font-size:14px'>7 조 ( 출결 및 벌금)</h1>\n<br><p id='32' data-category='paragraph' style='font-size:14px'>(1) 교육세션</p>\n<br><h1 id='33' style='font-size:14px'>(a) 지각</h1>\n<br><p id='34' data-category='list' style='font-size:14px'>(i) 세션 시작 시간 15 분 후부터 지각으로 간주한다.<br>(ii) 지각 2 회는 결석 1 회로 간주한다.</p>\n<br><p id='35' data-category='paragraph' style='font-size:14px'>(b) 결석</p>\n<br><p id='36' data-category='list' style='font-size:14px'>(i) 결석은 세션 2 일 전까지 교육부장에게 고지하여야 한다.<br>(ii) 정당한 사유 하의 사유결석은 총 2 회 허용된다.<br>(iii) 비대면 참여는 결석으로 간주된다.</p>\n<br><p id='37' data-category='paragraph' style='font-size:14px'>(c) 세션 중 이탈</p>\n<br><p id='38' data-category='list' style='font-size:14px'>(i) 사유이탈은 세션 2 일 전까지 교육부장에게 고지하여야 한다.<br>(ii) 사유이탈 2 회는 결석 1 회로, 무단이탈 1 회는 결석 1 회로 간주한다.<br>(d) 과제<br>(i) 과제를 3 회 이상 미제출한 신입회원은 제명된다.<br>(ii) 과제 지각 2 회는 미제출 1 회로 간주한다.</p>\n<br><p id='39' data-category='paragraph' style='font-size:14px'>(e) 제명: 사유결석을 포함하여, 교육세션을 4 회 이상 결석한 신입회원은 제명된다.</p>\n<br><p id='40' data-category='paragraph' style='font-size:14px'>(f) 교육세션 출결 및 제명 기준은 위의 조항들을 기본으로 하되, 당대 운영진의 결정에<br>따라 일부 수정 가능하다. 확정된 기준은 교육세션 시작 전에 공표해야 한다.<br>운영진은 기준 결정 시 해당 과정을 회의록 등으로 기록해야 하며, 회원의 요구 시<br>이를 공유할 의무가 있다.</p>\n<br><p id='41' data-category='paragraph' style='font-size:14px'>(2) 학기 전체세션 ( 방학 및 정규학기 포괄, 활동회원 기준)</p>\n<br><p id='42' data-category='paragraph' style='font-size:14px'>(a) 지각:</p>\n<br><p id='43' data-category='list' style='font-size:14px'>(i) 세션 시작 시간 후 10 분부터 세션의 ⅔ 이 경과할 때까지 지각으로 간주한다.<br>(ii) 지각 10 분당 2,000 원의 지각비가 부과된다.<br>(iii) 지각 2 회는 1 회 결석으로 간주된다.</p>\n<br><p id='44' data-category='paragraph' style='font-size:14px'>(b) 결석:</p>\n<p id='45' data-category='list' style='font-size:14px'>(i) 세션 시간의 ⅔ 이 경과한 이후부터 결석으로 간주한다.<br>(ii) 결석 1 회당 2 만원의 벌금이 부과된다.<br>(iii) 비대면 참여는 결석으로 간주된다.</p>\n<br><p id='46' data-category='paragraph' style='font-size:14px'>(c) 제명: 결석 횟수가 학기 전체세션 횟수의 ⅓ 을 초과한 정회원은 제명된다.<br>(d) 전체세션 출결 기준은 세션 당일 기준 일주일 이전에 공지된 세션에 한해 적용한다.</p>\n<br><h1 id='47' style='font-size:14px'>(3) 벌금 납부</h1>\n<br><p id='48' data-category='list' style='font-size:14px'>(a) 벌금은 회계부장의 계좌로 차일 24:00 까지 입금한다.<br>(b) 지각비 미납 시, 1 일당 1,000 원이 추가적으로 부과된다.<br>(c) 결석비 미납시, 1 일당 2,000 원이 추가적으로 부과된다.</p>\n<br><p id='49' data-category='paragraph' style='font-size:14px'>(4) 벌금, 징계, 자격 상실 등에 관하여 출결 사유를 고려할 수 있다.</p>\n<br><h1 id='50' style='font-size:14px'>(a) 인정 사유</h1>\n<br><p id='51' data-category='list' style='font-size:14px'>(i) 직장 (연구실, 인턴, 취업, 면접 관련)<br>(ii) 연세대학교 강의 혹은 시험<br>(iii) 기타 연세대학교 출석 인정 내규에 따라 인정이 되는 사유 https://www.<br>yonsei.ac.kr/wj/support/notice.jsp?article_no=190248&mode=view</p>\n<br><p id='52' data-category='paragraph' style='font-size:14px'>8 조 (수료)</p>\n<br><p id='53' data-category='paragraph' style='font-size:14px'>1. 정회원이 YBIGTA 수료회원이 되기 위한 수료 기준은 다음과 같다.</p>\n<br><p id='54' data-category='list' style='font-size:14px'>a. YBIGTA 의무 활동 기간 동안 활동하였으며, 전체세션 ⅔ 이상에 참석하였다.<br>b. YBIGTA 의무 활동 기간 동안 2 회의 컨퍼런스에 참여하였다.<br>c. 제 2 장 5 조 5 항 및 제 2 장 5 조 5 항(a) 에 따라, YBIGTA 의무 활동 기간 동안 각<br>정규 학기와 각 방학에 최소 1 개의 스터디에 참여하였다.<br>d. 팀별 수료 기준을 충족하였다.</p>\n<br><p id='55' data-category='paragraph' style='font-size:14px'>9 조 ( 자격 상실)</p>\n<br><p id='56' data-category='list' style='font-size:14px'>(1) 활동 참여 의사가 없어 회원 본인이 탈퇴를 원할 때<br>(2) 제 2 장 7 조 1 항에 의거, 방학 중 교육세션 및 전체세션의 결석 횟수가 4 회 이상인 신입회원<br>(3) 제 2 장 7 조 2 항에 의거, 학기 전체세션의 결석 횟수가 세션 횟수 1/3 을 초과한 정회원<br>(4) 운영진이 자격 상실을 발의하여 운영진 회의를 통해 회장단이 자격 상실을 결정한 회원.<br>(a) 수료회원의 경우, 해당 학기동안 한시적으로 제한할 수 있다.<br>(5) 제 2 장 9 조 2 항 및 제 2 장 8 조 3 항에 해당하는 회원의 자격상실은 회장단의 회의에서, 제<br>2 장 9 조 4 항에 해당하는 회원의 자격상실은 운영진이 주관하는 징계 회의에서 결정한다.<br>이때 제 2 장 7 조 4 항을 참고한다.</p>\n<p id='57' data-category='paragraph' style='font-size:14px'>제 3 장 운영진</p>\n<br><p id='58' data-category='paragraph' style='font-size:14px'>1 조 (구성): YBIGTA 의 운영진은 회장 1 인과 부회장, 부서장 및 팀장으로 구성된다.</p>\n<br><p id='59' data-category='list' style='font-size:14px'>(1) 회장: YBIGTA 를 대표하며 YBIGTA 의 제반 사무를 총괄지휘하고 그 책임을 진다.<br>(2) 부회장: 회장을 보좌하며 회장 유고 시 이를 대행한다.<br>(3) 부서장: YBIGTA 의 운영을 위해 행정 조직을 구성하고 해당 조직을 총괄 및 책임진다.<br>(4) 팀장: 팀 세션 등의 팀 활동을 지휘하고 책임진다. 애널리틱스 팀장, 사이언스 팀장,<br>엔지니어링 팀장으로 구성된다.</p>\n<h1 id='60' style='font-size:14px'>2 조 (선출)</h1>\n<br><p id='61' data-category='list' style='font-size:14px'>(1) 회장: 정회원의 자격을 갖춘 사람 중 총 회의에서 최다 득표한 사람을 선출한다.<br>(2) 부회장: 선출된 회장이 지목하여 선출한다.<br>(3) 부서장: 선출된 회장이 지목하여 선출한다.<br>(4) 팀장: 전임 팀장이 지목하여 선출한다.<br>(5) 부팀장: 제 3 장 2 조 4 항에서 선출된 팀장이 지목하여 선출한다.</p>\n<br><h1 id='62' style='font-size:14px'>3 조 (의무)</h1>\n<br><p id='63' data-category='list' style='font-size:14px'>(1) 운영진은 항상 공정해야 한다.<br>(2) 운영진은 역할에 충실하며 책임감을 갖고 행동해야 한다.</p>\n<br><h1 id='64' style='font-size:14px'>4 조 (권한)</h1>\n<br><p id='65' data-category='paragraph' style='font-size:14px'>(1) 운영진은 회의를 통해 YBIGTA 운영에 필요한 주요한 의사결정에 의결권을 갖는다.<br>(2) 운영진은 외부 단체와 교섭 시 YBIGTA 를 대표할 수 있는 권한을 갖는다.</p>\n<br><p id='66' data-category='paragraph' style='font-size:14px'>(a) 즉, 외부 단체와의 공식적인 교섭행위에는 운영진 중 일부가 포함되어야 한다.</p>\n<br><p id='67' data-category='list' style='font-size:14px'>5 조 (임기): 운영진의 임기는 한 학기이다.<br>6 조 (자격): 정회원 중 한 학기 동안 성실히 운영진 활동을 할 의사가 있는 자<br>7 조 ( 자격 상실):</p>\n<br><p id='68' data-category='paragraph' style='font-size:14px'>(1) 운영진 중 제 3 장 3 조를 충실히 이행하지 않은 자는 임원 회의를 통해 자격을 박탈한다.</p>\n<h1 id='69' style='font-size:14px'>제 4 장 회의</h1>\n<br><h1 id='70' style='font-size:14px'>1 조 ( 소집 및 운영)</h1>\n<br><p id='71' data-category='list' style='font-size:14px'>(1) 운영진 회의: 2 주 정기를 원칙으로 운영하며, 학회 운영 사항과 관련된 내용을 논의한다.<br>(a) 회장은 안건의 중대성을 고려하여 최소 7 일 전 회의 소집 여부를 결정 및 전파한다.<br>(2) 총회: 회장 선출 등 YBIGTA 의 중대 사안이 있을 경우 회장이 소집한다.<br>(a) 활동회원 중 2/3 이상이 출석해야 한다.<br>(3) 징계 회의: 회원의 자격 상실 등 징벌과 관련된 사안이 생길 경우 회장이 소집한다. 제 2 장<br>8 조 5 항에 따라 운영진이 참석해야 한다.<br>(a) 팀장의 자격상실 발의로 소집된 회의는 회장단 전원이 동의할 경우 징계를</p>\n<br><p id='72' data-category='paragraph' style='font-size:14px'>가결한다.</p>\n<h1 id='73' style='font-size:14px'>제 5 장 활동</h1>\n<br><h1 id='74' style='font-size:14px'>1 조 정규세션</h1>\n<br><p id='75' data-category='list' style='font-size:14px'>(1) YBIGTA 는 활동회원 전체가 모이는 공식 행사로서 주 1 회 정규 세션을 갖는다.<br>(2) 전체 세션의 시간, 장소 및 주요 내용은 사전에 커뮤니케이션 채널을 통해 공지한다. (예:<br>카카오톡, 슬랙)<br>(3) 전체 세션에서는 교육 활동과 부서 및 팀별 활동보고, 각 소그룹들의 주제별 발표나 연사<br>초청강연 등이 진행될 수 있다.</p>\n<br><h1 id='76' style='font-size:14px'>2 조 ( 팀 세션)</h1>\n<br><p id='77' data-category='list' style='font-size:14px'>(1) YBIGTA 의 하부 조직인 팀은 팀장과 팀원으로 구성된다.<br>(2) 각 팀은 팀 세션을 진행하며, 팀 세션은 논문 스터디, 구현 등의 학술 활동을 기본으로 한다.<br>(3) 출석 등의 팀 활동과 관련된 세부적인 규칙은 팀내 자체적인 내규에 따른다.</p>\n<p id='78' data-category='paragraph' style='font-size:18px'>(4) 각 팀별 학술활동의 철학은 아래와 같으며, 필요할 시 팀장단 및 회장단의 회의에 따라<br>수정될 수 있다.</p>\n<br><p id='79' data-category='paragraph' style='font-size:18px'>(a) 데이터 애널리틱스 (Data Analytics) 팀</p>\n<p id='80' data-category='paragraph' style='font-size:18px'>(b)</p>\n<br><p id='81' data-category='list' style='font-size:18px'>(i) 데이터 분석을 기획하고, 결과를 도출하는 모든 과정을 다루는 실무적<br>올라운더를 양성하는 것을 목적으로 한다.<br>(ii) 구체적으로는 데이터 분석을 기획하고, 결과를 도출하는 모든 과정을<br>다루는 실무적 올라운더를 양성하는 것을 목적으로 한다. Tableau, Plotly<br>등의 시각화 프레임을 다루며, 실무에서 사용되는 다양한 python 기반의<br>머신러닝 메소드를 다룬다.<br>데이터 사이언스 (Data Science) 팀<br>(i) 데이터의 종류에 따라 적합한 모델링을 구현할 수 있는 데이터<br>사이언티스트를 양성하는 것을 목적으로 한다.<br>(ii) 구체적으로는 CNN, RNN, GAN 등의 딥러닝 패러다임을 연구하며,<br>TensorFlow, Pytorch, Keras 등의 딥러닝 프레임워크 등의 기술 스택을<br>다룬다.</p>\n<br><p id='82' data-category='paragraph' style='font-size:18px'>(c) 데이터 엔지니어링 (Data Engineering) 팀</p>\n<br><p id='83' data-category='list' style='font-size:18px'>(i) 데이터의 수집, 저장 및 처리를 효율적으로 수행할 수 있는 데이터<br>엔지니어를 양성하는 것을 목적으로 한다.<br>(ii) 구체적으로는 데이터 수집과 관련된 데이터 크롤링 기법, 관계형<br>데이터베이스를 다루는 SQL 및 대용량 데이터의 분산 처리를 목적으로<br>하는 하둡, 스파크 등을 다룬다.</p>\n<br><h1 id='84' style='font-size:18px'>부칙</h1>\n<br><p id='85' data-category='paragraph' style='font-size:18px'>1 조 (회칙발효): 본 회칙은 공시와 함께 효력을 발생한다.<br>2 조 (회칙개정)</p>\n<br><h1 id='86' style='font-size:18px'>(1) 회칙의 개정은 다음과 같은 과정으로 이루어진다.</h1>\n<br><p id='87' data-category='list' style='font-size:18px'>(a) YBIGTA 운영진의 서명으로 정기ㆍ임시 회의에서 발의한다.<br>(b) 총회를 소집하여 개정안 가결 여부를 투표에 부친다.<br>(c) 총회는 신입회원 및 정회원의 ⅔ 이상의 인원이 참여해야한다.<br>(d) 개정안을 가결하기 위해서는 다음과 같은 기준을 모두 만족해야한다.</p>\n<br><p id='88' data-category='list' style='font-size:18px'>(i) 개정안 동의 인원이 참석자의 ⅔ 이상이어야 한다.<br>(ii) 개정안 동의 인원이 신입회원 및 정회원 총원의 ½ 이상이어야 한다.<br>(iii) 개정된 회칙은 회장이 10 일 이내에 공시하여야 한다.</p>\n<footer id='89' style='font-size:14px'>* 본 회칙은 2024 년 7 월 9 일 (화) 18:00 에 실시된 총회에서 투표 참석자 48 명 찬성 47 명으로 통과되어<br>2024 년 7 월 9 일 19:00 에 공표되었습니다. (투표 대상 총원: 49 명, 통과 정족 수 : 32 명 )</footer>",
    "1If8Xe5rY_Dd04E0_egBq6YEHe8ewIwL8": "<h1 id='0' style='font-size:16px'>1. 각 팀의 정의</h1>\n<br><h1 id='1' style='font-size:16px'>사이언스팀 팀원</h1>\n<p id='2' data-category='list' style='font-size:14px'> 사이언스팀에서 해당 학기를 활동하기로 한 기존 기수</p>\n<br><p id='3' data-category='list' style='font-size:16px'> 다른 팀 세션을 모두 이수하고, 기말 팀 프로젝트(컨퍼런스)를 2 회 이상 진행한 인원 중<br>추가 활동을 희망하는 인원</p>\n<br><p id='4' data-category='list' style='font-size:14px'> 사이언스팀을 수료한 인원</p>\n<br><h1 id='5' style='font-size:16px'>액팅 인원</h1>\n<br><p id='6' data-category='paragraph' style='font-size:14px'> 위 네 가지 조건 중 수료 이전에 해당하는 인원</p>\n<h1 id='7' style='font-size:16px'>2. 운영진 구성</h1>\n<br><p id='8' data-category='paragraph' style='font-size:20px'>운영진 직책: 팀장, 부팀장<br>팀장의 역할: 팀 세션 및 스터디 장소 예약, 공지, 학습 환경 조성</p>\n<br><h1 id='9' style='font-size:16px'>운영진의 권한</h1>\n<br><p id='10' data-category='list' style='font-size:16px'> 팀 활동에 비협조적이거나 불성실한 경우 제명 가능<br> 활동 의무 미이행, 표절, 부적절한 언행, 무단 결석 시 제명<br> 수용 인원 초과 시 선발 제한 가능</p>\n<br><p id='11' data-category='paragraph' style='font-size:16px'>운영진은 매 학기 AI 창의자율연구 프로그램에 지원하여 GPU 자원 확보에 노력해야 하며,<br>사이언스팀 깃허브 업데이트 의무를 갖는다.</p>\n<h1 id='12' style='font-size:16px'>3. 세션 정의</h1>\n<br><h1 id='13' style='font-size:16px'>정규 세션</h1>\n<br><p id='14' data-category='list' style='font-size:16px'> 학기 세션: 컴퓨터 비전, 자연어 처리 중 선택<br> 방학 세션: 팀원 의견 수합하여 주제 선정</p>\n<br><h1 id='15' style='font-size:16px'>수료 요건</h1>\n<br><p id='16' data-category='list' style='font-size:16px'> 정규 학기 2 회 + 방학 2 회 (총 4 회) 이수<br> 단, 1-a-iii 인원은 정규 학기 1 회 + 방학 1 회 이수 후 수료 가능</p>\n<h1 id='17' style='font-size:16px'>4. 활동 인원 정의</h1>\n<br><p id='18' data-category='paragraph' style='font-size:16px'>액팅 인원: 정규 세션 및 스터디에 실질적으로 참여하는 수료 전 인원</p>\n<h1 id='19' style='font-size:16px'>5. 의무와 권리</h1>\n<br><p id='20' data-category='list' style='font-size:14px'> 사이언스팀에 새롭게 합류한 신입 기수</p>\n<h1 id='21' style='font-size:16px'>액팅 인원의 의무</h1>\n<br><p id='22' data-category='list' style='font-size:16px'> 정규 세션: 2/3 이상 출석, 과제 2 회 면제 외 모두 제출<br> 팀 프로젝트: 학기당 최소 2 회(방학 1 회, 학기 중 1 회) 참여<br> 발표: 정규 세션에서 본인 주도 1 회 이상<br> 스터디: 1 개 이상 공식 스터디에서 2/3 이상 출석 및 발제</p>\n<br><h1 id='23' style='font-size:16px'>불이행 시 제재</h1>\n<br><p id='24' data-category='list' style='font-size:14px'> 사이언스팀 제명<br> 알럼나이 톡방 참가 제한<br> 벌금 5 만원</p>\n<h1 id='25' style='font-size:16px'>6. 팀 세션 및 스터디 구성</h1>\n<br><h1 id='26' style='font-size:16px'>강의 및 실습 기준</h1>\n<br><p id='27' data-category='list' style='font-size:16px'> 발표 자료는 세션 3 일 전 제출, 팀장단 피드백 후 수정<br> 강의 직전까지 수정 가능<br> 과제 존재 시, 강의 후 과제 업로드 → 다음 강의 전날 정답 업로드<br> 표절 및 대리작성: 1 회 경고, 2 회 시 제명 권고</p>\n<br><h1 id='28' style='font-size:16px'>장소 예약</h1>\n<br><p id='29' data-category='list' style='font-size:16px'> 팀 세션: 팀장이 D-2 23:59 까지 예약 및 공지<br> 스터디: 발제자가 사전 예약 및 공지</p>\n<h1 id='30' style='font-size:16px'>7. 지각 및 결석 규정</h1>\n<br><h1 id='31' style='font-size:20px'>지각 (스터디 및 팀 세션)</h1>\n<br><p id='32' data-category='paragraph' style='font-size:16px'> 정해진 도착 시간으로부터 10 분 경과 시 지각.</p>\n<br><h1 id='33' style='font-size:16px'>결석</h1>\n<br><p id='34' data-category='paragraph' style='font-size:14px'> 정해진 도착 시간으로부터 30 분 경과 시 결석</p>\n<br><h1 id='35' style='font-size:16px'>조퇴</h1>\n<br><p id='36' data-category='list' style='font-size:16px'> 정당한 사유 없이 조퇴 시 결석 처리한다.<br> 부득이한 경우 운영진 재량으로 예외 처리 가능</p>\n<br><h1 id='37' style='font-size:16px'>발표 미준비</h1>\n<br><p id='38' data-category='paragraph' style='font-size:16px'> 발표 미준비 시 결석으로 처리한다.</p>\n<br><h1 id='39' style='font-size:16px'>과제 미제출</h1>\n<p id='40' data-category='paragraph' style='font-size:18px'> 과제 2 회 미제출 시 결석으로 처리한다.</p>\n<br><h1 id='41' style='font-size:18px'>징계</h1>\n<br><p id='42' data-category='list' style='font-size:18px'> 지각 2 회는 결석 1 회로 취급한다.</p>\n<br><p id='43' data-category='list' style='font-size:18px'> 결석 3 회를 초과할 경우 해당 인원은 징계 위원회를 열어 회장단과 DS 팀장단 회의 하에<br>징계안을 확정한다. 단, 이 때 징계안은 5 인 중 과반의 찬성이 있어야 한다.</p>\n<h1 id='44' style='font-size:18px'>8. 공금 사용 항목</h1>\n<br><p id='45' data-category='list' style='font-size:18px'> 팀 식사, 회식 등 전체 참여 행사 (공식 세션 뒤풀이 포함 시 일부 참여 가능)<br> 강의자 음료 제공<br> 강의 교재 및 물품<br> 클라우드 비용<br> 우수 강의자 및 수강자에 대한 상품<br> 강의 장소 대관 (불가피한 경우)<br> ※ 공금 사용은 운영진의 재량에 따라 결정되며, 위 사용 항목 외 공금 사용 시 DS 팀장단 2<br>인 전원의 동의와 회장단 3 인의 동의가 필요함.</p>\n<h1 id='46' style='font-size:18px'>9. 팀 프로젝트 운영</h1>\n<br><p id='47' data-category='list' style='font-size:18px'> 학기 중 1 회, 방학 중 1 회 진행<br> 팀 구성: 4~6 인, 관심사 기반 익명 매칭<br> 신입 기수 혼합 시 유연한 구성 적용<br> 최종 산출물:</p>\n<br><p id='48' data-category='list' style='font-size:14px'>o 정리된 코드 (Github 공개)<br>o LaTeX 기반 리포트<br>o 발표 자료 및 영상</p>\n<br><p id='49' data-category='list' style='font-size:14px'> 모델링 및 코딩 중심 프로젝트 필수<br> 산학 협력 연계 노력 포함</p>\n<h1 id='50' style='font-size:18px'>10. 수료 조건</h1>\n<br><p id='51' data-category='list' style='font-size:18px'> 신입 기수 방학 세션을 포함하여, 2 번의 방학 세션과 2 번의 학기 세션을 이수한 경우 수료<br>조건을 만족한다.</p>\n<br><p id='52' data-category='list' style='font-size:18px'> 방학 세션과 학기 세션 이수 기준은 액팅 인원의 의무를 모두 만족한 경우에 한한다.</p>\n<h1 id='53' style='font-size:14px'>11. 예외 조건</h1>\n<br><p id='54' data-category='list' style='font-size:14px'> 본 팀 내규를 적용함에 있어, YBigta 전체 회칙을 우선시한다.<br> 내규 적용 시 필요할 경우 회장단 전원과 팀장단 전원의 동의 하에 내규 적용을 완화하거나<br>예외를 둘 수 있다.</p>",
    "1RshkuO_Y13Pn88ejNJ_2kFGTP1X6DRHo": "<h1 id='0' style='font-size:16px'>1. 각 팀의 정의</h1>\n<br><h1 id='1' style='font-size:16px'>DA 팀 팀원</h1>\n<br><p id='2' data-category='list' style='font-size:14px'> DA 팀에 새롭게 합류한 신입 기수</p>\n<br><p id='3' data-category='list' style='font-size:14px'> DA 팀에서 해당 학기를 활동하기로 한 기존 기수</p>\n<br><p id='4' data-category='list' style='font-size:16px'> 다른 팀 세션을 모두 이수하고, 팀 프로젝트를 2 회 이상 진행한 인원 중 추가 활동을<br>희망하는 인원</p>\n<br><p id='5' data-category='list' style='font-size:14px'> DA 팀을 수료한 인원</p>\n<br><h1 id='6' style='font-size:16px'>액팅 인원</h1>\n<br><p id='7' data-category='paragraph' style='font-size:14px'> 위 네 가지 조건 중 수료 이전에 해당하는 인원</p>\n<h1 id='8' style='font-size:16px'>2. 운영진 구성</h1>\n<br><p id='9' data-category='paragraph' style='font-size:20px'>운영진 직책: 팀장, 부팀장<br>팀장, 부팀장의 역할: 팀 세션 및 스터디 장소 예약, 공지, 학습 환경 조성, 출결 관리 등</p>\n<br><h1 id='10' style='font-size:16px'>운영진의 권한</h1>\n<br><p id='11' data-category='list' style='font-size:16px'> 팀 활동에 비협조적이거나 불성실한 경우 제명 가능<br> 활동 의무 미이행, 표절, 부적절한 언행, 무단 결석 시 제명<br> 수용 인원 초과 시 선발 제한 가능<br> 회칙 개정 시 회장단과 함께 의결권 행사</p>\n<h1 id='12' style='font-size:16px'>3. 세션 정의</h1>\n<br><h1 id='13' style='font-size:16px'>정규 세션</h1>\n<br><p id='14' data-category='list' style='font-size:16px'> 학기 세션: 주니어 교육세션, 프로젝트 발표 세션 등<br> 방학 세션: 시니어 중심의 프로젝트 세션 및 발제 세션</p>\n<br><h1 id='15' style='font-size:16px'>수료 요건</h1>\n<br><p id='16' data-category='list' style='font-size:16px'> 정규 학기 2 회 + 방학 2 회 (총 4 회) 이수<br> 단, 팀 이동자의 경우 학기 1 회 + 방학 1 회로 수료 가능</p>\n<h1 id='17' style='font-size:16px'>4. 활동 인원 정의</h1>\n<br><p id='18' data-category='paragraph' style='font-size:16px'>액팅 인원: 정규 세션 및 스터디에 실질적으로 참여하는 수료 전 인원</p>\n<h1 id='19' style='font-size:16px'>5. 의무와 권리</h1>\n<h1 id='20' style='font-size:16px'>액팅 인원의 의무</h1>\n<br><p id='21' data-category='list' style='font-size:16px'> 정규 세션: 2/3 이상 출석, 과제 제출 필수 (2 회 면제 가능)<br> 프로젝트: 학기당 1 회 이상 참여 (방학 1 회, 학기 중 1 회 권장)<br> 발표: 정규 세션에서 본인 주도 1 회 이상<br> 스터디: 정규학기/방학 모두 1 개 이상 스터디 참여 (2/3 이상 출석 및 발제 포함)</p>\n<br><h1 id='22' style='font-size:16px'>불이행 시 제재</h1>\n<br><p id='23' data-category='list' style='font-size:14px'> DA 팀 제명<br> 알럼나이 톡방 참가 제한<br> 벌금 5 만원</p>\n<h1 id='24' style='font-size:16px'>6. 팀 세션 및 스터디 구성</h1>\n<br><h1 id='25' style='font-size:16px'>강의 및 실습 기준</h1>\n<br><p id='26' data-category='list' style='font-size:16px'> 발표 자료는 세션 3 일 전 제출, 팀장단 피드백 후 수정<br> 강의 직전까지 수정 가능<br> 과제 존재 시, 강의 후 과제 업로드 → 다음 강의 전날 정답 업로드<br> 표절 및 대리작성: 1 회 경고, 2 회 시 제명 권고</p>\n<br><h1 id='27' style='font-size:16px'>장소 예약</h1>\n<br><p id='28' data-category='list' style='font-size:16px'> 팀 세션: 팀장이 D-2 23:59 까지 예약 및 공지<br> 스터디: 발제자가 사전 예약 및 공지</p>\n<h1 id='29' style='font-size:16px'>7. 지각 및 결석 규정</h1>\n<br><h1 id='30' style='font-size:20px'>지각 (스터디 및 팀 세션)</h1>\n<br><p id='31' data-category='paragraph' style='font-size:16px'> 정해진 도착 시간으로부터 10 분 경과 시 지각.</p>\n<br><h1 id='32' style='font-size:16px'>결석</h1>\n<br><p id='33' data-category='paragraph' style='font-size:14px'> 정해진 도착 시간으로부터 30 분 경과 시 결석</p>\n<br><h1 id='34' style='font-size:16px'>조퇴</h1>\n<br><p id='35' data-category='list' style='font-size:16px'> 정당한 사유 없이 조퇴 시 결석 처리한다.<br> 부득이한 경우 운영진 재량으로 예외 처리 가능</p>\n<br><h1 id='36' style='font-size:16px'>발표 미준비</h1>\n<br><p id='37' data-category='paragraph' style='font-size:16px'> 발표 미준비 시 결석으로 처리한다.</p>\n<br><h1 id='38' style='font-size:16px'>과제 미제출</h1>\n<p id='39' data-category='paragraph' style='font-size:18px'> 과제 2 회 미제출 시 결석으로 처리한다.</p>\n<br><p id='40' data-category='paragraph' style='font-size:18px'>징계</p>\n<br><p id='41' data-category='list' style='font-size:18px'> 지각 2 회는 결석 1 회로 취급한다.</p>\n<br><p id='42' data-category='list' style='font-size:18px'> 결석 3 회를 초과할 경우 해당 인원은 징계 위원회를 열어 회장단과 DA 팀장단 회의 하에<br>징계안을 확정한다. 단, 이 때 징계안은 5 인 중 과반의 찬성이 있어야 한다.</p>\n<h1 id='43' style='font-size:18px'>8. 공금 사용 항목</h1>\n<br><p id='44' data-category='list' style='font-size:18px'> 팀 식사, 회식 등 전체 참여 행사 (공식 세션 뒤풀이 포함 시 일부 참여 가능)<br> 강의자 음료 제공<br> 강의 교재 및 물품<br> 클라우드 비용<br> 우수 강의자 및 수강자에 대한 상품<br> 강의 장소 대관 (불가피한 경우)<br> ※ 공금 사용은 운영진의 재량에 따라 결정되며, 위 사용 항목 외 공금 사용 시 DA 팀장단<br>2 인 전원의 동의와 회장단 3 인의 동의가 필요함.</p>\n<h1 id='45' style='font-size:18px'>9. 팀 프로젝트 운영</h1>\n<br><p id='46' data-category='list' style='font-size:18px'> 학기 중 1 회, 방학 중 1 회 이상 진행<br> 팀 구성: 4~6 인, 관심사 기반 익명 매칭<br> 신입 기수 혼합 시 유연한 구성 적용</p>\n<br><h1 id='47' style='font-size:18px'>최종 산출물</h1>\n<br><p id='48' data-category='list' style='font-size:14px'> 정리된 코드 (Github 공개)<br> LaTeX 기반 리포트<br> 발표 자료 및 녹화 영상</p>\n<br><p id='49' data-category='paragraph' style='font-size:18px'>기타</p>\n<br><p id='50' data-category='list' style='font-size:14px'> 실무적 분석 도구 (Tableau, Plotly 등) 활용 장려<br> 데이터 기반 문제 해결 및 실무 경험 강조<br> 산학 협력 연계 노력 포함</p>\n<h1 id='51' style='font-size:18px'>10. 수료 조건</h1>\n<br><p id='52' data-category='paragraph' style='font-size:18px'> 신입 기수 방학 세션을 포함하여, 2 번의 방학 세션과 2 번의 학기 세션을 이수한 경우 수료<br>조건을 만족한다.</p>\n<p id='53' data-category='paragraph' style='font-size:14px'> 방학 세션과 학기 세션 이수 기준은 액팅 인원의 의무를 모두 만족한 경우에 한한다.</p>\n<h1 id='54' style='font-size:14px'>11. 예외 조건</h1>\n<br><p id='55' data-category='list' style='font-size:14px'> 본 팀 내규를 적용함에 있어, YBigta 전체 회칙을 우선시한다.</p>\n<br><p id='56' data-category='list' style='font-size:14px'> 내규 적용 시 필요할 경우 회장단 전원과 팀장단 전원의 동의 하에 내규 적용을 완화하거나<br>예외를 둘 수 있다.</p>",
    "1Pa6bK6QR07RuCxRKDILFYuA68GccVuWi": "<h1 id='0' style='font-size:22px'>🐍</h1>\n<br><h1 id='1' style='font-size:22px'>[ 1회차] Python 과제</h1>\n<h1 id='2' style='font-size:18px'>발제자: 정민지</h1>\n<h1 id='3' style='font-size:20px'>기간</h1>\n<br><p id='4' data-category='paragraph' style='font-size:18px'>과제 마감: 7월 14일 월요일 23시 59분까지<br>지각 제출: 7월 15일 화요일 23시 59분까지</p>\n<h1 id='5' style='font-size:20px'>intro</h1>\n<br><h1 id='6' style='font-size:20px'>안녕하세요~</h1>\n<br><p id='7' data-category='paragraph' style='font-size:16px'>대망의 첫 과제는! 백준 문제 풀기입니다.<br>제가 신입 때 했던 과제를 바탕으로 만든 건데요,<br>원본 퀄리티가 좋아서 가져왔고, 대신 좀 더 쉬운 문제들도 섞어서 부담은 줄였어요.<br>오늘 배운 파이썬 클래스, typing, method 등 모든 것들을 한 번에 사용할 수 있는 고퀄리티 과제입니다.</p>\n<p id='8' data-category='paragraph' style='font-size:16px'>총 10문제인데 채점기준 보고 난이도를 선택해서 푸셔도 되고, 전부 풀고 싶은 분들은 도전해주세요~</p>\n<br><p id='9' data-category='paragraph' style='font-size:16px'>GPT 등의 LLM을 사용하지 말고 최대한 혼자 힘으로 구현하려고 해봅시다!</p>\n<br><p id='10' data-category='paragraph' style='font-size:16px'>예상 소요시간은 사람마다 천차만별일 텐데, 코딩을 잘하시는 분들은 2~3시간, 안 해보신 분들은 며칠은<br>꼬박 걸릴 수도 있어요. 그러니까 반드시 빨리 시작하세요!</p>\n<br><p id='11' data-category='paragraph' style='font-size:16px'>제출까지 챙길 게 많은데, 명세서 보면서 하나하나 하면 충분히 하실 수 있을 거예요 화이팅!!</p>\n<h1 id='12' style='font-size:20px'>명세</h1>\n<br><p id='13' data-category='list' style='font-size:16px'> (계정이 없는 분들은) 백준 계정 생성 (https://www.acmicpc.net)</p>\n<br><p id='14' data-category='list' style='font-size:18px'> (사전공부가 필요하다면) 분할 정복을 이용한 거듭제곱, 자료구조(DFS와 BFS, 스택(stack), 큐<br>(queue), 덱(deque), 트라이(trie), 세그먼트 트리(segment tree)) 주제를 다룹니다. 구글링과 블로<br>그 등 추천!</p>\n<footer id='15' style='font-size:14px'>[1회차] Python 과제</footer>\n<br><footer id='16' style='font-size:14px'>1</footer>\n<h1 id='17' style='font-size:18px'> ‘문제 목록ʼ 속 문제 풀기</h1>\n<p id='18' data-category='paragraph' style='font-size:16px'>a # 구현하세요! 라고 작성되어있는 부분들을 채워주세요. 기본 제공되는 템플릿을 사용하지 않을 경<br>우 제출로 인정되지 않습니다.</p>\n<p id='19' data-category='paragraph' style='font-size:16px'>iii 템플릿 코드 수정은 mypy를 위한 type 수정까지만 허용할게요</p>\n<br><p id='20' data-category='paragraph' style='font-size:16px'>b 같은 자료구조를 사용하는 문제들은 모두 lib.py에 있는 동일한 구현체를 기반으로 풀어야 합니<br>다.</p>\n<br><p id='21' data-category='list' style='font-size:18px'>i 범용성 높게 코드의 재사용성을 최대화해보세요!<br>ii (예외) 1629.py는 같은 폴더의 lib.py에 정의된 Matrix 클래스와 무관함</p>\n<br><p id='22' data-category='paragraph' style='font-size:20px'>c 구현한 메소드에 docstring을 작성해주세요. (세션 때 배운 거 복습!)</p>\n<br><h1 id='23' style='font-size:20px'>구현 후 정답 확인</h1>\n<p id='24' data-category='list' style='font-size:16px'> 백준에 코드 제출 시 성공 여부</p>\n<br><p id='25' data-category='paragraph' style='font-size:18px'>a 제출할 코드 생성: 분리된 파일을 하나로 합친 버전을 만들어줍니다.</p>\n<br><p id='26' data-category='paragraph' style='font-size:16px'>i submission 폴더 만들기</p>\n<p id='27' data-category='paragraph' style='font-size:16px'>ii python convert_for_submission.py : 모든 파일 생성 python convert_submission.py {문제번호} : 개별 문제<br>번호 파일 생성</p>\n<br><p id='28' data-category='paragraph' style='font-size:16px'>b 생성된 파일 속 코드를 복사해서 백준에 제출! → 맞았습니다!! 가 뜨면 성공</p>\n<br><h1 id='29' style='font-size:16px'>참고</h1>\n<br><p id='30' data-category='list' style='font-size:18px'> 소스 코드 공개 설정 : “공개ˮ 또는 “맞았을 때만 공개ˮ<br> 혹시라도 ‘Python 3ʼ로 제출했을 때 시간 초과 등이 뜬다면 ‘PyPy3ʼ으로도 제출해보세요.<br> 백준 사용법은 구글링하면 많이 나와서 잘 하실 거라 믿습니다!</p>\n<h1 id='31' style='font-size:22px'>문제 목록</h1>\n<br><h1 id='32' style='font-size:18px'>난이도: 백준 레벨</h1>\n<h1 id='33' style='font-size:20px'>1. 그래프와 순회</h1>\n<br><h1 id='34' style='font-size:20px'>1260 DFS와 BFS 실II</h1>\n<footer id='35' style='font-size:14px'>[1회차] Python 과제</footer>\n<br><footer id='36' style='font-size:14px'>2</footer>\n<br><p id='37' data-category='list' style='font-size:18px'>i 파일별 TODO 블록 속 instruction을 참고해주세요.<br>ii 아무것도 수정하지 마세요! 써 있는 파일은 수정 금지 (오류 발생함)</p>\n<p id='38' data-category='list' style='font-size:16px'> 파일별로 mypy test를 실행해 Success하는지 확인해주세요. mypy 참고링크</p>\n<h1 id='39' style='font-size:20px'>2. 스텍, 큐, 덱</h1>\n<br><p id='40' data-category='list' style='font-size:16px'>2164 카드2 (실IV)<br>11866 요세푸스 문제 0 (실IV)</p>\n<br><h1 id='41' style='font-size:18px'>3. 분할 정복을 이용한 거듭제곱</h1>\n<br><p id='42' data-category='list' style='font-size:16px'>1629 곱셈 (실I)<br>10830 행렬 제곱 (골IV)</p>\n<h1 id='43' style='font-size:20px'>4. 트라이(trie)</h1>\n<br><p id='44' data-category='list' style='font-size:16px'>3080 아름다운 이름 (플III)</p>\n<br><p id='45' data-category='list' style='font-size:16px'>5670 휴대폰 자판 (플IV)</p>\n<h1 id='46' style='font-size:20px'>5. 세그먼트 트리(segment tree)</h1>\n<br><p id='47' data-category='list' style='font-size:16px'>2243 사탕상자 (플V)<br>3653 영화 수집 (플IV)<br>17408 수열과 쿼리 24 (플IV)</p>\n<h1 id='48' style='font-size:22px'>제출 방법</h1>\n<h1 id='49' style='font-size:18px'>1. 백준 제출 및 인증</h1>\n<br><p id='50' data-category='paragraph' style='font-size:16px'>백준 제출 후 links.txt 파일을 작성합니다.<br>확인: 소스 코드 공개 설정 : “공개ˮ 또는 “맞았을 때만 공개ˮ (비공개면 채점 불가ㅠㅜ)</p>\n<figure id='51'><img alt=\"\" data-coord=\"top-left:(149,1124); bottom-right:(1121,1348)\" /></figure>\n<p id='52' data-category='paragraph' style='font-size:16px'>채점 현황 > 자신의 제출 내역 > 언어(파란색) 부분을 위와 같이 클릭하면 코드/내역을 함께 확인할 수 있<br>습니다.</p>\n<footer id='53' style='font-size:14px'>[1회차] Python 과제</footer>\n<br><footer id='54' style='font-size:14px'>3</footer>\n<figure id='55' data-category='chart'><img data-coord=\"top-left:(149,138); bottom-right:(1133,527)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>제품을번호</td><td>아이디</td><td>문제</td><td>문제 제목</td><td>결과</td><td>메모리</td><td>시간</td><td>언어</td><td>코드 겉이</td><td>재출한 시간</td></tr></thead><tbody><tr><td>item_01</td><td>80736343$</td><td>100$</td><td>100$</td><td>100$</td><td>100$</td><td>100$</td><td>100$</td><td>100$</td><td>100$</td><td>100$</td></tr></tbody></table></figure>\n<p id='56' data-category='paragraph' style='font-size:20px'>해당 페이지의 링크를 복사해서 (위 캡처본의 경우 https://www.acmicpc.net/source/80736343) 각<br>각 links.txt에 저장해주세요.(각 문제번호 옆에 형식에 맞게 작성) 푼 문제만 기입하셔도 됩니다.</p>\n<br><h1 id='57' style='font-size:22px'>links.txt 예시</h1>\n<h1 id='58' style='font-size:22px'>2. GitHub push</h1>\n<br><h1 id='59' style='font-size:18px'>과제 제출용 GitHub에 올라가는 파일 구조</h1>\n<footer id='60' style='font-size:16px'>[1회차] Python 과제</footer>\n<br><footer id='61' style='font-size:14px'>4</footer>\n<p id='62' data-category='paragraph' style='font-size:18px'>풀지 않은 문제도 모두 convert_for_submission.py로 생성해서 submission 폴더 속에 넣어주세요</p>\n<h1 id='63' style='font-size:22px'>채점 기준</h1>\n<br><h1 id='64' style='font-size:20px'>submission 내 파일 기준으로:</h1>\n<footer id='65' style='font-size:16px'>[1회차] Python 과제</footer>\n<br><footer id='66' style='font-size:14px'>5</footer>\n<p id='67' data-category='list' style='font-size:16px'> 허용된 영역 밖의 코드 수정이 없고<br> 코드가 mypy 테스트를 통과하며<br> 백준에서 \"맞았습니다!!\"가 뜨면 (links.txt로 확인할 예정)</p>\n<br><h1 id='68' style='font-size:22px'>정답!</h1>\n<br><p id='69' data-category='paragraph' style='font-size:18px'>하나라도 미충족할 경우<br>오답...</p>\n<h1 id='70' style='font-size:20px'>총 10개 문제 중에<br>통과-5개 이상. 미흡-4개. 실패-3개 이하.<br>8개 이상-Excellent!! 혜택이 있을지도..?)</h1>\n<p id='71' data-category='paragraph' style='font-size:18px'>참고)<br>25-2 신입기수 세션 Python(1)</p>\n<footer id='72' style='font-size:14px'>[1회차] Python 과제</footer>\n<br><footer id='73' style='font-size:14px'>6</footer>",
    "1QgoajZDvsmoUvDyWwyT2qst3uz0yb-s9": "<header id='0' style='font-size:14px'>2025-2 YBIGTA</header>\n<h1 id='1' style='font-size:20px'>Python/개발환경</h1>\n<footer id='2' style='font-size:16px'>26기 조요셉</footer>\n<h1 id='3' style='font-size:20px'>목차</h1>\n<p id='4' data-category='list' style='font-size:16px'>1. Prerequisites</p>\n<p id='5' data-category='list' style='font-size:14px'>2. Virtual Environment</p>\n<p id='6' data-category='list' style='font-size:18px'>3. Python Guidelines</p>\n<h1 id='7' style='font-size:14px'>Prerequisites</h1>\n<header id='8' style='font-size:20px'>Prerequisites</header>\n<br><h1 id='9' style='font-size:22px'>Anaconda를 설치해봅시다!</h1>\n<h1 id='10' style='font-size:18px'>ANACONDA. Products Solutions Resources Company</h1>\n<br><p id='11' data-category='paragraph' style='font-size:14px'>Free Download</p>\n<br><p id='12' data-category='paragraph' style='font-size:14px'>Sign In</p>\n<br><p id='13' data-category='paragraph' style='font-size:14px'>Get a Demo</p>\n<p id='14' data-category='paragraph' style='font-size:14px'>Introducing The Anaconda AI Platform for secure open source development and governance</p>\n<h1 id='15' style='font-size:22px'>Advance AI with<br>Clarity and Confidence</h1>\n<h1 id='16' style='font-size:20px'>Simplify, safeguard, and accelerate AI value with open source.</h1>\n<p id='17' data-category='paragraph' style='font-size:16px'>Sign Up for Free ></p>\n<br><p id='18' data-category='paragraph' style='font-size:14px'>Get a Demo ></p>\n<p id='19' data-category='paragraph' style='font-size:18px'>Advance AI with Open Source</p>\n<br><p id='20' data-category='paragraph' style='font-size:16px'>Anaconda is the birthplace of Python data science.<br>We are a movement of data scientists, data-driven<br>enterprises, and open source communities.</p>\n<br><p id='21' data-category='paragraph' style='font-size:14px'>Anaconda /</p>\n<header id='22' style='font-size:20px'>Prerequisites</header>\n<br><h1 id='23' style='font-size:22px'>Anaconda를 설치해봅시다!</h1>\n<p id='24' data-category='paragraph' style='font-size:14px'>Home</p>\n<h1 id='25' style='font-size:20px'>Download Now</h1>\n<br><p id='26' data-category='paragraph' style='font-size:16px'>Download Anaconda Distribution or Miniconda by choosing the proper installer for your machine. Learn the<br>from our Documentation.</p>\n<br><h1 id='27' style='font-size:22px'>Distribution<br>Installers</h1>\n<h1 id='28' style='font-size:18px'>Download</h1>\n<p id='29' data-category='paragraph' style='font-size:16px'>For installation assistance, refer to troubleshooting.</p>\n<br><p id='30' data-category='paragraph' style='font-size:18px'>Distribution<br>Installers</p>\n<p id='31' data-category='paragraph' style='font-size:14px'>Download</p>\n<br><p id='32' data-category='paragraph' style='font-size:18px'>Miniconda<br>Installers</p>\n<p id='33' data-category='paragraph' style='font-size:14px'>For installation assistance, refer to troubleshooting.</p>\n<br><p id='34' data-category='paragraph' style='font-size:16px'>Download</p>\n<p id='35' data-category='paragraph' style='font-size:14px'>For installation assistance, refer to troubleshooting</p>\n<br><table id='36' style='font-size:18px'><thead></thead><tbody><tr><td>: Windows</td><td></td></tr><tr><td>a Mac</td><td></td></tr><tr><td>Linux</td><td></td></tr></tbody></table>\n<br><p id='37' data-category='paragraph' style='font-size:20px'>OS에 맞는 배포판을 설치해줍시다!</p>\n<header id='38' style='font-size:20px'>Prerequisites</header>\n<br><h1 id='39' style='font-size:22px'>Anaconda를 설치해봅시다!</h1>\n<h1 id='40' style='font-size:22px'>Thank you for<br>Anaconda3<br>downloadi</h1>\n<p id='41' data-category='paragraph' style='font-size:14px'>Didn't download? Go here to download your version. F</p>\n<h1 id='42' style='font-size:18px'>Finish creating your Cloud a</h1>\n<br><p id='43' data-category='paragraph' style='font-size:18px'>Get added benefits of Notebooks, Pan<br>Catalogs, and Anaconda Learning.</p>\n<p id='44' data-category='paragraph' style='font-size:16px'>Create Account ></p>\n<br><figure id='45'><img style='font-size:14px' alt=\"2025.06-0 (64-bit) Setup\nWelcome to Anaconda3 2025.06-0\n(64-bit) Setup\nANACONDA.\nSetup will guide you through the installation of Anaconda3\n2025.06-0 (64-bit).\nIt is recommended that you dose all other applications\nbefore starting Setup. This will make it possible to update\nrelevant system files without having to reboot your\ncomputer.\nClick Next to continue.\nNext > Cancel\" data-coord=\"top-left:(976,359); bottom-right:(2251,1213)\" /></figure>\n<footer id='46' style='font-size:20px'>Quick Start</footer>\n<br><p id='47' data-category='paragraph' style='font-size:16px'>All the tools you need to bring your projects to life</p>\n<header id='48' style='font-size:20px'>Prerequisites</header>\n<br><h1 id='49' style='font-size:22px'>Anaconda를 설치해봅시다!</h1>\n<figure id='50'><img style='font-size:14px' alt=\"Anaconda3 2025.06-0 (64-bit) Setup\nAdvanced Installation Options\nANACONDA. Customize how Anaconda3 integrates with Windows\nCreate shortcuts (supported packages only).\nAdd Anaconda3 to my PATH environment variable\nNOT recommended. This can lead to conflicts with other applications. Instead, use\nthe Commmand Prompt and Powershell menus added to the Windows Start Menu.\nRegister Anaconda3 as my default Python 3. 13\nRecommended. Allows other programs, such as VSCode, PyCharm, etc. to\nautomatically detect Anaconda3 as the primary Python 3. 13 on the system.\nClear the package cache upon completion\nRecommended. Recovers some disk space without harming functionality.\nAnaconda, Inc.\n< Back Install Cancel\" data-coord=\"top-left:(208,442); bottom-right:(1482,1445)\" /></figure>\n<br><p id='51' data-category='paragraph' style='font-size:18px'>해당 화면까지는 전부 넘겨주셔도 됩니다!</p>\n<br><figure id='52'><img style='font-size:14px' alt=\"0:\\_ 명령 프롬프트\nMicrosoft Windows [Version 10. 0. 26100 4349]\n(c) Microsoft Corporation. All rights reserved.\nC: \\Users conda -V\nconda 24. 11.3\" data-coord=\"top-left:(1629,448); bottom-right:(2762,831)\" /></figure>\n<h1 id='53' style='font-size:16px'>CLI에서 \"conda -V\"</h1>\n<h1 id='54' style='font-size:18px'>conda 버전이 위와 같이 명시되면 설치 성공!</h1>\n<h1 id='55' style='font-size:20px'>VScode를 설치해봅시다!</h1>\n<br><header id='56' style='font-size:16px'>Prerequisites</header>\n<figure id='57'><img style='font-size:14px' alt=\"Visual Studio Code Docs Updates Blog API Extensions FAQ GitHub Copilot MCP Search Docs Download\nTry MCP servers to extend agent mode in VS Code!\n1 1 1 O O 1 1 1 1 1 1 O O O 1 0 O 1 1 1 0 0 O O \nO 1 O O O 1 1 O O O 1 1 0 O O 1 1 1 1 O 1 1\nO 1 1 1 1 1 O 1 1 0 O O 1 1 0 0\nThe 0 open source\nP p\nO\nn O O O 1 1 O O n O 1 C 1 1 O 1 O\nO 1 0 1 1 O O O\nAI Download Visual Studio Code\nFree and built on open source. Integrated Git, debugging and extensions.\nBy us\nEXPLORER functionality.md\nHIKING-JOURNAL DOCTYPE html> ↓ Windows .deb .rpm ↓ Mac\n1 <!\nV docs 2 <html lang='en'>\nfunctionality.md 3 <head> Windows 10, 11 Debian, Ubuntu Red Hat, Fedora, SUSE macOS 11.0+\n4 <meta charset=\n> journal-enteries\n5 <meta name='v:\nV website\n6 <title>Hiking User Installer x64 Arm64 .deb x64 Arm32 Arm64 .zip Intel chip Apple silicon Universal\nindex.html 7 <link rel='st)\n8 <link rel='pre System .rpm x64 Arm32 Arm64\nx64 Arm64 CLI Intel chip Apple silicon\n9 <link rel='pre Installer .tar.gz x64 Arm32 Arm64\n10 <link href='h1\nOS에 맞는 배포판을 설치해줍시다! .zip x64 Arm64 Snap Snap Store\nCLI x64 Arm64 CLI x64 Arm32 Arm64\" data-coord=\"top-left:(273,319); bottom-right:(2694,1585)\" /></figure>\n<header id='58' style='font-size:18px'>Prerequisites</header>\n<br><h1 id='59' style='font-size:20px'>VScode를 설치해봅시다!</h1>\n<figure id='60'><img style='font-size:16px' alt=\"X Microsoft Visual Studio Code (User) 설치 x\n사용권 계약\n계속하기 전에 다음의 중요 정보를 읽어보십시오.\n다음 사용권 계약을 읽어보십시오, 설치를 계속하려면 이 계약에 동의해야 합니다.\n이 라이선스는 Visual Studio 코드 제품에 적용됩니다. Visual Studio 코드\n의 소스 코드는 MIT 라이선스 계약\nhttps://www.haom/shousoffirencestechaimal-CoScml 아래\nhttp://lglitub.com/Microsoft/vscoder/ 나와 있습니다. 추가 라이선스\n정보는 FAQ( https://cw.fav.taobao.com/tioe/sai.com/crnk4/\n참조할 수 있습니다.\nMICROSOFT 소프트웨어 라이선스 계약서\n동의합니다(A)\n동의하지 않습니다(D)\n다음(N) 취소\" data-coord=\"top-left:(241,383); bottom-right:(1470,1386)\" /></figure>\n<br><figure id='61'><img style='font-size:14px' alt=\"X Microsoft Visual Studio Code (User) 설치 x\n추가 작업 선택\n수행할 추가 작업을 선택하십시오.\nVisual Studio Code 설치 과정에 포함할 추가 작업을 선택한 후, '다음'을 클릭하십시오.\n아이콘 추가:\n바탕 화면에 바로가기 만들기(D)\n기타:\n'Code(으)로 열기' 작업을 Windows 탐색기 파일의 상황에 맞는 메뉴에 추가\n'Code(으)로 열기' 작업을 Windows 탐색기 디렉터리의 상황에 맞는 메뉴에 추가\nCode을(를) 지원되는 파일 형식에 대한 편집기로 등록합니다.\nPATH에 추가(다시 시작한 후 사용 가능)\n설정 확인 후 설치해줍시다!\n뒤로(B) 다음(N) 취소\" data-coord=\"top-left:(1539,385); bottom-right:(2754,1387)\" /></figure>\n<header id='62' style='font-size:16px'>Prerequisites</header>\n<br><h1 id='63' style='font-size:20px'>VScode를 설치해봅시다!</h1>\n<figure id='64'><img style='font-size:14px' alt=\"↗\nChrome\nWindows PowerShell x + x\nWindows PowerShell\nル\nCopyright (C) Microsoft Corporation. All rights reserved.\n↗\nDocker 새로운 기능 및 개선 사항 에 대 한 최신 PowerShell을 설치 하세 요 ! https://aka.ms/PSWindows\nDesktop\n개인 및 시스템 프로 필을 로드하는 데 2538ms가 걸렸습니다 .\n모 (base) PS C: \\Users code\nVMware\nWorkstati...\nTALK\n카카오톡\nzoom\nZoom\nWorkplace\nClaude\n○\n↗ VScode 멋있게 켜는 법(쉬움)\nMongoDB...\n휴지통 시작 → 'powershell'  → Enter → 'code' → Enter\nmlops-proj...\nAssignments\" data-coord=\"top-left:(452,320); bottom-right:(2541,1571)\" /></figure>\n<h1 id='65' style='font-size:20px'>VScode를 설치해봅시다!</h1>\n<br><header id='66' style='font-size:16px'>Prerequisites</header>\n<figure id='67'><img style='font-size:14px' alt=\"File Edit Selection View Go Run Terminal Help Search 0: x\nEXTENSIONS: MARKETPLACE 田 Extension: Python x\npython을 입력해줍시다!\npython\nPython\nPython Debugger\nMicrosoft microsoft.com 174,815,228 ★ (617)\nPython Debugger extension\nMicrosoft Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactorin...\nPython Install Auto Update\nPython language support wit...\n4\n+ Microsoft\nDETAILS FEATURES CHANGELOG EXTENSION PACK\nPylance\nA performant, feature-rich la...\nInstallation\n① Extension Python extension for Visual Studio Code\nIdentifier ms-python. python\nPython Indent � 14.5M 4\nVersion 2025.8.0\nCorrect Python indentation A Visual Studio Code extension with rich support for the Python language (for all actively supported Python versions), providing\nLast Updated 2025-06-17, 10:52:17\nKevin Rose Install points for extensions to seamlessly integrate and offer support for IntelliSense (Pylance), debugging (Python Debugger),\naccess\nSize 29.19MB\nPython Exte... � 11.6M 4.5 formatting, linting, code navigation, refactoring, variable explorer, test explorer, and more!\nCache 10.29KB\nPopular Visual Studio Code e...\nDon Jayamanne Install Support for vscode.dev\nMarketplace\nPython for VSC... 6M 2 The Python extension does offer some support when running on vscode.dev (which includes github.dev). This includes partial\nPython language extension f... IntelliSense for open files in the editor. Published 2016-01-20, 00:03:11\n; Haakon Townsend Install Released 2025-07-03, 19:51:18\nLast\nInstalled extensions\n--- autoDocstrin... 13.7M 5\ndoc\nGenerates python docstrings... The Python extension will automatically install the following extensions by default to provide the best Python development Categories\nNils Werner Install\nexperience in VS Code:\nProgramming Languages Debuggers\nPython Enviro... + 11.8M 4\n· Pylance - to provide performant Python language support Other Data Science\nView and manage Python en...\n0 Python Debugger - to provide a seamless debug experience with debugpy\nDon Jayamanne Install Machine Learning\nThese extensions are optional dependencies, meaning the Python extension will remain fully functional if they fail to be installed. Any\nPython Preview 2.3M 4.5\nProvide Preview for Python E... or all of these extensions can be disabled or uninstalled at the expense of some features. Extensions installed through the Resources\ndongli Install marketplace are subject to the Marketplace Terms of Use.\nMarketplace\nPython Extended � 1 .8M 4 Extensibility Issues\nPython Extended is a vscode Repository\nLicense\nTaiwo Kareem Install The Python extension provides pluggable access points for extensions that extend various feature areas to further improve your\nMicrosoft\nPython development experience. These extensions are all optional and depend on your project configuration and preferences.\nPython Path 1.5M 4.5\nPython imports utils.\n· Python formatters\nMathias Gesbert Install\n· Python linters\nAREPL for pyth... � 1.6M 5 �\nIf you encounter issues with any of the listed extensions, please file an issue in its corresponding repo.\nreal-time python scratchpad\" data-coord=\"top-left:(351,299); bottom-right:(2577,1598)\" /></figure>\n<h1 id='68' style='font-size:20px'>VScode를 설치해봅시다!</h1>\n<br><header id='69' style='font-size:16px'>Prerequisites</header>\n<figure id='70'><img style='font-size:14px' alt=\"File Edit Selection View Go Run Terminal Help 0: x\n>|\nEXPLORER Python: Select Interpreter recently used\nNO FOLDER OPENED\nRemote-SSH: Connect to Host...\nYou have not yet opened a folder.\nDeveloper: Reload Window\nGit: Clone ctrl + shift + p 혹은 상단의 검색 바에서 '>' 입력\nOpen Folder\nAccounts: Manage Trusted Extensions For Account other commands\nYou can clone a repository locally. Accounts: Manage Trusted MCP Servers For Account\nAdd Cell Tag Python: Select Interpreter 클릭\nClone Repository\nAdd Data Breakpoint at Address\nAdd Function Breakpoint\nYou can open a remote repository\nor pull request without cloning. Add XHR/fetch Breakpoint\nAuthentication: Remove Dynamic Authentication Providers\nOpen Remote Repository\nAzure Container Registry: Build Image in Azure...\nAzure Container Registry: Create Registry...\nTo learn more about how to use\nGit and source control in VS Code Azure Container Registry: Delete Registry...\nread our docs. Azure Container Registry: Delete Repository...\nDo\nShow All Commands Ctrl + Shift + P\nOpen File Ctrl + O\nOpen Folder Ctrl + K Ctrl +\nOpen Recent Ctrl + R\nOpen Chat Ctrl + Alt + I\nOUTLINE\" data-coord=\"top-left:(392,307); bottom-right:(2588,1571)\" /></figure>\n<header id='71' style='font-size:16px'>Prerequisites</header>\n<br><h1 id='72' style='font-size:20px'>실행해봅시다!</h1>\n<figure id='73'><img style='font-size:14px' alt=\"x File Edit Selection View Go Run Terminal Help Select Interpreter 0: x\nEXPLORER base\nNO FOLDER OPENED Python 3.11.9 (base) ~\\anaconda3\\python.exe\n+ Create Virtual Environment...\nYou have not yet opened a folder.\n늘 Enter interpreter path...\nUse Python from `python.defaultinterpreterPath' setting ~lanaconda3lemsladkagenflpython.ese\nOpen Folder\nYou can clone a repository locally. 설치할 때 자동으로 설치된\nAnaconda\nClone Repository\nYou can open a remote repository base 파이썬 버전으로 선택해줍니다!\nor pull request without cloning.\nOpen Remote Repository\nTo learn more about how to use\nGit and source control in VS Code\nread our docs.\nShow All Commands Ctrl + Shift +\nOpen File Ctrl + O\nOpen Folder Ctrl + K Ctrl +\nOpen Recent Ctrl + R\nOpen Chat Ctrl + Alt + |\nOUTLINE\" data-coord=\"top-left:(357,310); bottom-right:(2573,1589)\" /></figure>\n<header id='74' style='font-size:22px'>Prerequisites</header>\n<br><h1 id='75' style='font-size:22px'>실행해봅시다!</h1>\n<p id='76' data-category='paragraph' style='font-size:14px'>PROBLEMS</p>\n<br><p id='77' data-category='paragraph' style='font-size:16px'>OUTPUT</p>\n<br><p id='78' data-category='paragraph' style='font-size:14px'>DEBUG CONSOLE</p>\n<br><p id='79' data-category='paragraph' style='font-size:14px'>TERMINAL</p>\n<br><p id='80' data-category='paragraph' style='font-size:16px'>X</p>\n<p id='81' data-category='paragraph' style='font-size:14px'>TERMINAL</p>\n<figure id='82'><img style='font-size:16px' alt=\"C: \\Users >conda -V\nconda 24.11.3\n\\Users >conda activate\n(base) C: \\Users >conda env list\n# conda environments:\n#\nbase * C: \\Users anaconda3\" data-coord=\"top-left:(187,496); bottom-right:(849,836)\" /></figure>\n<br><h1 id='83' style='font-size:20px'>conda activate로 conda 활성화 [(base)가 옆에 뜹니다!]</h1>\n<h1 id='84' style='font-size:18px'>conda env list로 설치된 가상환경 확인</h1>\n<p id='85' data-category='paragraph' style='font-size:16px'>(base) C: \\Users\\Shon>conda create --name ybigta python==3.12<br>Retrieving notices:</p>\n<p id='86' data-category='paragraph' style='font-size:16px'>Channels:<br>- defaults<br>Platform: win-64<br>Collecting package metadata (repodata.json): done<br>Solving environment: done</p>\n<p id='87' data-category='paragraph' style='font-size:16px'>## Package Plan ##</p>\n<p id='88' data-category='paragraph' style='font-size:16px'>environment location: C: \\Users \\Shon\\anaconda3\\envs \\ybigta</p>\n<p id='89' data-category='paragraph' style='font-size:16px'>added / updated specs:<br>python==3.12</p>\n<p id='90' data-category='paragraph' style='font-size:16px'>The following NEW packages will be INSTALLED:</p>\n<br><p id='91' data-category='paragraph' style='font-size:20px'>conda create --name <가상환경 이름> python==<버전><br>\"Python 3.12가 설치된 ybigta라는 이름으로 가상환경을 만들고<br>싶어\" 라는 뜻입니다!</p>\n<p id='92' data-category='paragraph' style='font-size:20px'>진짜로 만드시겠습니까? 질문에 일일이 y 눌러주기 귀찮다면<br>conda create --name <가상환경 이름> python==<버전> -y</p>\n<br><table id='93' style='font-size:16px'><thead></thead><tbody><tr><td>bzip2</td><td>pkgs/main/win-64: :bzip2-1.0.8-h2bbff1b_ 6</td></tr><tr><td>ca-certificates</td><td>pkgs/main/win-64: :ca-certificates-2025.2. 25-haa95532_ 0</td></tr><tr><td>expat</td><td>pkgs/main/win-64: :expat-2.7.1-h8ddb27b_0</td></tr><tr><td>libffi</td><td>pkgs/main/win-64: :libffi-3.4.4-hd77b12b_1</td></tr><tr><td>openssl</td><td>pkgs/main/win-64: :openss1-3.0.16-h3f729d1_0</td></tr><tr><td>pip</td><td>pkgs/main/noarch: :pip-25.1-pyhc872135_2</td></tr><tr><td>python</td><td>pkgs/main/win-64: :python-3.12.0-h1d929f7_0</td></tr><tr><td>setuptools</td><td>pkgs/main/win-64: :setuptools-78.1.1-py312haa95532_0</td></tr><tr><td>sqlite</td><td>pkgs/madin/win-64t:splitte-3.45.3-3-12bribLE</td></tr></tbody></table>\n<br><p id='94' data-category='paragraph' style='font-size:16px'>conda +</p>\n<br><p id='95' data-category='paragraph' style='font-size:14px'>></p>\n<br><h1 id='96' style='font-size:18px'>conda -V로 버전 확인</h1>\n<br><p id='97' data-category='paragraph' style='font-size:14px'>:</p>\n<br><p id='98' data-category='paragraph' style='font-size:18px'>I</p>\n<p id='99' data-category='paragraph' style='font-size:14px'>aone</p>\n<header id='100' style='font-size:18px'>Prerequisites</header>\n<br><h1 id='101' style='font-size:20px'>Anaconda 명령어 정리!</h1>\n<h1 id='102' style='font-size:16px'>1. 환경(Environment) 관리</h1>\n<br><table id='103' style='font-size:14px'><thead><tr><td>목적</td><td>명령어 예시</td></tr></thead><tbody><tr><td>conda 버전 확인</td><td>conda -V 또는 conda --version</td></tr><tr><td>환경 목록 보기</td><td>conda env list</td></tr><tr><td>환경 생성</td><td>conda create -n myenv python=3.11</td></tr><tr><td>환경 삭제</td><td>conda remove -n myenv --all</td></tr><tr><td>환경 활성화</td><td>conda activate myenv</td></tr><tr><td>환경 비활성화</td><td>conda deactivate</td></tr><tr><td>환경 복제</td><td>conda create --name newenv --clone oldenv</td></tr><tr><td>환경 내 패키지 목록 확인</td><td>conda list</td></tr><tr><td>특정 환경 안에서 패키지 확인</td><td>conda list -n myenv</td></tr></tbody></table>\n\n<table id='105' style='font-size:14px'><thead><tr><td>목적</td><td>명령어 예시</td></tr></thead><tbody><tr><td>환경 내보내기 (백업)</td><td>conda env export > environment.yml</td></tr><tr><td>환경 불러오기 (복원)</td><td>conda env create -f environment.yml</td></tr><tr><td>환경 파일에서 이름 변경해서 생성</td><td>conda env create -f environment.yml -n newenv</td></tr></tbody><caption id='104' style='font-size:16px'>e 2. 환경 복원 / 공유</caption></table>\n<header id='106' style='font-size:20px'>Prerequisites</header>\n<br><h1 id='107' style='font-size:22px'>macOS 유저를 위한 설치 가이드</h1>\n<h1 id='108' style='font-size:18px'>● Anaconda 설치 가이드</h1>\n<br><p id='109' data-category='list' style='font-size:16px'>○ https://cg.og.net.com/bobaobaofick2349771349<br>● VScode 설치 가이드</p>\n<br><h1 id='110' style='font-size:14px'>○ http://www.com/kricht.takakk//soce-utonalonatos</h1>\n<p id='111' data-category='paragraph' style='font-size:14px'>Virtual<br>Environment</p>\n<header id='112' style='font-size:16px'>Virtual Environment</header>\n<br><h1 id='113' style='font-size:20px'>오늘날 우리는..</h1>\n<figure id='114'><img style='font-size:14px' alt=\"NumPy\npandas\nmatplotlib\nPyTorch\nSciP\nlear\n무엇을 도와드릴까요?\n쌈[c]@[c]뽕한 코드 짜줘.\n너무\" data-coord=\"top-left:(464,318); bottom-right:(2566,1536)\" /></figure>\n<h1 id='115' style='font-size:22px'>가상환경이란?</h1>\n<br><header id='116' style='font-size:16px'>Virtual Environment</header>\n<h1 id='117' style='font-size:20px'>\"독립적인 프로젝트를 위한 개별적인 작업 공간\"</h1>\n<p id='118' data-category='paragraph' style='font-size:14px'>Virtual Environment 1</p>\n<br><figure id='119'><img style='font-size:14px' alt=\"Python 2.7\n3rd Party Libraries\nNumPy 1.14.4\nMatplotlib 2.2.5\" data-coord=\"top-left:(258,750); bottom-right:(672,1369)\" /></figure>\n<br><h1 id='120' style='font-size:14px'>Virtual Environment 2</h1>\n<br><figure id='121'><img style='font-size:14px' alt=\"Python 3.6\nPandas 1.0. 1\nPySpark 2.4.8\" data-coord=\"top-left:(783,737); bottom-right:(1207,1371)\" /></figure>\n<br><h1 id='122' style='font-size:18px'>프로젝트 분리</h1>\n<br><h1 id='123' style='font-size:16px'>한 프로젝트에서의 변경이 다른 프로젝트에 영향을 미치지 않는다.</h1>\n<h1 id='124' style='font-size:20px'>의존성 관리</h1>\n<br><h1 id='125' style='font-size:18px'>프로젝트별로 필요한 라이브러리와 버전을 명확히 관리할 수 있다.</h1>\n<p id='126' data-category='paragraph' style='font-size:18px'>개발 환경 일관성</p>\n<br><p id='127' data-category='paragraph' style='font-size:16px'>다른 개발자와 협업 시, 같은 환경에서 작업할 수 있다.</p>\n<header id='128' style='font-size:14px'>Virtual Environment</header>\n<br><h1 id='129' style='font-size:22px'>가상환경을 사용해보자: Venv</h1>\n<h1 id='130' style='font-size:20px'>Venv란 무엇인가?</h1>\n<br><p id='131' data-category='paragraph' style='font-size:16px'>python을 위한 가상 환경 생성 도구. 파이썬 3.3 버전부터 표준 라이브러리에 포함되었으며, 개별 프로젝트에 독립된 파<br>이썬 환경을 제공. 이를 통해 서로 다른 프로젝트에서 다른 버전의 라이브러리를 사용할 수 있으며, 시스템의 파이썬 환<br>경에 영향을 주지 않는다.</p>\n<h1 id='132' style='font-size:18px'>Venv 사용 방법!</h1>\n<figure id='133'><img style='font-size:14px' alt=\"## 가상환경 생성\npython3 -m venv '환경 이름'\n## 가상환경 활성화 ( 맥/리눅스)\nsource '환경 이름' /bin/activate\n## 가상환경 활성화 (윈도우)\n'환경 이름'\\Scripts\\activate\" data-coord=\"top-left:(190,883); bottom-right:(2835,1505)\" /></figure>\n<header id='134' style='font-size:16px'>Virtual Environment</header>\n<br><h1 id='135' style='font-size:20px'>가상환경을 사용해보자: Venv</h1>\n<figure id='136'><img style='font-size:14px' alt=\"Desktop 0:\nEXPLORER DEBUG CONSOLE PROBLEMS TERMINAL PORTS x\nV OPEN EDITORS > V TERMINAL zsh : *\n✓ DESKTOP � ls\nybigta\n~/Desktop base at 04:51:52 PM\nbin\npython3 -m venv ybigta\n> include\n~/Desktop base at 04:52:22 PM\n> lib\npyvenv.cfg\n.localized\n> OUTLINE\n>\" data-coord=\"top-left:(168,371); bottom-right:(1929,1523)\" /></figure>\n<br><p id='137' data-category='paragraph' style='font-size:18px'>현재 작업 공간은 \"바탕화면\"이다. 여<br>기에서 터미널을 열어 커맨드를 실행<br>하면 ybigta라는 이름의 가상환경을<br>생성할 수 있다.</p>\n<p id='138' data-category='paragraph' style='font-size:18px'>이때, 가상환경 폴더가 해당 디렉토리<br>에 생성되는 것을 확인할 수 있다. 즉,<br>본인이 원하는 프로젝트의 디렉토리에<br>개별적인 venv 가상환경을 직접 설정<br>할 수 있는 것이다!</p>\n<header id='139' style='font-size:16px'>Virtual Environment</header>\n<br><h1 id='140' style='font-size:20px'>가상환경을 사용해보자: Venv</h1>\n<figure id='141'><img style='font-size:14px' alt=\"Desktop\nEXPLORER DEBUG CONSOLE PROBLEMS TERMINAL PORTS x\nOPEN EDITORS > V TERMINAL zsh\nDESKTOP\nls\nybigta\n~/Desktop base at 04:51:52 PM\nbin\npython3 -m venv ybigta\n> include\n~/Desktop base at 04:52:22 PM\n> lib\nsource ybigta/bin/activate\npyvenv.cfg\n~/Desktop ybigta base at 04:53:39 PM\n.localized\npip install numpy --quiet\n스크린샷 2025-01-05 오후 4....\n[notice] A new release of pip is available: 23.2.1 -> 24.3.1\n[notice] To update, run: pip install --upgrade pip\n~/Desktop ybigta base at 04:55:02 PM\npip install pandas --quiet\n[notice] A new release of pip is available: 23.2.1 -> 24.3.1\n[notice] To update, run: pip install --upgrade pip\n~/Desktop took 5s ybigta base at 04:55:14 PM\n> OUTLINE\n><\" data-coord=\"top-left:(165,368); bottom-right:(1934,1527)\" /></figure>\n<br><h1 id='142' style='font-size:18px'>이제 생성한 ybigta 가상환경을 활성<br>화한다. pip를 사용해서 원하는 코드<br>라이브러리를 설치하자.</h1>\n<header id='143' style='font-size:16px'>Virtual Environment</header>\n<br><h1 id='144' style='font-size:22px'>가상환경을 사용해보자: Venv</h1>\n<figure id='145'><img style='font-size:14px' alt=\"Desktop 0:\nEXPLORER DEBUG CONSOLE PROBLEMS TERMINAL PORTS x\nOPEN EDITORS > V TERMINAL zsh ...\n✓ DESKTOP � ls\nybigta\n~/Desktop base at 04:51:52 PM\nbin\npython3 -m venv ybigta\n> include\n~/Desktop base at 04:52:22 PM\n> lib\nsource ybigta/bin/activate\npyvenv.cfg\n~/Desktop ybigta base at 04:53: 39 PM\n.localized\npip install numpy --quiet\n스크린샷 2025-01-05 오후 4....\n스크린샷 2025-01-05 오후 4.... [notice] A new release of pip is available: 23.2.1 -> 24.3.1\n[notice] To update, run: pip install --upgrade pip\n스크리샤 2025-01-05 오후 4....\nrequirements.txt ~/Desktop ybigta base at 04:55:02 PM\npip install pandas --quiet\n[notice] A new release of pip is available: 23.2.1 24.3.1\nrequirements.txt\n「noticel To update. run: DID install --uparade DID\nnumpy==2.2.1\npandas==2.2.3\npython-dateutil==2.9.0.post0 ~/Desktop took 5s ybigta base at 04:55:14 PM\npytz==2024.2 pip freeze requirements. txt\nsix==1.17.0\ntzdata==2024.2\n~/Desktop ybigta base at 04:55:42 PM\ndeactivate\n~/Desktop base at 04:56:36 PM\n> OUTLINE\n>\" data-coord=\"top-left:(165,369); bottom-right:(1932,1532)\" /></figure>\n<br><h1 id='146' style='font-size:20px'>pip를 사용해 필요한 라이브러리를<br>설치하고, 개인 작업을 진행했다고 가<br>정해보자.</h1>\n<p id='147' data-category='paragraph' style='font-size:18px'>이제 다른 사람들도 당신의 작업물을<br>열람할 수 있도록 환경 설정을 저장해<br>서 전달할 수 있어야 한다.</p>\n<p id='148' data-category='paragraph' style='font-size:18px'>pip freeze 커맨드를 사용하면 당신의<br>가상환경 속 디펜던시 내역을 전부<br>requirements.txt 파일에 기록하여<br>저장할 수 있다.</p>\n<p id='149' data-category='paragraph' style='font-size:18px'>마지막으로 deactivate 커맨드로<br>가상환경을 비활성화할 수 있다.</p>\n<header id='150' style='font-size:16px'>Virtual Environment</header>\n<br><h1 id='151' style='font-size:22px'>가상환경을 사용해보자: Venv</h1>\n<figure id='152'><img style='font-size:14px' alt=\"Desktop 0:\nEXPLORER DEBUG CONSOLE PROBLEMS TERMINAL PORTS x\nOPEN EDITORS > V TERMINAL zsh\nx Welcome\npython3 -m venv treecollector\nDESKTOP\n~/Desktop at 05:04:36 PM\nV treecollector\nsource treecollector/bin/activate\n> bin\n~/Desktop treecollector at 05:04:55 PM\n> include\npip install -r requirements. txt\n> lib Cottecting numpy==2.2.1 ( TOM -T requin ements. LXL (LINE 1) ,\nDownloading numpy-2.2. 1-cp313-cp313-macosx_14_0_arm64. whl. metadata (62 kB)\n.gitignore\nCollecting pandas==2.2.3 (from -r requirements. txt (line 2))\npyvenv.cfg Down loading cantass-2.2.3-qp313-0813-macces_11_@_@jam64.whhl. metadata (89 kB)\nCollecting python-dateutil==2. 9. 0. post0 (from -r requirements. txt (line 3) )\nybigta\nUsing cached python_dateutil-2. 9. 0.post0-py2. py3-none-any . wh l. metadata (8.4 kB)\n> bin Collecting pytz==2024.2 (from -r requirements. txt (line 4))\n> include Using cached pytz-2024. 2-py2. py3-none-any · wh l. metadata (22 kB)\nCollecting six==1.17.0 (from -r requirements . txt (line 5) )\n> lib\nUsing cached six-1.17 . 0-py2. py3-none-any - wh l. metadata (1. 7 kB)\npyvenv.cfg Collecting tzdata==2024.2 (from -r requirements. txt (line 6) )\nUsing cached tzdata-2024. 2-py2. py3-none-any. whl.metadata (1.4 kB)\n.localized\nDownloading numpy-2.2.11-qp323-qp303-maccos_14_A_@_am6A.ml (5.1 MB)\n스크린샷 2025-01-05 오후 4.... 5.1/5. 1 MB 14.8 MB/s eta 0:00:00\nDown loading pandas-3.2.3.3-q313-op313-macosx_11_0_0_am54, whl (11.3 MB)\n스크린샷 2025-01-05 오후 4....\n11.3/11.3 MB 18.1 MB/s eta 0:00:00\n스크린샷 2025-01-05 오후 4.... Using cached oythm_fattentil-2.9.9.postd-p/2-py@-ane-am/ · whl (229 kB)\nUsing cached pytz-2024.2-py2.py3-none-any. whl (508 kB)\n스크린샷 2025-01-05 오후 4....\nUsing cached six-1.17.0-py2. py3-none-any. whl (11 kB)\nrequirements.txt Using cached tzdata-2024.2-py2. py3-none-any. whl (346 kB)\nInstalling collected packages : pytz, tzdata, six, numpy, python-dateutil, pandas\nSuccessfully installed numpy-2. 2. 1 pandas-2.2.3 python-dateutil-2.9.0.post0 pytz-2024.2 six-1.17.0 tz\ndata-2024.2\n~/Desktop took 7s treecollector at 05:05:16 PM\n> OUTLINE\n>\" data-coord=\"top-left:(170,370); bottom-right:(1933,1526)\" /></figure>\n<br><h1 id='153' style='font-size:18px'>이제 새로운 유저의 입장에서 앞서<br>생성한 가상환경과 동일한 환경을 구<br>축해보자.</h1>\n<h1 id='154' style='font-size:18px'>전달받은 requirements.txt를 작업할<br>디렉토리에 올려놓고, 다른 이름의 새<br>로운 가상환경을 생성한다.</h1>\n<p id='155' data-category='paragraph' style='font-size:20px'>pip 커맨드를 사용해 텍스트 파일에<br>기록된 라이브러리 목록을 모두 설치<br>하면, 새롭게 만든 가상환경도 동일한<br>환경으로 설정할 수 있다!</p>\n<header id='156' style='font-size:14px'>Virtual Environment</header>\n<br><h1 id='157' style='font-size:22px'>Venv의 특징과 장점 정리</h1>\n<h1 id='158' style='font-size:20px'>경량성과 편리성</h1>\n<br><h1 id='159' style='font-size:16px'>파이썬의 기본 모듈로 제공되므로 추가 설치가 필요 없으며, 사용이 간단하다.</h1>\n<h1 id='160' style='font-size:20px'>프로젝트별 독립성</h1>\n<br><h1 id='161' style='font-size:16px'>각 프로젝트에 필요한 패키지와 의존성을 독립적으로 관리할 수 있다.</h1>\n<h1 id='162' style='font-size:16px'>시스템 파이썬 환경 보호</h1>\n<br><h1 id='163' style='font-size:16px'>시스템의 기본 파이썬 환경에 영향을 주지 않고, 프로젝트별로 다른 버전의 라이브러리를 사용할 수 있다.</h1>\n<h1 id='164' style='font-size:18px'>패키지 버전 관리</h1>\n<br><p id='165' data-category='paragraph' style='font-size:14px'>pip freeze > requirements.txt 명령으로 현재 환경의 패키지 목록을 저장하고, 다른 환경에서 pip install -r<br>requirements.txt 명령으로 동일한 환경을 구축할 수 있다.</p>\n<header id='166' style='font-size:18px'>Virtual Environment</header>\n<br><h1 id='167' style='font-size:22px'>가상환경을 사용해보자: Conda</h1>\n<h1 id='168' style='font-size:20px'>Conda란 무엇인가?</h1>\n<br><p id='169' data-category='paragraph' style='font-size:20px'>python 및 기타 프로그래밍 언어를 위한 오픈소스 패키지 관리 시스템이자 환경 관리 시스템. 데이터 과학과 기계 학습<br>프로젝트에 유용하며, 특히 복잡한 데이터 과학 라이브러리를 쉽게 설치하고 관리할 수 있다.</p>\n<h1 id='170' style='font-size:20px'>Conda 사용 방법!</h1>\n<p id='171' data-category='paragraph' style='font-size:14px'>## 가상환경 생성<br>conda create --name \"환경 이름\" python==x. XX</p>\n<p id='172' data-category='paragraph' style='font-size:14px'>## 가상환경 제거<br>conda env r emove --name \"환경 이름\"</p>\n<p id='173' data-category='paragraph' style='font-size:16px'>## 가상환경 활성화<br>conda activate \"환경 이름\"</p>\n<p id='174' data-category='paragraph' style='font-size:16px'>## 가상환경 비활성화<br>conda deactivate</p>\n<header id='175' style='font-size:16px'>Virtual Environment</header>\n<br><h1 id='176' style='font-size:20px'>가상환경을 사용해보자: Conda</h1>\n<figure id='177'><img style='font-size:14px' alt=\"Desktop 0:\nDEBUG CONSOLE PROBLEMS TERMINAL PORTS x\n> V TERMINAL zsh\n~/Desktop at 05:51:10 PM\nconda create --name ybigta python==3.11 -y\n- defaults\nPlatform: osx-arm64\nCollecting package metadata ( repodata. json) : done\nSolving environment: done\n## Package Plan ##\nenvironment location: /opt//homebrew/anaconda3/envs/ybigta\nadded / updated specs:\n- python==3.11\nThe following NEW packages will be INSTALLED:\nbzip2 pkgs/main/osx-arm64: : bzip2-1.0. 8-h80987f9_6\nca-certificates pkgs/main/osx-arm64: : ca-certificates-2024. 11.26-hca03da5_0\nlibffi pkgs/main/osx-arm64: : libffi-3. 4. 4-hca03da5_1\nncurses pkgs/main/osx-arm64: : ncurses-6. 4-h313beb8_0\nopenssl pkgs/main/osx-arm64: : openssl-1. 1. 1w-h1a28f6b_0\npip pkgs/main/osx-arm64: : pip-24.2-py311hca03da5_0\npython pkgs/main/osx-arm64: : python-3. 11.0-hc0d8a6c_3\nreadline pkgs/main/osx-arm64: : readline-8.2-h1a28f6b_0\nsetuptools pkgs/main/osx-arm64: : setuptools-75. 1. 0-py311hca03da5_0\nsqlite pkgs/main/osx-arm64: : sqlite-3.45. 3-h80987f9_0\ntk pkgs/main/osx-arm64: : tk-8.6.14-h6ba3021_0\ntzdata pkgs/main/noarch: : tzdata-2024b-h04d1e81_0\nwheel pkgs/main/osx-arm64: :wheel-0. 44. 0-py311hca03da5_0\nXZ pkgs/main/osx-arm64: : xz-5.4. 6-h80987f9_1\nzlib pkgs/main/osx-arm64: : Z lib-1. 2. 13-h18a0788_1\n><\" data-coord=\"top-left:(163,370); bottom-right:(1938,1535)\" /></figure>\n<br><h1 id='178' style='font-size:18px'>이번엔 conda 가상환경을 직접 만들<br>어보자. 가상환경의 이름은 ybigta,<br>python 버전은 3.11로 설정한다.</h1>\n<h1 id='179' style='font-size:20px'>가상환경을 사용해보자: Conda</h1>\n<figure id='180'><img style='font-size:14px' alt=\"Desktop 0:\nDEBUG CONSOLE PROBLEMS TERMINAL PORTS V x\n> V TERMINAL zsh : *\n~/Desktop at 05:51:10 PM\nconda create --name ybigta python==3.11 -y\nChannels:\n- defaults\nPlatform: osx-arm64\nCollecting package metadata ( repodata. json) : done\nSolving environment: done\n~/Desktop\n## Package Plan ## python3 -m venv ybigta\nenvironment location: /opt//homebrew/anaconda3/envs/ybigta ~/Desktop\nsource ybigta/bin/activate\nadded / updated specs:\n- python==3.11\n~/Desktop\npip list\nThe following NEW packages will be INSTALLED: Package Version\nbzip2 pkgs/main/osx-arm64: : bzip2-1.0. 8-h80987f9_6 oip 24.3.1\nca-certificates pkgs/main/osx-arm64: : ca-certificates-2024. 11.26-hca03da5_0\nlibffi pkgs/main/osx-arm64: : libffi-3. 4. 4-hca03da5_1\nncurses pkgs/main/osx-arm64: : ncurses-6. 4-h313beb8_0\nopenssl pkgs/main/osx-arm64: : openssl-1. 1. 1w-h1a28f6b_0\npip pkgs/main/osx-arm64: : pip-24.2-py311hca03da5_0\npython pkgs/main/osx-arm64: : python-3. 11.0-hc0d8a6c_3\nreadline pkgs/main/osx-arm64: : readline-8.2-h1a28f6b_0\nsetuptools pkgs/main/osx-arm64: : setuptools-75. 1. 0-py311hca03da5_0\nsqlite pkgs/main/osx-arm64: : sqlite-3.45. 3-h80987f9_0\ntk pkgs/main/osx-arm64: : tk-8.6. 14-h6ba3021_0\ntzdata pkgs/main/noarch: : tzdata-2024b-h04d1e81_0\nwheel pkgs/main/osx-arm64: :wheel-0. 44. 0-py311hca03da5_0\nXZ pkgs/main/osx-arm64: : xz-5. 4. 6-h80987f9_1\nzlib pkgs/main/osx-arm64 : : Z lib-1. 2. 13-h18a0788_1\n>\" data-coord=\"top-left:(159,371); bottom-right:(1936,1540)\" /></figure>\n<br><header id='181' style='font-size:16px'>Virtual Environment</header>\n<h1 id='182' style='font-size:18px'>이전에 venv를 사용할 때에 비하면 뭔<br>가 패키지를 많이 설치하는 것을 확인<br>할 수 있다.</h1>\n<p id='183' data-category='paragraph' style='font-size:18px'>venv는 파이썬 실행에 필요한 최소한<br>의 구성만 설치하지만, conda는 운영<br>체제에 설치된 라이브러리에 의존하지<br>않고, 가상환경 안에 필요한 모든 패키<br>지를 포함하여 설치한다.</p>\n<p id='184' data-category='paragraph' style='font-size:18px'>이로 인해 conda는 venv에 비해 더<br>무겁지만, 운영 체제와 독립적이고 더<br>욱 포괄적인 환경을 제공한다는 장점<br>이 있다.</p>\n<header id='185' style='font-size:16px'>Virtual Environment</header>\n<br><h1 id='186' style='font-size:22px'>가상환경을 사용해보자: Conda</h1>\n<figure id='187'><img style='font-size:14px' alt=\"Desktop 0:\nDEBUG CONSOLE PROBLEMS TERMINAL PORTS x\n> V TERMINAL zsh\n~/Desktop ybigta at 06:04:59 PM\nconda env list\n#\nbase /opt/homebrew/anaconda3\nvideo /opt/honebrew/anaconda3/envs/video\nybigta * /opt//homebrew/anaconda3/envs/ybigta\n~/Desktop ybigta at 06:05:02 PM\nconda activate ybigta\n~/Desktop ybigta at 06:05:05 PM\nconda install numpy -y\n一 defaults\nPlatform: osx-arm64\nCollecting package metadata ( repodata. json) : done\nSolving environment: done\n# All requested packages already installed.\n~/Desktop ybigta at 06:05:11 PM\nconda install pandas -y\nCham\n- defaults\nPlatform: osx-arm64\nCollecting package metadata ( repodata. json) : done\nSolving environment: done\n## Package Plan ##\nenvironment location: /opt//homebrew/anaconda3/envs/ybigta\n><\" data-coord=\"top-left:(168,371); bottom-right:(1927,1531)\" /></figure>\n<br><h1 id='188' style='font-size:18px'>conda env list 커맨드를 통해 현재<br>생성되어 있는 conda 가상환경의 목<br>록을 확인할 수 있다.</h1>\n<h1 id='189' style='font-size:20px'>conda activate 커맨드를 사용해<br>ybigta 가상환경을 활성화하고,<br>conda install을 통해 필요한 라이브<br>러리를 설치하자.</h1>\n<header id='190' style='font-size:16px'>Virtual Environment</header>\n<br><h1 id='191' style='font-size:22px'>가상환경을 사용해보자: Conda</h1>\n<figure id='192'><img style='font-size:14px' alt=\"Desktop 0:\nDEBUG CONSOLE PROBLEMS TERMINAL PORTS x\n> V TERMINAL zsh\n~/Desktop ybigta at 06:08:57 PM\npip install numpy\nrehe,anamonda/ens/joiisiVity/hotonDitagistages (2.1.3)\n~/Desktop took 3s ybigta at 06:09:07 PM\npip install pandas\nomebrew/aracondaB/emvs/ybigta/lib/Lipython3. 11/site-packages (2.2.3)\nRequirement already satisfied: numpy>=1. 23.2 in /opt/froneonew/anacontai/ervs/ybighttgpa/ltor3, 11/site-packages (from pandas) (2.1.3)\nRequirement already satisfied: python-dateutil>=2.8.2 in /opt/froneonew/anacondai/vsy/phigpailtyrna3. 11/site-packages (from pandas\n) (2.9.0. post0)\nRequirement already satisfied: pytz>=2020.1 in /opt/homeb rew/ anaconda3/ envs /ybigta/lib/python3. 11/site-packages ( from pandas) (2024.1)\nRequirement already satisfied: tzdata>=2022. 7 in /opt/homeb rew/ anaconda3/envs/ybigta/lib/python3. 11/site-packages ( from pandas) (2023.\n3)\nRequirement already satisfied: six>=1.5 in /opt/homebrew/ anaconda3/envs/ybigta/lib/python3. 11/site-packages (from python-dateutil>=2.8\n· 2->pandas) (1. 16.0)\n~/Desktop ybigta at 06:09:15 PM\n>\" data-coord=\"top-left:(165,371); bottom-right:(1931,1530)\" /></figure>\n<br><h1 id='193' style='font-size:18px'>참고로 conda 가상환경에서도 pip 커<br>맨드로 파이썬 라이브러리 설치가 가<br>능하다.</h1>\n<p id='194' data-category='paragraph' style='font-size:20px'>하지만 conda는 자체적으로 설치된<br>패키지만 종속성 충돌을 관리한다. 따<br>라서, pip으로 설치된 패키지가<br>conda 패키지와 충돌할 가능성을 주<br>의해야 한다!</p>\n<p id='195' data-category='paragraph' style='font-size:20px'>가능하면 conda 패키지를 먼저 설치<br>하고, conda 채널에 없는 라이브러리<br>만 pip로 보완하는 습관을 들이자!</p>\n<h1 id='196' style='font-size:22px'>가상환경을 사용해보자: Conda</h1>\n<br><header id='197' style='font-size:16px'>Virtual Environment</header>\n<figure id='198'><img style='font-size:14px' alt=\"Desktop 0:\nEXPLORER environment.yaml x\nOPEN EDITORS environment.yaml\nX environment.yaml 1 name: ybigta\n2 channels:\nDESKTOP\n3 一 defaults\n> ybigta\ndependencies :\n.localized - blas=1.⌀=openb las\n스크린샷 2025-01-05 오후 5.... - bottleneck=1. 4.2=py311hb9f6ed7_0\n스크린샷 2025-01-05 오후 5.... - bzip2=1. 0. 8=h80987f9_6\n- ca-certificates=2024.11.26=hca03da5_0\n스크린샷 2025-01-05 오후 5....\n- joblib=1.4.2=py311hca03da5_0\n스크린샷 2025-01-05 오후 6.... 1 ibcxx-1 A O 6-h84828c0 O\n202 오후 6.... DEBUG CONSOLE PROBLEMS TERMINAL PORTS x\nenvironment.yaml\n> V TERMINAL zsh\n~/Desktop ybigta at 06:27:58 PM\nconda env export environment. yaml\n~/Desktop ybigta at 06:28:01 PM\nconda deactivate\n~/Desktop at 06:28: 31 PM\nconda env remove --name ybigta -y\nRemove all packages in environment /opt//homebrew/anaconda3/envs/ybigta:\n~/Desktop at 06:28:43 PM\nconda env list\n# conda environments:\n#\nbase /opt/homebrew/ anaconda3\nvideo /opt/homebrew/anaconda3/envs/video\n> OUTLINE\n> Ln 39, Col 16 Spaces: 2 UTF-8 LF YAML\" data-coord=\"top-left:(169,371); bottom-right:(1929,1525)\" /></figure>\n<br><h1 id='199' style='font-size:20px'>conda 가상환경도 venv처럼 환경<br>설정을 전달 가능한 형태로 저장 가능<br>하다. 파일은 yaml 확장자를 가진다.</h1>\n<p id='200' data-category='paragraph' style='font-size:18px'>이제 사용하던 가상환경을<br>deactivate로 비활성화하고, conda<br>env remove 커맨드로 삭제할 수도<br>있다.</p>\n<p id='201' data-category='paragraph' style='font-size:20px'>삭제 후 conda env list를 확인해보면<br>ybigta라는 이름의 가상환경은 목록에<br>서 사라지고 없는 것을 볼 수 있다.</p>\n<h1 id='202' style='font-size:22px'>가상환경을 사용해보자: Conda</h1>\n<br><header id='203' style='font-size:16px'>Virtual Environment</header>\n<figure id='204'><img style='font-size:14px' alt=\"Desktop 0:\nDEBUG CONSOLE PROBLEMS TERMINAL PORTS x\nV TERMINAL zsh : *\n~/Desktop at 06:34:00 PM\nconda env create -n treecollector -f environment.yaml\nChannels:\n- defaults\nPlatform: osx-arm64\nCollecting package metadata ( repodata. json) : done\nSolving environment: done ~/Desktop tree\nconda list\n# packages in environment at /opt://mmebrew/anacondas/averws/reecollectom\nDown loading and Extracting Packages:\n#\n# Name Version Build Channel\nPreparing transaction: done\nblas 1.0 openb las\nVerifying transaction: - WARNING conda. core. path_actions:v\nbottleneck 1.4.2 py311hb9f6ed7_0\nenvironment location: /Users/treeco llector/ . conda/enviro\nbzip2 1.0.8 h80987f9_6\nca-certificates 2024.11.26 hca03da5_0\ndone\njoblib 1. 4. 2 py311hca03da5_0\nExecuting transaction:  WARNING conda. core. envs_manager: re libcxx 14.0.6 h848a8c0_0\nissin\ng. libffi 3.4.4 hca03da5_1\nenvironment location: /opt/homebrew/anaconda3/envs/treeco 5.0.0 11_3_0_hca03da5_28\nlibgfortran\nregistry file: /Users/treeco llector/ . conda/environments. libgfortran5 11.3.0 h009349e_28\ndone libopenb las 0.3.21 h269037a_0\n# llvm-openmp 14.0.6 hc6e5704_0\n# To activate this environment, use ncurses 6.4 h313beb8_0\n# numexpr 2.10.1 py311h5d9532f_0\n# $ conda activate treecollector numpy 2.1.3 py311he598dae_0\nnumpy-base 2.1.3 py311hfbfe69c_0\n# To deactivate an active environment, use openss l 3.0.15 h80987f9_0\n# pandas 2.2.3 py311hcf29cfe_0\n# $ conda deactivate pip 24.2 py311hca03da5_0\npython 3. 11.11 hb885b13 0\npython-dateutil 2.9.0post0 py311hca03da5_2\n~/Desktop python-tzdata 2023.3 pyhd3eb1b0_0\n2024 1 311bc203d25 O\nconda activate treecollector\n~/Desktop treecol lector at 06: 34:48 PM\n>< 0 Ln 39, Col 16 Spaces: 2 UTF-8 LF YAML\" data-coord=\"top-left:(163,371); bottom-right:(1934,1519)\" /></figure>\n<br><h1 id='205' style='font-size:20px'>이제 미리 만들어둔<br>environment.yaml 파일만 있다면<br>언제든지 ybigta 가상환경을 복제할<br>수 있다.</h1>\n<p id='206' data-category='paragraph' style='font-size:18px'>복제된 가상환경에서 conda list 명령<br>어로 python, numpy, pandas 등이<br>동일한 버전으로 설치되어 있는 것을<br>확인할 수 있다.</p>\n<h1 id='207' style='font-size:14px'>Virtual Environment</h1>\n<br><h1 id='208' style='font-size:22px'>Conda의 특징과 장점 정리</h1>\n<h1 id='209' style='font-size:20px'>플랫폼 독립성</h1>\n<br><h1 id='210' style='font-size:16px'>다양한 운영 체제에서 동일한 방식으로 사용할 수 있다.</h1>\n<h1 id='211' style='font-size:18px'>다양한 언어 지원</h1>\n<br><h1 id='212' style='font-size:16px'>파이썬 외에도 R, Ruby, Lua, Scala 등 다양한 언어의 패키지를 관리할 수 있다.</h1>\n<h1 id='213' style='font-size:18px'>대규모 데이터 사이언스 프로젝트 적합</h1>\n<br><h1 id='214' style='font-size:16px'>데이터 사이언스와 관련된 복잡한 패키지들을 쉽게 설치하고 관리할 수 있다.</h1>\n<h1 id='215' style='font-size:18px'>의존성 충돌 방지</h1>\n<br><h1 id='216' style='font-size:18px'>패키지 간의 의존성을 체크하여 충돌을 방지한다.</h1>\n<p id='217' data-category='paragraph' style='font-size:18px'>환경 복제</p>\n<br><p id='218' data-category='paragraph' style='font-size:14px'>conda env export > environment.yml 명령을 통해 가상환경을 yml 파일로 내보내<br>다른 시스템에서 동일한 환경을 재생성할 수 있다.</p>\n<header id='219' style='font-size:16px'>Virtual Environment</header>\n<br><h1 id='220' style='font-size:20px'>Venv와 Conda, 그래서 차별점은?</h1>\n<table id='221' style='font-size:14px'><thead></thead><tbody><tr><td>항목</td><td>Conda</td><td>Venv</td></tr><tr><td>설치 및 관리</td><td>다양한 언어 및 패키지 관리, 복잡한 의존성 처리</td><td>파이썬만 관리, pip 와 조합 필요</td></tr><tr><td>지원 언어</td><td>Python, R, Java, Node.js 등 다양한 언어 지원</td><td>파이썬만 지원</td></tr><tr><td>환경 구성</td><td>복잡한 소프트웨어 스택 설치 및 관리 가능</td><td>파이썬 전용 환경 관리</td></tr><tr><td>추천 사용 사례</td><td>데이터 과학, 머신러닝, 다양한 언어가 필요한 프로젝트</td><td>파이썬 학습, 소규모 웹 개발, 간단한 프로젝트</td></tr><tr><td>장점</td><td>종속성 해결 용이, 다양한 언어 패키지 관리</td><td>경량화, 간단한 파이썬 프로젝트에 적합</td></tr></tbody></table>\n<h1 id='222' style='font-size:14px'>Python Guidelines</h1>\n<header id='223' style='font-size:20px'>Python Guidelines</header>\n<br><h1 id='224' style='font-size:22px'>파이썬 기초? 이젠 지겹다 지겨워~</h1>\n<figure id='225'><img style='font-size:16px' alt=\"ME\nR\nPYTHON\" data-coord=\"top-left:(218,452); bottom-right:(768,818)\" /></figure>\n<br><figure id='226'><img style='font-size:20px' alt=\"더 이상의\n자세한 설명은\n생략한다.\npython\n파이썬\n기초와 활용\n한정란 지음\nPython\n212WW\" data-coord=\"top-left:(1014,399); bottom-right:(1998,1508)\" /></figure>\n<br><figure id='227'><img style='font-size:14px' alt=\"Boy or girl?\nBuy Ape\nHello,world programmer it is\" data-coord=\"top-left:(2234,448); bottom-right:(2846,1048)\" /></figure>\n<br><figure id='228'><img style='font-size:14px' alt=\"Teacher: The quickest way to Learn a language\nis to speak with natives\nMe trying to learn Python:\" data-coord=\"top-left:(221,947); bottom-right:(765,1488)\" /></figure>\n<br><p id='229' data-category='paragraph' style='font-size:16px'>When you come back from a vacation</p>\n<p id='230' data-category='paragraph' style='font-size:18px'>HelloWorld ( \"print )</p>\n<h1 id='231' style='font-size:18px'>Python Guidelines</h1>\n<br><h1 id='232' style='font-size:22px'>Lesson 1: 클래스, 함수, 변수 명을 제대로 지어보자!</h1>\n<h1 id='233' style='font-size:20px'>클래스, 변수,함수명 설정 시무5조</h1>\n<p id='234' data-category='list' style='font-size:14px'>● Keyword를 사용할 수 없다.<br>● 특수 문자는 언더 바(_)만 허용된다.<br>● 숫자로 시작하지 말자.<br>● 공백을 포함할 수 없다.<br>● 가급적 알파벳을 사용하자! 유의미한 뜻으로 짓되 누구나 알 수 있어야 한다!</p>\n<table id='235' style='font-size:16px'><thead><tr><td>사용 가능한 단어</td><td>사용 불가능한 단어</td></tr></thead><tbody><tr><td>alpha alpha10 _alpha AlpHa ALPHA</td><td>break 키워드라서 안 됩니다. 273alpha 숫자로 시작해서 안 됩니다. has space 공백을 포함해서 안 됩니다.</td></tr></tbody></table>\n<h1 id='236' style='font-size:16px'>Python Guidelines</h1>\n<br><h1 id='237' style='font-size:22px'>Lesson 1: 클래스, 함수, 변수 명을 제대로 지어보자!</h1>\n<h1 id='238' style='font-size:20px'>Python Keyword는 무엇인가?</h1>\n<br><h1 id='239' style='font-size:18px'>Keyword는 특별한 의미가 부여된 단어로, 파이썬이 만들어질 때 이미 사용하겠다고 예약해 놓는 것이다.</h1>\n<figure id='240'><img style='font-size:14px' alt=\"+ Code + Markdown DE 日 : ·\n1 import keyword\n2 print (keyword. kwlist)\n[ ] Python\n['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global',\n'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']\" data-coord=\"top-left:(170,686); bottom-right:(2829,1143)\" /></figure>\n<h1 id='241' style='font-size:18px'>Python Guidelines</h1>\n<br><h1 id='242' style='font-size:22px'>Lesson 1: 클래스, 함수, 변수 명을 제대로 지어보자!</h1>\n<h1 id='243' style='font-size:16px'>Snake case와 Camel case</h1>\n<br><h1 id='244' style='font-size:20px'>다음과 같은 명칭들이 뜻하는 바는 명확하지만, 공백이 없어서 읽기가 불편하다.</h1>\n<h1 id='245' style='font-size:14px'>itemlist loginstatus characterhp rotateangle</h1>\n<h1 id='246' style='font-size:18px'>이를 잘 구분하기 위해 Snake case와 Camel case를 사용한다.</h1>\n<br><h1 id='247' style='font-size:16px'>Snake case: 단어 사이에 언더 바(_ ) 기호를 붙여 식별자를 만든다.</h1>\n<br><h1 id='248' style='font-size:18px'>Camel case: 단어들의 첫 글자를 대문자로 만들어 식별자를 만든다.</h1>\n<table id='249' style='font-size:14px'><thead><tr><td>식별자에 공백이 없는 경우</td><td>단어 사이에 - 기호를 붙인 경우 2[c]스네이크 케이스2</td><td>단어 첫 글자를 대문자로 만든 경우 캐멀 케이스</td></tr></thead><tbody><tr><td>itemlist loginstatus characterhp rotateangle</td><td>item_list login_status character_hp rotate_angle</td><td>ItemList LoginStatus CharacterHp RotateAngle</td></tr></tbody></table>\n<h1 id='250' style='font-size:16px'>Python Guidelines</h1>\n<br><h1 id='251' style='font-size:22px'>Lesson 1: 클래스, 함수, 변수 명을 제대로 지어보자!</h1>\n<h1 id='252' style='font-size:20px'>파이썬에서 식별자를 구별하는 Tip</h1>\n<br><p id='253' data-category='paragraph' style='font-size:18px'>원래 캐멀 케이스는 '첫 번째 글자를 대문자로 적는다'와 '첫 번째 글자를 소문자로 적는다'로 구분한다.<br>하지만 파이썬에서는 '첫 번째 글자를 소문자로 적는다'라는 캐멀 케이스는 사용하지 않는다.</p>\n<p id='254' data-category='list' style='font-size:14px'>● 캐멀 케이스 유형 1: PrintHello → 파이썬에서 사용<br>● 캐멀 케이스 유형 2: printHello → 파이썬에서 사용하지 않음</p>\n<figure id='255'><img style='font-size:14px' alt=\"캐멀 케이스\n클래스\n(대문자로 시작)\n식별자\n뒤에 괄호가 있다 함수\n스네이크 케이스\n(소문자로 시작)\n뒤에 괄호가 없다 변수\" data-coord=\"top-left:(697,1083); bottom-right:(2282,1584)\" /></figure>\n<h1 id='256' style='font-size:18px'>Python Guidelines</h1>\n<br><h1 id='257' style='font-size:22px'>Lesson 1: 클래스, 함수, 변수 명을 제대로 지어보자!</h1>\n<h1 id='258' style='font-size:20px'>파이썬에서의 들여쓰기(indentation) 논쟁</h1>\n<br><h1 id='259' style='font-size:18px'>파이썬은 스페이스 4개를 들여쓰기에 권장하며, 이는 PEP 8 스타일 가이드 때문이다.</h1>\n<p id='260' data-category='paragraph' style='font-size:18px'>대부분의 IDE (vscode, pycharm 등)은 Tab 키를 누르면 자동으로 스페이스 4칸 입력되도록 설정되어있다</p>\n<figure id='261' data-category='chart'><img data-coord=\"top-left:(252,860); bottom-right:(1164,1427)\" /><figcaption><p>Chart Title: Tabs vs Spaces (top 400000 GitHub repos)</p><p>X-Axis: # of unique files</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>java</td><td>h</td><td>js</td><td>c</td><td>php</td><td>html</td><td>cs</td><td>json</td><td>cpp</td><td>py</td><td>xml</td><td>rb</td><td>cc</td><td>go</td></tr></thead><tbody><tr><td>item_01</td><td>1800000Number of unique files</td><td>1200000Number of unique files</td><td>1000000Number of unique files</td><td>600000Number of unique files</td><td>600000Number of unique files</td><td>600000Number of unique files</td><td>600000Number of unique files</td><td>1200000Number of unique files</td><td>600000Number of unique files</td><td>600000Number of unique files</td><td>600000Number of unique files</td><td>600000Number of unique files</td><td>800000Number of unique files</td><td>700000Number of unique files</td></tr></tbody></table></figure>\n<br><figure id='262'><img style='font-size:16px' alt=\"def ybigta() :\nprint ('hello 27th!')\ndef ybigta() :\nprint ('hello 27th!')\" data-coord=\"top-left:(1612,911); bottom-right:(2480,1425)\" /></figure>\n<p id='263' data-category='paragraph' style='font-size:14px'>깃헙 코드 컨벤션을 분석한 결과 대부분이 스페이스 4개를 사용</p>\n<br><p id='264' data-category='paragraph' style='font-size:14px'>위(스페이스 4개)를 보고 아래(스페이스 2개)를 보면 묘하게..불편하다..</p>\n<h1 id='265' style='font-size:14px'>Python Guidelines</h1>\n<br><h1 id='266' style='font-size:22px'>Lesson 1: 클래스, 함수, 변수 명을 제대로 지어보자!</h1>\n<h1 id='267' style='font-size:16px'>파이썬에서의 들여쓰기(indentation) 논쟁</h1>\n<p id='268' data-category='paragraph' style='font-size:16px'>참고로 C 계열 언어에서는 스페이스 4개, 2개 둘 다 싫으면 세미콜론 ;을 써<br>도 된다!</p>\n<h1 id='269' style='font-size:20px'>물론 저희는 python을 사용하니 스페이스 4개를 사용하면 좋겠죠?</h1>\n<h1 id='270' style='font-size:18px'>파이썬에서는 들여쓰기 자체가 문법이기에, 올바르게 사용하지 않으면 코드<br>가 실행되지 않는다.</h1>\n<br><h1 id='271' style='font-size:14px'>● indentation을 혼용하면 오류가 발생할 수 있다.</h1>\n<br><figure id='272'><img style='font-size:14px' alt=\"USING TAB USING SPACES\nFOR INDENTATION FOR INDENTATION\nTHE GUY USING\nSEMICOLONS FOR INDENTATION\nint main (int argc , char* arg[]) {\n: int i = 0\nwhile (i < 10) {\n; ;printf('%d\\n' , i)\n; i ++\n}\n; return 0\nimgtlip.com\" data-coord=\"top-left:(1989,305); bottom-right:(2801,1619)\" /></figure>\n<header id='273' style='font-size:16px'>Python Guidelines</header>\n<br><h1 id='274' style='font-size:22px'>Lesson 2: Typing을 활용하자!</h1>\n<h1 id='275' style='font-size:20px'>Typing을 사용해야하는 이유</h1>\n<p id='276' data-category='list' style='font-size:14px'>● 파이썬은 동적 언어: 변수의 타입을 명시할 필요가 없고, 변수의 타입이 중간에 바뀔 수 있다.<br>● C, Java, Rust 등의 정적 언어보다 배우기도 쉽고, 좀 더 빠르게 프로그래밍이 가능하다는 장점이 있다.<br>● 하지만, 잘못된 타입을 사용하여 예상치 못한 에러를 만들어내고, 이로 인해 프로그램이 망가질 수 있다!<br>● 코드 양이 많아지고 복잡해질수록 잘못된 타입으로 인한 에러를 만날 확률이 올라간다.<br>● Typing으로 동적 언어에 타입을 명시하고 검사하게 되면 상대적으로 안전한 프로그램을 할 수 있다.<br>● 다른 사람의 코드를 받아서 읽을 때도 훨씬 편리하고 이해가 빠르다!</p>\n<p id='277' data-category='paragraph' style='font-size:18px'>→ 변수와 함수의 자료형을 명시해, 코드의 안정성과 가독성을 높이는 방법이다.</p>\n<header id='278' style='font-size:18px'>Python Guidelines</header>\n<br><h1 id='279' style='font-size:22px'>Lesson 2: Typing을 활용하자!</h1>\n<h1 id='280' style='font-size:22px'>Typing을 사용해야하는 이유</h1>\n<p id='281' data-category='paragraph' style='font-size:20px'>사진1의 ybigta_typing이라는 함수를 정의했다고 가정해보자.<br>● 우리는 함수가 정의된 방식을 보고, boolean을 리턴하는 걸 알 수 있다.</p>\n<p id='282' data-category='paragraph' style='font-size:20px'>다만 해당 함수를 다른 파일에서 사용한다면, 우리는 어떻게 함수가 정의됐는지,<br>파라미터로 어떤 값이 입력되어야 하고 뭘 리턴하는지 알기 어렵다.</p>\n<br><h1 id='283' style='font-size:18px'>(물론 cmd+click으로 직접 함수가 정의된 파일로 와서 볼 수 있긴 하다)</h1>\n<p id='284' data-category='paragraph' style='font-size:20px'>사진 2는 기존 함수에서 파라미터로 어떤 값이 들어와야 되는지 명시해준 경우,<br>사진 3는 리턴값까지 어떤 형태인지 표시해준 경우다.</p>\n<p id='285' data-category='paragraph' style='font-size:20px'>이제 다른 파일에서 ybigta_typing 함수 위에 마우스 호버 시,<br>사진 4처럼 파라미터 & 리턴값의 형식을 보여준다!</p>\n<br><figure id='286'><img style='font-size:14px' alt=\"def ybigta_typing ( is_ybigta) :\nif is_ybigta:\nreturn True\nelse:\nreturn False\" data-coord=\"top-left:(2109,415); bottom-right:(2762,688)\" /></figure>\n<br><h1 id='287' style='font-size:16px'>사진1: 원본 함수</h1>\n<figure id='288'><img style='font-size:14px' alt=\"def ybigta_typing (is_ybigta: bool)\nif is_ybigta:\nreturn True\nelse:\nreturn False\" data-coord=\"top-left:(2109,785); bottom-right:(2784,1041)\" /></figure>\n\n<figure id='290'><img style='font-size:14px' alt=\"def ybigta_typing (is_ybigta: bool)  bool:\nif is_ybigta:\nreturn True\nelse:\nreturn False\" data-coord=\"top-left:(2116,1143); bottom-right:(2788,1343)\" /><figcaption id='289' style='font-size:16px'>사진2: parameter typing</figcaption></figure>\n\n<figure id='292'><img style='font-size:14px' alt=\"(function) def ybigta_typing (is_ybigta: bool) -> bool\nybigta typing()\" data-coord=\"top-left:(2111,1468); bottom-right:(2920,1572)\" /><br><figcaption id='291' style='font-size:16px'>사진3: return까지 typing</figcaption></figure>\n<br><p id='293' data-category='paragraph' style='font-size:16px'>사진4: 파라미터 & 리턴값의 형식 표시 예시</p>\n<header id='294' style='font-size:18px'>Python Guidelines</header>\n<br><h1 id='295' style='font-size:22px'>Lesson 2: Typing을 활용하자!</h1>\n<h1 id='296' style='font-size:20px'>Typing을 직접 사용해보자!</h1>\n<br><h1 id='297' style='font-size:18px'>기초 built-in 타입</h1>\n<br><p id='298' data-category='paragraph' style='font-size:14px'>from typing import Any<br>def custom_method( a : int, b : str , c : float ) -> Any :</p>\n<h1 id='299' style='font-size:18px'>하나의 함수의 인자에 여러 타입이 사용 가능할 때</h1>\n<br><p id='300' data-category='paragraph' style='font-size:14px'>from typing import Union<br>def custom_method( a : �Union[ int, str , float ] ) -> Any :</p>\n<h1 id='301' style='font-size:18px'>함수의 인자에 값을 제공하는 것이 선택사항일 때</h1>\n<br><p id='302' data-category='paragraph' style='font-size:16px'>from typing import Optional<br>def custom_method( a : �Optional [ str ] ) -> Any :</p>\n<header id='303' style='font-size:16px'>Python Guidelines</header>\n<br><h1 id='304' style='font-size:22px'>Lesson 2: Typing을 활용하자!</h1>\n<h1 id='305' style='font-size:20px'>Typing을 직접 사용해보자!</h1>\n<br><h1 id='306' style='font-size:18px'>리스트, 튜플, 그리고 딕셔너리 (파이썬 3.9부터 모듈 필요 없음)</h1>\n<br><figure id='307'><img style='font-size:14px' alt=\"from typing import List, Tuple, Dict, Any\ndef custom_method(\na : ⌀List[int] ,\nb : Tuple[str, str, str ] ,\nc : Dict[str, float ]\n) - > Any:\" data-coord=\"top-left:(184,552); bottom-right:(1340,945)\" /></figure>\n<h1 id='308' style='font-size:18px'>딕셔너리 타입 세부적으로 지정하고 싶을 때</h1>\n<p id='309' data-category='paragraph' style='font-size:14px'>from typing import TypedDict<br>class Person ( TypedDict) :<br>name : str<br>age: int<br>gender : str</p>\n<p id='310' data-category='paragraph' style='font-size:14px'>## Person = TypedDict(\"Person\" name=str, age=str, gender=str)<br>def custom_method(person : Person) -> float :</p>\n<header id='311' style='font-size:16px'>Python Guidelines</header>\n<br><h1 id='312' style='font-size:22px'>Lesson 2: Typing을 활용하자!</h1>\n<h1 id='313' style='font-size:20px'>Typing을 직접 사용해보자!</h1>\n<br><h1 id='314' style='font-size:18px'>함수를 인자로 가질 때</h1>\n<br><figure id='315'><img style='font-size:14px' alt=\"from typing import Callable\n## Callable[[argument1, argument2], returntype]\ndef custom_method1 ( function : Callable[ [str, int ] , float ]) -> None :\n:\n## 함수 인자 신경쓰지 않고 리턴 타입만 명시\ndef custom_method2 ( function : Callable[ . ・ float ] ) -> None :\" data-coord=\"top-left:(196,539); bottom-right:(2683,1171)\" /></figure>\n<h1 id='316' style='font-size:20px'>Python Guidelines</h1>\n<br><h1 id='317' style='font-size:22px'>Lessson 3: Docstring을 작성하자!</h1>\n<h1 id='318' style='font-size:22px'>Docstring을 사용한 파이썬 코드 문서화 템플릿</h1>\n<br><h1 id='319' style='font-size:22px'>이거 안쓰면 진짜 지옥까지 따라갑니다.</h1>\n<figure id='320'><img style='font-size:16px' alt=\"## method\ndef custom_method( a : any , b : any) -> any :\naavv vv\n메소드에 대한 간략한 설명\nArgs :\n- a (any) : 인자 a에 대한 설명 ■\n- b ( any) : 인자 b에 대한 설명 ·\nReturns :\n c (any) : 결과 c에 대한 설명\n 부언 설명도 가능.\nAA VV VV\nreturn c\" data-coord=\"top-left:(158,605); bottom-right:(1496,1529)\" /></figure>\n<br><h1 id='321' style='font-size:16px'>## class</h1>\n<br><h1 id='322' style='font-size:14px'>class ExampleClass :</h1>\n<p id='323' data-category='paragraph' style='font-size:14px'>\" = \"</p>\n<br><p id='324' data-category='paragraph' style='font-size:20px'>클래스에 대한 간략한 설명</p>\n<h1 id='325' style='font-size:18px'>Attributes:</h1>\n<br><p id='326' data-category='paragraph' style='font-size:18px'>attribute ( any ) : 클래스 속성에 대한 설명</p>\n<br><p id='327' data-category='paragraph' style='font-size:14px'>-</p>\n<p id='328' data-category='paragraph' style='font-size:16px'>Methods:</p>\n<br><p id='329' data-category='paragraph' style='font-size:18px'>method: 멤버 메소드에 대한 설명</p>\n<p id='330' data-category='paragraph' style='font-size:14px'>\" \" \"</p>\n<br><p id='331' data-category='paragraph' style='font-size:20px'>(이하 생략)</p>\n<h1 id='332' style='font-size:16px'>Python Guidelines</h1>\n<br><h1 id='333' style='font-size:22px'>Lessson 3: Docstring을 작성하자!</h1>\n<h1 id='334' style='font-size:18px'>Docstring을 사용한 파이썬 코드 문서화 템플릿</h1>\n<h1 id='335' style='font-size:18px'>Docstring은 함수/클래스/모듈에 대한 설명을 주석이 아닌 문자열 형태로 작성하여,<br>코드 내부에 문서처럼 포함시키는 방식이다. (사진 1)</h1>\n<p id='336' data-category='paragraph' style='font-size:18px'>따옴표 ····· ····· 또는 \"\" \" 세 쌍을 사용해서 입력 가능하며, 입력과 출력의 형태를 문서<br>처럼 설명할 수 있다.</p>\n<h1 id='337' style='font-size:20px'>해당 객체의 _doc_ 속성을 통해 docstring 문자열을 조회할 수 있다. (사진2)</h1>\n<p id='338' data-category='paragraph' style='font-size:18px'>IDE에서 함수나 클래스에 마우스 호버 시 docstring이 자동으로 팝업되므로,<br>협업과 유지보수에 매우 큰 도움이 된다. (사진 3)</p>\n<br><h1 id='339' style='font-size:14px'>*앞서 배운 typing도 동시에 볼 수 있다</h1>\n<br><figure id='340'><img style='font-size:14px' alt=\"def ybigta_docstring (param1: str, param2: str) str:\n......\n두 개의 문자열을 받아 하나의 문장으로 합쳐 반환합니다.\nArgs:\nparam1 (str) : 문장의 앞부분에 올 문자열 .\nparam2 (str) : 문장의 뒷부분에 올 문자열\nReturns:\nstr: param1과 param2를 연결한 문자열.\n·····\nreturn f'{param1} {param2}'\n사진1: docstring 예시\nprint( ybigta_docstring . _doc\npython3 mai...\n두 개의 문자열 을 받아 하나의 문장으로 합쳐 반환합니다 .\nArgs:\nparam1 (str): 문장의 앞부분에 올 문자열 ·\nparam2 (str): 문장의 뒷부분에 올 문자열 .\nReturns:\nstr: param1과 param2를 연 결 한 문자 열 ·\n사진2: _doc_ 사용 예시\n(function) def ybigta_docstring(\nparam1: str,\nparam2: str\n) str\n두 개의 문자열을 받아 하나의 문장으로 합쳐 반환합니다.\nArgs\nparam1 : str\n문장의 앞부분에 올 문자열.\nparam2 : str\n문장의 뒷부분에 올 문자열.\nReturns\nstr\nparam1과 param2를 연결한 문자열. 사진3:\nybigta docstring docstring 표시 예시\" data-coord=\"top-left:(2115,226); bottom-right:(2918,1665)\" /></figure>\n<h1 id='341' style='font-size:14px'>Python Guidelines</h1>\n<br><h1 id='342' style='font-size:20px'>Lesson 4: Class, 이런 것도 있었네?</h1>\n<h1 id='343' style='font-size:18px'>클래스의 역할?</h1>\n<br><h1 id='344' style='font-size:16px'>Python 클래스는 객체 지향 프로그래밍의 핵심 요소!</h1>\n<p id='345' data-category='list' style='font-size:14px'>● 속성(attribute)을 통해 데이터를 저장하고, 메서드(method)를 통해 동작을 정의할 수 있다.<br>● 클래스는 객체를 생성하기 위한 설계도와 같은 역할.<br>● 객체는 클래스의 인스턴스(instance)로, 관련된 데이터와 동작을 하나로 묶어 관리한다.<br>● 클래스를 활용하면 동일한 속성과 동작을 공유하면서도 고유한 상태를 가지는 여러 객체를 쉽게 생성할 수 있어 코<br>드의 모듈화와 유지보수가 용이해진다!</p>\n<header id='346' style='font-size:16px'>Python Guidelines</header>\n<br><h1 id='347' style='font-size:20px'>Lesson 4: Class, 이런 것도 있었네?</h1>\n<h1 id='348' style='font-size:18px'>클래스의 구성 요소</h1>\n<br><figure id='349'><img style='font-size:14px' alt=\"class MyClass:\nclass_attribute = 'This is a class attribute\n## Initialization\ndef init (self, instance_attribute) :\nself instance_attribute = instance_attribute\n## Instance method\ndef instance_method(self) :\nprint ( f'Instance attribute: {self instance_attribute ', )\n## Class method\n@classmethod\ndef class_method( cls ) :\nprint ( f'Class attribute: {cls class_attribute ', )\n## Static method\n@staticmethod\ndef static_method( param ) :\nprint( f'Static method called wi th param : {param } ', )\" data-coord=\"top-left:(193,447); bottom-right:(2840,1635)\" /></figure>\n<header id='350' style='font-size:18px'>Python Guidelines</header>\n<br><h1 id='351' style='font-size:22px'>Lesson 4: Class, 이런 것도 있었네?</h1>\n<h1 id='352' style='font-size:20px'>클래스 속성과 인스턴스 속성</h1>\n<figure id='353'><img style='font-size:14px' alt=\"class MyClass :\nclass_attribute = 'This is a class attribute'\n## Initialization\ndef init (self, instance_attribute ) :\nself . instance_attribute = instance_attribute\" data-coord=\"top-left:(174,509); bottom-right:(2839,879)\" /></figure>\n<p id='354' data-category='list' style='font-size:16px'>● class attribute: 모든 클래스 인스턴스가 같은 값을 공유. (MyClass.class_attribute)<br>● instance attribute: 클래스 인스턴스별로 각자의 고유한 값 (myclass.instance_attribute)</p>\n<p id='355' data-category='paragraph' style='font-size:18px'>클래스 속성은 \"공통 정보\",<br>인스턴스 속성은 \"개별 상태\"라고 기억하면 이해가 쉽다.</p>\n<p id='356' data-category='paragraph' style='font-size:14px'>클래스로 만들어진 개별 객체가 인스턴스<br>** 클래스 혹은 인스턴스의 데이터가 속성(attribute)</p>\n<header id='357' style='font-size:20px'>Python Guidelines</header>\n<br><h1 id='358' style='font-size:22px'>Lesson 4: Class, 이런 것도 있었네?</h1>\n<h1 id='359' style='font-size:20px'>인스턴스 메서드 / 클래스 메서드 / 정적 메서드 차이점</h1>\n<figure id='360'><img style='font-size:16px' alt=\"## Instance method\ndef instance_method( self) :\nprint ( f'Instance attribute: {self instance_attribute)' )\" data-coord=\"top-left:(309,494); bottom-right:(2649,698)\" /></figure>\n<br><h1 id='361' style='font-size:18px'>self: 현재 인스턴스를 참조, 인스턴스의 상태(instance attribute) 에 접근하거나 조작할 때 사용</h1>\n<figure id='362'><img style='font-size:14px' alt=\"## Class method\n@classmethod\ndef class_method ( cls) :\nprint(f'Class attribute: (cls.class_attribute)')\" data-coord=\"top-left:(200,798); bottom-right:(2888,1060)\" /></figure>\n<br><h1 id='363' style='font-size:18px'>cls: 현재 클래스를 참조, 인스턴스가 아닌 클래스 속성에 접근하거나 조작할 때 사용</h1>\n<figure id='364'><img style='font-size:14px' alt=\"## Static method\n@staticmethod\ndef static_method(param ) :\nprint( f'Static method called with param : {param}')\" data-coord=\"top-left:(245,1183); bottom-right:(2066,1437)\" /><br><figcaption id='365' style='font-size:20px'>self나 cls를 받지 않음, 클래스와 관련은 있지만 인스턴스나 클래스 상태를 쓰지 않는 독립 함수</figcaption></figure>\n\n<br><h1 id='366' style='font-size:16px'>*클래스 또는 인스턴스가 가진 함수가 메서드</h1>\n<header id='367' style='font-size:20px'>Python Guidelines</header>\n<br><h1 id='368' style='font-size:22px'>Lesson 4: Class, 이런 것도 있었네?</h1>\n<h1 id='369' style='font-size:20px'>예제로 클래스의 구성 요소를 확인해보자!</h1>\n<h1 id='370' style='font-size:18px'>와이빅타 26기 멤버(인스턴스)의 자기소개 class</h1>\n<p id='371' data-category='list' style='font-size:16px'>● class_name: 클래스 속성 (모든 인스턴스 공유)<br>○ 모든 인스턴스가 같은 \"YBIGTA\" 소속임을 나타냄</p>\n<br><figure id='372'><img style='font-size:14px' alt=\"class YbigtaMember:\n# 클래스 속성 (클래스 내 모든 인스턴스가 공유)\nclass_name = 'YBIGTA'\n# 인스턴스 속성 (각 인스턴스마다 다름)\ndef init_ (self, name : str, part: str) :\nself.name : str = name\nself. part: str = part\n## Instance Method\ndef introduce (self) -> str:\nreturn f'안녕하세요, [self.class_name {self part}팀의 {self. name 입니다!'\n## Class Method\n@classmethod\ndef get_class_name (cls) -> str:\nreturn f'저는 {cls. class_name} 26기 입니다!'\n## Static Method (클래스나 인스턴스와 무관한 일반 인사 메시지)\n@staticmethod\ndef greet(greeting: str) -> str:\nreturn f'{greeting}, 오늘도 좋은 하루 보내세요 :)'\" data-coord=\"top-left:(159,482); bottom-right:(1616,1504)\" /></figure>\n<br><p id='373' data-category='paragraph' style='font-size:16px'>● _init_: 생성자, 인스턴스 속성 설정<br>○ 각 인스턴스 생성 시 지정해야 되는 값</p>\n<p id='374' data-category='paragraph' style='font-size:14px'>● introduce: instance 메서드 (self 사용)</p>\n<br><p id='375' data-category='paragraph' style='font-size:16px'>○ 본인의 소속팀과 이름을 소개하는 메서드</p>\n<p id='376' data-category='list' style='font-size:16px'>● get_class_name: class 메서드 (cls 사용)</p>\n<p id='377' data-category='paragraph' style='font-size:14px'>● greet: static 메서드 (self·cls 없음)</p>\n<br><p id='378' data-category='paragraph' style='font-size:18px'>○ 단순히 전달받은 값을 활용해 인사 메시지를 반환</p>\n<h1 id='379' style='font-size:18px'>Python Guidelines</h1>\n<br><h1 id='380' style='font-size:22px'>Lesson 4: Class, 이런 것도 있었네?</h1>\n<h1 id='381' style='font-size:20px'>예제로 클래스의 구성 요소를 확인해보자!</h1>\n<figure id='382'><img style='font-size:14px' alt=\"# 인스턴스 생성\nmember = YbigtaMember('조요셉' , 'DE')\nprint (member introduce ( ) ) # Instance method 사용\nprint (YbigtaMember. get_class_name() ) # Class method 사용 (인스턴스 or 클래스 모두 호출 가능)\nprint ) YbigtaMember · greet ( '늦은 시간까지 세션 듣느라 수고많으십니다') ) # Static method 사용\" data-coord=\"top-left:(166,544); bottom-right:(1688,847)\" /></figure>\n<br><h1 id='383' style='font-size:18px'>\"조요셉\", \"DE\"라는 입력을 받아 생성한 인스턴스의 예시</h1>\n<table id='384' style='font-size:14px'><thead><tr><td>python3 mai... □ Ask</td></tr></thead><tbody><tr><td>안 녕 하 세 요, YBIGTA DE팀 의 조 요 셉 입 니 다 ! 저는 YBIGTA 26기 입니다 ! 늦 은 시간까지 세 션 듣느라 수 고 많 으 십 니 다 , 오 늘 도 좋 은 하 루 보 내 세 요 : )</td></tr></tbody></table>\n<br><p id='385' data-category='list' style='font-size:16px'>● 인스턴스 메서드 introduce()를 호출해 본인 소개를 출력<br>● 클래스 메서드 get_class_name()은 클래스 속성인 이름<br>을 반환,<br>● static 메서드 greet()는 input 인삿말을 그대로 출력</p>\n<h1 id='386' style='font-size:16px'>Python Guidelines</h1>\n<br><h1 id='387' style='font-size:22px'>Lesson 4: Class, 이런 것도 있었네?</h1>\n<h1 id='388' style='font-size:18px'>참고하면 정말 좋은 자료!</h1>\n<h1 id='389' style='font-size:20px'>파이썬 공식 도큐멘테이션</h1>\n<br><h1 id='390' style='font-size:14px'>● https://docs.cython.org/ko/3/</h1>\n<h1 id='391' style='font-size:18px'>Real Python Tutorials</h1>\n<br><h1 id='392' style='font-size:14px'>● https://realpython.com/</h1>\n<h1 id='393' style='font-size:20px'>인프런, velog, 티스토리 등 각종 인터넷 자료</h1>\n<br><h1 id='394' style='font-size:16px'>● 팩트 체크 필수</h1>\n<h1 id='395' style='font-size:14px'>Python Guidelines</h1>\n<br><h1 id='396' style='font-size:20px'>Lessson 4.5: 아주 짧은 OOP</h1>\n<h1 id='397' style='font-size:16px'>객체 지향은 뭘 의미할까?</h1>\n<p id='398' data-category='paragraph' style='font-size:18px'>현실 세계의 사물(객체)을 프로그램에 반영하여,<br>각 객체가 속성(무엇을 가지고 있는가)과 행동(무엇을 할 수 있는가)을<br>가지도록 설계하는 프로그래밍 패러다임이다.</p>\n<p id='399' data-category='paragraph' style='font-size:16px'>이를 통해 프로그램 구조를 더 직관적으로 표현할 수 있으며,<br>코드의 재사용성, 확장성, 유지보수성을 크게 높일 수 있다!</p>\n<h1 id='400' style='font-size:14px'>Python Guidelines</h1>\n<br><h1 id='401' style='font-size:22px'>Lessson 4.5: 아주 짧은 OOP</h1>\n<h1 id='402' style='font-size:16px'>객체 지향의 4대 원칙</h1>\n<h1 id='403' style='font-size:20px'>캡슐화: 객체의 내부 상태(attribute)를 외부에서 직접 접근하지 못하도록 숨김</h1>\n<h1 id='404' style='font-size:20px'>상속: 기존 클래스를 확장하여 새로운 클래스를 정의</h1>\n<h1 id='405' style='font-size:18px'>다형성 : 같은 메서드 이름이 클래스에 따라 다르게 동작</h1>\n<h1 id='406' style='font-size:20px'>추상화: 복잡한 구현은 감추고 필요한 인터페이스만 제공</h1>\n<h1 id='407' style='font-size:20px'>Python Guidelines</h1>\n<br><h1 id='408' style='font-size:22px'>Lessson 4.5: 아주 짧은 OOP</h1>\n<h1 id='409' style='font-size:22px'>예제로 확인해보자!</h1>\n<figure id='410'><img style='font-size:18px' alt=\"class YbigtaLeader(YbigtaMember) :\ndef init_ (self, name : str, part: str, position: str) :\nsuper()._init.  (name, part) # 부모 클래스 초기화\nself. position = position # 추가 속성: 리더 직책\ndef introduce(self) -> str:\nbase_intro = super() . introduce( ) # 부모 introduce 재사용\nreturn f'{base_intro} 저는 {self · position}입니다. '\" data-coord=\"top-left:(148,554); bottom-right:(1422,965)\" /></figure>\n<figure id='411'><img style='font-size:16px' alt=\"member1 = YbigtaMember( '조요셉 ' 'DE' )\n,\nmember2 = YbigtaLeader( '윤희찬' , 'DE' , '회장' )\nprint( member1. introduce( ))\nprint ( member2. introduce( ))\nprint( member2 . get_class_name( ))\nprint( member2. greet( '늦은 시간까지 세션 듣느라 수고많으십니다' ))\" data-coord=\"top-left:(148,995); bottom-right:(1421,1308)\" /></figure>\n<p id='412' data-category='paragraph' style='font-size:14px'>python3 mai...</p>\n<br><p id='413' data-category='paragraph' style='font-size:14px'>V</p>\n<br><p id='414' data-category='paragraph' style='font-size:14px'>Ask Assistant 100ms</p>\n<p id='415' data-category='paragraph' style='font-size:16px'>안 녕 하세요 , YBIGTA DE팀 의 조 요 셉 입니다 !<br>안 녕 하세 요 , YBIGTA DE팀 의 윤 희찬입니다 ! 저 는 회 장 입니다.<br>저 는 YBIGTA 26기 입 니다 !<br>늦은 시간까지 세 션 듣느라 수고많으십니다 , 오 늘도 좋 은 하루 보 내 세 요 : )</p>\n<br><p id='416' data-category='paragraph' style='font-size:20px'>자기소개 클래스를 상속한 리더 클래스</p>\n<p id='417' data-category='list' style='font-size:18px'>● YbigtaMember 클래스를 상속한 YbigtaLeader 클래스<br>● super()로 부모 속성 초기화 + 역할(position) 속성 추가<br>● introduce() 메서드를 오버라이딩해 소개 문구 출력</p>\n<p id='418' data-category='paragraph' style='font-size:20px'>member1 인스턴스는 기존 YbigtaMember 클래스로 생성<br>member2 인스턴스는 YbigtaLeader 클래스로 생성</p>\n<p id='419' data-category='paragraph' style='font-size:20px'>앞서 나온 객체지향 핵심 개념 적용 사례</p>\n<p id='420' data-category='paragraph' style='font-size:18px'>*super()는 부모 클래스의 메서드를 자식 클래스에서 호출할 때 사용하는 함수</p>\n<h1 id='421' style='font-size:20px'>Python Guidelines</h1>\n<br><h1 id='422' style='font-size:22px'>Lessson 4.5: 아주 짧은 OOP</h1>\n<p id='423' data-category='paragraph' style='font-size:16px'>class LinearModel:</p>\n<br><p id='424' data-category='paragraph' style='font-size:18px'>def init_ (self, alpha=0.0) :</p>\n<br><p id='425' data-category='paragraph' style='font-size:14px'>self.alpha = alpha<br>self. param = []</p>\n<p id='426' data-category='paragraph' style='font-size:16px'>def setup (self, data) :<br>self. param = [sum(col) /len(col) for col in zip (*data) ]</p>\n<p id='427' data-category='paragraph' style='font-size:16px'>def run (self, data) :</p>\n<br><p id='428' data-category='paragraph' style='font-size:14px'>return [sum(x * p for X, p in zip ( row, self · param) ) for row in data]</p>\n<p id='429' data-category='list' style='font-size:16px'>def penalty (self) :<br>return 0</p>\n<p id='430' data-category='paragraph' style='font-size:16px'>class ModelA (LinearModel) :</p>\n<br><p id='431' data-category='paragraph' style='font-size:14px'>def penalty (self) :<br>return self.alpha * sum (abs ( p) for p in self . param)</p>\n<p id='432' data-category='paragraph' style='font-size:16px'>class ModelB (LinearModel) :</p>\n<br><p id='433' data-category='paragraph' style='font-size:16px'>def penalty (self) :<br>return self.alpha * sum (p**2 for p in self . param)</p>\n<p id='434' data-category='paragraph' style='font-size:16px'>class CombinedModel (ModelA, ModelB) :</p>\n<br><p id='435' data-category='paragraph' style='font-size:18px'>def _init_ (self, alpha, ratio=0.5) :</p>\n<br><p id='436' data-category='paragraph' style='font-size:14px'>super() · init_ (alpha)<br>self. ratio = ratio</p>\n<p id='437' data-category='paragraph' style='font-size:16px'>def penalty (self) :</p>\n<br><p id='438' data-category='paragraph' style='font-size:14px'>a = ModelA. penalty(self)<br>b = ModelB. penalty(self)<br>return self. ratio * a + (1 - self. ratio) * b</p>\n<br><p id='439' data-category='paragraph' style='font-size:18px'>Q: CombinedModel이 setup()이나 run()을 별도로 정의하지 않았음에도<br>해당 기능을 사용할 수 있는 이유를 코드 흐름을 기반으로 설명하고, 위와 같은<br>구조가 가지는 장단점을 설명하며, 필요한 경우 어떠한 방식으로 구조를 개선<br>할 수 있을지 논하시오.</p>\n<h1 id='440' style='font-size:22px'>Lessson 4.5: 아주 짧은 OOP</h1>\n<p id='441' data-category='paragraph' style='font-size:14px'>class LinearModel:</p>\n<br><p id='442' data-category='paragraph' style='font-size:16px'>def ⌀init , (self, alpha=0.0) :</p>\n<p id='443' data-category='paragraph' style='font-size:14px'>self.param = []</p>\n<p id='444' data-category='paragraph' style='font-size:16px'>def setup (self, data) :<br>self.param = [sum(col) /len(col) for col in zip (*data) ]</p>\n<p id='445' data-category='paragraph' style='font-size:14px'>def run (self, data) :</p>\n<br><p id='446' data-category='paragraph' style='font-size:14px'>return [sum(x * p for X, p in zip ( row, self · param) ) for row in data]</p>\n<p id='447' data-category='paragraph' style='font-size:14px'>class ModelA(Linea rModel) :</p>\n<br><p id='448' data-category='paragraph' style='font-size:14px'>def penalty ( self) :<br>return self.alpha * sum (abs (p) for p in self . param)</p>\n<p id='449' data-category='paragraph' style='font-size:14px'>class ModelB (LinearModel) :</p>\n<br><p id='450' data-category='paragraph' style='font-size:20px'>Q: CombinedModel이 setup()이나 run()을 별도로 정의하지 않았음에도<br>해당 기능을 사용할 수 있는 이유를 코드 흐름을 기반으로 설명하고, 위와 같은<br>구조가 가지는 장단점을 설명하며, 필요한 경우 어떠한 방식으로 구조를 개선<br>할 수 있을지 논하시오.</p>\n<p id='451' data-category='paragraph' style='font-size:18px'>파이썬은 객체가 가진 메서드를 호출할 때</p>\n<p id='452' data-category='paragraph' style='font-size:14px'>class CombinedModel (ModelA, ModelB) :</p>\n<br><p id='453' data-category='paragraph' style='font-size:16px'>def _init_ (self, alpha, ratio=0.5) :</p>\n<br><p id='454' data-category='list' style='font-size:16px'>● 먼저 자식 클래스(CombinedModel)를 살펴보고,<br>● 거기 없으면 부모 클래스로 올라감.<br>● 계속 위로 올라가다 처음으로 해당 메서드를 찾으면 그걸 실행함</p>\n<p id='455' data-category='paragraph' style='font-size:14px'>def penalty (self) :</p>\n<br><p id='456' data-category='paragraph' style='font-size:18px'>setup()과 run()은 LinearModel에만 정의돼 있으므로, CombinedModel<br>이 해당 메서드를 호출하면 파이썬이 부모 쪽으로 올라가 LinearModel에<br>있는 걸 사용함.<br>즉, 오버라이딩(재정의)을 하지 않았어도 상속 덕분에 그대로 물려받아 쓸 수<br>있음</p>\n<p id='457' data-category='paragraph' style='font-size:14px'>a = ModelA. penalty(self)<br>b = ModelB. penalty(self)<br>return self. ratio * a + (1 - self. ratio) * b</p>\n<br><p id='458' data-category='paragraph' style='font-size:20px'>장점:</p>\n<br><p id='459' data-category='list' style='font-size:18px'>● LinearModel을 ModelA(lasso), ModelB(ridge)로 각각 상속하여 규<br>제 방식(penalty)만 다르게 오버라이딩<br>● ModelA와 ModelB를 다중 상속한 CombinedModel에서 두 penalty<br>를 비율(ratio)에 따라 혼합하여 elastic net 방식 구현 (유연한 확장성)<br>● 하위 클래스는 penalty()만 다르게 정의하여 필요한 동작 커스터마이징<br>(다형성)<br>● 공통 로직을 중복 없이 재사용 (재사용성)</p>\n<br><header id='460' style='font-size:22px'>Python Guidelines</header>\n<p id='461' data-category='paragraph' style='font-size:14px'>self.alpha = alpha</p>\n<p id='462' data-category='list' style='font-size:14px'>def penalty (self) :<br>return 0</p>\n<p id='463' data-category='paragraph' style='font-size:14px'>def penalty (self) :<br>return self.alpha * sum (p**2 for p in self. param)</p>\n<p id='464' data-category='paragraph' style='font-size:14px'>super(). _init_ (alpha)<br>self. ratio = ratio</p>\n<h1 id='465' style='font-size:14px'>감사합니다!</h1>",
    "1ZMpSFY0AzwpP_GguODmDoziZQ-6qj5as": "<h1 id='0' style='font-size:14px'>Prerequisites</h1>\n<header id='1' style='font-size:14px'>Prerequisites</header>\n<br><h1 id='2' style='font-size:18px'>Anaconda를\u0001설치해봅시다!\u0001</h1>\n<header id='3' style='font-size:14px'>Prerequisites</header>\n<br><h1 id='4' style='font-size:18px'>Anaconda를\u0001설치해봅시다!\u0001</h1>\n<p id='5' data-category='paragraph' style='font-size:14px'>OS에\u0001맞는\u0001배포판을\u0001설치해줍시다!</p>\n<header id='6' style='font-size:14px'>Prerequisites</header>\n<br><h1 id='7' style='font-size:18px'>Anaconda를\u0001설치해봅시다!\u0001</h1>\n<figure id='8'><img alt=\"\" data-coord=\"top-left:(976,359); bottom-right:(2250,1213)\" /></figure>\n<header id='9' style='font-size:14px'>Prerequisites</header>\n<br><h1 id='10' style='font-size:18px'>Anaconda를\u0001설치해봅시다!\u0001</h1>\n<figure id='11'><img alt=\"\" data-coord=\"top-left:(208,442); bottom-right:(1482,1445)\" /></figure>\n<br><p id='12' data-category='paragraph' style='font-size:14px'>해당\u0001화면까지는\u0001전부\u0001넘겨주셔도\u0001됩니다!\u0001</p>\n<br><figure id='13'><img alt=\"\" data-coord=\"top-left:(1628,448); bottom-right:(2762,831)\" /></figure>\n<h1 id='14' style='font-size:14px'>CLI에서\u0001“conda\u0001-V”</h1>\n<p id='15' data-category='paragraph' style='font-size:14px'>conda\u0001버전이\u0001위와\u0001같이\u0001명시되면\u0001설치\u0001성공!</p>\n<h1 id='16' style='font-size:18px'>VScode를\u0001설치해봅시다!\u0001</h1>\n<br><header id='17' style='font-size:14px'>Prerequisites</header>\n<figure id='18'><img style='font-size:14px' alt=\"OS에\u0001맞는\u0001배포판을\u0001설치해줍시다!\" data-coord=\"top-left:(273,319); bottom-right:(2694,1585)\" /></figure>\n<header id='19' style='font-size:14px'>Prerequisites</header>\n<br><h1 id='20' style='font-size:18px'>VScode를\u0001설치해봅시다!\u0001</h1>\n<figure id='21'><img alt=\"\" data-coord=\"top-left:(241,383); bottom-right:(1470,1386)\" /></figure>\n<br><figure id='22'><img style='font-size:14px' alt=\"설정\u0001확인\u0001후\u0001설치해줍시다!\" data-coord=\"top-left:(1539,385); bottom-right:(2754,1387)\" /></figure>\n<header id='23' style='font-size:16px'>Prerequisites</header>\n<br><h1 id='24' style='font-size:20px'>VScode를\u0001설치해봅시다!\u0001</h1>\n<figure id='25'><img style='font-size:14px' alt=\"VScode\u0001멋있게\u0001켜는\u0001법(쉬움)\n시작\u0001→\u0001“powershell”\u0001→\u0001Enter\u0001→\u0001“code”\u0001→\u0001Enter\" data-coord=\"top-left:(452,320); bottom-right:(2541,1571)\" /></figure>\n<h1 id='26' style='font-size:20px'>VScode를\u0001설치해봅시다!\u0001</h1>\n<br><header id='27' style='font-size:16px'>Prerequisites</header>\n<figure id='28'><img style='font-size:14px' alt=\"②\u0001python을\u0001입력해줍시다!\n③\n④\n①\u0001Extension\" data-coord=\"top-left:(351,299); bottom-right:(2577,1599)\" /></figure>\n<header id='29' style='font-size:16px'>Prerequisites</header>\n<br><h1 id='30' style='font-size:20px'>VScode를\u0001설치해봅시다!\u0001</h1>\n<br><figure id='31'><img style='font-size:14px' alt=\"①\u0001ctrl\u0001+\u0001shift\u0001+\u0001p\u0001혹은\u0001상단의\u0001검색\u0001바에서\u0001“>”\u0001입력\n②\u0001Python:\u0001Select\u0001Interpreter\u0001클릭\" data-coord=\"top-left:(370,304); bottom-right:(2585,1588)\" /></figure>\n<header id='32' style='font-size:16px'>Prerequisites</header>\n<br><h1 id='33' style='font-size:20px'>실행해봅시다!</h1>\n<figure id='34'><img style='font-size:14px' alt=\"Anaconda\u0001설치할\u0001때\u0001자동으로\u0001설치된\nbase\u0001파이썬\u0001버전으로\u0001선택해줍니다!\" data-coord=\"top-left:(357,310); bottom-right:(2573,1589)\" /></figure>\n<h1 id='35' style='font-size:20px'>실행해봅시다!</h1>\n<br><header id='36' style='font-size:16px'>Prerequisites</header>\n<figure id='37'><img alt=\"\" data-coord=\"top-left:(187,496); bottom-right:(849,836)\" /></figure>\n<br><h1 id='38' style='font-size:14px'>conda\u0001-V로\u0001버전\u0001확인</h1>\n<h1 id='39' style='font-size:14px'>conda\u0001activate로\u0001conda\u0001활성화\u0001[(base)가\u0001옆에\u0001뜹니다!]</h1>\n<h1 id='40' style='font-size:14px'>conda\u0001env\u0001list로\u0001설치된\u0001가상환경\u0001확인</h1>\n<h1 id='41' style='font-size:14px'>conda\u0001create\u0001--name\u0001<가상환경\u0001이름>\u0001python==<버전><br>“Python\u0001 3.12가\u0001 설치된\u0001 ybigta라는\u0001 이름으로\u0001 가상환경을\u0001 만들고<br>싶어”\u0001라는\u0001뜻입니다!</h1>\n<p id='42' data-category='paragraph' style='font-size:14px'>진짜로\u0001만드시겠습니까?\u0001질문에\u0001일일이\u0001y\u0001눌러주기\u0001귀찮다면<br>conda\u0001create\u0001--name\u0001<가상환경\u0001이름>\u0001python==<버전>\u0001-y</p>\n<header id='43' style='font-size:16px'>Prerequisites</header>\n<br><h1 id='44' style='font-size:20px'>Anaconda\u0001명령어\u0001정리!</h1>\n<h1 id='45' style='font-size:18px'>📁\u00011.\u0001환경(Environment)\u0001관리</h1>\n<br><table id='46' style='font-size:14px'><thead><tr><td>목적</td><td>명령어\u0001예시</td></tr></thead><tbody><tr><td>conda\u0001버전\u0001확인</td><td>conda\u0001-V\u0001또는\u0001conda\u0001--version</td></tr><tr><td>환경\u0001목록\u0001보기</td><td>conda\u0001env\u0001list</td></tr><tr><td>환경\u0001생성</td><td>conda\u0001create\u0001-n\u0001myenv\u0001python=3.11</td></tr><tr><td>환경\u0001삭제</td><td>conda\u0001remove\u0001-n\u0001myenv\u0001--all</td></tr><tr><td>환경\u0001활성화</td><td>conda\u0001activate\u0001myenv</td></tr><tr><td>환경\u0001비활성화</td><td>conda\u0001deactivate</td></tr><tr><td>환경\u0001복제</td><td>conda\u0001create\u0001--name\u0001newenv\u0001--clone\u0001oldenv</td></tr><tr><td>환경\u0001내\u0001패키지\u0001목록\u0001확인</td><td>conda\u0001list</td></tr><tr><td>특정\u0001환경\u0001안에서\u0001패키지\u0001확인</td><td>conda\u0001list\u0001-n\u0001myenv</td></tr></tbody></table>\n\n<table id='48' style='font-size:14px'><thead><tr><td>목적</td><td>명령어\u0001예시</td></tr></thead><tbody><tr><td>환경\u0001내보내기\u0001(백업)</td><td>conda\u0001env\u0001export\u0001>\u0001environment.yml</td></tr><tr><td>환경\u0001불러오기\u0001(복원)</td><td>conda\u0001env\u0001create\u0001-f\u0001environment.yml</td></tr><tr><td>환경\u0001파일에서\u0001이름\u0001변경해서\u0001생성</td><td>conda\u0001env\u0001create\u0001-f\u0001environment.yml\u0001-n\u0001newenv</td></tr></tbody><caption id='47' style='font-size:18px'>🔁\u00012.\u0001환경\u0001복원\u0001/\u0001공유</caption></table>\n<header id='49' style='font-size:14px'>Prerequisites</header>\n<br><h1 id='50' style='font-size:20px'>macOS\u0001유저를\u0001위한\u0001설치\u0001가이드</h1>\n<h1 id='51' style='font-size:16px'>Anaconda\u0001설치\u0001가이드</h1>\n<br><p id='52' data-category='list' style='font-size:16px'>https://blog.naver.com/codeitofficial/223497711349<br>VScode\u0001설치\u0001가이드</p>\n<br><h1 id='53' style='font-size:16px'>https://www.codeit.kr/tutorials/67/vscode-tutorial-macos</h1>",
    "1M0grVkP2joid-OCkiYHYZeU8-zQQfBnn": "<header id='0' style='font-size:14px'>2025-2\u0001YBIGTA</header>\n<h1 id='1' style='font-size:20px'>기초통계/ML</h1>\n<footer id='2' style='font-size:16px'>26기\u0001조태연</footer>\n<h1 id='3' style='font-size:18px'>목\u0001차</h1>\n<table id='4' style='font-size:14px'><thead></thead><tbody><tr><td>1. Introduction</td><td>6. Machine\u0001Learning</td></tr><tr><td>2. Probability</td><td>7. Regression</td></tr><tr><td>3. Descriptive\u0001Statistics</td><td>8. Decistion\u0001Tree</td></tr><tr><td>4. Statistical\u0001Inference</td><td>9. SVM</td></tr><tr><td>5. Statistical\u0001Model</td><td>10. Ensemble</td></tr></tbody></table>\n<h1 id='5' style='font-size:14px'>Introduction</h1>\n<header id='6' style='font-size:14px'>Introduction</header>\n<br><h1 id='7' style='font-size:18px'>왜\u0001통계학이\u0001필요할까?</h1>\n<figure id='8'><img alt=\"\" data-coord=\"top-left:(806,318); bottom-right:(2214,1669)\" /></figure>\n<h1 id='9' style='font-size:20px'>통계학이란?</h1>\n<br><header id='10' style='font-size:14px'>Introduction</header>\n<figure id='11'><img style='font-size:16px' alt=\"𝑥 𝑦 𝑓 𝑥 𝑦\" data-coord=\"top-left:(506,445); bottom-right:(2544,1574)\" /></figure>\n<header id='12' style='font-size:14px'>Introduction</header>\n<br><h1 id='13' style='font-size:18px'>통계학\u0001vs\u0001머신러닝</h1>\n<figure id='14'><img alt=\"\" data-coord=\"top-left:(235,428); bottom-right:(1228,1416)\" /></figure>\n<h1 id='15' style='font-size:14px'>Probability</h1>\n<header id='16' style='font-size:16px'>Probability</header>\n<br><h1 id='17' style='font-size:20px'>‘확률’과\u0001‘통계’</h1>\n<figure id='18'><img alt=\"\" data-coord=\"top-left:(86,683); bottom-right:(1352,888)\" /></figure>\n<br><figure id='19'><img alt=\"\" data-coord=\"top-left:(1507,356); bottom-right:(2963,1269)\" /></figure>\n<footer id='20' style='font-size:14px'>https://recipesds.tistory.com/entry/%ED%99%95%EB%A5%A0%EA%B3%BC-%ED%86%B5%EA%B3%84%EC%9D%98-%EA%B4%80%EA%B3%84-<br>%EB%8A%90%EB%8B%B7%EC%97%86%EC%9D%B4-%ED%99%95%EB%A5%A0%EC%9D%84-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EC%9D%B4%EC%9C%A0</footer>\n<h1 id='21' style='font-size:18px'>확률\u0001변수\u0001Random\u0001Variables</h1>\n<br><header id='22' style='font-size:14px'>Probability</header>\n<figure id='23'><img alt=\"\" data-coord=\"top-left:(257,507); bottom-right:(1546,1351)\" /></figure>\n<br><p id='24' data-category='list'></p>\n<p id='25' data-category='list'></p>\n<p id='26' data-category='list'></p>\n<header id='27' style='font-size:14px'>Probability</header>\n<br><h1 id='28' style='font-size:18px'>확률\u0001분포\u0001Probability\u0001Distribution</h1>\n<figure id='29' data-category='chart'><img data-coord=\"top-left:(332,387); bottom-right:(1431,1602)\" /><figcaption><p>Chart Title: Visualizing the Empirical Rule in a Normal Distribution</p><p>Y-Axis: 확률</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>M - 3SD</td><td>M - 2SD</td><td>M - 1SD</td><td>M + 1SD</td><td>M + 2SD</td><td>M + 3SD</td></tr></thead><tbody><tr><td>item_01</td><td>0.0%</td><td>0.0%</td><td>0.06%</td><td>0.08%</td><td>0.06%</td><td>2.35%</td></tr></tbody></table></figure>\n<br><p id='30' data-category='list'></p>\n<p id='31' data-category='list'></p>\n<p id='32' data-category='list'></p>\n<h1 id='33' style='font-size:14px'>Descriptive<br>Statistics</h1>\n<h1 id='34' style='font-size:20px'>기술통계</h1>\n<br><p id='35' data-category='paragraph' style='font-size:14px'>Descriptive\u0001Statistics</p>\n<figure id='36'><img style='font-size:16px' alt=\"원본\u0001데이터는\u0001너무\u0001방대하고\u0001복잡\n\u0001\u0001\u0001\u0001\u0001-\u0001원본\u0001그대로의\u0001의미를\u0001파악하기\u0001어렵\n\u0001\u0001\u0001\u0001\u0001-\u0001핵심\u0001정보만\u0001추려서\u0001이해해야\u0001함!\n비교와\u0001의사결정을\u0001쉽게\n\u0001\u0001\u0001\u0001\u0001-\u0001두\u0001집단\u0001비교:\u0001남녀\u0001평균\u0001키\u0001비교\n\u0001\u0001\u0001\u0001\u0001-\u0001평균이라는\u0001통계량이\u0001없으면\u0001비교\u0001불가\n\u0001\u0001\u0001\u0001\u0001-\u0001요약이\u0001있어야\u0001문제\u0001진단\u0001→\u0001인사이트\u0001발견\n\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001→\u0001계획\u0001수립\u0001및\u0001제언\u0001가능\n모델링/통계추론의\u0001전\u0001단계\n\u0001\u0001\u0001\u0001\u0001-\u0001기술통계로\u0001데이터의\u0001특성을\u0001파악해야\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\n\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001적절한\u0001모델\u0001선택\u0001가능\n\u0001\u0001\u0001\u0001\u0001-\u0001정규분포인지\u0001아닌지\n\u0001\u0001\u0001\u0001\u0001-\u0001변수\u0001간\u0001상관관계\u0001존재\u0001여부\n\u0001\u0001\u0001\u0001\u0001-\u0001추정량,\u0001가설검정의\u0001전제\u0001확인\" data-coord=\"top-left:(187,308); bottom-right:(2873,1662)\" /></figure>\n<h1 id='37' style='font-size:16px'>Descriptive\u0001Statistics</h1>\n<br><h1 id='38' style='font-size:20px'>기술통계\u0001예시</h1>\n<h1 id='39' style='font-size:18px'>데이터의\u0001‘중심\u0001경향‘과\u0001‘흩어짐’\u0001파악</h1>\n<br><p id='40' data-category='list' style='font-size:18px'>\u0001\u0001\u0001\u0001\u0001-\u0001평균,\u0001중앙값,\u0001최빈값\u0001→\u0001데이터가\u0001어디에\u0001몰려있는지<br>\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001확인<br>\u0001\u0001\u0001\u0001\u0001-\u0001분산,\u0001표준편차\u0001→\u0001데이터가\u0001얼마나\u0001흩어져\u0001있는지\u0001확인<br>\u0001\u0001\u0001\u0001\u0001-\u0001데이터의\u0001전반적인\u0001모양을\u0001직관적으로\u0001이해</p>\n<p id='41' data-category='paragraph' style='font-size:18px'>이상치,\u0001오류\u0001탐지의\u0001기준</p>\n<br><p id='42' data-category='list' style='font-size:18px'>\u0001\u0001\u0001\u0001\u0001-\u0001Boxplot,\u0001산점도\u0001같은\u0001기술통계\u0001시각화를\u0001통한<br>\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001이상치\u0001발견.<br>\u0001\u0001\u0001\u0001\u0001-\u0001데이터\u0001전처리\u0001품질이\u0001달라짐</p>\n<p id='43' data-category='paragraph' style='font-size:14px'>http://www.sigmapress.co.kr/shop/shop_image/g55382_1442970102.pdf</p>\n<header id='44' style='font-size:14px'>Descriptive\u0001Statistics</header>\n<br><h1 id='45' style='font-size:18px'>기술통계\u0001예시</h1>\n<figure id='46' data-category='chart'><img data-coord=\"top-left:(123,524); bottom-right:(1559,1256)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Q (25th Percentile)</td><td>Q Median</td><td>Q3 (75th Percentile)</td></tr></thead><tbody><tr><td>item_01</td><td>0.5IQR</td><td>2.5IQR</td><td>1.0IQR</td></tr></tbody></table></figure>\n<br><figure id='47' data-category='chart'><img data-coord=\"top-left:(1670,407); bottom-right:(2776,1321)\" /><figcaption><p>X-Axis: iris$Petal Length</p><p>Y-Axis: iris$Sepal Width</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td><td>10</td><td>11</td><td>12</td><td>13</td><td>14</td><td>15</td><td>16</td><td>17</td><td>18</td><td>19</td><td>20</td><td>21</td><td>22</td><td>23</td><td>24</td><td>25</td><td>26</td><td>27</td><td>28</td><td>29</td><td>30</td><td>31</td><td>32</td><td>33</td><td>34</td><td>35</td><td>36</td><td>37</td><td>38</td><td>39</td><td>40</td><td>41</td><td>42</td><td>43</td><td>44</td><td>45</td><td>46</td><td>47</td><td>48</td><td>49</td><td>50</td><td>51</td><td>52</td><td>53</td><td>54</td><td>55</td><td>56</td><td>57</td><td>58</td><td>59</td><td>60</td><td>61</td><td>62</td><td>63</td><td>64</td><td>65</td><td>66</td><td>67</td><td>68</td><td>69</td><td>70</td><td>71</td><td>72</td><td>73</td><td>74</td><td>75</td><td>76</td><td>77</td><td>78</td><td>79</td><td>80</td><td>81</td><td>82</td><td>83</td><td>84</td><td>85</td><td>86</td><td>87</td><td>88</td><td>89</td><td>90</td><td>91</td><td>92</td><td>93</td><td>94</td><td>95</td><td>96</td><td>97</td><td>98</td><td>99</td><td>100</td></tr></thead><tbody><tr><td>item_01</td><td>20</td><td>30</td><td>30</td><td>40</td><td>45</td><td>40</td><td>35</td><td>30</td><td>25</td><td>20</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td><td>15</td><td>10</td></tr></tbody></table></figure>\n<h1 id='48' style='font-size:14px'>Descriptive\u0001Statistics</h1>\n<br><h1 id='49' style='font-size:18px'>모집단과\u0001표본</h1>\n<figure id='50'><img alt=\"\" data-coord=\"top-left:(197,517); bottom-right:(1592,1249)\" /></figure>\n<br><p id='51' data-category='list'></p>\n<p id='52' data-category='list'></p>\n<p id='53' data-category='paragraph' style='font-size:14px'>Statistical<br>Inference</p>\n<p id='54' data-category='paragraph' style='font-size:18px'>Estimation</p>\n<br><p id='55' data-category='paragraph' style='font-size:14px'>Statistical\u0001Inference</p>\n<figure id='56'><img alt=\"\" data-coord=\"top-left:(310,391); bottom-right:(705,796)\" /></figure>\n<br><figure id='57'><img alt=\"\" data-coord=\"top-left:(761,390); bottom-right:(1154,793)\" /></figure>\n<br><p id='58' data-category='list'></p>\n<p id='59' data-category='list'></p>\n<figure id='60'><img alt=\"\" data-coord=\"top-left:(316,1039); bottom-right:(714,1445)\" /></figure>\n<br><figure id='61'><img alt=\"\" data-coord=\"top-left:(765,1038); bottom-right:(1163,1444)\" /></figure>\n<br><p id='62' data-category='list'></p>\n<header id='63' style='font-size:14px'>Statistical\u0001Inference</header>\n<br><h1 id='64' style='font-size:20px'>통계적\u0001추론이란?</h1>\n<figure id='65'><img alt=\"\" data-coord=\"top-left:(152,545); bottom-right:(1505,1332)\" /></figure>\n<br><p id='66' data-category='list' style='font-size:16px'>표본으로\u0001모집단에\u0001대한\u0001결론을\u0001내리는\u0001과정<br>\u0001\u0001\u0001\u0001\u0001-\u0001추정:\u0001알려지지\u0001않은\u0001모수를\u0001합리적으로\u0001예측<br>\u0001\u0001\u0001\u0001\u0001-\u0001가설\u0001검정:\u0001추정값을\u0001통계적으로\u0001검증</p>\n<header id='67' style='font-size:16px'>Statistical\u0001Inference</header>\n<br><h1 id='68' style='font-size:20px'>Testing</h1>\n<table id='69' style='font-size:14px'><thead></thead><tbody><tr><td></td><td>𝐻 0 𝐻 1</td></tr><tr><td><figure><img alt=\"\" data-coord=\"top-left:(26,475); bottom-right:(1575,1320)\" /></figure></td><td>α α</td></tr></tbody></table>\n<h1 id='70' style='font-size:14px'>Statistical\u0001Inference</h1>\n<br><h1 id='71' style='font-size:18px'>Testing</h1>\n<p id='72' data-category='equation'>$$Z={\\frac{b_{2}-\\beta_{2}}{\\sqrt{\\sigma^{2}/\\Sigma(x_{i}-x)}^{-}}}\\sim\\mathrm{N}(0,\\,1)$$</p>\n<p id='73' data-category='equation'>$$t={\\frac{b_{2}-\\beta_{2}}{\\sqrt{\\frac{\\sqrt{\\Theta}^{2}}/\\Sigma(x_{i}-\\frac{\\zeta}{x})}}}\\,=\\,{\\frac{b_{2}-\\beta_{2}}{\\sqrt{v a r(b_{2})}}}\\,=\\,{\\frac{b_{2}-\\beta_{2}}{s e(b_{2})}}\\,\\sim\\,t({\\mathsf{N}}-2)$$</p>\n<h1 id='74' style='font-size:18px'>Testing</h1>\n<br><p id='75' data-category='paragraph' style='font-size:14px'>Statistical\u0001Inference</p>\n<figure id='76'><img alt=\"\" data-coord=\"top-left:(544,448); bottom-right:(2337,1307)\" /></figure>\n<p id='77' data-category='paragraph' style='font-size:14px'>Statistical<br>Model</p>\n<header id='78' style='font-size:16px'>Statistical\u0001\u0001Model</header>\n<br><h1 id='79' style='font-size:20px'>Why\u0001‘Regression’\u0001Analysis</h1>\n<p id='80' data-category='paragraph' style='font-size:14px'>https://blog.minitab.com/en/statistics-and-quality-data-analysis/so-why-is-it-called-regression-anyway</p>\n<br><figure id='81'><img alt=\"\" data-coord=\"top-left:(74,481); bottom-right:(689,1313)\" /></figure>\n<br><figure id='82' data-category='chart'><img data-coord=\"top-left:(706,481); bottom-right:(1772,1307)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>0 Groups</td><td>1 Group</td><td>2 Groups</td><td>3 Groups</td><td>4 Groups</td><td>5 Groups</td><td>6 Groups</td><td>7 Groups</td><td>8 Groups</td><td>9 Groups</td></tr></thead><tbody><tr><td>item_01</td><td>64Percentage (in)</td><td>65Percentage (in)</td><td>66Percentage (in)</td><td>67Percentage (in)</td><td>68Percentage (in)</td><td>69Percentage (in)</td><td>70Percentage (in)</td><td>71Percentage (in)</td><td>72Percentage (in)</td><td>73Percentage (in)</td></tr></tbody></table></figure>\n<h1 id='83' style='font-size:20px'>단순\u0001선형\u0001회귀</h1>\n<br><header id='84' style='font-size:16px'>Statistical\u0001\u0001Model</header>\n<figure id='85'><img alt=\"\" data-coord=\"top-left:(384,422); bottom-right:(2821,1193)\" /><figcaption id='86' style='font-size:14px'>𝛽 0 𝛽 1</figcaption></figure>\n\n<p id='87' data-category='equation'>$$\\operatorname*{min}_{\\beta_{0},\\beta_{1}}\\sum_{i=1}^{\\infty}(y_{i}-(\\beta_{0}+\\beta_{1}x_{i}))^{2}$$</p>\n<header id='88' style='font-size:14px'>Statistical\u0001\u0001Model</header>\n<br><h1 id='89' style='font-size:20px'>다중\u0001선형\u0001회귀</h1>\n<figure id='90'><img alt=\"\" data-coord=\"top-left:(235,541); bottom-right:(1568,1119)\" /></figure>\n<br><figure id='91' data-category='chart'><img data-coord=\"top-left:(1630,595); bottom-right:(2246,1125)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>Gas Prod. (M)</td><td>Biomass</td><td>Prod. (M)</td><td>Brittleness</td><td>O</td><td>Gas Prod. (Mcf/day)</td></tr></thead><tbody><tr><td>item_01</td><td>8000Mcf/day</td><td>6000Mcf/day</td><td>4000Mcf/day</td><td>2000Mcf/day</td><td>0Mcf/day</td><td>0Mcf/day</td></tr></tbody></table></figure>\n<br><figure id='92' data-category='chart'><img data-coord=\"top-left:(2224,645); bottom-right:(2882,1093)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>orange_line</td><td>blue_line</td></tr></thead><tbody><tr><td>item_01</td><td>10Mcf/day</td><td>10Mcf/day</td></tr></tbody></table></figure>\n<p id='93' data-category='list' style='font-size:16px'>𝑅2</p>\n<header id='94' style='font-size:14px'>Statistical\u0001\u0001Model</header>\n<br><h1 id='95' style='font-size:18px'>가설\u0001검정의\u0001중요성</h1>\n<figure id='96' data-category='chart'><img data-coord=\"top-left:(1550,492); bottom-right:(2843,1463)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>0</td><td>2</td><td>4</td><td>6</td><td>8</td><td>10</td></tr></thead><tbody><tr><td>High Noise</td><td>0</td><td>50</td><td>20</td><td>0</td><td>100</td><td>200</td></tr><tr><td>Low Noise Fit</td><td>0</td><td>0</td><td>50</td><td>0</td><td>0</td><td>-100</td></tr><tr><td>High Noise Fit</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr></tbody></table></figure>\n<header id='97' style='font-size:14px'>Statistical\u0001\u0001Model</header>\n<br><h1 id='98' style='font-size:18px'>가설\u0001검정의\u0001중요성</h1>\n<figure id='99' data-category='chart'><img data-coord=\"top-left:(1555,492); bottom-right:(2844,1457)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>0</td><td>2</td><td>4</td><td>6</td><td>8</td><td>10</td></tr></thead><tbody><tr><td>High Noise</td><td>0</td><td>50</td><td>20</td><td>0</td><td>100</td><td>0</td></tr><tr><td>Low Noise Fit</td><td>0</td><td>50</td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>High Noise Fit</td><td>0</td><td>50</td><td>10</td><td>0</td><td>0</td><td>0</td></tr></tbody></table></figure>\n<header id='100' style='font-size:14px'>Statistical\u0001\u0001Model</header>\n<br><h1 id='101' style='font-size:18px'>가설\u0001검정의\u0001중요성</h1>\n<figure id='102' data-category='chart'><img data-coord=\"top-left:(1557,492); bottom-right:(2842,1457)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>0</td><td>2</td><td>4</td><td>6</td><td>8</td><td>10</td></tr></thead><tbody><tr><td>High Noise</td><td>0</td><td>50</td><td>10</td><td>0</td><td>50</td><td>100</td></tr><tr><td>Low Noise Fit</td><td>0</td><td>50</td><td>0</td><td>0</td><td>0</td><td>-100</td></tr><tr><td>High Noise Fit</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td></tr></tbody></table></figure>\n<h1 id='103' style='font-size:20px'>다중공선성</h1>\n<br><header id='104' style='font-size:16px'>Statistical\u0001\u0001Model</header>\n<figure id='105' data-category='chart'><img data-coord=\"top-left:(289,349); bottom-right:(1428,1250)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>High</td><td>High2</td><td>High3</td><td>Uncorr</td><td>Uncorr2</td></tr></thead><tbody><tr><td>item_01</td><td>0.72</td><td>0.67</td><td>-0.039</td><td>0.021</td><td>1.0</td></tr></tbody></table></figure>\n<p id='106' data-category='list'></p>\n<br><figure id='107' data-category='chart'><img alt=\"\" data-coord=\"top-left:(1610,333); bottom-right:(2758,1475)\" /></figure>\n<p id='108' data-category='list'></p>\n<br><p id='109' data-category='paragraph' style='font-size:14px'>https://medium.com/@hammad.ai/3-ways-to-detect-multicollinearity-in-your-dataset-6ee1776b7aa8</p>\n<h1 id='110' style='font-size:16px'>Statistical\u0001\u0001Model</h1>\n<br><h1 id='111' style='font-size:20px'>분산\u0001분석\u0001ANOVA</h1>\n<figure id='112'><img alt=\"\" data-coord=\"top-left:(80,483); bottom-right:(1418,1392)\" /></figure>\n<br><p id='113' data-category='paragraph' style='font-size:18px'>-</p>\n<br><p id='114' data-category='list' style='font-size:14px'>𝐻 0<br>𝐻 1</p>\n<br><p id='115' data-category='paragraph' style='font-size:18px'>-</p>\n<p id='116' data-category='list'></p>\n<header id='117' style='font-size:14px'>Statistical\u0001\u0001Model</header>\n<br><h1 id='118' style='font-size:20px'>회귀분석에서의\u0001ANOVA</h1>\n<h1 id='119' style='font-size:16px'>회귀분석에서\u0001전체\u0001F-test</h1>\n<br><p id='120' data-category='list' style='font-size:16px'>\u0001\u0001\u0001\u0001\u0001-\u0001회귀\u0001직선(설명\u0001변수)이\u0001종속변수의\u0001총\u0001변동\u0001중에서<br>\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001유의미한\u0001부분을\u0001얼마나\u0001설명했는가?<br>\u0001\u0001\u0001\u0001\u0001-\u0001H0:\u0001모든\u0001β\u0001=\u00010\u0001→\u0001X는\u0001아무\u0001설명력\u0001없음<br>\u0001\u0001\u0001\u0001\u0001-\u0001H1:\u0001최소\u0001하나의\u0001β\u0001≠\u00010\u0001→\u0001X가\u0001설명력\u0001있음</p>\n<h1 id='121' style='font-size:14px'>Statistical\u0001\u0001Model</h1>\n<br><h1 id='122' style='font-size:20px'>회귀분석에서의\u0001ANOVA</h1>\n<figure id='123'><img alt=\"\" data-coord=\"top-left:(336,391); bottom-right:(1490,1564)\" /></figure>\n<br><p id='124' data-category='list' style='font-size:14px'>회귀분석에서\u0001개별\u0001F-test<br>\u0001\u0001\u0001\u0001\u0001-\u0001해당\u0001변수\u0001하나가\u0001다른\u0001변수를\u0001다\u0001쓰고도\u0001추가로\u0001설명력<br>\u0001\u0001\u0001\u0001\u0001\u0001\u0001이\u0001있는가를\u0001묻는\u0001것<br>\u0001\u0001\u0001\u0001\u0001-\u0001F=t 2 \u0001이기\u0001때문에\u0001사실상\u0001t-test와\u0001동일</p>\n<h1 id='125' style='font-size:16px'>다중공선성\u0001의심!!</h1>\n<br><p id='126' data-category='list' style='font-size:16px'>\u0001\u0001\u0001\u0001\u0001-\u0001VIF\u00015\u0001이상:\u0001다중공선성\u0001의심<br>\u0001\u0001\u0001\u0001\u0001-\u0001VIF\u000110\u0001이상:\u0001변수\u0001제거\u0001고려</p>\n<header id='127' style='font-size:14px'>Statistical\u0001\u0001Model</header>\n<br><h1 id='128' style='font-size:20px'>다중공선성\u0001제거</h1>\n<figure id='129' data-category='chart'><img alt=\"\" data-coord=\"top-left:(227,398); bottom-right:(1395,1409)\" /></figure>\n<br><p id='130' data-category='list' style='font-size:16px'>앞의\u0001VIF,\u0001p-value,\u0001상관계수를\u0001모두\u0001고려<br>\u0001\u0001\u0001\u0001\u0001-\u0001VIF가\u000110이상이고,\u0001다른\u0001변수들과\u0001상관계수가\u0001높으며,<br>\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001p-value가\u00010.05보다\u0001큰\u0001s2,\u0001s3\u0001제거</p>\n<header id='131' style='font-size:14px'>Statistical\u0001\u0001Model</header>\n<br><h1 id='132' style='font-size:18px'>다중공선성\u0001제거\u0001후\u0001모델\u0001진단</h1>\n<figure id='133'><img alt=\"\" data-coord=\"top-left:(1618,416); bottom-right:(2738,1364)\" /></figure>\n<p id='134' data-category='paragraph' style='font-size:14px'>Machine<br>Learning</p>\n<header id='135' style='font-size:16px'>Introduction</header>\n<br><h1 id='136' style='font-size:20px'>ML이란?</h1>\n<br><h1 id='137' style='font-size:16px'>데이터에\u0001숨겨져\u0001있는\u0001패턴을\u0001찾아\u0001다양한\u0001수리적\u0001형태(함수,\u0001규칙,\u0001그래프,\u0001모델\u0001등)로\u0001표현하는\u0001것</h1>\n<figure id='138'><img style='font-size:14px' alt=\"<\u0001선형\u0001함수\u0001>\u0001로\u0001표현 <\u0001규칙\u0001>\u0001으로\u0001표현\nC y≥a\nB\nA x≥b\nA\nB C\" data-coord=\"top-left:(153,625); bottom-right:(2716,1124)\" /></figure>\n<p id='139' data-category='paragraph' style='font-size:16px'>기존\u0001과학/공학 \u0001:\u0001y\u0001=\u0001f(x)가\u0001주어짐\u0001\u0001\u0001\u0001\u0001vs\u0001\u0001\u0001\u0001\u0001 머신러닝 \u0001:\u0001x\u0001또는\u0001(x,y)로\u0001y\u0001=\u0001f(x)의\u0001f를\u0001찾아라!\u0001</p>\n<header id='140' style='font-size:14px'>Introduction</header>\n<br><h1 id='141' style='font-size:18px'>ML이란?</h1>\n<br><figure id='142'><img alt=\"\" data-coord=\"top-left:(460,267); bottom-right:(2508,1155)\" /></figure>\n<h1 id='143' style='font-size:18px'>ML이란?</h1>\n<h1 id='144' style='font-size:14px'>지도\u0001학습(Supervised\u0001Learning)</h1>\n<h1 id='145' style='font-size:14px'>비지도\u0001학습(Unsupervised\u0001Learning)</h1>\n<br><h1 id='146' style='font-size:14px'>Introduction</h1>\n<figure id='147'><img alt=\"\" data-coord=\"top-left:(1812,390); bottom-right:(2262,835)\" /></figure>\n<br><figure id='148'><img alt=\"\" data-coord=\"top-left:(2380,375); bottom-right:(2866,834)\" /></figure>\n<figure id='149'><img alt=\"\" data-coord=\"top-left:(2136,1100); bottom-right:(2616,1517)\" /></figure>\n<h1 id='150' style='font-size:18px'>ML\u0001알고리즘\u0001종류</h1>\n<br><header id='151' style='font-size:14px'>Introduction</header>\n<figure id='152'><img alt=\"\" data-coord=\"top-left:(440,372); bottom-right:(2541,1516)\" /></figure>\n<header id='153' style='font-size:16px'>Introduction</header>\n<br><h1 id='154' style='font-size:20px'>ML시\u0001주의사항</h1>\n<br><h1 id='155' style='font-size:16px'>Loss\u0001function</h1>\n<table id='156' style='font-size:14px'><thead><tr><td>주의\u0001사항</td><td>상황</td><td>예시</td><td>원인</td><td>결과</td><td>해결</td></tr></thead><tbody><tr><td>과적합</td><td>모든\u0001데이터\u0001확보가\u0001어려우므로 일부\u0001데이터로\u0001모델을\u0001학습시키 면\u0001오류를\u0001과도하게\u0001줄임</td><td>데이터가\u0001너무\u0001적을 때,\u0001모델이\u0001너무\u0001복 잡할\u0001때\u0001등</td><td>Y\u0001예측에\u0001도움이 안\u0001되는\u0001X가\u0001다수 존재</td><td>학습\u0001데이터에\u0001대한\u0001오 차는\u0001최소화\u0001but\u0001신규 데이터\u0001예측력\u0001↓</td><td>변수\u0001선택(Feature\u0001Selection) -\u0001Y와\u0001상관\u0001관계\u0001높은\u0001X\u0001선택</td></tr><tr><td>다중공선성</td><td>비슷한\u0001의미를\u0001가진\u0001X가\u0001많아\u0001X 간\u0001상관관계가\u0001높음</td><td>키,\u0001신발\u0001사이즈\u0001등 상관관계\u0001높은\u0001X 사용할\u0001때</td><td>X\u0001간\u0001상관성\u0001↑</td><td>학습\u0001파라미터\u0001불안정</td><td>변수\u0001선택(Feature Selection)\u0001-\u0001X들\u0001간\u0001상관\u0001관 계\u0001적은\u0001X\u0001선택</td></tr><tr><td>클래스\u0001불균형</td><td>특정\u0001클래스의\u0001데이터\u0001수가\u0001다른 클래스에\u0001비해\u0001현저히\u0001많거나\u0001적 어\u0001소수의\u0001클래스를\u0001제대로\u0001학습 하지\u0001못함</td><td>정상\u0001데이터\u000199개, 불량\u0001데이터\u00011개인 경우</td><td>소수\u0001클래스\u0001데이 터\u0001양이\u0001다수\u0001클 래스\u0001데이터\u0001양보 다\u0001극히\u0001적을\u0001때</td><td>Accuracy\u0001 Pardox(소 수\u0001클래스에\u0001대한\u0001예측 력\u0001↓)</td><td>다수\u0001클래스\u0001데이터\u0001삭제\u0001+\u0001소 수\u0001클래스\u0001데이터\u0001증강\u0001/\u0001이상 치\u0001탐지</td></tr></tbody></table>\n<header id='157' style='font-size:14px'>Introduction</header>\n<br><h1 id='158' style='font-size:18px'>Overfitting\u0001and\u0001Underfitting</h1>\n<figure id='159'><img alt=\"\" data-coord=\"top-left:(626,423); bottom-right:(2373,1446)\" /></figure>\n<header id='160' style='font-size:14px'>Introduction</header>\n<br><h1 id='161' style='font-size:18px'>클래스\u0001불균형</h1>\n<br><h1 id='162' style='font-size:14px'>Loss\u0001function</h1>\n<figure id='163'><img alt=\"\" data-coord=\"top-left:(173,667); bottom-right:(2843,1591)\" /></figure>\n<header id='164' style='font-size:16px'>Introduction</header>\n<br><h1 id='165' style='font-size:20px'>ML\u0001프로세스</h1>\n<br><table id='166' style='font-size:14px'><thead><tr><td>1\u0001데이터\u0001수집</td><td>2\u0001데이터\u0001전처리</td><td>3\u0001모델\u0001선정\u0001및 하이퍼\u0001파라미터\u0001설정</td><td>4\u0001모델\u0001학습</td><td>5\u0001모델\u0001검증 및\u0001테스트</td></tr></thead><tbody><tr><td>좋은\u0001데이터란? 충분한\u0001양\u0001 좋은\u0001품질\u0001 대표성\u0001 Y와\u0001관련\u0001있는\u0001X</td><td>데이터\u0001분할 k\u0001fold\u0001cross validation window\u0001 데이터\u0001전처리 변수\u0001스케일링 이상치\u0001제거 결측치\u0001보완 변수\u0001선택 과적합/다중공선성\u0001 \u0001\u0001\u0001\u0001\u0001\u0001방지 데이터\u0001증강 클래스\u0001불균형\u0001방지</td><td>모델\u0001선정 회귀;\u0001선형회귀,\u0001Random Forest,\u0001XGBoost\u0001등 분류;\u0001로지스틱회귀,\u0001SVM, 딥러닝\u0001등 군집;\u0001K-means, DBSCAN\u0001등 고려\u0001사항 데이터\u0001크기 Feature\u0001수 데이터\u0001구조 하이퍼파라미터 학습률(Learning\u0001rate) 배치\u0001크기 정규화\u0001파라미터</td><td>모델\u0001학습</td><td>모델\u0001성능\u0001지표 회귀;\u0001MSE,\u0001R^2 분류;\u0001정확도,\u0001재현율,\u0001F1 군집;\u0001실루엣\u0001스코어 피드백 FE\u0001재검토 하이퍼파라미터\u0001튜닝 모델\u0001변경</td></tr></tbody></table>\n<h1 id='167' style='font-size:14px'>Regression</h1>\n<header id='168' style='font-size:14px'>Regression</header>\n<br><h1 id='169' style='font-size:20px'>선형회귀(정규화)</h1>\n<h1 id='170' style='font-size:14px'>중복되거나\u0001영향력이\u0001없는\u0001X의\u0001회귀계수를\u00010에\u0001가깝게\u0001만들어\u0001과적합과\u0001다중공선성을\u0001방지</h1>\n<h1 id='171' style='font-size:14px'>Ridge</h1>\n<p id='172' data-category='list'></p>\n<br><p id='173' data-category='paragraph' style='font-size:14px'>LASSO</p>\n<br><h1 id='174' style='font-size:16px'>다중공선성 방지</h1>\n<br><p id='175' data-category='paragraph' style='font-size:18px'>→ Ridge<br>간단한 모델,<br>중요 변수 선택<br>→ LASSO</p>\n<h1 id='176' style='font-size:14px'>Regression</h1>\n<br><h1 id='177' style='font-size:18px'>선형회귀(정규화)</h1>\n<figure id='178'><img alt=\"\" data-coord=\"top-left:(211,531); bottom-right:(1406,1241)\" /></figure>\n<br><figure id='179' data-category='chart'><img alt=\"\" data-coord=\"top-left:(1597,254); bottom-right:(2713,1046)\" /></figure>\n<br><figure id='180' data-category='chart'><img data-coord=\"top-left:(1623,980); bottom-right:(2685,1667)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>-2</td><td>-1</td><td>0</td><td>1</td><td>2</td><td>3</td></tr></thead><tbody><tr><td>item_01</td><td>3</td><td>3</td><td>2</td><td>1</td><td>-1</td><td>0</td></tr></tbody></table></figure>\n<header id='181' style='font-size:14px'>Regression</header>\n<br><h1 id='182' style='font-size:18px'>로지스틱\u0001회귀</h1>\n<br><h1 id='183' style='font-size:14px'>로지스틱회귀란?</h1>\n<br><h1 id='184' style='font-size:14px'>Y가\u0001범주형(클래스)인\u0001경우에\u0001사용되는\u0001회귀\u0001모델\u0001→\u0001특정\u0001사건\u0001발생\u0001확률\u0001예측\u0001</h1>\n<br><h1 id='185' style='font-size:14px'>∴\u0001분류\u0001문제에서\u0001회귀\u0001문제로\u0001전환</h1>\n<br><h1 id='186' style='font-size:14px'>선형회귀와의\u0001차이</h1>\n<br><h1 id='187' style='font-size:14px'>선형회귀는\u0001보편적인\u0001분류\u0001문제에\u0001적합하지\u0001않음\u0001→\u0001비선형인\u0001logistic\u0001함수를\u0001이용해\u0001분류\u0001문제에\u0001활용</h1>\n<figure id='188' data-category='chart'><img data-coord=\"top-left:(133,867); bottom-right:(1625,1507)\" /><figcaption><p>Chart Title: Linear Regression</p><p>Y-Axis: Y-Axis</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>Y=0</td><td>X-Axis</td><td>Y=0i</td><td>Y=1</td><td>Y=(+1)</td></tr></thead><tbody><tr><td>item_01</td><td>0Not explicitly visible</td><td>1Not explicitly visible</td><td>0Not explicitly visible</td><td>1Not explicitly visible</td><td>1Not explicitly visible</td></tr></tbody></table></figure>\n<br><h1 id='189' style='font-size:14px'>모델링</h1>\n<br><h1 id='190' style='font-size:14px'>k개의\u0001입력\u0001변수(X)\u0001→\u0001Y=1일\u0001확률\u0001p(X)를\u0001모델링</h1>\n<p id='191' data-category='paragraph' style='font-size:14px'>좌우\u0001범위를\u0001맞춰주기\u0001위해\u0001로그를\u0001취해주고\u0001의미를\u0001보존<br>하며\u0001변환하면\u0001최종적으로\u0001다음과\u0001같은\u0001식으로\u0001표현</p>\n<p id='192' data-category='equation'>$$Y=p(X)={\\frac{e^{\\beta_{0}+\\beta_{1}X_{1}+\\cdots+\\beta_{k}X_{k}}}{1+e^{\\beta_{0}+\\beta_{1}X_{1}+\\cdots+\\beta_{k}X_{k}}}}$$</p>\n<header id='193' style='font-size:14px'>Regression</header>\n<br><h1 id='194' style='font-size:18px'>다중\u0001클래스\u0001로지스틱\u0001회귀</h1>\n<br><h1 id='195' style='font-size:14px'>이진분류와\u0001다중클래스\u0001분류</h1>\n<br><h1 id='196' style='font-size:14px'>이진분류:\u0001데이터를\u00012가지로\u0001분류하는\u0001문제(0\u0001or\u00011,\u0001A\u0001or\u0001B)<br>다중클래스\u0001분류:\u0001데이터를\u00013가지\u0001이상으로\u0001분류하는\u0001문제</h1>\n<h1 id='197' style='font-size:14px'>시그모이드\u0001함수를\u0001소프트맥스\u0001함수로\u0001바꾸면\u0001이진분류에서\u0001다중클래스\u0001분류로!</h1>\n<p id='198' data-category='equation'>$$Y=p(X)={\\frac{e^{p_{0}+\\beta_{1}X_{1}+\\cdots+\\beta_{k}X_{k}}}{1+e^{\\beta_{0}+\\beta_{1}X_{1}+\\cdots+\\beta_{k}X_{k}}}}\\qquad\\longrightarrow\\quad{\\mathrm{soffmmax}}(x)_{i}={\\frac{e^{x_{i}}}{\\sum_{j=1}^{n_{i}}e^{x_{j}}}}\\quad(i=1,2,\\dots,n)$$</p>\n<h1 id='199' style='font-size:14px'>x\u0001=\u0001(2,\u00011,\u00011)\u0001이라면?</h1>\n<br><p id='200' data-category='equation'>$$\\begin{array}{l l l}{{y=(y_{1}\\quad y_{2}\\quad y_{3})}}\\\\ {{={\\displaystyle\\frac{1}{e^{2}+e^{1}+e^{1}}}(e^{2}\\quad e^{1})}}&{{e^{1})}}\\\\ {{=\\displaystyle\\frac{1}{12.8256}(7.3891\\quad2.7183\\quad2.7183\\quad2.7183)}}\\\\ {{=(0.5761\\quad0.2119)}}&{{0.2119)}}\\end{array}$$</p>\n<h1 id='201' style='font-size:14px'>Decision\u0001Tree</h1>\n<header id='202' style='font-size:14px'>Decistion\u0001Tree</header>\n<br><h1 id='203' style='font-size:18px'>의사결정나무<br>의사결정나무란?</h1>\n<h1 id='204' style='font-size:14px'>모델의\u0001의사결정\u0001규칙(Decision\u0001Rule)을\u0001나무\u0001형태로\u0001표현하는\u0001모델</h1>\n<br><p id='205' data-category='list' style='font-size:14px'>나무의\u0001경로는\u0001하나의\u0001의사결정\u0001규칙<br>구성\u0001요소</p>\n<br><h1 id='206' style='font-size:14px'>뿌리\u0001노드(Root\u0001Node)\u0001:\u0001나무\u0001구조\u0001시작<br>끝\u0001노드(Leaf\u0001Node)\u0001:\u0001자식\u0001노드가\u0001없는\u0001최종\u0001노드<br>중간\u0001노드(Intermediate\u0001Node)\u0001:\u0001뿌리와\u0001끝\u0001노드\u0001제외한\u0001노드<br>가지(Branch)\u0001:\u0001노드-노드\u0001연결선</h1>\n<br><figure id='207'><img alt=\"\" data-coord=\"top-left:(1811,412); bottom-right:(2920,1162)\" /></figure>\n<br><p id='208' data-category='list' style='font-size:14px'>생성\u0001:\u0001분할된\u0001영역에\u0001동일\u0001클래스\u0001데이터가\u0001최대한\u0001많이\u0001존재하도록\u0001생성됨<br>예측\u0001:\u0001X가\u0001들어오면,\u0001규칙에\u0001따라\u0001Y(주로\u0001범주형)\u0001예측</p>\n<header id='209' style='font-size:14px'>Decistion\u0001Tree</header>\n<br><h1 id='210' style='font-size:18px'>의사결정나무\u0001예시</h1>\n<br><figure id='211'><img style='font-size:14px' alt=\"수직선을\u0001이용하여\u0001분류\u0001경계선을\u0001근사\" data-coord=\"top-left:(351,280); bottom-right:(2826,1627)\" /></figure>\n<header id='212' style='font-size:14px'>Decistion\u0001Tree</header>\n<br><h1 id='213' style='font-size:18px'>의사결정나무\u0001원리</h1>\n<br><h1 id='214' style='font-size:14px'>지니불순도(Gini\u0001Impurity)</h1>\n<figure id='215'><img alt=\"\" data-coord=\"top-left:(1459,682); bottom-right:(2788,1506)\" /></figure>\n<header id='216' style='font-size:14px'>Decistion\u0001Tree</header>\n<br><h1 id='217' style='font-size:18px'>의사결정나무\u0001원리</h1>\n<br><h1 id='218' style='font-size:14px'>지니불순도(Gini\u0001Impurity)</h1>\n<h1 id='219' style='font-size:14px'>향상도(Goodness\u0001of\u0001spilt)</h1>\n<br><p id='220' data-category='list' style='font-size:14px'>\u0001\u0001\u0001\u0001\u0001=\u0001노드\u0001t의\u0001불순도\u0001-\u0001t1,\u0001t2\u0001노드\u0001불순도의\u0001가중\u0001평균<br>\u0001\u0001\u0001\u0001\u0001=\u00010.492\u0001-\u00010.31\u0001=\u00010.182</p>\n<header id='221' style='font-size:14px'>Decistion\u0001Tree</header>\n<br><h1 id='222' style='font-size:18px'>트리의\u0001크기와\u0001예측력</h1>\n<br><p id='223' data-category='list' style='font-size:14px'>사용자의\u0001선택에\u0001따라\u0001다양한트리가\u0001나올\u0001수\u0001있음<br>최대\u0001트리는\u0001Overfitting,\u0001최소\u0001트리는\u0001Underfitting</p>\n<h1 id='224' style='font-size:14px'>Best\u0001Tree를\u0001찾기\u0001위해\u0001하이퍼파라미터\u0001튜닝\u0001필요!</h1>\n<br><figure id='225' data-category='chart'><img data-coord=\"top-left:(116,656); bottom-right:(1578,1488)\" /><figcaption><p>Chart Title: 오분류율</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>크리스마스</td><td>펭가데이터</td><td>학습데이터</td><td>최대트리</td><td>Best 트리</td></tr></thead><tbody><tr><td>item_01</td><td>10</td><td>8</td><td>7</td><td>16</td><td>20</td></tr></tbody></table></figure>\n<br><p id='226' data-category='list' style='font-size:14px'>\u0001\u0001\u0001\u0001\u0001-\u0001max_depth:\u0001최대로\u0001내려갈\u0001수\u0001있는\u0001depth<br>\u0001\u0001\u0001\u0001\u0001-\u0001min_samples_split:\u0001노드를\u0001분할하기\u0001위해\u0001필요한\u0001데이터\u0001수<br>\u0001\u0001\u0001\u0001\u0001-\u0001min_impurity_decrease:\u0001노드를\u0001분할하기\u0001위한\u0001최소\u0001향상도<br>\u0001\u0001\u0001\u0001\u0001-\u0001ccp_alpha:\u0001비용복잡도\u0001페널티\u0001계수\u0001<br>\u0001\u0001\u0001\u0001\u0001-\u0001등등등</p>\n<p id='227' data-category='list' style='font-size:14px'>Cross-validation으로\u0001최적의\u0001파라미터\u0001탐색<br>정확도,\u0001민감도,\u0001특이도,\u0001정밀도,\u0001AUROC\u0001등\u0001사용\u0001가능</p>\n<h1 id='228' style='font-size:14px'>Support\u0001Vector<br>Machine</h1>\n<header id='229' style='font-size:16px'>SVM</header>\n<br><h1 id='230' style='font-size:20px'>SVM\u0001개요</h1>\n<br><h1 id='231' style='font-size:16px'>SVM이란?</h1>\n<br><h1 id='232' style='font-size:16px'>:\u0001출력변수(Class)가\u0001다른\u0001데이터를\u0001명확하게\u0001구분할\u0001수\u0001있는\u0001초평면(Hyperplane)\u0001구하는\u0001알고리즘</h1>\n<figure id='233' data-category='chart'><img data-coord=\"top-left:(774,638); bottom-right:(2176,1174)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>학습 데이터</td><td>텍스트 데이터</td></tr></thead><tbody><tr><td>item_01</td><td>1</td><td>2</td></tr></tbody></table></figure>\n<br><p id='234' data-category='paragraph' style='font-size:16px'>분류기\u0001①,\u0001②,\u0001③은\u0001모두\u0001학습\u0001데이터에\u0001한해\u0001Class를\u0001잘\u0001분류하여,\u0001오류가\u00010\u0001→\u0001Good\u0001?<br>But\u0001테스트\u0001데이터에서\u0001분류기\u0001①,\u0001③은\u0001과적합</p>\n<br><p id='235' data-category='paragraph' style='font-size:14px'>⇒\u0001분류기\u0001-\u0001클래스\u0001데이터\u0001간의\u0001여백( margin )을\u0001최대화</p>\n<header id='236' style='font-size:14px'>SVM</header>\n<br><h1 id='237' style='font-size:18px'>SVM\u0001개요</h1>\n<br><h1 id='238' style='font-size:14px'>SVM의\u0001support\u0001vector와\u0001margin</h1>\n<br><h1 id='239' style='font-size:14px'>Support\u0001vector\u0001:\u0001각각의\u0001클래스\u0001데이터셋에서\u0001초평면(분류기)과\u0001가장\u0001가까이에\u0001위치한\u0001데이터<br>Margin\u0001:\u0001두\u0001개의\u0001Support\u0001vector와\u0001초평면과의\u0001최소\u0001거리\u0001합</h1>\n<figure id='240' data-category='chart'><img data-coord=\"top-left:(863,661); bottom-right:(2160,1504)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>without_0</td><td>with_</td><td>with_5</td><td>with_10</td><td>with_15</td><td>th_20</td></tr></thead><tbody><tr><td>item_01</td><td>0Not specified</td><td>1Not specified</td><td>0Not specified</td><td>1Not specified</td><td>2Not specified</td><td>0Not specified</td></tr></tbody></table></figure>\n<header id='241' style='font-size:14px'>SVM</header>\n<br><h1 id='242' style='font-size:18px'>선형\u0001SVM(Nonseparble\u0001Case)</h1>\n<br><h1 id='243' style='font-size:14px'>마진의\u0001크기와\u0001오분류는\u0001trade-off\u0001관계이다.</h1>\n<figure id='244'><img style='font-size:14px' alt=\"직선이\u0001class를\u0001정확히\u0001분류했지만\u0001\n\u0001\u0001\u0001\u0001\u0001\u0001margin이\u0001너무\u0001작음\nmargin은\u0001최대화했지만\u0001\n\u0001\u0001\u0001\u0001\u0001\u00011개의\u0001데이터가\u0001오분류되었음\" data-coord=\"top-left:(222,529); bottom-right:(2763,1468)\" /></figure>\n<header id='245' style='font-size:14px'>SVM</header>\n<br><h1 id='246' style='font-size:20px'>슬랙\u0001변수\u0001𝜉</h1>\n<br><h1 id='247' style='font-size:16px'>여백은\u0001될\u0001수\u0001있는\u0001한\u0001크게하면서\u0001𝜉>0인,\u0001즉,\u0001마진경계\u0001반대쪽으로\u0001가는\u0001샘플의\u0001수를\u0001적게</h1>\n<figure id='248' data-category='chart'><img data-coord=\"top-left:(155,507); bottom-right:(1416,1391)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>sj</td><td>W</td><td>T</td><td>S_</td><td>S_2</td></tr></thead><tbody><tr><td>item_01</td><td>1</td><td>2</td><td>0</td><td>1</td><td>1</td></tr></tbody></table></figure>\n<br><p id='249' data-category='paragraph' style='font-size:14px'>목적함수</p>\n<p id='250' data-category='equation'>$$J(\\mathbf{w},\\mathbf{\\hat{g}})={\\frac{1}{2}}\\|\\mathbf{w}\\|_{2}^{2}+C\\sum_{i=1\\atop{\\mathbf{\\hat{g}},\\mathbf{\\hat{z}}},1}^{n}\\mathbf{\\hat{g}}_{i}$$</p>\n<h1 id='251' style='font-size:18px'>규제\u0001파라미터\u0001C</h1>\n<br><h1 id='252' style='font-size:14px'>Hard\u0001margin과\u0001soft\u0001margin</h1>\n<br><header id='253' style='font-size:14px'>SVM</header>\n<br><p id='254' data-category='equation'>$$J(\\mathbf{w},\\mathbf{\\hat{g}})={\\frac{1}{2}}\\|\\mathbf{w}\\|_{2}^{2}+C\\sum_{i=1\\atop{\\mathbb{N}\\times\\mathbf{\\hat{z}}}\\geq1}^{n}\\mathbf{\\hat{g}}_{i}$$</p>\n<figure id='255' data-category='chart'><img data-coord=\"top-left:(315,696); bottom-right:(1366,1397)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>-1</td><td>-0.8</td><td>-0.6</td><td>-0.4</td><td>-0.2</td><td>0</td><td>0.2</td><td>0.4</td><td>0.6</td><td>0.8</td></tr></thead><tbody><tr><td>item_01</td><td>0</td><td>-0.2</td><td>0</td><td>0</td><td>0.8</td><td>0</td><td>0</td><td>0</td><td>-0.2</td><td>-0.4</td></tr></tbody></table></figure>\n<br><figure id='256' data-category='chart'><img data-coord=\"top-left:(1579,702); bottom-right:(2589,1393)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>-1</td><td>-0.8</td><td>-0.6</td><td>-0.4</td><td>-0.2</td><td>0</td><td>0.2</td><td>0.4</td><td>0.6</td><td>0.8</td></tr></thead><tbody><tr><td>item_01</td><td>0Degrees (°)</td><td>-0.4Degrees (°)</td><td>0.2Degrees (°)</td><td>0Degrees (°)</td><td>0Degrees (°)</td><td>-0.2Degrees (°)</td><td>-0.4Degrees (°)</td><td>0.2Degrees (°)</td><td>0Degrees (°)</td><td>0.2Degrees (°)</td></tr></tbody></table></figure>\n<header id='257' style='font-size:14px'>SVM</header>\n<br><h1 id='258' style='font-size:18px'>비선형\u0001SVM<br>비선형\u0001SVM의\u0001개념</h1>\n<br><h1 id='259' style='font-size:14px'>선형\u0001SVM만으로는\u0001분류가\u0001어려운\u0001데이터셋이\u0001더\u0001많음<br>\u0001따라서,\u0001커널\u0001함수(kernel\u0001function)을\u0001활용하여\u0001데이터\u0001차원을\u0001증가시켜\u0001마진을\u0001최대로\u0001하는\u0001초평면\u0001찾기</h1>\n<h1 id='260' style='font-size:14px'>다항\u0001커널(Polynomial\u0001Kernel)</h1>\n<p id='261' data-category='equation'>$$K(x,x^{\\prime})=(\\gamma x_{1}^{\\prime}x_{2}+r)^{a}$$</p>\n<h1 id='262' style='font-size:14px'>RBF\u0001커널(Radial\u0001Basis\u0001Function\u0001Kernel)</h1>\n<p id='263' data-category='equation'>$$K(x,x^{\\prime})=e^{-\\gamma|x_{1}-x_{2}|^{2}}$$</p>\n<h1 id='264' style='font-size:14px'>SVM\u0001사용</h1>\n<br><figure id='265' data-category='chart'><img alt=\"\" data-coord=\"top-left:(1316,612); bottom-right:(2812,1310)\" /></figure>\n<br><p id='266' data-category='list' style='font-size:14px'>비교적\u0001적은\u0001데이터에서도\u0001잘\u0001작동<br>커널\u0001함수\u0001잘\u0001쓰면\u0001복잡한\u0001데이터도\u0001분석\u0001가능<br>최적화\u0001모델\u0001기반이므로\u0001이론적\u0001근거가\u0001명확\u0001&\u0001결과\u0001해석\u0001용이\u0001→\u0001테이블\u0001데이터에서는\u0001DL보다\u0001ML\u0001성능이\u0001더\u0001좋다!<br>but\u0001하이퍼파라미터\u0001수가\u0001많고\u0001하이퍼파라미터에\u0001민감해\u0001SVM\u0001성능을\u0001좌우하므로\u0001유의해서\u0001사용</p>\n<h1 id='267' style='font-size:14px'>Ensemble</h1>\n<h1 id='268' style='font-size:18px'>의사결정\u0001나무의\u0001불안정성</h1>\n<br><header id='269' style='font-size:14px'>Ensemble</header>\n<h1 id='270' style='font-size:14px'>분산이\u0001크다\u0001→\u0001데이터\u0001하나만\u0001바뀌어도\u0001의사결정나무\u0001규칙이\u0001상당수\u0001바뀜</h1>\n<figure id='271' data-category='chart'><img data-coord=\"top-left:(643,471); bottom-right:(2285,1328)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Accuracy</td><td>Accuracy_a</td></tr></thead><tbody><tr><td>item_01</td><td>81%</td><td>80%</td></tr></tbody></table></figure>\n<br><p id='272' data-category='list' style='font-size:14px'>불안정한\u0001분류\u0001모델:\u0001Decision\u0001tree\u0001→\u0001불안정한\u0001분류\u0001모델을\u0001여러\u0001개\u0001학습\u0001시켜서\u0001평균화시키자(앙상블)<br>장점:\u0001예측\u0001성능이\u0001좋아짐,\u0001단점:\u0001해석이\u0001조금\u0001불명확해짐</p>\n<h1 id='273' style='font-size:14px'>Ensemble</h1>\n<br><h1 id='274' style='font-size:18px'>Bagging</h1>\n<br><h1 id='275' style='font-size:14px'>Bootstrap\u0001기법:\u0001복원추출을\u0001원본\u0001데이터의\u0001개수만큼\u0001진행</h1>\n<figure id='276'><img alt=\"\" data-coord=\"top-left:(235,494); bottom-right:(2839,1389)\" /></figure>\n<br><p id='277' data-category='list' style='font-size:14px'>B=5인\u0001경우\u00015개의\u0001의사결정나무에서\u0001(0,\u00011,\u00010,\u00010,\u00010)으로\u0001예측했다면\u0001다수결로\u0001최종\u0001예측은\u00010<br>각\u0001Bootstraop에서\u0001꼭\u0001의사결정나무만을\u0001사용할\u0001필요\u0001x,\u0001하지만\u0001의사결정나무의\u0001편항이\u0001적고,<br>분산이\u0001큰\u0001특성상\u0001Bagging시\u0001효과가\u0001좋음</p>\n<h1 id='278' style='font-size:18px'>Bagging</h1>\n<br><header id='279' style='font-size:14px'>Ensemble</header>\n<h1 id='280' style='font-size:14px'>트리의\u0001개수에\u0001따른\u0001분류\u0001경계면의\u0001변화</h1>\n<figure id='281' data-category='chart'><img data-coord=\"top-left:(732,478); bottom-right:(2108,1339)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>T</td><td>T2</td><td>T3</td></tr></thead><tbody><tr><td>item_01</td><td>1</td><td>2</td><td>3</td></tr></tbody></table></figure>\n<header id='282' style='font-size:14px'>Ensemble</header>\n<br><h1 id='283' style='font-size:20px'>Random\u0001Forest</h1>\n<p id='284' data-category='list' style='font-size:16px'>Bagging\u0001+\u0001변수의\u0001임의\u0001추출</p>\n<p id='285' data-category='list' style='font-size:14px'>앙상블의\u0001핵심\u0001요소:\u0001다양성,\u0001개별\u0001모델의\u0001정확성<br>만약\u0001예측\u0001변수\u0001X1,\u0001X2,\u0001X3,\u0001....,\u0001X25\u0001중에\u0001X3가\u0001가장\u0001중요하면\u0001변수라면\u0001첫번째\u0001의사결정\u0001갈래에서\u0001항상\u0001X3를\u0001기준으로<br>분류\u0001→\u0001다양성\u0001감소</p>\n<figure id='286'><img alt=\"\" data-coord=\"top-left:(303,824); bottom-right:(2782,1601)\" /></figure>\n<header id='287' style='font-size:14px'>Ensemble</header>\n<br><h1 id='288' style='font-size:18px'>Boosting</h1>\n<br><p id='289' data-category='list' style='font-size:14px'>더\u0001예측이\u0001어려운\u0001관찰자\u0001or\u0001영역을\u0001반복적으로\u0001학습<br>지속적인\u0001반복학습을\u0001통해\u0001해당\u0001영역에\u0001대한\u0001정확한\u0001예측\u0001수행\u0001가능</p>\n<h1 id='290' style='font-size:14px'>AdaBoost</h1>\n<p id='291' data-category='paragraph' style='font-size:14px'>가중치\u0001계산공식</p>\n<header id='292' style='font-size:14px'>Ensemble</header>\n<br><h1 id='293' style='font-size:18px'>Gradient\u0001Boosting</h1>\n<figure id='294'><img alt=\"\" data-coord=\"top-left:(141,359); bottom-right:(2862,1308)\" /></figure>\n<br><p id='295' data-category='paragraph' style='font-size:14px'>여기서\u0001weight은\u0001Gradient\u0001Descent\u0001알고리즘으로\u0001계산</p>\n<p id='296' data-category='equation'>$$\\bar{Y}=w_{1}h_{1}(x)+w_{2}h_{2}(x)+w_{3}h_{3}(x)+\\cdots+M$$</p>\n<h1 id='297' style='font-size:18px'>후속\u0001방법</h1>\n<br><header id='298' style='font-size:14px'>Ensemble</header>\n<p id='299' data-category='list' style='font-size:14px'>XGBoost(2016)<br>LightGBM(2017)<br>CatBoost(2018)\u0001......\u0001</p>\n<header id='300' style='font-size:14px'>Ensemble</header>\n<br><h1 id='301' style='font-size:18px'>회귀\u0001문제에서의\u0001앙상블</h1>\n<figure id='302' data-category='chart'><img data-coord=\"top-left:(152,487); bottom-right:(1347,1277)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>x = 2</td><td>x = 4</td><td>x = 6</td><td>x = 8</td><td>x = 10</td><td>x = 12</td><td>x = 14</td><td>x = 16</td></tr></thead><tbody><tr><td>item_01</td><td>80</td><td>20</td><td>40</td><td>60</td><td>100</td><td>120</td><td>100</td><td>80</td></tr></tbody></table></figure>\n<br><figure id='303' data-category='chart'><img data-coord=\"top-left:(1579,527); bottom-right:(2656,1222)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Yellow</td><td>Red</td><td>Green</td><td>Blue</td><td>Purple</td><td>Orange</td><td>Brown</td></tr></thead><tbody><tr><td>item_01</td><td>10</td><td>20</td><td>30</td><td>10</td><td>10</td><td>5</td><td>5</td></tr></tbody></table></figure>\n<h1 id='304' style='font-size:14px'>Clustering</h1>\n<header id='305' style='font-size:14px'>Clustering</header>\n<br><h1 id='306' style='font-size:18px'>데이터\u0001구조</h1>\n<h1 id='307' style='font-size:14px'>Y,\u0001즉,\u0001반응변수가\u0001없는\u0001케이스</h1>\n<figure id='308'><img alt=\"\" data-coord=\"top-left:(95,524); bottom-right:(2825,1442)\" /></figure>\n<h1 id='309' style='font-size:18px'>K-Means</h1>\n<br><header id='310' style='font-size:14px'>Clustering</header>\n<h1 id='311' style='font-size:14px'>EM\u0001알고리즘\u0001기반</h1>\n<p id='312' data-category='equation'>$$\\begin{array}{c}{{\\sim\\sim\\sim\\infty}}\\\\ {{\\mu:=\\sum_{n=1}^{N}T_{n k}{\\bf X}^{(n)}}}\\\\ {{\\sum_{n=1}^{N}T_{n k}}}\\end{array}$$</p>\n<header id='313' style='font-size:14px'>Clustering</header>\n<br><h1 id='314' style='font-size:18px'>K-Means</h1>\n<figure id='315' data-category='chart'><img data-coord=\"top-left:(183,430); bottom-right:(2938,1279)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>0</td><td>2</td><td>-2</td></tr></thead><tbody><tr><td>item_01</td><td>0</td><td>1</td><td>1</td></tr></tbody></table></figure>\n<header id='316' style='font-size:14px'>Clustering</header>\n<br><h1 id='317' style='font-size:18px'>K-Means</h1>\n<figure id='318' data-category='chart'><img data-coord=\"top-left:(128,493); bottom-right:(2956,1372)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>-2</td><td>0</td><td>2</td></tr></thead><tbody><tr><td>item_01</td><td>0</td><td>0</td><td>0</td></tr></tbody></table></figure>\n<h1 id='319' style='font-size:14px'>감사합니다!</h1>",
    "1meUVsH6Ony2Q0xpqG3gHwY0j-U4Bj10U": "<h1 id='0' style='font-size:22px'>3-1회차) 기초 통계 / ML 과제 명세</h1>\n<h1 id='1' style='font-size:18px'>발제자: 조태연</h1>\n<h1 id='2' style='font-size:20px'>기간</h1>\n<br><h1 id='3' style='font-size:20px'>미감: 7월 21일 23시 59분까지<br>지각 제출: 7월 22일 23시 59분까지</h1>\n<br><h1 id='4' style='font-size:20px'>intro</h1>\n<br><p id='5' data-category='paragraph' style='font-size:14px'>안녕하세요! 기초 통계 및 ML 과제 발제를 맡게 된 조태연입니다.<br>이번 과제는 신입 기수 여러분들이 앞으로 진행할 데이터 분석과 머신러닝 프로젝트의 기초가<br>되는 핵심 통계 개념과 머신러닝 실습을 직접 다뤄보는 것을 목표로 합니다.</p>\n<h1 id='6' style='font-size:16px'>과제는 크게 두 파트로 구성됩니다.</h1>\n<h1 id='7' style='font-size:14px'>1. 기초 통계 과제 (Iris 데이터셋)</h1>\n<br><p id='8' data-category='paragraph' style='font-size:14px'>Iris 데이터셋을 활용해 클래스별 변수의 평균 차이를 검정하는 과정을 직접 실습합니다.<br>기술통계량 확인 → 가설 수립 → 정규성·등분산성 검정 → ANOVA → 사후검정 →<br>결과 해석까지, 통계 분석의 전형적인 흐름을 스스로 체험할 수 있도록 구성했습니다.</p>\n<h1 id='9' style='font-size:16px'>2. 기초 머신러닝 과제 (신용카드 사기 탐지)</h1>\n<br><p id='10' data-category='paragraph' style='font-size:14px'>Kaggle의 Credit Card Fraud Detection 데이터를 이용해 클래스 불균형 문제를 다루어 봅<br>니다. SMOTE 등 오버샘플링 기법으로 데이터 불균형을 개선하고, ML 모델을 학습해 실제 사<br>기 거래 탐지 성능을 평가합니다. 또한 하이퍼파라미터 튜닝과 Threshold 조정을 통해 Recall<br>과 F1-score를 직접 높여보는 과정을 실습합니다.</p>\n<p id='11' data-category='paragraph' style='font-size:14px'>이번 과제는 실습의 난이도가 크게 높지는 않지만, 기본 흐름과 지표 해석 원리를 꼼꼼히 이해<br>하는 것이 앞으로 모든 프로젝트의 기초가 될 것입니다.<br>큰 부담 가지지 마시고, 데이터와 코드를 직접 만져보면서 즐겁게 풀어보시길 바랍니다! 😊</p>\n<p id='12' data-category='paragraph' style='font-size:14px'>그리고 아래에서 제가 제안한 함수 외에도 본인이 더 효율적으로 과제를 해결할 수 있는 함수를<br>알고 계시면 자유롭게 사용해주세요!</p>\n<br><h1 id='13' style='font-size:20px'>명세</h1>\n<br><p id='14' data-category='paragraph' style='font-size:16px'>1. Iris 데이터셋을 활용해 클래스별 변수 평균 차이를 검정</p>\n<footer id='15' style='font-size:14px'>3-1회차) 기초 통계 / ML 과제</footer>\n<br><footer id='16' style='font-size:14px'>1</footer>\n<h1 id='17' style='font-size:18px'>1. 먼저</h1>\n<br><p id='18' data-category='paragraph' style='font-size:18px'>import seaborn as sns<br>iris = sns.load_dataset('iris')<br>해당 코드를 실행하여 Iris 데이터셋을 불러오고 구조를 확인하시오.<br>(예: head(), info() 등)</p>\n<h1 id='19' style='font-size:18px'>2. 기술통계량 산출</h1>\n<br><p id='20' data-category='paragraph' style='font-size:18px'>Species별 Petal Length의 평균, 표준편차, 최소값, 최대값, 사분위수 등을 출력하<br>고 그룹별 데이터 개수를 확인하시오.</p>\n<h1 id='21' style='font-size:18px'>3. 시각화</h1>\n<br><p id='22' data-category='paragraph' style='font-size:18px'>Species별 Petal Length의 분포를 Boxplot으로 시각화하시오.<br>Boxplot 아래에 간단한 해석 코멘트를 다시오. (예: 어느 그룹이 평균이 높은지)</p>\n<h1 id='23' style='font-size:18px'>4. 정규성 검정</h1>\n<br><p id='24' data-category='paragraph' style='font-size:18px'>Species별로 Shapiro-Wilk 검정을 실시하시오.(해당 검정에 대한 가설 수립 포함)<br>각 그룹의 p-value를 출력하고, 0.05를 기준으로 해석하시오.<br>(단, 이후 분석은 정규성을 만족한다고 가정한다.)<br>(Hint: scipy.stats.shapiro() 함수로 활용 가능)</p>\n<h1 id='25' style='font-size:18px'>5. 등분산성 검정</h1>\n<br><p id='26' data-category='paragraph' style='font-size:18px'>Levene 검정을 통해 3개 그룹 간 등분산성을 검정하시오.<br>(해당 검정에 대한 가설 수립 포함)<br>p-value를 출력하고, 0.05를 기준으로 해석하시오.<br>(단, 이후 분석은 등분산성을 만족한다고 가정한다.)<br>(Hint: scipy.stats.levene() 함수로 활용 가능)</p>\n<h1 id='27' style='font-size:18px'>6. 가설 수립</h1>\n<br><p id='28' data-category='paragraph' style='font-size:18px'>아래 가설을 수립하시오.</p>\n<p id='29' data-category='paragraph' style='font-size:18px'>H₀: 3개 Species 간 ~~</p>\n<p id='30' data-category='paragraph' style='font-size:18px'>H₁: 적어도 ~~</p>\n<h1 id='31' style='font-size:18px'>7. ANOVA 실행</h1>\n<br><p id='32' data-category='paragraph' style='font-size:18px'>One-way ANOVA를 실시하시오.<br>ANOVA 표를 출력하고 F값과 p-value를 확인한 후, 유의수준 0.05 기준으로<br>귀무가설 기각 여부를 쓰시오.</p>\n<h1 id='33' style='font-size:18px'>8. 사후검정 (Tukey HSD)</h1>\n<br><p id='34' data-category='paragraph' style='font-size:18px'>ANOVA 결과 유의하다면 Tukey HSD 사후검정을 실시하시오.<br>어떤 쌍 간에 유의미한 차이가 있는지 요약하시오.</p>\n<footer id='35' style='font-size:14px'>3-1회차) 기초 통계 / ML 과제</footer>\n<br><footer id='36' style='font-size:14px'>2</footer>\n<h1 id='37' style='font-size:16px'>9. 결과 요약</h1>\n<br><p id='38' data-category='paragraph' style='font-size:16px'>Boxplot, ANOVA, 사후검정 결과를 종합하여,<br>어떤 그룹의 Petal Length가 통계적으로 유의하게 긴지/짧은지 간단히 결론지으시오.</p>\n<p id='39' data-category='paragraph' style='font-size:20px'>2. 실제 신용카드 사기 데이터셋을 활용해 클래스 불균형 상황에서 분류 모델을 학습</p>\n<p id='40' data-category='list' style='font-size:16px'>1. 데이터 로드 및 기본 탐색<br>creditcard.csv를 불러오고 데이터 구조를 확인하시오.<br>(예: head(), info(), describe(), Class 비율 출력)<br>정상 거래와 사기 거래 건수를 확인하시오.</p>\n<h1 id='41' style='font-size:16px'>2. 샘플링</h1>\n<br><p id='42' data-category='paragraph' style='font-size:16px'>사기 거래(Class=1)는 전부 유지하고, 정상 거래(Class=0)는 10,000건만 무작위<br>샘플링하시오.(sampling 진행시, random_state는 42로 설정)<br>두 데이터셋을 합쳐 새로운 분석용 데이터프레임으로 만드시오.<br>샘플링 후 Class 비율을 다시 출력하시오.</p>\n<h1 id='43' style='font-size:16px'>3. 데이터 전처리</h1>\n<br><p id='44' data-category='paragraph' style='font-size:16px'>Amount 변수만 표준화(StandardScaler) 하여 새로운 변수 Amount_Scaled로<br>대체하시오. Amount 원본 변수는 제거하시오.<br>그리고 X, y로 데이터프레임을 분리하시오.</p>\n<h1 id='45' style='font-size:16px'>4. 학습 데이터와 테스트 데이터 분할</h1>\n<br><p id='46' data-category='paragraph' style='font-size:16px'>train_test_split을 사용해 학습셋:테스트셋 비율을 8:2로 나누고,<br>stratify=y 옵션으로 클래스 비율 유지, 분할된 데이터의 Class 비율을 출력하시오.<br>(random_state는 42로 설정)</p>\n<h1 id='47' style='font-size:16px'>5. SMOTE 적용</h1>\n<br><p id='48' data-category='paragraph' style='font-size:16px'>학습 데이터(X_train)에 SMOTE를 적용하여 소수 클래스(사기 거래)를<br>오버샘플링하시오. (왜 SMOTE를 적용해야하는지까지 서술하시오.)<br>SMOTE 적용 전후의 사기 거래 건수를 출력하시오.</p>\n<h1 id='49' style='font-size:16px'>6. 모델 학습</h1>\n<br><p id='50' data-category='paragraph' style='font-size:16px'>적합한 ML 모델을 선정하여 모델을 학습시키고,<br>테스트셋에서 예측값(predict)과 예측 확률(predict_proba)을 출력하시오.<br>classification_report로 Precision, Recall, F1-score를 확인하시오.<br>그리고 average_precision_score로 PR-AUC를 계산하여 출력하시오.</p>\n<h1 id='51' style='font-size:16px'>7. 최종 성능 평가</h1>\n<br><p id='52' data-category='paragraph' style='font-size:16px'>모델 선정, 하이퍼파라미터 튜닝과 Threshold 조정 등을 통해 최종 모델이<br>목표 Recall ≥ 0.80, F1 ≥ 0.88, PR-AUC ≥ 0.90 을 달성하였는지<br>여부를 작성하시오.(Class 0, 1 둘 다!)<br>달성하지 못했다면 추가로 어떤 방법을 시도할지 간략히 제안하시오.</p>\n<footer id='53' style='font-size:14px'>3-1회차) 기초 통계 / ML 과제</footer>\n<br><footer id='54' style='font-size:14px'>3</footer>\n<h1 id='55' style='font-size:20px'>제출 방법</h1>\n<br><h1 id='56' style='font-size:16px'>다음과 같이 파일을 제출해주시면 됩니다.</h1>\n<br><h1 id='57' style='font-size:16px'>문제1, 2에서 과제를 진행한 코드를 하나의 basic_statistics_ML.ipynb 파일에<br>작성해서 제출하시고, report 또한 동일하게 제출해주시면 됩니다.</h1>\n<p id='58' data-category='paragraph' style='font-size:16px'>- YBIGTA_newbie_assignment</p>\n<br><p id='59' data-category='list' style='font-size:16px'>- 1(1)-Python<br>- 1(2)-CS_basics</p>\n<br><p id='60' data-category='paragraph' style='font-size:16px'>.</p>\n<h1 id='61' style='font-size:16px'>- 3(1)-Basic_Statistics_ML</h1>\n<br><p id='62' data-category='list' style='font-size:16px'>- basic_statistics_ML.ipynb<br>- report.pdf</p>\n<h1 id='63' style='font-size:20px'>채점 기준</h1>\n<br><p id='64' data-category='paragraph' style='font-size:16px'>통계와 ML에 대한 베이스가 개인마다 차이가 클 것이라고 예상됩니다.<br>누군가에게는 이번 과제가 쉽고 당연한 내용일 수도 있지만,<br>누군가에게는 생소하고 어려울 수도 있습니다.</p>\n<p id='65' data-category='paragraph' style='font-size:16px'>이번 과제의 목적은 여러분을 괴롭히려는 목적이 아니라<br>실전 데이터를 직접 다루면서 기초 통계와 ML 흐름을 자연스럽게 찾아보고<br>연습해보는 것입니다!!</p>\n<p id='66' data-category='paragraph' style='font-size:16px'>아래 기준만 지켜주시면 채점을 널널하게 할 예정입니다,</p>\n<h1 id='67' style='font-size:16px'>제출 제출</h1>\n<br><p id='68' data-category='list' style='font-size:16px'>- Python 실습 코드를 `.ipynb`로 제출하고, 분석 결과를 `report.pdf`로 함께 제출하며,<br>- 두 과제를 성실히 수행한 흔적이 있으면 됩니다.<br>(코드와 과정이 100% 정답이 아니어도 해결하려고 노력한 과정이 있으면 OK!</p>\n<h1 id='69' style='font-size:16px'>제출 미흡</h1>\n<br><p id='70' data-category='paragraph' style='font-size:16px'>- Python 실습 코드를 미제출하거나 두 과제 중 하나만 제출한 경우</p>\n<p id='71' data-category='paragraph' style='font-size:16px'>미제출</p>\n<br><p id='72' data-category='paragraph' style='font-size:16px'>- 위 기준에 해당하지 않거나 report.pdf 내용이 불성실할 경우</p>\n<footer id='73' style='font-size:14px'>3-1회차) 기초 통계 / ML 과제</footer>\n<br><footer id='74' style='font-size:14px'>4</footer>\n<br><p id='75' data-category='paragraph' style='font-size:16px'>.</p>\n<br><p id='76' data-category='paragraph' style='font-size:16px'>.</p>",
    "1dSNa-dPPGWMQFeL3X_TUtlTNOFEXHeEY": "<h1 id='0' style='font-size:20px'>Data\u0001Science\u0001Team\u0001</h1>\n<h1 id='1' style='font-size:18px'>\u0001 Session<br>2025-2 Open</h1>\n<p id='2' data-category='paragraph' style='font-size:14px'>2025-08-19<br>27기<br>신입교육세션</p>\n<br><p id='3' data-category='paragraph' style='font-size:16px'>26기<br>DS<br>이준찬</p>\n<h1 id='4' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='5' style='font-size:20px'>Before\u0001YBIGTA..</h1>\n<p id='6' data-category='paragraph' style='font-size:16px'>내가\u0001아는\u0001것\u0001:\u0001ML,\u0001DL..\u0001SQL..\u0001가설검정..\u0001시각화..</p>\n<p id='7' data-category='paragraph' style='font-size:16px'>DE?\u0001sql\u0001+\u0001DB\u0001인가?<br>DS?\u0001딥러닝\u0001/\u0001CV?<br>DA?\u0001공모전\u0001+\u0001프로젝트?</p>\n<p id='8' data-category='paragraph' style='font-size:18px'>잘\u0001모르겠다..\u0001교육세션은\u0001아는거\u0001하겠지?</p>\n<br><figure id='9'><img alt=\"\" data-coord=\"top-left:(1364,860); bottom-right:(1639,1133)\" /></figure>\n<br><h1 id='10' style='font-size:18px'>Github,\u0001CS,\u0001Linux,\u0001NLP,\u0001CV<br>Selenium,\u0001Docker,\u0001Aws,<br>RAG,\u0001AI\u0001Agent,\u0001LangChain,<br>프론트/백...</h1>\n<h1 id='11' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='12' style='font-size:20px'>교육세션을\u0001거치며</h1>\n<h1 id='13' style='font-size:18px'>알면\u0001알수록\u0001다양한\u0001데이터\u0001직군의\u0001세계..</h1>\n<h1 id='14' style='font-size:16px'>DA\u0001:\u0001데이터에서\u0001유의미한\u0001인사이트를\u0001도출하고,\u0001<br>실제\u0001비즈니스의\u0001의사결정에\u0001영향을\u0001미치자!</h1>\n<h1 id='15' style='font-size:16px'>DS\u0001:\u0001데이터와\u0001Task\u0001에\u0001맞는\u0001적합한\u0001방법론을\u0001선택,\u0001설<br>계,\u0001학습,\u0001평가\u0001과정을\u0001거쳐\u0001모델을\u0001구현하자!</h1>\n<p id='16' data-category='paragraph' style='font-size:16px'>DE\u0001:\u0001작업의\u0001기본이\u0001되는\u0001데이터를\u0001수집하고,\u0001적재하고,<br>사용하기\u0001용이하게\u0001관리하자!</p>\n<br><figure id='17'><img alt=\"\" data-coord=\"top-left:(1644,550); bottom-right:(2109,1006)\" /></figure>\n<br><figure id='18' data-category='chart'><img data-coord=\"top-left:(2299,557); bottom-right:(2756,1002)\" /><figcaption><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>ML Ops</td><td>Data Pipelines</td><td>Database</td><td>Data Viz</td><td>Storytelling</td><td>Experimentation</td><td>Starts</td><td>ML Modeling</td><td>Deploiment</td></tr></thead><tbody><tr><td>item_01</td><td>10%</td><td>15%</td><td>20%</td><td>25%</td><td>15%</td><td>10%</td><td>10%</td><td>10%</td><td>10%</td></tr></tbody></table></figure>\n<figure id='19' data-category='chart'><img data-coord=\"top-left:(1648,1126); bottom-right:(2111,1507)\" /><figcaption><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>ML Ops</td><td>Deploiment</td><td>Data Pipelines</td><td>Database</td><td>Data Viz</td><td>Storytelling</td><td>Experimentation</td><td>Stats</td><td>ML Modeling</td></tr></thead><tbody><tr><td>item_01</td><td>10%</td><td>10%</td><td>10%</td><td>10%</td><td>10%</td><td>10%</td><td>10%</td><td>10%</td><td>10%</td></tr></tbody></table></figure>\n<br><figure id='20' data-category='chart'><img data-coord=\"top-left:(2306,1127); bottom-right:(2760,1508)\" /><figcaption><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>ML Ops</td><td>Data Pipelines</td><td>Database</td><td>Data Viz</td><td>Storytelling</td><td>Experimentation</td><td>Starts</td><td>ML Modeling</td><td>Deploiment</td></tr></thead><tbody><tr><td>item_01</td><td>25%</td><td>20%</td><td>15%</td><td>10%</td><td>10%</td><td>5%</td><td>5%</td><td>5%</td><td>5%</td></tr></tbody></table></figure>\n<h1 id='21' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='22' style='font-size:20px'>교육세션을\u0001마치고..</h1>\n<p id='23' data-category='paragraph' style='font-size:16px'>프론트/백,\u0001ML\u0001통계,\u0001CV\u0001NLP,\u0001Agent,\u0001AWS,\u0001DB..\u0001모두\u0001자세하게\u0001다루진\u0001못해도</p>\n<h1 id='24' style='font-size:16px'>데이터를\u0001다루는\u0001일이\u0001어떤게\u0001있는지,\u0001각각\u0001무슨\u0001역할을\u0001하는지\u0001조금\u0001자세히\u0001안\u0001것\u0001같다!</h1>\n<figure id='25'><img alt=\"\" data-coord=\"top-left:(543,885); bottom-right:(2443,1445)\" /></figure>\n<h1 id='26' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='27' style='font-size:20px'>그래서..\u0001어디를\u0001고르지?</h1>\n<h1 id='28' style='font-size:16px'>팀\u0001선택\u0001시\u0001내가\u0001고려할\u0001것</h1>\n<h1 id='29' style='font-size:16px'>난\u0001뭘\u0001할\u0001때\u0001재미있게\u0001하지?</h1>\n<h1 id='30' style='font-size:16px'>난\u0001뭘\u0001하고\u0001싶지?</h1>\n<p id='31' data-category='paragraph' style='font-size:16px'>난\u0001뭘\u0001좋아하지?</p>\n<br><figure id='32'><img alt=\"\" data-coord=\"top-left:(1356,473); bottom-right:(2817,1425)\" /></figure>\n<h1 id='33' style='font-size:14px'>Why<br>DS?</h1>\n<h1 id='34' style='font-size:14px'>2025-2 Open Session</h1>\n<br><header id='35' style='font-size:20px'>Why\u0001DS?</header>\n<br><figure id='36'><img style='font-size:16px' alt=\"궁금하다\n왜\u0001이렇게\u0001되지?\u0001\n\u0001더\u0001자세히\u0001알고\u0001싶다\n더\u0001구체적으로\u0001알고\u0001싶다\" data-coord=\"top-left:(1131,356); bottom-right:(1868,1359)\" /></figure>\n<h1 id='37' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='38' style='font-size:22px'>Why\u0001DS?</h1>\n<p id='39' data-category='paragraph' style='font-size:20px'>너무\u0001빨리\u0001변하는\u0001세상</p>\n<h1 id='40' style='font-size:18px'>2023</h1>\n<br><p id='41' data-category='paragraph' style='font-size:18px'>2025</p>\n<figure id='42'><img alt=\"\" data-coord=\"top-left:(344,731); bottom-right:(1094,1205)\" /></figure>\n<footer id='43' style='font-size:16px'>성실하고 조금 신기한 바보</footer>\n<br><figure id='44'><img alt=\"\" data-coord=\"top-left:(1367,867); bottom-right:(1635,1129)\" /></figure>\n<p id='45' data-category='paragraph' style='font-size:16px'>인생의 스승님</p>\n<h1 id='46' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='47' style='font-size:20px'>Why\u0001DS?</h1>\n<h1 id='48' style='font-size:18px'>너무\u0001빨리\u0001변하는\u0001세상</h1>\n<figure id='49'><img alt=\"\" data-coord=\"top-left:(579,776); bottom-right:(2433,1265)\" /></figure>\n<p id='50' data-category='paragraph' style='font-size:16px'>Transfomers가 2017년, ChatGPT가 불과 2023년..</p>\n<p id='51' data-category='paragraph' style='font-size:16px'>10년이 안되는 기간 동안 AI는 상당한 발전을 이뤘다</p>\n<h1 id='52' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='53' style='font-size:20px'>Why\u0001DS?</h1>\n<h1 id='54' style='font-size:18px'>빠르게\u0001발전하는\u0001AI\u0001씬</h1>\n<p id='55' data-category='list' style='font-size:16px'>실시간으로 깨지는 벤치마크들..</p>\n<p id='56' data-category='list' style='font-size:16px'>이미지도 잘보고, 코드도 잘 짜고, 글도 잘쓰고, 이제 알아서 일도 하고..</p>\n<p id='57' data-category='list' style='font-size:16px'>새로운 모델이 나올때마다, 점차 복잡하고 장시간 시간이 소요되는 task<br>들을 할 수 있다</p>\n<figure id='58' data-category='chart'><img data-coord=\"top-left:(1110,1036); bottom-right:(1861,1500)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>0 사진 및 파일 추가</td><td>€ 아이폰트모든 옵</td><td>윳 심층 리서치</td><td>이미지 만들기</td><td>윳 커넉터 사용</td><td>더 보기</td><td>공부하고 배워요</td><td>휑 검색</td><td>캠퍼스</td><td>Google Drive 연결</td><td>OneDrive 연결</td><td>Sharepoint 연결</td></tr></thead><tbody><tr><td>item_01</td><td>10Not specified</td><td>20Not specified</td><td>30Not specified</td><td>10Not specified</td><td>10Not specified</td><td>30Not specified</td><td>50Not specified</td><td>10Not specified</td><td>10Not specified</td><td>10Not specified</td><td>10Not specified</td><td>10Not specified</td></tr></tbody></table></figure>\n<br><figure id='59' data-category='chart'><img data-coord=\"top-left:(1918,448); bottom-right:(2718,1513)\" /><figcaption><p>Chart Title: where we predict the AI has a (50) chance of succeeding</p><p>X-Axis: LLM release date</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>GPT-5</td><td>Grok 4</td><td>o3</td><td>o4-mini</td><td>Claude 4 Sonnet</td><td>Train classifie Claude 3.7 Sonnet</td><td>o</td><td>30 min</td><td>2020-2021</td><td>2021-2022</td><td>2022-2023</td><td>2023-2024</td><td>2024-2025</td><td>2025-2026</td></tr></thead><tbody><tr><td>item_01</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td></tr></tbody></table></figure>\n<h1 id='60' style='font-size:16px'>2025-2 Open Session</h1>\n<br><h1 id='61' style='font-size:20px'>Why\u0001DS?</h1>\n<h1 id='62' style='font-size:18px'>AI\u0001시대에\u0001우리\u0001삶의\u0001모습은\u0001크게\u0001변할\u0001것</h1>\n<figure id='63'><img alt=\"\" data-coord=\"top-left:(187,620); bottom-right:(954,1586)\" /></figure>\n<br><h1 id='64' style='font-size:14px'>실제<br>인간<br>대체<br>가능성을<br>검토하기<br>위해<br>진행된<br>프로젝트</h1>\n<figure id='65'><img alt=\"\" data-coord=\"top-left:(1645,1016); bottom-right:(2787,1573)\" /></figure>\n<h1 id='66' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='67' style='font-size:20px'>Why\u0001DS?</h1>\n<h1 id='68' style='font-size:16px'>AI\u0001시대에\u0001우리\u0001삶의\u0001모습은\u0001크게\u0001변할\u0001것</h1>\n<figure id='69'><img alt=\"\" data-coord=\"top-left:(830,832); bottom-right:(2155,1310)\" /></figure>\n<p id='70' data-category='paragraph' style='font-size:14px'>실제 인간 대체 가능성을 검토하기 위해 진행된 불과 2~3개월 전 발표된 프로젝트</p>\n<h1 id='71' style='font-size:16px'>2025-2 Open Session</h1>\n<br><p id='72' data-category='paragraph' style='font-size:20px'>Why\u0001DS?</p>\n<h1 id='73' style='font-size:16px'>현실 업무의 일부는 이미 Agent 가 적용되고 있는 추세</h1>\n<br><h1 id='74' style='font-size:14px'>경영<br>전략</h1>\n<figure id='75'><img alt=\"\" data-coord=\"top-left:(375,533); bottom-right:(1049,948)\" /></figure>\n<br><h1 id='76' style='font-size:14px'>바이오</h1>\n<h1 id='77' style='font-size:14px'><br>BCG<br>:<br></h1>\n<br><figure id='78'><img alt=\"\" data-coord=\"top-left:(1129,519); bottom-right:(1825,916)\" /></figure>\n<br><h1 id='79' style='font-size:14px'>구글<br>:<br>바이오<br>연구를<br>위한<br>AI</h1>\n<br><figure id='80'><img alt=\"\" data-coord=\"top-left:(2001,509); bottom-right:(2508,907)\" /></figure>\n<h1 id='81' style='font-size:14px'>프로그래밍</h1>\n<br><p id='82' data-category='paragraph' style='font-size:14px'>반도체</p>\n<br><p id='83' data-category='paragraph' style='font-size:14px'>구글<br>:<br>ML엔지니어링을<br>위한<br>AI<br>제조<br>/<br>생산</p>\n<figure id='84'><img alt=\"\" data-coord=\"top-left:(393,1196); bottom-right:(567,1373)\" /></figure>\n<h1 id='85' style='font-size:14px'>우리의<br>친구</h1>\n<br><figure id='86'><img alt=\"\" data-coord=\"top-left:(1126,1096); bottom-right:(1807,1484)\" /></figure>\n<br><p id='87' data-category='paragraph' style='font-size:14px'>시놉시스<br>:<br>회로설계를<br>위한<br>AI</p>\n<br><figure id='88'><img alt=\"\" data-coord=\"top-left:(1895,1093); bottom-right:(2606,1488)\" /></figure>\n<br><p id='89' data-category='paragraph' style='font-size:14px'>지멘스<br>:<br>제조&<br>생산<br>관리를<br>위한<br>코파일럿</p>\n<br><p id='90' data-category='paragraph' style='font-size:14px'>ML</p>\n<h1 id='91' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='92' style='font-size:20px'>Why\u0001DS?</h1>\n<h1 id='93' style='font-size:18px'>Agent\u0001가\u0001알아서\u0001일하는\u0001시대의\u0001도래</h1>\n<p id='94' data-category='list' style='font-size:16px'>AI 모델을 실제로 구현해보고, 성능을 올려보고 싶다면</p>\n<p id='95' data-category='list' style='font-size:16px'>AI 필드의 변화들을 더 자세하게 알고 싶다면</p>\n<p id='96' data-category='list' style='font-size:16px'>새로운걸 알고 배울 때 왜 이렇게 되는건지 알아야 직성이 풀린다면</p>\n<p id='97' data-category='list' style='font-size:16px'>쏟아지는 지식과 논문 사이에서 분야의 흐름을 정리하고 싶다면</p>\n<h1 id='98' style='font-size:14px'>What<br>We<br>Do</h1>\n<h1 id='99' style='font-size:16px'>2025-2 Open Session</h1>\n<br><p id='100' data-category='paragraph' style='font-size:22px'>What\u0001We\u0001do</p>\n<h1 id='101' style='font-size:20px'>정규\u0001활동</h1>\n<p id='102' data-category='paragraph' style='font-size:18px'>논문리딩스터디</p>\n<br><h1 id='103' style='font-size:18px'>주차별\u0001발제\u0001/\u0001과제</h1>\n<br><h1 id='104' style='font-size:18px'>개별\u0001스터디</h1>\n<figure id='105'><img alt=\"\" data-coord=\"top-left:(272,785); bottom-right:(642,1172)\" /></figure>\n<br><figure id='106'><img alt=\"\" data-coord=\"top-left:(1222,868); bottom-right:(1843,1131)\" /></figure>\n<br><figure id='107'><img alt=\"\" data-coord=\"top-left:(2270,813); bottom-right:(2771,1240)\" /></figure>\n<p id='108' data-category='paragraph' style='font-size:14px'>매주 세션 시간에 토픽 별 논문 리딩 후<br>요약 공유</p>\n<br><p id='109' data-category='paragraph' style='font-size:14px'>세션 시간에 매주 주제 내용 발제<br>매주 과제 제작 및 수행</p>\n<br><p id='110' data-category='paragraph' style='font-size:14px'>논문리딩스터디 외 개별 스터디 참여</p>\n<h1 id='111' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='112' style='font-size:20px'>What\u0001We\u0001do</h1>\n<h1 id='113' style='font-size:18px'>논문리딩스터디</h1>\n<p id='114' data-category='list' style='font-size:16px'>주차별 토픽의 대표 논문 리스트 중 하나를<br>골라 리뷰하고, 세션시간에 다른 논문을 읽은<br>참여자와 내용을 공유</p>\n<p id='115' data-category='list' style='font-size:16px'>결국 제대로 이해하려면 논문을 읽어야 한다</p>\n<p id='116' data-category='list' style='font-size:16px'>논문을 안 읽어봤어도 괜찮습니다!</p>\n<h1 id='117' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='118' style='font-size:20px'>What\u0001We\u0001do</h1>\n<h1 id='119' style='font-size:18px'>주제별\u0001발제</h1>\n<h1 id='120' style='font-size:16px'>25-2 CV 세션 주제</h1>\n<br><p id='121' data-category='list' style='font-size:16px'>CNN<br>Object Detection<br>Segmentation<br>Generative Model<br>ViT<br>Diffusion<br>Representational Learning<br>Video</p>\n<br><figure id='122'><img alt=\"\" data-coord=\"top-left:(1250,628); bottom-right:(2830,1515)\" /></figure>\n<h1 id='123' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='124' style='font-size:20px'>What\u0001We\u0001do</h1>\n<h1 id='125' style='font-size:18px'>주제별\u0001과제</h1>\n<h1 id='126' style='font-size:16px'>25-1 NLP 세션 과제 예시</h1>\n<p id='127' data-category='list' style='font-size:16px'>Tokenizer, Representational learning,<br>Transformer, finetuning, reasoning..</p>\n<p id='128' data-category='list' style='font-size:16px'>개별 주제에 대해 논문 구현 등의 과제를 제<br>작하고 수행</p>\n<br><figure id='129'><img alt=\"\" data-coord=\"top-left:(1497,483); bottom-right:(2783,1546)\" /></figure>\n<h1 id='130' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='131' style='font-size:20px'>What\u0001We\u0001do</h1>\n<h1 id='132' style='font-size:18px'>자체\u0001스터디</h1>\n<p id='133' data-category='list' style='font-size:16px'>1일 1독 스터디 : 개별 논문 리딩 스터디</p>\n<p id='134' data-category='list' style='font-size:16px'>발등튀김코테스터디 : 코딩테스트 알고리즘 스터디</p>\n<p id='135' data-category='list' style='font-size:16px'>팔로업 스터디 : AI 최신 동향 팔로업 스터디</p>\n<p id='136' data-category='list' style='font-size:16px'>FDA 스터디 : Functional Data Analysis 스터디</p>\n<p id='137' data-category='list' style='font-size:16px'>밑바닥부터 시작하는 강화학습 스터디 : RL 기초 스터디</p>\n<br><p id='138' data-category='list'></p>\n<p id='139' data-category='list'></p>\n<h1 id='140' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='141' style='font-size:20px'>그래서,\u0001DS가\u0001나와\u0001맞을까?</h1>\n<h1 id='142' style='font-size:18px'>어떤\u0001이유로\u0001DS를?</h1>\n<p id='143' data-category='list' style='font-size:16px'>AI 공부가 관심있고, 재미있어서 시간을 투자해서 공부해보고 싶을만큼 가슴 뛴다면!</p>\n<p id='144' data-category='list' style='font-size:16px'>비록 잘 모르더라도, AI 필드에 대해 궁금하고 앞으로 더 알아가고 싶다면!</p>\n<p id='145' data-category='list' style='font-size:16px'>모델에 대한 이해를 바탕으로 실제 구현에 필요한 지식과 경험을 쌓고 싶다면!</p>\n<p id='146' data-category='list' style='font-size:16px'>AI 진로를 준비하는 여러 사람들과 다양한 이야기를 나눠보고 싶다면!</p>\n<h1 id='147' style='font-size:14px'>2025-2 Open Session</h1>\n<br><h1 id='148' style='font-size:20px'>마치며</h1>\n<h1 id='149' style='font-size:18px'>내가\u0001뭘\u0001할\u0001때\u0001즐거울까?</h1>\n<p id='150' data-category='list' style='font-size:16px'>학기와 다양한 활동과 병행하기 때문에, 내가 얼마나 팀 활동에<br>재미를 붙이고 시간을 쏟을 수 있는지가 중요한 것 같아요</p>\n<p id='151' data-category='list' style='font-size:16px'>저도 많은걸 알지 못하는 채로 왔지만, 시간을 쪼개 새로운걸 알<br>고 배우는 시간이 재밌어서 DS 선택하길 잘 했다고 생각합니다</p>\n<p id='152' data-category='list' style='font-size:16px'>내가 지금 무엇을 원하고 뭘, 팀이 하는 활동이 나와 잘 맞을지 고<br>민해보시고 모두 만족스러운 결정 하시길 바랄게요!</p>\n<br><figure id='153'><img alt=\"\" data-coord=\"top-left:(2242,784); bottom-right:(2614,1333)\" /></figure>\n<h1 id='154' style='font-size:20px'>감사합니다!</h1>\n<h1 id='155' style='font-size:16px'>Contact</h1>\n<h1 id='156' style='font-size:14px'>팀장 김형진 010-3953-1704<br>부팀장 이준찬 010-6285-4638</h1>",
    "1Wfpu8M5otqkrtV2iRyQ9Ym6LIKx0jhv5": "<h1 id='0' style='font-size:16px'>YBIGTA TEAM SESSION</h1>\n<br><h1 id='1' style='font-size:20px'>DA 팀 소개</h1>\n<p id='2' data-category='paragraph' style='font-size:14px'>DA로 지원하셨으면..... DA로 오셔야겠죠?? 010 7380 0910 팀선택 고민 있으시면 언제든 카톡 주세요!!</p>\n<h1 id='3' style='font-size:18px'>목차</h1>\n<p id='4' data-category='index' style='font-size:14px'>01. DA 팀 소개 04. DA에는 어떤 사람이?<br>02. DA 필요 역량 05. DA 팀 커리큘럼<br>03. 역량 취득 방식 06. DA 팀 운영 방식</p>\n<br><h1 id='5' style='font-size:18px'>DA 팀 소개</h1>\n<br><p id='6' data-category='paragraph' style='font-size:14px'>도메인 불문, 데이터가 발생하지 않는 분야는 없다<br>제조, 금융, 커머스 등, 기업의 운영에 필수적으로 발생하는 ‘데이터’<br>성과 제고를 위한 활동 방향성 설정, 의사소통의 근거이자 도구<br>의사결정을 위해, 적절한 방법론을 사용한 가공과 시각화<br>통계적 방법론을 활용한 가설 수립, 검증 및 실험<br>‘분석 방식’도 중요하나, 그 만큼이나 집중해야 할 점은<br>“무엇을 위한 분석인가? 어떻게 분석을 활용할 것인가?”</p>\n<br><p id='7' data-category='paragraph' style='font-size:14px'>통계 및 데이터 핸들링 능력 만큼은 물론, 인문학적, 사회과학적 통찰 능력 중요</p>\n<br><h1 id='8' style='font-size:18px'>DA 필요 역량 - JD</h1>\n<p id='9' data-category='list'></p>\n<p id='10' data-category='list'></p>\n<p id='11' data-category='list'></p>\n<p id='12' data-category='list'></p>\n<p id='13' data-category='list'></p>\n<p id='14' data-category='list'></p>\n<p id='15' data-category='list'></p>\n<br><p id='16' data-category='paragraph' style='font-size:14px'>1.</p>\n<br><h1 id='17' style='font-size:14px'>사용자 행동을 지표화</h1>\n<h1 id='18' style='font-size:14px'>2. 데이터 기반 문제 해결방안 도출</h1>\n<h1 id='19' style='font-size:14px'>3. 가설을 수리적으로 모델링(A/B테스팅)</h1>\n<p id='20' data-category='paragraph' style='font-size:14px'>4. Python, SQL 등 데이터 핸들링 언어</p>\n<br><h1 id='21' style='font-size:18px'>DA 필요 역량 - JD</h1>\n<p id='22' data-category='list'></p>\n<p id='23' data-category='list'></p>\n<p id='24' data-category='list'></p>\n<p id='25' data-category='list'></p>\n<p id='26' data-category='list'></p>\n<p id='27' data-category='list'></p>\n<p id='28' data-category='list'></p>\n<p id='29' data-category='list'></p>\n<p id='30' data-category='list'></p>\n<p id='31' data-category='list'></p>\n<br><p id='32' data-category='list' style='font-size:14px'>1. 리텐션, 코호트 등 커머스, 마케팅 관련 분석기법<br>2. 가설을 수리적으로 모델링(A/B테스팅)<br>3. 이탈률, 전환율, 매출액, 제품 관련 기초 KPI에 대한 이해<br>4. 문제 정의 → 가설 검정 → 실험설계 및 검증 → 결과<br>5. Data driven Strategy??</p>\n<p id='33' data-category='list'></p>\n<p id='34' data-category='list'></p>\n<br><h1 id='35' style='font-size:18px'>DA 필요 역량 - JD</h1>\n<p id='36' data-category='list'></p>\n<p id='37' data-category='list'></p>\n<p id='38' data-category='list'></p>\n<p id='39' data-category='list'></p>\n<p id='40' data-category='list'></p>\n<p id='41' data-category='list'></p>\n<p id='42' data-category='list'></p>\n<br><figure id='43'><img alt=\"\" data-coord=\"top-left:(1847,212); bottom-right:(2696,478)\" /></figure>\n<h1 id='44' style='font-size:14px'>1. 플레이 로그로부터 비즈니스 인사이트 도출</h1>\n<br><p id='45' data-category='list' style='font-size:14px'>2. 분석 기법 설계/ 데이터 추출 및 가공</p>\n<br><p id='46' data-category='list' style='font-size:14px'>3. KPI에 대한 변화요인 분석</p>\n<br><p id='47' data-category='list' style='font-size:14px'>4. Data driven Business Insight??</p>\n<br><h1 id='48' style='font-size:18px'>DA 필요 역량 - JD</h1>\n<p id='49' data-category='list'></p>\n<br><p id='50' data-category='paragraph' style='font-size:14px'>1.</p>\n<br><h1 id='51' style='font-size:14px'>개인화 추천 시스템</h1>\n<br><p id='52' data-category='list' style='font-size:14px'>2. 추천 등 기술 기반 프로덕트에 대한 PMO</p>\n<br><p id='53' data-category='list' style='font-size:14px'>3. A/B 테스팅 등 실험 설계 및 효과 검증</p>\n<br><h1 id='54' style='font-size:20px'>역량 취득 방식</h1>\n<br><p id='55' data-category='paragraph' style='font-size:16px'>학술과 프로젝트 병행, 특히 공모전 및 프로젝트의 경우 여러 곳에 발<br>걸쳐놓기보단 소화 가능한 만큼만!!! 양보단 퀄리티가 중요</p>\n<h1 id='56' style='font-size:18px'>분석 방법론 학습</h1>\n<h1 id='57' style='font-size:16px'>정량적 방법론 탐색</h1>\n<br><h1 id='58' style='font-size:16px'>1.통계 및 실험설계<br>2.이상치 탐지<br>3.추천 시스템<br>4.인과추론(시간 되면)</h1>\n<h1 id='59' style='font-size:16px'>스터디를 통해 필요한 부분 채우기</h1>\n<br><p id='60' data-category='paragraph' style='font-size:18px'>실제 프로젝트 적용</p>\n<br><figure id='61'><img style='font-size:14px' alt=\"1.DA 프로젝트(발제 식)\na.프로젝트\nb.공모전\n2.산학 협력\na.DA산학: 조건에 맞는 산학 컨택 중, 구\n해지지 않을 경우 타협 X\nb.전체산학 PM: 문제 정의 및 데이터/모\n델링 기반 해결방식 기획, 능력에 따\n라 DS 역할 부여\" data-coord=\"top-left:(1544,551); bottom-right:(2353,1259)\" /></figure>\n<br><h1 id='62' style='font-size:18px'>DA에는 어떤 사람이?</h1>\n<h1 id='63' style='font-size:14px'>1. 연구보단 실제 적용과 응용을 해보는 Player가 되고 싶은 분</h1>\n<br><p id='64' data-category='list' style='font-size:14px'>2. 취업을 위해 포트폴리오를 만들어야 하는 분 + 취준 병행하고 싶은 분</p>\n<br><p id='65' data-category='list' style='font-size:14px'>3. 꼭 데이터 분석가가 아니라도 비즈니스 필드로 나가고 싶은 사람(테크PM/기획/퀀트마케팅)</p>\n<br><p id='66' data-category='list' style='font-size:14px'>4. 아이디어가 샘솟고 창의력이 좋다/공모전에서 한따까리? 할 수 있을 것 같다</p>\n<br><h1 id='67' style='font-size:14px'>5. 진로를 확정하지 못했지만, 일단은 데이터 유관 경험을 해보고싶다</h1>\n<br><p id='68' data-category='paragraph' style='font-size:14px'>a. 어떤 역량이 더 필요할지 나 자신을 알아갈 수 있음(DS연장: AI에 대해 깊게 알고싶어 등)</p>\n<br><p id='69' data-category='paragraph' style='font-size:14px'>b. 컨퍼 등에서 에이전트/모델링을 맡아 해보니 내 길이 아니야 → 분석 역량을 살릴 수 있는</p>\n<br><p id='70' data-category='paragraph' style='font-size:14px'>다른 길을 알아봐야겠어!(테크PM, IT 기획 등)</p>\n<h1 id='71' style='font-size:20px'>DA 커리큘럼<br>세션 일정: 화(금) 7~9 PM<br>전체세션 있다면 30분 뒤로</h1>\n<br><p id='72' data-category='paragraph' style='font-size:16px'><데이터 분석가 필수 패키지><br>Phase 1. Quantitative decision making:<br>Quant Marketing/Statistics/Anomaly Detection<br>Phase 2. Modeling for Data Analytics<br>Advanced Machine Learning/Recommend Sys.<br>Phase 3. Causal Inference(가능하면)<br>중간고사 이후 프로젝트 고도화 및 퀄리티를 위<br>해 세션 X But 전반기 진행하며 추가적 학습이<br>필요한 부분에 대해서는 자유 발제</p>\n<br><table id='73' style='font-size:14px'><thead><tr><td>주차</td><td>DA세션</td><td>DA프로젝트</td><td>스터디</td></tr></thead><tbody><tr><td>1주차</td><td>코호트+RFM</td><td>프로젝트 조사</td><td>스터디 조사</td></tr><tr><td>2주차</td><td>통계 및 실험계획법 (AB테스팅)</td><td></td><td></td></tr><tr><td>3주차</td><td>이상치 탐지</td><td></td><td></td></tr><tr><td>4주차</td><td>ML심화/추천1</td><td>중간보고</td><td></td></tr><tr><td>5주차</td><td>추천2/추천3(?)</td><td></td><td></td></tr><tr><td>6주차</td><td>인과추론 맛보기</td><td></td><td></td></tr><tr><td>9주차</td><td>밀린거 + 커리어세션</td><td>프로젝트 집중 고 도화</td><td>후반기 신규 스터디 조사</td></tr><tr><td>10주 차</td><td>투표로 결정</td><td></td><td></td></tr></tbody></table>\n<br><h1 id='74' style='font-size:20px'>DA 커리큘럼</h1>\n<br><h1 id='75' style='font-size:16px'>1주차는 (화)소개 및 프로젝트, 스터디 발제<br>(금) 1주차 DA세션 시작</h1>\n<h1 id='76' style='font-size:16px'>4주차, 5주차는 두 번 씩 화/금 진행 유력</h1>\n<h1 id='77' style='font-size:16px'>발제 인원 배정(1주차 (화) 예정):</h1>\n<br><h1 id='78' style='font-size:16px'>각 주제에 걸쳐 인당 Main/Sub 투표 → 배정</h1>\n<br><h1 id='79' style='font-size:16px'>한 주제에 대해 Main+Sub인원 함께 발제 준비</h1>\n<p id='80' data-category='paragraph' style='font-size:16px'>세션 형태: 참여형 세션</p>\n<br><h1 id='81' style='font-size:16px'>Main 발제자는 교육세션처럼 개념 준비</h1>\n<br><h1 id='82' style='font-size:16px'>Sub 발제자는 함께 실습(비중 UP) 및 과제 구성</h1>\n<p id='83' data-category='paragraph' style='font-size:16px'>사전과제:</p>\n<br><table id='84' style='font-size:14px'><thead><tr><td>주차</td><td>DA세션</td><td>DA프로젝트</td><td>스터디</td></tr></thead><tbody><tr><td>1주차</td><td>코호트+RFM</td><td>프로젝트 조사</td><td>스터디 조사</td></tr><tr><td>2주차</td><td>통계 및 실험계획 법(AB테스팅)</td><td></td><td></td></tr><tr><td>3주차</td><td>이상치 탐지</td><td></td><td></td></tr><tr><td>4주차</td><td>ML심화/추천1</td><td>중간보고</td><td></td></tr><tr><td>5주차</td><td>추천2/추천3(?)</td><td></td><td></td></tr><tr><td>6주차</td><td>인과추론 맛보기</td><td></td><td></td></tr><tr><td>9주차</td><td>밀린거 + 커리어세 션</td><td>프로젝트 집중 고 도화</td><td>후반기 신규 스터디 조사</td></tr><tr><td>10주차 이후</td><td>투표로 결정</td><td></td><td></td></tr></tbody></table>\n<br><h1 id='85' style='font-size:16px'>세션 이해에 논문이 필요할 경우, 발제자는 필요</h1>\n<br><h1 id='86' style='font-size:16px'>논문 공유 → 세션 마지막 30분간 3인1조 리뷰</h1>\n<br><h1 id='87' style='font-size:18px'>DA 운영방식 및 당부</h1>\n<h1 id='88' style='font-size:14px'>1. 투머치한 프로젝트/스터디 신청 지양: “할 수 있는 것만... 제발!!!”</h1>\n<br><p id='89' data-category='list' style='font-size:14px'>a. 26기 팀장의 경우: 공모전 2개/컨퍼런스/9to12인턴 두달반 병행 → 민폐 그자체. 고정 회의만 몇타임??</p>\n<br><p id='90' data-category='list' style='font-size:14px'>b. 25-1의 경우 세션이 없었는데도, 모든 프로젝트의 결과물이 떳떳했는가? → NO. 벼락치기 OUT</p>\n<br><p id='91' data-category='paragraph' style='font-size:14px'>c. Junior의 경우 공모전/컨퍼(산학) 최소 2개 최대 3개로 제한, Senior/연장기수의 경우 최소 1개 최대 3개로<br>제한</p>\n<br><h1 id='92' style='font-size:14px'>2. DA로 직무를 확정할 경우, 수리적 역량보단 도메인에 대한 이해도가 분석을 변별</h1>\n<br><p id='93' data-category='list' style='font-size:14px'>a. 대부분이 통계학과이거나, 요즘은 고여서 경영공학 or 데싸대학원생들과 경쟁..<br>b. 통계나 모델링은 필수적 역량이 됐다는 뜻! → 커머스/테크/금융/게임 등 특정 도메인에 대한 선제적 딥다이<br>브 필요<br>c. 스터디 발제 시, 특정 책을 완독하거나 코테도 좋지만, 산업이나 도메인 관련 스터디 개설 추진</p>\n<br><h1 id='94' style='font-size:18px'>DA 스터디</h1>\n<h1 id='95' style='font-size:14px'>25-1 스터디 발제 목록:</h1>\n<br><h1 id='96' style='font-size:14px'>금융데이터 / 이상치탐지 / 커리어(취준) 스터디/ RAG LLM Langchain 스터디/ SQL 코테 스터디</h1>\n<h1 id='97' style='font-size:14px'>24-2 스터디 발제 목록:</h1>\n<br><h1 id='98' style='font-size:14px'>금융데이터 / 인과추론 / 데이터 시각화 / 추천시스템 / 프롬프트엔지니어링 / ML논문 리뷰 스터디</h1>\n<p id='99' data-category='paragraph' style='font-size:14px'>25-2 스터디 현재 기준 확정 및 예측(오셔서 가득가득 발제해주세요):<br>취준(인적성/기업분석/레주메 등) / 자격증(adsp/sqld) / 금융데이터(Portfolio Optimization) / 게임 도메인 스터디</p>\n<br><h1 id='100' style='font-size:18px'>DA의 정체성(1)</h1>\n<h1 id='101' style='font-size:14px'>데이터 분석: 상당히 모호한 말. JD 유형도 두 가지, 해석 가능한 맥락도 두 가지</h1>\n<p id='102' data-category='list' style='font-size:14px'>해석 1: 데이터를 통계/ML 등 이공학적(?) 방법론을 사용하여 해석이 가능한 형태로 가공한다</p>\n<p id='103' data-category='list' style='font-size:14px'>해석 2: 비즈니스적 목적을 가지고, 비즈니스 임팩트 및 전략 도출을 위해 Raw 데이터를 해석</p>\n<h1 id='104' style='font-size:14px'>나는 어떤 목적으로 DA에 들어왔을까?</h1>\n<p id='105' data-category='paragraph' style='font-size:14px'>일단 YBIGTA가 1지망 + 본과가 응통 + 곧바로 대학원에 갈 생각 X + 적성 찾기 위해 이것저것 해보자</p>\n<p id='106' data-category='list' style='font-size:14px'>희망 커리어: DA(15%) 대학원(25%) 금융권(25%) 컨설팅(35%)</p>\n<p id='107' data-category='list' style='font-size:14px'>‘해석 2’로서의 DA를 원했었다.</p>\n<p id='108' data-category='list' style='font-size:14px'>신입생때만 해도 이과부심 뿜뿜... 어느새 가오와 간지만을 쫓아 문돌 커리어를 희망...</p>\n<p id='109' data-category='list' style='font-size:14px'>컨퍼런스 가서 “DA는 비즈니스 임팩트 내는거 아닌가요? 분석, 전략 도출 플젝이 없는데요?” 시전</p>\n<br><h1 id='110' style='font-size:18px'>DA의 정체성(2)</h1>\n<br><h1 id='111' style='font-size:14px'>저번 학기, DA는 뭐 했나? 내가 DA를 잘못 이해했나? 회고록</h1>\n<br><p id='112' data-category='list' style='font-size:14px'>수리적, 통계적 이론: 3인1조 의무 스터디 배정→ 세션 시간 내 강제 모임 X, 흐지부지(자연적인 것임)<br>공모전: 의무 스터디 제대로 진행 X → 이론적 백그라운드 X → 배운걸 적용코자 한 목적은 달성 X<br>앞 단의 분석 방법론과 뒷 단의 인문학적 해석 중 뭘 경험한 거지?</p>\n<br><h1 id='113' style='font-size:14px'>27기에게 DA가 뭘 제공할 수 있을까?</h1>\n<br><h1 id='114' style='font-size:14px'>특수한 환경: ‘공과대학’ 소속의 ‘Ybigta’ 내 DA팀 → ‘해석 1’로서의 DA 역량 의무적 배양(발제식 세션)</h1>\n<br><p id='115' data-category='paragraph' style='font-size:14px'>그럼 ‘해석 2’로서의 DA는?</p>\n<br><p id='116' data-category='list' style='font-size:14px'>비즈니스 인사이트 및 전략은 ‘세션에서 배우는 것’이 아니라 ‘공모전에서 함께 고민하며 경험’하는 것이 적합</p>\n<br><p id='117' data-category='list' style='font-size:14px'>세션에서 필수, 의무적으로 다뤄야 하는 것은, ‘수리적 마인드와 방법론’일 것.</p>\n<br><p id='118' data-category='list' style='font-size:14px'>통계적, DS적 하드스킬 없이 ‘해석 2’로서의 DA만 원한다면, ISSU로...</p>\n<br><p id='119' data-category='list' style='font-size:14px'>비즈니스/ 전략적 역량: BA 스터디/ 케이스 스터디 발제 등 보강 수단 多(중간고사 이후 투표, BA세션 배정)</p>\n<br><h1 id='120' style='font-size:18px'>결론은?</h1>\n<br><p id='121' data-category='list' style='font-size:14px'>배움에 목말라있다. 중간고사 이전 기간 빡세게 구를 것.</p>\n<br><p id='122' data-category='list' style='font-size:14px'>선배와 후배가 아닌, “함께 배우는 학습 공동체” ← 그럼에도 뛰어난 26기에게 배울 점은 있을 것!</p>\n<br><p id='123' data-category='list' style='font-size:14px'>다양한 진로 고려 가능</p>\n<br><p id='124' data-category='paragraph' style='font-size:14px'>급하지 않다면, 먼저 데이터 생태계를 경험해보고, DS DE 필요에 따라 전향, 연장</p>\n<br><h1 id='125' style='font-size:14px'>세션(A): 통계/ML 하드스킬 의무적 배양에 집중</h1>\n<br><p id='126' data-category='paragraph' style='font-size:14px'>공모전/스터디/프로젝트(B): 필요에 따라 도메인, BA, 케이스 등 전략적 사고 소프트스킬 보강</p>\n<figure id='127'><img alt=\"\" data-coord=\"top-left:(1289,1107); bottom-right:(1884,1668)\" /></figure>\n<br><figure id='128'><img style='font-size:14px' alt=\"팀소개\nㄴ몰랐는데 광고 버전이 여러개\n바지사장\n부팀장 부회장\n오락부장 원래팀장 카이스트생 하드워커\" data-coord=\"top-left:(229,24); bottom-right:(2988,1640)\" /></figure>\n<h1 id='129' style='font-size:14px'>THANK YOU<br>감사합니다</h1>",
    "1j98aIYpQ3v0EoGn4YORPv1Xw3zByvu9n": "<h1 id='0' style='font-size:20px'>Data Engineering</h1>\n<br><h1 id='1' style='font-size:16px'>2025-2 Ope Session</h1>\n<p id='2' data-category='paragraph' style='font-size:14px'>DE 26기 김정인</p>\n<h1 id='3' style='font-size:18px'>교육세션을 마치고<br>신입 기수 프로젝트를 하며</h1>\n<p id='4' data-category='list' style='font-size:14px'>● Cursor, claude, gpt, gemini 와 친해지셨나요?<br>● Git과 친해지셨나요<br>● 바이브코딩 짱 ?<br>● Computer Science 망했나 ?</p>\n<h1 id='5' style='font-size:18px'>잘 알면 알수록 Ai와 함께 생산성<br>dn<br>Problem solving 가능</h1>\n<footer id='6' style='font-size:14px'>기술을 이해하고 쓰는 것과 아예 모르고 쓰는 것은 큰 차이</footer>\n<h1 id='7' style='font-size:20px'>데이터 엔지니어란?</h1>\n<p id='8' data-category='paragraph' style='font-size:14px'>다양한 데이터 소스에서 데이터를 수집, 저장, 관리 및 처리하여 분석이나 다른 데이터 관련 작업에 사용할 수 있도록 하는 역할</p>\n<p id='9' data-category='paragraph' style='font-size:14px'>데이터 파이프라인 구축, 데이터 웨어하우스 설계 및 구축, 데이터 품질 관리 등 다양한 업무</p>\n<p id='10' data-category='paragraph' style='font-size:16px'>데이터 수집부터 서비스 배포까지<br>처음부터 끝까지 데이터 엔지니어 역할이 존재</p>\n<h1 id='11' style='font-size:22px'>toss</h1>\n<p id='12' data-category='paragraph' style='font-size:20px'>합류하면 함께 할 업무에요</p>\n<p id='13' data-category='list' style='font-size:16px'>· Apache Hadoop Ecosystem 오픈소스 전반을 직접 빌드부터 On-Premise 클러스터를 구축까지 개발<br>및 운영하고 있어요.</p>\n<p id='14' data-category='list' style='font-size:14px'>· 데이터 센터 이중화되어 운영되는 대규모 Kafka Cluster 운영 및 관리하고 있어요.</p>\n<p id='15' data-category='list' style='font-size:16px'>· Kafka Connect 기반에 카프카 클러스터 간 데이터 동기화 및 안정적이고 효율적인 데이터 입수<br>파이프라인을 개발하고, 운영해요.</p>\n<p id='16' data-category='list' style='font-size:14px'>● Flink, Kafka Stream, Spark Structured Streaming 등 스트리밍 플랫폼을 구축 & 운영하고 있어요.</p>\n<p id='17' data-category='list' style='font-size:14px'>· Clickhouse, Starrocks, Druid 기반의 Realtime OLAP 시스템을 운영해요.</p>\n<p id='18' data-category='list' style='font-size:16px'>● Iceberg, Delta, Paimon, Fluss와 같은 데이터 플랫폼 고도화를 위한 다양한 새로운 기술을 검토하고<br>도입해요.</p>\n<br><p id='19' data-category='paragraph' style='font-size:18px'>합류하면 함께할 업무예요</p>\n<br><p id='20' data-category='paragraph' style='font-size:14px'>Platform 영역</p>\n<p id='21' data-category='list' style='font-size:14px'>· AWS Kubernetes 기반에서 데이터플랫폼을 구축하고 운영해요.<br>· 데이터플랫폼 전반의 아키텍처 구성, 배포, 모니터링, 트러블 슈팅, 운영 정책 수립 등의 업무를 담당해요.<br>· 비용과 성능을 고려한 효율적인 데이터 플랫폼을 기술적으로 검토하고 도입해요.<br>· 데이터 소스단의 다양한 기술(rdbms, kafka 등)에 대한 이해를 바탕으로 효율적인 적재 방식을 고려한<br>데이터 적재 파이프라인 개발 및 운영 업무를 수행해요.<br>· 데이터 개발 및 활용 업무 효율을 위한 기반환경 구축 및 자동화 개발 업무를 수행해요. (Airflow, 메타조회,<br>DQ 등)</p>\n<p id='22' data-category='paragraph' style='font-size:20px'>ML 데이터 플랫폼팀을 소개해요</p>\n<p id='23' data-category='paragraph' style='font-size:18px'>만약 당근의 홈 화면의 중고 거래 게시글이 누구에게나 똑같이 최신순으로만 보인다면 어떤 모습일까요? 나는<br>아이가 없음에도 유모차나 육아용품이 뜨거나, 냥집사, 식집사임에도 관련 물품이 안보이고, 현재 관심 없는 의류나<br>가구, 미용용품이 보일 거예요. 이처럼 개인화 피드와 추천은 당근의 1,900만 MAU 사용자들이 당근을 더 잘<br>이용하기 위해서 필수적인 부분이에요.<br>피드실 ML 데이터 플랫폼 팀은 당근에서의 피드 개인화와 광고 추천을 비롯해 여러 팀이 다양한 도메인에서<br>활용하는 머신러닝 서비스들이 대용량 데이터를 각자의 서비스에 효과적으로 활용할 수 있도록, 견고하고 확장<br>가능한 고성능 데이터 플랫폼을 구축하고 있어요.</p>\n<br><p id='24' data-category='paragraph' style='font-size:14px'>· ML 데이터 플랫폼 팀은 7명의 소프트웨어 엔지니어로 구성된 팀이에요</p>\n<p id='25' data-category='list' style='font-size:16px'>● ML 데이터 플랫폼 팀은 피쳐 스토어와 추천 엔진, 스트림 데이터 파이프라인 등 피드 개인화 및 광고 추천 등<br>추천 시스템을 위해 필요한 서비스들을 운영하고 있어요</p>\n<p id='26' data-category='list' style='font-size:14px'>· 2,000만 MAU 사용자들의 추천을 위해 초당 100K+ 대용량 트래픽 요청을 p99를 넘어 p99.9 기준 30ms<br>이하로 처리하고 있어요</p>\n<p id='27' data-category='paragraph' style='font-size:14px'>○ 이는 당근의 수백 개 백엔드 서비스 중에서도 손에 꼽히는 많은 처리량이에요</p>\n<p id='28' data-category='paragraph' style='font-size:16px'>● 그와 동시에 가능한 한 최신 정보로 추천하기 위해 여러 서비스의 데이터를 스트림으로 준 실시간 수집하고<br>처리하고 있어요</p>\n<p id='29' data-category='paragraph' style='font-size:16px'>○ Kafka, GCP Pub/Sub에서 100+개의 이벤트 스트림을 처리해 1,000개가 넘는 피쳐를 피쳐 스토어에서<br>제공하고 있어요</p>\n<header id='30' style='font-size:20px'>B<br>kakaobank</header>\n<h1 id='31' style='font-size:16px'>담당할 업무</h1>\n<p id='32' data-category='list' style='font-size:14px'>· Al/Data Product를 위한 확장 가능하고 안정적인 데이터 처리 프로세스를 개발하고 운영하는 일<br>· 머신러닝 워크플로우 전반을 아우르는 MLOps 파이프라인을 개발하고 운영하는 일<br>· 데이터 거버넌스 및 데이터 품질 관리 플랫폼을 구축하고 운영하는 일<br>· On-Premise 및 Cloud 기반의 모델 실험 플랫폼과 MLOps 플랫폼을 운영하는 일</p>\n<h1 id='33' style='font-size:16px'>필수 경험과 역량</h1>\n<p id='34' data-category='list' style='font-size:14px'>· SQL, Python, Spark 등을 이용한 대용량 데이터 처리 프로세스를 설계·운영해본 분<br>· Airflow, Jflow, Jenkins 등의 워크플로우에 대한 이해가 있는 분<br>· Docker, Kubernetes 등 컨테이너 환경에서의 서비스 운영 경험이 있는 분<br>· 다양한 팀과 협업하며 문제를 구조화하고 끝까지 해결해본 경험이 있는 분</p>\n<h1 id='35' style='font-size:22px'>우아한항세를</h1>\n<h1 id='36' style='font-size:16px'>[업무내용]</h1>\n<br><p id='37' data-category='list' style='font-size:14px'>- ML 모델 서빙 파이프라인 개발 : 라이더 수요예측, 배달시간예측 등 온/오프라인 ML 모델의 API 및 데이터 파이프라인을 구축합니다.<br>- 실시간 데이터 처리 플랫폼 구축 : Flink를 활용한 실시간 Feature Engineering 및 스트리밍 플랫폼을 개발하고 운영합니다.<br>- AI 파이프라인 최적화 : 데이터 전처리부터 모델 학습, 추론까지 이어지는 효율적인 AI 파이프라인을 설계하고 관리합니다.<br>- 데이터 기반 의사결정 지원 : 다양한 소스의 데이터를 적재/가공하여 AI 모델링에 필요한 최적의 데이터 환경을 구축합니다.</p>\n<p id='38' data-category='paragraph' style='font-size:20px'>[지원자격]</p>\n<br><p id='39' data-category='list' style='font-size:14px'>- AI/ML 도메인에 대한 종합적인 이해와 최소 3년 이상의 관련 프로젝트 경험을 갖추신 분<br>- 온/오프라인 ML 모델 서빙 경험이 있으신 분<br>- 대용량 분산 시스템(Hadoop, Spark, Kafka)을 활용한 경험이 있으신 분<br>- 데이터 파이프라인 설계 및 구현에 대한 실무 경험이 있으신 분<br>- 팀원들과 원활하게 소통하며 함께 성장하고자 하는 분</p>\n<p id='40' data-category='paragraph' style='font-size:18px'>[우대사항]</p>\n<br><p id='41' data-category='list' style='font-size:14px'>- Catboost, LightGBM, Tensorflow, pytorch 등 다양한 프레임워크 및 ONNX를 활용한 온라인 서빙 API 개발 경험이 있으신 분<br>- 대용량 실시간 처리 경험(Flink, Spark Streaming, Kafka Streams)이 있으신 분<br>- Spark 및 데이터 처리 성능 최적화 경험이 있으신 분<br>- 데이터 과학자 및 분석가와 협업해본 경험이 있으신 분</p>\n<p id='42' data-category='paragraph' style='font-size:16px'>[개발환경]</p>\n<p id='43' data-category='list' style='font-size:14px'>- 주요 기술 : Python, Spark, Flink, Airflow, Kafka, AWS Services, SQL<br>- 업무 도구 : GitLab, Jira, Confluence<br>- 코드 리뷰 : GitLab MR로 온라인 코드 리뷰 진행<br>- 빌드, 배포 : GitLab CI<br>- 테스트 : GitLab CI로 유닛 테스트 및 통합 테스트</p>\n<h1 id='44' style='font-size:20px'>저는 저런 거 한 번도 안 써봤는데요 !?</h1>\n<h1 id='45' style='font-size:16px'>와서 배우시면 됩니다 !</h1>\n<h1 id='46' style='font-size:14px'>교육세션과 함께 기초프로젝트를 하신 여러분이라면 무엇이든지 배우고 활용 가능</h1>\n<p id='47' data-category='paragraph' style='font-size:14px'>How we study</p>\n<h1 id='48' style='font-size:20px'>커리큘럼 - 학기중</h1>\n<p id='49' data-category='list' style='font-size:16px'>● Docker / k8s<br>● DB<br>● Airflow<br>● Cloud computing<br>● Kafka<br>● MLOps</p>\n<footer id='50' style='font-size:14px'>방학 때는 hadoop, spark을 다룹니다</footer>\n<h1 id='51' style='font-size:20px'>팀 프로젝트</h1>\n<h1 id='52' style='font-size:22px'>Highlighter V2</h1>\n<h1 id='53' style='font-size:16px'>Highlighter: Real-Time Highlight Extraction</h1>\n<p id='54' data-category='paragraph' style='font-size:14px'>Highlighter is a project designed to automatically extract real-time highlights from YouTube livestreams.<br>Highlight timestamps are initially detected based on chat traffic surges, and these timestamps are then refined<br>using context from video transcripts generated by Speech-to-Text (STT). This approach combines both audience<br>reactions and content analysis for more accurate and meaningful highlight extraction.</p>\n<p id='55' data-category='paragraph' style='font-size:14px'>After extracting the highlights, Highlighter can automatically upload them back to YouTube for immediate<br>sharing.</p>\n<p id='56' data-category='paragraph' style='font-size:14px'>예시 : 실시간 영상 댓글을 바탕으로 영상 하이라이팅 구간 추출 및 배포 서비스</p>\n<br><p id='57' data-category='paragraph' style='font-size:18px'>어떤 기술 스택을 사용해보았냐 보다는<br>어떤 문제 해결을 위해 어떤 기술을 썼다<br>라고 말할 수 있는 프로젝트를 선호합니다</p>\n<h1 id='58' style='font-size:20px'>팀 스터디</h1>\n<h1 id='59' style='font-size:16px'>데이터 엔지니어링과 개발자 커리어에 도움이 될만한 스터디를 진행합니다</h1>\n<p id='60' data-category='paragraph' style='font-size:14px'>Ex ) MLOps , 코터 스터디, backend/frontend, Kafka, Hadoop, spark, aws 등</p>\n<h1 id='61' style='font-size:22px'>해커톤</h1>\n<br><header id='62' style='font-size:20px'>함께 해커톤 or 공모전을 나가서 프로젝트를 완성해봅시다</header>\n<figure id='63'><img style='font-size:14px' alt=\"HACKATHON\nAGENT\n팀 ODE\n이재영\nHACKAT\n김정인\n2025\n손재훈\n팀 ODE\n 14pstage *\nstabersan, \n日本\n방준현\nメ ardstage 特点\nIndstage\n금속\n★\n제대학교\n연세대학교\n외인필\nODE �\nHACKATION\nAGENT IGH 2025\" data-coord=\"top-left:(249,701); bottom-right:(1015,2042)\" /><br><figcaption id='64' style='font-size:18px'>Upstage AGI 해커톤</figcaption></figure>\n\n<p id='65' data-category='paragraph' style='font-size:16px'>ODE 팀 우수상</p>\n<br><figure id='66'><img style='font-size:14px' alt=\"FORMula\no1보다 강력한 Rag 기반 Form 작성 Agent\" data-coord=\"top-left:(1158,870); bottom-right:(2029,2028)\" /></figure>\n<h1 id='67' style='font-size:18px'>오픈소스 컨트리뷰션</h1>\n<h1 id='68' style='font-size:14px'>작은 규모의 오픈소스 혹은 누구나 알만한 대규모 프로젝트에 기여해봅시다</h1>\n<h1 id='69' style='font-size:18px'>이런 분과 함께하고 싶어요</h1>\n<p id='70' data-category='list' style='font-size:14px'>● 인턴 지원, 취업을 위한 의미 있는 프로젝트 진행을 하고 싶은 분<br>전체적인 파이프라인 설계를 하고 싶은 분<br>● 다양한 개발자 직무를 수행하고 있는 기존 기수와 네트워킹 하고 싶은 분<br>● 팀원들과 함께 IT 이야기를 하고 덕후력을 뽐내실 분<br>공모전, 해커톤을 함께 나가며 동고동락 하실 분<br>● 올라운더가 되고 싶은 분<br>● 문제를 해결하는 것에 진심인 분</p>\n<h1 id='71' style='font-size:18px'>각 시 합</h1>\n<p id='72' data-category='paragraph' style='font-size:14px'>무엇이든 궁금하시면 연락주세요<br>DE 팀장 김정인<br>010-2213-4083</p>",
    "1MzKrJK4RCPpUkItTk4cDI65c1tNHg7oH": "<h1 id='0' style='font-size:18px'>Speech2SQL</h1>\n<br><h1 id='1' style='font-size:14px'>강의·회의록 생성 및 검색 시스템</h1>\n<h1 id='2' style='font-size:14px'>Motivation</h1>\n<figure id='3'><img alt=\"\" data-coord=\"top-left:(471,460); bottom-right:(1529,1049)\" /></figure>\n<h1 id='4' style='font-size:14px'>Motivation</h1>\n<figure id='5'><img alt=\"\" data-coord=\"top-left:(652,299); bottom-right:(1348,1037)\" /></figure>\n<h1 id='6' style='font-size:18px'>Motivation</h1>\n<figure id='7'><img style='font-size:14px' alt=\"녹음 파일 영어 텍스트\n번역기 스크롤, Ctrl+F … 원하는 정보\" data-coord=\"top-left:(116,281); bottom-right:(1939,973)\" /></figure>\n<h1 id='8' style='font-size:20px'>Problem Definition</h1>\n<p id='9' data-category='list' style='font-size:16px'>• 기존 서비스: 텍스트만 제공 → 원하는 정보 검색은 수동 스크롤/검색 필요</p>\n<p id='10' data-category='list' style='font-size:16px'>• 재활용의 불편함</p>\n<h1 id='11' style='font-size:16px'>• 강연/회의 자체에 대한 인사이트 결여</h1>\n<br><p id='12' data-category='paragraph' style='font-size:14px'>ㄴ 강연자는 자신의 주장을 강연 초반에 말하는 스타일인가? / 회의에서 아이디어를 가장 많이 낸 사람은 누구인가? 등등</p>\n<h1 id='13' style='font-size:14px'>“읽는 문서”에서 “검색/분석 가능한 지식베이스”로의 전환</h1>\n<h1 id='14' style='font-size:14px'>Architecture</h1>\n<figure id='15'><img alt=\"\" data-coord=\"top-left:(509,257); bottom-right:(1496,1058)\" /></figure>\n<h1 id='16' style='font-size:18px'>Data Pipeline</h1>\n<p id='17' data-category='list' style='font-size:14px'>• 업로드/수집: wav 파일, 메타(title, participants)<br>• DB 적재: postgreSQL DB의 meetings(id, title, date, duration, …) 테이블에 저장<br>• STT: OpenAI의 Whisper 이용해 전처리 및 전사<br>• DB 적재: postgreSQL DB의 utterances(id, speaker, timestamp, text, …) 테이블에 저장<br>• 검색(text2sql): 사용자의 자연어 입력을 받으면 upstage API로 SQL query 생성<br>• 답변 제공: 검색 결과로 얻은 row 중 상위 k개만을 뽑아 모델이 반환한 정답 제시<br>• 요약/분석(향후 구현): 요약 PDF 생성, 발화 분석</p>\n<h1 id='18' style='font-size:18px'>User Scenario</h1>\n<h1 id='19' style='font-size:14px'>• Step 1. 오디오 파일 업로드</h1>\n<figure id='20'><img alt=\"\" data-coord=\"top-left:(148,396); bottom-right:(1488,980)\" /></figure>\n<h1 id='21' style='font-size:18px'>User Scenario</h1>\n<h1 id='22' style='font-size:14px'>• Step 2. 자연어 질의</h1>\n<h1 id='23' style='font-size:18px'>User Scenario</h1>\n<h1 id='24' style='font-size:14px'>• Step 3. 원하는 답변 제공</h1>\n<h1 id='25' style='font-size:14px'>Demo</h1>\n<h1 id='26' style='font-size:18px'>Limits & Potential Improvements</h1>\n<p id='27' data-category='list' style='font-size:14px'>• 현재 매우 간단하고, 일차원적인 질의만 처리 가능</p>\n<p id='28' data-category='list' style='font-size:14px'>• 단순히 해당하는 텍스트 문장만 보여주는 출력 형태</p>\n<p id='29' data-category='list' style='font-size:14px'>• 언어의 제약</p>\n<p id='30' data-category='list' style='font-size:14px'>• 요약/분석 구현</p>\n<h1 id='31' style='font-size:14px'>들어주셔서 감사합니다!</h1>",
    "13gxtZzPITfugGsYcLuwqnuXwNt7lI5hN": "<table id='0' style='font-size:14px'><thead></thead><tbody><tr><td colspan=\"7\">Product UseCase 프로젝트 데모 요청서 : (1) 상담 기록 유형 분석 및 알림 자동화</td></tr><tr><td colspan=\"7\">녹음 파일을 업로드하면 Whisper 로 정확히 전사하고 PostgreSQL 에 구조화해 저장하여, 사용자가 자연어로 묻는 질문을 Text2SQL 로 안전한 SQL 로 변환해 회의별 스코프로 검색·조회하고, 답변을 프로젝트 목표 제시하여 정보 탐색 시간을 최소화하고 의사결정·요약· 분석까지 한 번에 수행할 수 있는 엔드투엔드 시스템을 구축하는 것입니다.</td></tr><tr><td>담당자</td><td colspan=\"6\">박용우(팀장). 김현수(프런트엔드), 민세희(NLP), 박준서(백엔드), 조재관(STT)</td></tr><tr><td rowspan=\"2\">니즈</td><td colspan=\"6\">회의 중 특정 주제·발언자· 결정 사항을 빠르게 찾을 방법이 제한적임. ( 수동 스크롤, 검색 필요)</td></tr><tr><td colspan=\"6\">다양한 회의 기록 검색, 회의별 스코프 검색 및 DB 기반 분석 가능</td></tr><tr><td rowspan=\"5\">산출물 목록</td><td>기존 서비스 - 회의 기록이 축적돼도 데이터베이스화가 안 되어 재활용이 어려움. 프로젝트 코드</td><td colspan=\"5\">app.py, query.py 등</td></tr><tr><td>DB</td><td colspan=\"5\">Input 데이터 Postgre DB 에 저장</td></tr><tr><td>모델 파이프라인</td><td colspan=\"5\">Whisper STT, Diarization, Summarization, Text2SQL</td></tr><tr><td>문서</td><td colspan=\"5\">README.md, QUICK_START.md</td></tr><tr><td>프런트엔드</td><td colspan=\"5\">streamlit 기반</td></tr><tr><td rowspan=\"3\">데이터셋</td><td>링크</td><td colspan=\"5\">AMI Meeting Corpus (Huggingface)</td></tr><tr><td>특징</td><td colspan=\"5\">다중 화자 회의 음성 데이터셋, 약 100 시간 이상의 영어 회의 녹음, 발화자별 타임스탬프 포함 - 참고 다른 데이터셋 레퍼런스</td></tr><tr><td>레퍼런스</td><td colspan=\"5\">AMI Meeting Corpus (Carletta et al., 2005) → 공식 데이터셋 소개 논문: “The AMI Meeting Corpus: A Pre-announcement”</td></tr><tr><td rowspan=\"3\">전체 파이프라인</td><td rowspan=\"2\">시스템 구축</td><td colspan=\"5\">단계 설명</td></tr><tr><td>Audio Loader Speech-to-Text (STT) Database Construction Text2SQL Query Execution</td><td colspan=\"4\">음성 데이터 업로드 Whisper 기반 음성 → 텍스트 변환, 화자 분리 포함 텍스트/발화자/시간 정보를 PostgreSQL DB에 저장 사용자 자연어 질의를 SQL로 변환 DB에서 조건에 맞는 대화/요약/발언 추출</td></tr><tr><td>사용자 시나리오</td><td>wav 파일 업로드 Auto Transcribe & Summarize Search & Query Retrieve & Answer</td><td colspan=\"4\">사용자가 강의 또는 회의 녹음 파일 업로드 시스템이 STT 수행 및 요약본 PDF 생성 사용자가 “OO 발언 언제 나왔어?” 같은 자연어 질의 입력 Text2SQL → DB 조회 → 결과 반환</td></tr><tr><td rowspan=\"5\">프로젝트 기능 명세서</td><td rowspan=\"3\">시스템 구축 파이프라인</td><td># 모듈</td><td>설명</td><td>입력</td><td>출력</td><td>비고</td></tr><tr><td>1 Audio Upload API 2 Whisper STT 3</td><td>WAV 업로드·저장·메타 생성 전사/세그먼트 생성 화자 라벨   정렬 NL</td><td>*.wav wav path wav path, query, schema,</td><td colspan=\"2\">filename, meeting_id segments(text,start,end,lang) seg segments+speaker sql Upstage API</td></tr><tr><td>Speaker Diarization 4 Text2SQL 5 FTS/ILIKE</td><td>→ SQL(SELECT only) 키워드 검색/폴백</td><td>query, meetingrows</td><td></td><td></td></tr><tr><td rowspan=\"2\">사용자 실시간 흐름</td><td># 모듈</td><td>설명</td><td>입력</td><td>출력</td><td>비고</td></tr><tr><td>1 2</td><td>Audio Upload API WAV 파일 업로드 Query Exec SQL 실행/스코프 주입</td><td>*.wav sql, params</td><td colspan=\"2\">filename, meeting_id rows</td></tr></tbody></table>\n<h1 id='1' style='font-size:18px'>프로젝트 기능</h1>\n<br><h1 id='2' style='font-size:18px'>명세서</h1>\n<h1 id='3' style='font-size:14px'>사용자 실시간 흐름</h1>\n<br><figure id='4'><img style='font-size:14px' alt=\"3 Answering 한 줄 답변 생성 rows, query 자연어 답변 Upstage API\n섹션 구성 요소 예시\n① Home 기능 소개, 빠른 시작 안내\n② 파일 업로드 WAV 파일 업로드/처리 상태 표시\n대시보드 구성\n③ 자연어 검색 회의 선택, 모드(text2sql/fts) 선택, 결과 출력\n④ 요약 생성 회의 선택 → 요약/액션/결정 보기\n⑤ 분석 회의 수/발화 수/월별 추이/화자별 발화시간\" data-coord=\"top-left:(133,139); bottom-right:(1637,938)\" /></figure>\n<table id='5' style='font-size:16px'><thead></thead><tbody><tr><td colspan=\"10\">Upstage Product UseCase : (1) 상담 기록 유형 분석 및 알림 자동화 업무 관리 대장</td></tr><tr><td colspan=\"2\">PIC(담당자)</td><td>업무 대분류</td><td>업무 수행 안내</td><td>업무 수행 공간</td><td>시작일</td><td>마감일</td><td>완료여부</td><td>제작자 업무 수행내역 기재</td><td>특이사항</td></tr><tr><td colspan=\"2\">업스</td><td>all</td><td>업무 킥오프 미팅</td><td>- 킥오프 미팅노트</td><td>5/26</td><td>5/26</td><td>TRUE</td><td></td><td></td></tr><tr><td colspan=\"2\">업스</td><td>all</td><td>프로젝트 기능 명세서 작성</td><td>[Upstage Product UseCae] 제작 현황 마스터시트</td><td>5/26</td><td>5/26</td><td>TRUE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA</td><td>기타업무</td><td>리더 선정</td><td></td><td>5/26</td><td>5/27</td><td>TRUE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA</td><td>프로젝트</td><td>프로젝트 설계</td><td>- 업무 진행 github 링크</td><td>5/26</td><td>6/4</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA</td><td>프로젝트 가이드</td><td>프로젝트 가이드 작성</td><td>[Ext] ( 데모 가이드 ) 1. 상담 기록 유형 분석 및 알림 자동화 .docx</td><td>5/26</td><td>6/4</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">업스</td><td>프로젝트</td><td>프로젝트 코드 검수</td><td>[Upstage Product UseCae] 제작 현황 마스터시트</td><td>6/5</td><td>6/5</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">업스</td><td>프로젝트 가이드</td><td>프로젝트 가이드 검수</td><td>[Upstage Product UseCae] 제작 현황 마스터시트</td><td>6/5</td><td>6/5</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA</td><td>all</td><td>검수 내역 반영</td><td>[Upstage Product UseCae] 제작 현황 마스터시트</td><td>6/5</td><td>6/6</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA 업스</td><td>all all</td><td>강의 최종본 검수 및 마무리 아카이빙 업무 마무리 미팅</td><td>최종 가이드 링크 - 웹 데모 링크 - 최종 프로젝트 github 링크 pr</td><td>6/6</td><td>6/6</td><td>FALSE FALSE</td><td></td><td></td></tr></tbody></table>\n<table id='6' style='font-size:14px'><thead></thead><tbody><tr><td>프로젝트/ 프로젝트</td><td>가이드 검수내역</td><td></td><td></td><td></td><td>반영 완료 내역</td><td>최종</td><td>파일</td><td>링크</td></tr><tr><td>검수자</td><td>콘텐츠 종류</td><td>콘텐츠명 검수항목</td><td>수정 필요 여부</td><td>검수 내역 ( 수정한 경우, 어떻게</td><td></td><td>수정하였는지 세부 내용 기재 & 최종 검수 반영하지</td><td>확인( 운영진 최종 자료로 확인) 사유 기재 ( 본</td><td>촬영 필수)</td></tr><tr><td>프로젝트</td><td>프로젝트</td><td>코드</td><td>필요</td><td></td><td></td><td>경우</td><td>않는 TRUE</td><td></td></tr><tr><td>프로젝트</td><td></td><td></td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td></tr><tr><td>퍼블리싱 문서</td><td></td><td></td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td></tr></tbody></table>\n<br><p id='7' data-category='paragraph' style='font-size:16px'>퍼블리싱 문서</p>\n<br><p id='8' data-category='paragraph' style='font-size:20px'>FALSE</p>",
    "17uhHcFk98G4HZqOBTQmHh91fC4aOJD2o": "<figure id='0'><img alt=\"\" data-coord=\"top-left:(1,3); bottom-right:(904,1375)\" /></figure>\n<br><h1 id='1' style='font-size:20px'>게임 추천 서비스</h1>\n<br><h1 id='2' style='font-size:16px'>유저 리뷰 기반 게임 유사도 분석 및 추천</h1>\n<h1 id='3' style='font-size:14px'>팀장: 한원석</h1>\n<h1 id='4' style='font-size:14px'>팀원: 김우진, 노유빈, 안시연</h1>\n<h1 id='5' style='font-size:20px'>목차</h1>\n<h1 id='6' style='font-size:16px'>프로젝트 소개</h1>\n<br><h1 id='7' style='font-size:14px'>필요성 및 목표</h1>\n<br><h1 id='8' style='font-size:16px'>데이터 수집</h1>\n<h1 id='9' style='font-size:14px'>크롤링 및 데이터 확장</h1>\n<h1 id='10' style='font-size:16px'>데이터 전처리 & EDA</h1>\n<br><h1 id='11' style='font-size:14px'>데이터 정제 및 탐색적 분석</h1>\n<br><h1 id='12' style='font-size:16px'>향후 계획</h1>\n<h1 id='13' style='font-size:14px'>추천 서비스 구현 및 결론</h1>\n<h1 id='14' style='font-size:20px'>왜 게임 추천 서비스가 필요한가?</h1>\n<table id='15' style='font-size:16px'><thead></thead><tbody><tr><td>장르의 다양성</td><td>기존 추천 시스템의 한계</td></tr><tr><td>너무 많은 게임 장르가 존재하여 신규 게이머에게 높은 진입장벽 형성</td><td>스팀의 태그/플레이 시간 기반 추천은 실제 유저 경험을 충분히 반영하지 못함</td></tr></tbody></table>\n<h1 id='16' style='font-size:18px'>리뷰 기반 추천의 강점</h1>\n<p id='17' data-category='paragraph' style='font-size:14px'>실제 게이머의 생생한 경험과 피드백을 바탕으로 한 정확한 추천 가능<br>게임 간 유사도 계산을 바탕으로, 사용자의 취향에 맞는 새로운 게임 발굴 가능</p>\n<br><figure id='18'><img alt=\"\" data-coord=\"top-left:(1530,365); bottom-right:(2280,1167)\" /></figure>\n<h1 id='19' style='font-size:18px'>프로젝트 목표</h1>\n<table id='20' style='font-size:14px'><thead></thead><tbody><tr><td>리뷰 & 유저 기반 유사도 계산 100만 개 이상의 유저 리뷰를 분석하여 게임 간 유사도 측정</td></tr><tr><td>장르 관계 시각화 네트워크 분석과 클러스터링을 통한 게임 장르 간 관계 시각화 개인화 추천 서비스 A게임을 좋아하는 유저에게 B게임을 추천하는 맞춤형 서비스 구현</td></tr></tbody></table>\n<h1 id='21' style='font-size:20px'>데이터 수집 — 메타크리틱 & 스팀 리뷰</h1>\n<h1 id='22' style='font-size:16px'>데이터 소스</h1>\n<p id='23' data-category='list' style='font-size:14px'>• 메타크리틱: 평점 상위 게임 1,700개 추출<br>• 스팀: 1,081개의 게임에서 약 17만 개 리뷰 수집</p>\n<br><h1 id='24' style='font-size:16px'>핵심 이슈</h1>\n<p id='25' data-category='paragraph' style='font-size:14px'>게임명으로 스팀 AppID 매칭 문제 발생 (1,700개 중 1,081개 매칭,<br>문제 미해결)</p>\n<p id='26' data-category='paragraph' style='font-size:14px'>데이터 수집 흐름: Metacritic → 게임명 담긴 csv 파일 크롤링 → Stea<br>m에 게임 검색색 → 리뷰 수집</p>\n<br><p id='27' data-category='paragraph' style='font-size:14px'># Steam API 호출로 AppID 매칭, 리뷰 JSON 수집<br>def get_appid(game_name):</p>\n<br><p id='28' data-category='paragraph' style='font-size:14px'># 게임명으로 스팀 AppID 검색<br>url = f\"https://store.steampowered.com/api/storesearch\"<br>params = {\"term\": game_name, \"l\": \"english\"}<br>resp = requests.get(url, params=params)<br>data = resp.json()</p>\n<p id='29' data-category='paragraph' style='font-size:14px'>if data.get(\"total\", 0) > 0:<br>return data[\"items\"][0][\"id\"]<br>return None</p>\n<p id='30' data-category='paragraph' style='font-size:14px'># 리뷰 수집 함수<br>def get_reviews(appid, max_reviews=200):<br>if not appid:<br>return []<br># 생략...</p>\n<p id='31' data-category='paragraph' style='font-size:14px'>Steam API를 호출하여 게임명으로 AppID를 매칭하고 리뷰 JSON을 수집</p>\n<h1 id='32' style='font-size:20px'>데이터 수집 — 유저 확장</h1>\n<h1 id='33' style='font-size:14px'>async def fetch_reviews(session, appid, steamid):</h1>\n<br><p id='34' data-category='paragraph' style='font-size:14px'>\"\"\"비동기적으로 특정 유저의 특정 게임 리뷰 가져오기\"\"\"<br>url = f\"{STEAM_API_URL.format(appid=appid)}&user={steamid}\"<br>async with session.get(url) as resp:<br>return (await resp.json()).get(\"reviews\", [])</p>\n<br><h1 id='35' style='font-size:16px'>유저 기반 데이터 확장 전략</h1>\n<p id='36' data-category='list' style='font-size:14px'>• 기존 17만 리뷰에서 유저 ID(steamid) 추출<br>• 각 유저의 전체 게임 리뷰 추가 수집<br>• 최종 약 100만 개 리뷰 데이터 확보</p>\n<br><h1 id='37' style='font-size:14px'>async def main():</h1>\n<br><p id='38' data-category='paragraph' style='font-size:14px'>\"\"\"메인 비동기 실행 함수\"\"\"<br>async with aiohttp.ClientSession() as session:</p>\n<h1 id='39' style='font-size:16px'>성능 개선</h1>\n<p id='40' data-category='paragraph' style='font-size:14px'>asyncio + aiohttp 기반 비동기 크롤링으로 동기<br>방식 대비 수십 배 성능 향상</p>\n<br><h1 id='41' style='font-size:14px'>tasks = []</h1>\n<br><h1 id='42' style='font-size:14px'>for steamid in user_ids:</h1>\n<br><h1 id='43' style='font-size:14px'>for appid in app_ids:</h1>\n<br><h1 id='44' style='font-size:14px'>tasks.append(fetch_reviews(session, appid, steamid))</h1>\n<p id='45' data-category='paragraph' style='font-size:14px'>results = await asyncio.gather(*tasks)<br>return results</p>\n<p id='46' data-category='paragraph' style='font-size:14px'>asyncio는 Python의 비동기 프로그래밍 표준 라이브러리입니다. 단일 스레드에서도 I/O 작업을 효율적으로 처리하여 애플리케이션의<br>응답성과 성능을 향상시키는 데 활용했습니다.</p>\n<p id='47' data-category='paragraph' style='font-size:14px'>aiohttp는 asyncio 기반의 비동기 HTTP 클라이언트/서버 프레임워크입니다. 대규모 웹 요청을 동시에 효율적으로 처리할 수 있어 이번<br>데이터 수집에 특히 유용했습니다.</p>\n<h1 id='48' style='font-size:20px'>데이터 전처리</h1>\n<h1 id='49' style='font-size:16px'>극단치 제거</h1>\n<br><h1 id='50' style='font-size:14px'>500자 이상의 지나치게 긴 리뷰 제거</h1>\n<p id='51' data-category='paragraph' style='font-size:14px'># 리뷰 길이 분포 확인<br>review_lengths = df['review'].str.len()<br>plt.hist(review_lengths, bins=50)<br>plt.xlabel('Review Length’)<br>plt.ylabel('Frequency’)<br>plt.title('Distribution of Review Lengths’)<br>plt.show()</p>\n<br><h1 id='52' style='font-size:16px'>텍스트 정규화</h1>\n<br><p id='53' data-category='paragraph' style='font-size:14px'>특수 문자 제거 및 텍스트 정규화 처리</p>\n<h1 id='54' style='font-size:20px'>EDA (1) — 리뷰 길이 분포</h1>\n<figure id='55' data-category='chart'><img data-coord=\"top-left:(192,434); bottom-right:(1066,1004)\" /><figcaption><p>Chart Title: Distribution of Review Lengths</p><p>X-Axis: Review Length (number of characters)</p><p>Y-Axis: Frequency</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td><td>10</td><td>11</td><td>12</td><td>13</td><td>14</td><td>15</td><td>16</td><td>17</td><td>18</td><td>19</td><td>20</td><td>21</td><td>22</td><td>23</td><td>24</td><td>25</td><td>26</td><td>27</td><td>28</td><td>29</td><td>30</td><td>31</td><td>32</td><td>33</td><td>34</td><td>35</td><td>36</td><td>37</td><td>38</td><td>39</td><td>40</td><td>41</td><td>42</td><td>43</td><td>44</td><td>45</td><td>46</td><td>47</td><td>48</td><td>49</td><td>50</td><td>51</td><td>52</td><td>53</td><td>54</td><td>55</td><td>56</td><td>57</td><td>58</td><td>59</td><td>60</td><td>61</td><td>62</td><td>63</td><td>64</td><td>65</td><td>66</td><td>67</td><td>68</td><td>69</td><td>70</td><td>71</td><td>72</td><td>73</td><td>74</td><td>75</td><td>76</td><td>77</td><td>78</td><td>79</td><td>80</td><td>81</td><td>82</td><td>83</td><td>84</td><td>85</td><td>86</td><td>87</td><td>88</td><td>89</td><td>90</td><td>91</td><td>92</td><td>93</td><td>94</td><td>95</td><td>96</td><td>97</td><td>98</td><td>99</td><td>100</td><td>101</td><td>102</td><td>103</td><td>104</td><td>105</td><td>106</td><td>107</td><td>108</td><td>109</td><td>110</td><td>111</td><td>112</td><td>113</td><td>114</td><td>115</td><td>116</td><td>117</td><td>118</td><td>119</td><td>120</td><td>121</td><td>122</td><td>123</td><td>124</td><td>125</td><td>126</td><td>127</td><td>128</td><td>129</td><td>130</td><td>131</td><td>132</td><td>133</td><td>134</td><td>135</td><td>136</td><td>137</td><td>138</td><td>139</td><td>140</td><td>141</td><td>142</td><td>143</td><td>144</td><td>145</td><td>146</td><td>147</td><td>148</td><td>149</td><td>150</td><td>151</td><td>152</td><td>153</td><td>154</td><td>155</td><td>156</td><td>157</td><td>158</td><td>159</td><td>160</td><td>161</td><td>162</td><td>163</td><td>164</td><td>165</td><td>166</td><td>167</td><td>168</td><td>169</td><td>170</td><td>171</td><td>172</td><td>173</td><td>174</td><td>175</td><td>176</td><td>177</td><td>178</td><td>179</td><td>180</td><td>181</td><td>182</td><td>183</td><td>184</td><td>185</td><td>186</td><td>187</td><td>188</td><td>189</td><td>190</td><td>191</td><td>192</td><td>193</td><td>194</td><td>195</td><td>196</td><td>197</td><td>198</td><td>199</td><td>200</td><td>201</td><td>202</td><td>203</td><td>204</td><td>205</td><td>206</td><td>207</td><td>208</td><td>209</td><td>210</td><td>211</td><td>212</td><td>213</td><td>214</td><td>215</td><td>216</td><td>217</td><td>218</td><td>219</td><td>220</td><td>221</td><td>222</td><td>223</td><td>224</td><td>225</td><td>226</td><td>227</td></tr></thead><tbody></tbody></table></figure>\n<br><p id='56' data-category='paragraph' style='font-size:16px'>리뷰 길이 분석 결과</p>\n<p id='57' data-category='list' style='font-size:14px'>• 대부분의 리뷰는 200자 이하로 작성됨<br>• 소수의 극단적으로 긴 리뷰(500자 이상) 존재<br>• 전처리 과정에서 극단치 제거의 필요성 확인</p>\n\n<figure id='59' data-category='chart'><img data-coord=\"top-left:(64,158); bottom-right:(1045,955)\" /><figcaption><p>Chart Title: Game Emotional Map by Similarity</p><p>X-Axis: t-SNE Dimension 2 (Similarity)</p><p>Y-Axis: Positive Ratio (%)</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>(-10.0)</td><td>(-10.5)</td><td>(+0.5)</td></tr></thead><tbody><tr><td>item_01</td><td>0%</td><td>0%</td><td>0%</td></tr></tbody></figure><caption id='58' style='font-size:22px'>EDA (2) — 게임 감정 지도</caption></table>\n<br><p id='60' data-category='paragraph' style='font-size:14px'>설명: 리뷰 임베딩 벡터를 t-SNE로 2차원 축소, 색은 긍정률</p>\n<p id='61' data-category='paragraph' style='font-size:16px'>from sklearn.manifold import TSNE<br>import matplotlib.pyplot as plt</p>\n<br><p id='62' data-category='paragraph' style='font-size:16px'>tsne = TSNE(n_components=2, random_state=42)<br>embeddings_2d = tsne.fit_transform(review_embeddings)</p>\n<br><h1 id='63' style='font-size:16px'>plt.scatter(embeddings_2d[:,0], embeddings_2d[:,1], c=positive_ratio, cmap='RdYlBu')</h1>\n<br><p id='64' data-category='paragraph' style='font-size:20px'>1</p>\n<br><h1 id='65' style='font-size:18px'>군집 형성 관찰</h1>\n<br><p id='66' data-category='paragraph' style='font-size:14px'>리뷰 패턴이 비슷한 게임들이 시각화 상에서 인접 → 일부는 장르와 연관</p>\n<h1 id='67' style='font-size:18px'>2 장르 간 관계</h1>\n<br><p id='68' data-category='paragraph' style='font-size:14px'>장르가 다르더라도 유사한 리뷰 특성을 가진 게임이 가까이 위치</p>\n<h1 id='69' style='font-size:18px'>3 긍정률 분포 확인</h1>\n<br><p id='70' data-category='paragraph' style='font-size:14px'>색상(긍정 리뷰 비율)을 통해 게임 평가 경향 비교 가능</p>\n<br><caption id='71' style='font-size:22px'>EDA (3) 게임 클러스터링</caption>\n<figure id='72' data-category='chart'><img data-coord=\"top-left:(69,167); bottom-right:(1242,946)\" /><figcaption><p>Chart Title: Game Clustering by Similarity Matrix</p><p>X-Axis: Principal Component 1 Similarity</p><p>Y-Axis: Principal Component 2 (Similarity)</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>0</td><td>100</td><td>200</td><td>300</td><td>400</td></tr></thead><tbody><tr><td>item_01</td><td>0Not specified</td><td>200Not specified</td><td>100Not specified</td><td>400Not specified</td><td>0Not specified</td></tr></tbody></table></figure>\n<br><p id='73' data-category='paragraph' style='font-size:14px'>설명: PCA로 차원 축소 후 KMeans로 클러스터링</p>\n<br><p id='74' data-category='paragraph' style='font-size:16px'>from sklearn.decomposition import PCA<br>from sklearn.cluster import Kmeans</p>\n<br><p id='75' data-category='paragraph' style='font-size:16px'>pca = PCA(n_components=2)<br>reduced = pca.fit_transform(similarity_matrix)</p>\n<br><p id='76' data-category='paragraph' style='font-size:16px'>kmeans = KMeans(n_clusters=6, random_state=42)<br>labels = kmeans.fit_predict(reduced)</p>\n<br><p id='77' data-category='paragraph' style='font-size:20px'>1</p>\n<br><h1 id='78' style='font-size:16px'>차원 축소</h1>\n<p id='79' data-category='paragraph' style='font-size:14px'>PCA를 통해 유사도 행렬을 2차원으로 축소 -> 직관적 시각화 가능</p>\n<h1 id='80' style='font-size:20px'>2 클러스터 발견</h1>\n<p id='81' data-category='paragraph' style='font-size:14px'>Kmeans 로 6개의 군집 도출 -> 유저 리뷰 패턴 기반 분류</p>\n<p id='82' data-category='paragraph' style='font-size:18px'>3 장르와의 연관성 탐색</p>\n<br><p id='83' data-category='paragraph' style='font-size:14px'>같은 군집에 속한 게임들이 실제 장르/스타일과 얼마나 일치하는지 확인 예<br>정</p>\n<h1 id='84' style='font-size:22px'>EDA (4) — 게임 네트워크</h1>\n<figure id='85'><img alt=\"\" data-coord=\"top-left:(87,172); bottom-right:(990,924)\" /></figure>\n<br><h1 id='86' style='font-size:16px'>1 게임 유사도 시각화</h1>\n<br><p id='87' data-category='paragraph' style='font-size:14px'>게임 간의 관계를 네트워크 형태로 시각화하여 유사한 게임들을 한눈에 파<br>악</p>\n<h1 id='88' style='font-size:18px'>2 감성 및 연결성 분석</h1>\n<br><p id='89' data-category='paragraph' style='font-size:14px'>노드 색상으로 게임별 긍정률을 확인하고, 간선 두께로 게임 간 유사도의 강<br>도를 직관적으로 이해</p>\n<h1 id='90' style='font-size:20px'>3 숨겨진 연결 탐색</h1>\n<br><p id='91' data-category='paragraph' style='font-size:14px'>겉으로는 달라 보여도 실제 유저 리뷰에서 유사한 패턴을 보이는 게임들을<br>발견</p>\n<p id='92' data-category='paragraph' style='font-size:14px'>설명: 게임 유사도 네트워크, 노드 색은 긍정률, 간선 두께는 유사도</p>\n<p id='93' data-category='paragraph' style='font-size:14px'>import networkx as nx<br>G = nx.Graph()<br>for a, b, sim in similarity_edges:<br>if sim > 0.7:<br>G.add_edge(a, b, weight=sim)</p>\n<h1 id='94' style='font-size:14px'>nx.draw(G, with_labels=True, node_size=pos_ratio*500)</h1>\n<h1 id='95' style='font-size:20px'>EDA (5) — 게임 유사도 히트맵</h1>\n<figure id='96' data-category='chart'><img data-coord=\"top-left:(101,157); bottom-right:(1111,958)\" /><figcaption><p>Chart Title: Game Similarity Heatmap (Self-Similarity Excluded)</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>Blankton_</td><td>Blankton_2</td><td>Blankton_3</td><td>Blankton_4</td><td>Clayton_5</td><td>Clayton_6</td><td>Clayton_7</td><td>Cyan_5</td><td>Dunkton_5</td><td>Dunkton_6</td><td>Drupt_10</td><td>Drupt_11</td><td>Drupt_12</td><td>Drupt_13</td><td>Drug_14</td><td>Drupt_15</td><td>Drug_16</td><td>Drupt_17</td><td>Drupt_18</td><td>Drug_20</td><td>Drupt_21</td><td>Drupt_22</td><td>Drug DT_23</td><td>Drug DT_24</td><td>Drupt_25</td><td>Drupt_26</td><td>Drupt_27</td><td>Drupt_28</td><td>Earned</td><td>Middle Class</td><td>Lawyth</td><td>Lamar</td><td>Early Construction</td><td>Forestry_Red</td><td>Laos</td></tr></thead><tbody></tbody></table></figure>\n<br><h1 id='97' style='font-size:18px'>1 직관적인 유사도 파악</h1>\n<p id='98' data-category='paragraph' style='font-size:16px'>각 게임 쌍의 유사도를 색상 강도로 표현하여 게임 간 관계를 직관적으로 이<br>해할 수 있습니다.</p>\n<h1 id='99' style='font-size:18px'>2 유사 그룹 식별</h1>\n<p id='100' data-category='paragraph' style='font-size:16px'>히트맵 패턴을 통해 유사한 리뷰를 가진 게임들이 어떻게 군집을 형성하는<br>지 쉽게 발견할 수 있습니다.</p>\n<p id='101' data-category='paragraph' style='font-size:18px'>3 추천 알고리즘 기반 마련</p>\n<p id='102' data-category='paragraph' style='font-size:16px'>시각화된 유사도 정보는 향후 개인화된 게임 추천 알고리즘을 개발하는 데<br>핵심적인 기반이 됩니다.</p>\n<p id='103' data-category='paragraph' style='font-size:16px'>설명: 게임별 유사도 행렬을 히트맵으로 시각화하여 게임 간 유사도 관계를 한눈에 파악할 수 있습니다.</p>\n<h1 id='104' style='font-size:16px'>import seaborn as sns</h1>\n<br><p id='105' data-category='paragraph' style='font-size:14px'># 'similarity_matrix'는 게임 간 유사도 값을 포함하는 데이터프레임입니다.<br># 'games'는 각 게임의 이름을 담고 있는 리스트로, x축과 y축 라벨로 사용됩니다.<br>sns.heatmap(similarity_matrix, cmap=\"YlOrRd\", xticklabels=games, yticklabels=games)<br>plt.title(\"Game Similarity Heatmap\")<br>plt.xlabel(\"Games\")<br>plt.ylabel(\"Games\")<br>plt.show()</p>\n<h1 id='106' style='font-size:20px'>데이터 구조 설명</h1>\n<h1 id='107' style='font-size:16px'>핵심 데이터 컬럼</h1>\n<table id='108' style='font-size:14px'><thead></thead><tbody><tr><td>appid</td><td>게임 고유 식별자 (Steam)</td></tr><tr><td>steamid</td><td>유저 고유 식별자</td></tr><tr><td>voted_up</td><td>추천 여부 (T/F)</td></tr><tr><td>playtime_forever</td><td>총 플레이 시간 (분)</td></tr></tbody></table>\n<br><h1 id='109' style='font-size:16px'>데이터 규모</h1>\n<h1 id='110' style='font-size:14px'>100만 건 규모의 유저-게임 행렬 구성</h1>\n<br><figure id='111'><img alt=\"\" data-coord=\"top-left:(1621,342); bottom-right:(2166,942)\" /></figure>\n<p id='112' data-category='paragraph' style='font-size:14px'>유저-게임-리뷰 관계 구조</p>\n<p id='113' data-category='paragraph' style='font-size:14px'>이 데이터는 협업 필터링 기반 추천 알고리즘의 핵심 입력값으<br>로 활용됩니다.</p>\n<h1 id='114' style='font-size:20px'>향후 계획 — 추천 알고리즘</h1>\n<h1 id='115' style='font-size:16px'>현재 데이터 확보 상태</h1>\n<br><h1 id='116' style='font-size:14px'>appid, steamid, 추천 여부(T/F), 플레이<br>타임 데이터 완비</h1>\n<br><h1 id='117' style='font-size:16px'>알고리즘 개선 아이디어</h1>\n<br><p id='118' data-category='list' style='font-size:14px'>• 플레이타임 구간별 가중치 적용 (10<br>시간 이상 = 높은 신뢰도)<br>• 평균 이상 플레이타임 + 긍정 리뷰 =<br>강력 추천 근거<br>• 리뷰 감정 분석을 통한 세부 선호도<br>파악</p>\n<br><h1 id='119' style='font-size:16px'>예상 기법</h1>\n<br><p id='120' data-category='paragraph' style='font-size:14px'>협업 필터링 + SBERT 임베딩 + 코사인<br>유사도 계산</p>\n<figure id='121' data-category='chart'><img data-coord=\"top-left:(1767,759); bottom-right:(2077,1060)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>Userfm</td><td>Curve</td><td>Userfm+</td></tr></thead><tbody><tr><td>item_01</td><td>50%</td><td>50%</td><td>100%</td></tr></tbody></table></figure>\n<h1 id='122' style='font-size:18px'>서비스 구조</h1>\n<table id='123' style='font-size:14px'><thead></thead><tbody><tr><td>데이터 수집 메타크리틱 & 스팀 리뷰 크롤링</td></tr><tr><td>전처리 & 정규화 리뷰 텍스트 정리 (특수문자 제거, 길이 제한), 유저별 voted_up, 플레이타임 정보 추출 유사도 계산 voted_up 기반 유저-게임 행렬 생성, 플레이타임 구간별 가중치 적용 (평균 이상 → 더 높은 점수 반영) 추천 생성 협업 필터링 (user-based, item-based), “A 게임 좋아한 유저가 B도 좋아했다 → B 추천” 대시보드 추천 결과 및 게임 간 유사도 시각화</td></tr></tbody></table>\n<h1 id='124' style='font-size:20px'>결론</h1>\n<h1 id='125' style='font-size:16px'>지금까지 완료한 작업</h1>\n<p id='126' data-category='list' style='font-size:14px'>• 메타크리틱 & 스팀 데이터 크롤링<br>• 약 100만 개 유저 리뷰 데이터 확보<br>• 탐색적 데이터 분석 및 시각화</p>\n<h1 id='127' style='font-size:16px'>앞으로 진행할 작업</h1>\n<p id='128' data-category='list' style='font-size:14px'>• 추천 알고리즘 구현 및 최적화<br>• 시각화 대시보드 개발</p>\n<h1 id='129' style='font-size:16px'>최종 목표</h1>\n<h1 id='130' style='font-size:14px'>유저 경험과 리뷰를 기반으로 한 정확하고 개인화된 게임 추천 서비스 완성</h1>\n<figure id='131'><img alt=\"\" data-coord=\"top-left:(60,0); bottom-right:(906,1246)\" /></figure>\n<br><h1 id='132' style='font-size:20px'>질문과 답변</h1>\n<h1 id='133' style='font-size:14px'>프로젝트에 대한 궁금한 점이 있으시면 질문해 주세요.</h1>\n<h1 id='134' style='font-size:16px'>감사합니다!</h1>",
    "16Lzn9obumP5yWyhPuX5aea_lRwYe0Jh-": "<table id='0' style='font-size:14px'><thead></thead><tbody><tr><td colspan=\"7\">신입기수 프로젝트 데모 요청서 : 게임 추천 서비스</td></tr><tr><td>프로젝트 목표</td><td colspan=\"6\">메타크리틱/ 스팀 데이터를 기반으로 게임 간 유사도를 분석하고, 유저 성향에 맞는 새로운 게임을 추천하는 시스템 구축</td></tr><tr><td>담당자</td><td colspan=\"6\">김우진, 노유빈, 안시연, 한원석</td></tr><tr><td rowspan=\"3\">니즈</td><td colspan=\"6\">유저는 새로운 게임을 선택할 때 수많은 장르와 복잡한 리뷰 때문에 어려움을 겪음</td></tr><tr><td colspan=\"6\">기존 추천 시스템은 태그/ 메타데이터 위주 → 유저의 실제 경험(리뷰/ 플레이 기록) 을 반영한 추천이 부족</td></tr><tr><td colspan=\"6\">“ 내가 재미있게 했던 게임과 유사한 다른 게임 ” 을 찾아주는 서비스 필요</td></tr><tr><td rowspan=\"3\">산출물 목록</td><td colspan=\"6\">게임 데이터 크롤러 메타크리틱에서 평점 상위 게임명 1700 개 크롤링</td></tr><tr><td colspan=\"6\">스팀 리뷰 크롤러 스팀에서 약 1081 개 게임의 리뷰 데이터 수집 리뷰 전처리 스크립트 500 자 리뷰 데이터 제거, 특수 문자 제거 전처리</td></tr><tr><td colspan=\"6\">유저- 게임 매트릭스 특정 유저가 어떤 게임에 긍정/ 부정 리뷰를 남겼는지 기록한 행렬</td></tr><tr><td rowspan=\"3\">데이터셋</td><td>링크</td><td colspan=\"5\">Metacritic Games</td></tr><tr><td>특징</td><td colspan=\"3\">평점 상위 게임 1700 개 ( 초록색 점수 기준), 게임명 + 평점 포함 유저 ID, 플레이타임</td><td colspan=\"2\">Steam Store 약 1081 개 게임 리뷰 ( 리뷰 텍스트, 추천 여부, 포함)</td></tr><tr><td colspan=\"6\">레퍼런스 Metacritic 공식 사이트 Steam 공식 스토어 & 커뮤니티 리뷰 페이지</td></tr><tr><td rowspan=\"9\">전체 파이프라인</td><td rowspan=\"6\" colspan=\"6\">시스템 구축</td></tr><tr><td colspan=\"2\">단계 데이터 수집</td><td colspan=\"3\">설명 Metacritic 상위 1700 개 → Steam 리뷰 17 만 개 → UserID 확장 100 만 개</td></tr><tr><td colspan=\"2\">전처리</td><td colspan=\"3\">500 자 이상 제거, 특수문자 제거, 텍스트 정규화</td></tr><tr><td colspan=\"2\">EDA</td><td colspan=\"3\">리뷰 길이 분포, 감정 지도(t-SNE), 클러스터링(PCA+KMeans), 네트워크, 히트맵</td></tr><tr><td colspan=\"2\">데이터 구조화</td><td colspan=\"3\">appid, steamid, voted_up, playtime_forever</td></tr><tr><td colspan=\"2\">추천 알고리즘</td><td colspan=\"3\">협업 필터링 + 플레이타임 가중치</td></tr><tr><td rowspan=\"3\">사용자 시나리오</td><td colspan=\"2\">입력</td><td colspan=\"3\">유저가 A 게임에 대한 긍정적 리뷰(voted_up, 플레이타임) 유사 유저/ 게임 행렬 기반 추천 계산</td></tr><tr><td colspan=\"2\">처리</td><td colspan=\"3\"></td></tr><tr><td colspan=\"2\">출력</td><td colspan=\"3\">개인화된 B 게임 추천 & 대시보드 시각화</td></tr><tr><td rowspan=\"11\">프로젝트 기능 명세서</td><td rowspan=\"6\">시스템 구축 파이프라인</td><td>모듈 #</td><td>설명</td><td>입력</td><td>출력</td><td>비고</td></tr><tr><td>1</td><td>크롤링</td><td>Metacritic + Steam 리뷰 수집 게임명/Steam</td><td>API 원시 리뷰 CSV</td><td>AppID 매칭 필요</td></tr><tr><td>2</td><td>전처리</td><td>텍스트 정제, 특수문자 제거, 리뷰 길이 필터 리뷰 CSV</td><td>정제 리뷰 CSV</td><td>극단치 제거</td></tr><tr><td>3</td><td>데이터 확장 userID 기반 전체 리뷰 수집</td><td>appid + steami</td><td>100 만개 리뷰</td><td>asyncio + aiohttp</td></tr><tr><td>4</td><td>EDA 리뷰 길이 분포, t-SNE, 클러스터링, 네트워크,</td><td>정제 리뷰 히트맵</td><td>시각화 결과</td><td>matplotlib/seaborn</td></tr><tr><td>5</td><td>추천 필터링 + 플레이타임 가중치</td><td>협업 유저- 게임 행렬</td><td>추천결과</td><td>향후 구현 예정</td></tr><tr><td rowspan=\"5\">사용자 실시간 흐름</td><td>#</td><td>모듈 설명</td><td>입력</td><td>출력</td><td>비고</td></tr><tr><td>1</td><td>접속 사용자가 웹/ 대시보드에 접속</td><td>브라우저</td><td>접속화면</td><td></td></tr><tr><td>2</td><td>게임 입력</td><td>사용자가 플레이한 게임을 입력 게임명</td><td></td><td></td></tr><tr><td>3</td><td>추천 실행</td><td>협업 필터링 + 플레이타임 가중치 기반 추천 수행 유저 데이터</td><td>개인화 추천 리스트</td><td></td></tr><tr><td>4</td><td>결과 확인</td><td>추천된 게임 목록을 사용자에게 제공 추천 리스트</td><td colspan=\"2\">시각적 결과(Top-N 리스트, 네트워크 그래프)</td></tr><tr><td rowspan=\"2\" colspan=\"2\"></td><td colspan=\"2\">섹션</td><td colspan=\"3\">구성 요소 예시</td></tr><tr><td colspan=\"2\">요약 결과</td><td colspan=\"3\">추천된 게임 TOP-N 리스트 “ 유저 A → Stardew Valley ”추천</td></tr></tbody></table>\n<br><p id='1' data-category='paragraph' style='font-size:18px'>대시보드 구성</p>\n<table id='2' style='font-size:14px'><thead></thead><tbody><tr><td rowspan=\"3\">대시보드 구성</td><td>유사도 시각화</td><td>게임- 게임 관계 네트워크 그래프</td><td>노드=게임, 색=긍정률</td></tr><tr><td>리뷰 분석</td><td>긍정/ 부정 비율, 플레이타임 구간별 추천 강도 시각화</td><td>Pie/Bar chart</td></tr><tr><td>사용자 인터페이스</td><td>검색 기능 & 추천 결과 확인 화면</td><td>Streamlit 대시보드</td></tr></tbody></table>\n<figure id='3'><img alt=\"\" data-coord=\"top-left:(131,231); bottom-right:(1161,644)\" /></figure>\n<table id='4' style='font-size:14px'><thead></thead><tbody><tr><td colspan=\"10\">신입기수 프로젝트 : 게임 추천 서비스 업무 관리 대장</td></tr><tr><td colspan=\"2\">PIC(담당자)</td><td>업무 대분류</td><td>업무 수행 안내</td><td>업무 수행 공간</td><td>시작일</td><td>마감일</td><td>완료여부</td><td>제작자 업무 수행내역 기재</td><td>특이사항</td></tr><tr><td>YBIGTA</td><td>안시연</td><td>all</td><td>게임 데이터 크롤러</td><td>개인 노트북 (Python 실행) → GitHub 제출</td><td>8/12</td><td>8/13</td><td>TRUE</td><td></td><td></td></tr><tr><td>YBIGTA</td><td>노유빈</td><td>all</td><td>스팀 리뷰 크롤러</td><td>개인 노트북 (Python 실행 ) → GitHub 제출</td><td>8/13</td><td>8/14</td><td>TRUE</td><td></td><td></td></tr><tr><td>YBIGTA</td><td>김우진</td><td>all</td><td>리뷰 전처리 스크립트</td><td>개인 노트북 (Python 실행) → GitHub 제출</td><td>8/14</td><td>8/17</td><td>TRUE</td><td></td><td></td></tr><tr><td>YBIGTA</td><td>노유빈</td><td>all</td><td>유저- 게임 매트릭스 산출</td><td>개인 노트북 (Python 실행) → 구글 드라이브 공유</td><td>8/17</td><td>8/17</td><td>TRUE</td><td></td><td></td></tr><tr><td>YBIGTA</td><td>한원석</td><td>all</td><td>EDA 진행</td><td>개인 노트북 (Python 실행 ) → GitHub 제출</td><td>8/17</td><td>8/18</td><td>TRUE</td><td></td><td></td></tr><tr><td>YBIGTA</td><td></td><td>프로젝트</td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td><td></td></tr><tr><td>YBIGTA</td><td></td><td>프로젝트 가이드</td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td><td></td></tr><tr><td>YBIGTA</td><td></td><td>all</td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td><td></td></tr><tr><td>YBIGTA YBIGTA</td><td></td><td>all all</td><td></td><td></td><td></td><td></td><td>FALSE FALSE</td><td></td><td></td></tr></tbody></table>\n<table id='5' style='font-size:14px'><thead></thead><tbody><tr><td>프로젝트/ 프로젝트</td><td>가이드 검수내역</td><td>검수항목</td><td>수정 필요 여부</td><td>검수 내역 반영 완료 내역( 수정한 경우,</td><td>어떻게 수정하였는지 세부 내용 기재 최종</td><td>파일 & 검수</td><td>경우 본 운영진 않는</td><td></td><td></td><td>사유 기재) 촬영 필수) 링크( 자료로 최종 확인)</td></tr><tr><td>검수자 프로젝트</td><td>콘텐츠 종류</td><td>콘텐츠명 프로젝트 코드</td><td></td><td></td><td>필요</td><td></td><td></td><td></td><td>확인( 최종 반영하지 TRUE</td><td></td></tr><tr><td>프로젝트</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td></tr><tr><td>퍼블리싱 문서</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td></tr><tr><td>퍼블리싱 문서</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td></tr></tbody></table>",
    "1UDZVz7oDfdE4peT-JiJuEmvMtwehUDdX": "<h1 id='0' style='font-size:14px'>27기 신입기수 프로젝트 중간발표</h1>\n<br><h1 id='1' style='font-size:18px'>AI 기반 과외 피드백 자동 생성 시스템</h1>\n<h1 id='2' style='font-size:18px'>목차</h1>\n<h1 id='3' style='font-size:14px'>프로젝트 개요</h1>\n<h1 id='4' style='font-size:14px'>시스템 아키텍처</h1>\n<h1 id='5' style='font-size:14px'>AI 프롬프트 엔지니어링</h1>\n<h1 id='6' style='font-size:14px'>DEMO</h1>\n<h1 id='7' style='font-size:14px'>향후과제</h1>\n<header id='8' style='font-size:14px'>프로젝트 개요 시스템 아키텍처 AI 프롬프트 엔지니어링 DEMO 향후 과제</header>\n<h1 id='9' style='font-size:18px'>반복적이고 정형화된 피드백, 이를 자동화할 수 있지 않을까?</h1>\n<header id='10' style='font-size:14px'>프로젝트 개요 시스템 아키텍처 AI 프롬프트 엔지니어링 DEMO 향후 과제</header>\n<h1 id='11' style='font-size:20px'>반복적이고 정형화된 피드백, 이를 자동화할 수 있지 않을까?</h1>\n<figure id='12'><img style='font-size:16px' alt=\"INPUT\" data-coord=\"top-left:(60,320); bottom-right:(957,976)\" /></figure>\n<br><figure id='13'><img style='font-size:16px' alt=\"OUTPUT\" data-coord=\"top-left:(1040,327); bottom-right:(1928,779)\" /></figure>\n<header id='14' style='font-size:14px'>프로젝트 개요 시스템 아키텍처 AI 프롬프트 엔지니어링 DEMO 향후 과제</header>\n<h1 id='15' style='font-size:20px'>반복적이고 정형화된 피드백, 이를 자동화할 수 있지 않을까?</h1>\n<table id='16' style='font-size:16px'><thead></thead><tbody><tr><td rowspan=\"4\"><table><thead><tr><td>INPUT</td></tr></thead><tbody><tr><td>[ 평가 점수] [ 텍스트 ] 수업태도 진도 수업이해도 특이사항 과제평가 질문상호작용</td></tr></tbody></table></td><td>OUTPUT</td></tr><tr><td>[ 피드백 1 ] 수업보완</td></tr><tr><td>[ 피드백 2 ] 수업태도</td></tr><tr><td>[ 피드백 3 ] 전체 Comment</td></tr></tbody></table>\n<header id='17' style='font-size:14px'>프로젝트 개요 시스템 아키텍처 AI 프롬프트 엔지니어링 DEMO 향후 과제</header>\n<h1 id='18' style='font-size:20px'>수업 피드백 자동화를 위한 전체 시스템 흐름과 DB 구조 설계</h1>\n<figure id='19'><img alt=\"\" data-coord=\"top-left:(72,238); bottom-right:(1934,1029)\" /></figure>\n<br><p id='20' data-category='paragraph' style='font-size:16px'>https://mermaid.live/</p>\n<header id='21' style='font-size:14px'>프로젝트 개요 시스템 아키텍처 AI 프롬프트 엔지니어링 DEMO 향후 과제</header>\n<h1 id='22' style='font-size:18px'>ChatGPT를 이용하여 수업 피드백 데이터를 생성</h1>\n<header id='23' style='font-size:14px'>프로젝트 개요 시스템 아키텍처 AI 프롬프트 엔지니어링 DEMO 향후 과제</header>\n<h1 id='24' style='font-size:20px'>AI의 역할을 정의하고, 학생·수업 정보를 구조화해 피드백을 생성하도록 프롬프트를 설계·최적화</h1>\n<br><h1 id='25' style='font-size:16px'>시스템 메시지 설계</h1>\n<figure id='26'><img alt=\"\" data-coord=\"top-left:(123,301); bottom-right:(923,634)\" /></figure>\n<br><h1 id='27' style='font-size:16px'>사용자 메시지 구조화</h1>\n<p id='28' data-category='list'></p>\n<br><figure id='29'><img alt=\"\" data-coord=\"top-left:(1011,299); bottom-right:(1886,1076)\" /></figure>\n<header id='30' style='font-size:14px'>프로젝트 개요 시스템 아키텍처 AI 프롬프트 엔지니어링 DEMO 향후 과제</header>\n<h1 id='31' style='font-size:20px'>AI가 학생의 컨텍스트를 파악하여 연속성 맞춤형 피드백 생성</h1>\n<br><table id='32' style='font-size:16px'><thead><tr><td>컨텍스트 정보 수집</td><td></td></tr></thead><tbody><tr><td>이전 3회 수업 데이터</td><td>날짜별 수업 기록 - 2025-05-27: 태도3점, 이해도3점, 과제4점, 질문3점 - 2025-06-03: 태도5점, 이해도5점, 과제5점, 질문5점 - 2025-06-10: 태도2점, 이해도1점, 과제3점, 질문1점 …</td></tr><tr><td>바로 전 수업 상세</td><td>직전 수업 피드백 요약 - 수업보완: 풀이 속도 향상 필요, 제한 시간 연습 권장 - 수업태도: 대부분 성실하게 임하며, 잠깐 흐트러져도 … - 전체코멘트: 이차함수 개념은 잘 이해하고 있으나, …</td></tr><tr><td>점수 변화 추세</td><td>최근 변화 분석 - 수업태도: 5점 → 2점 ▼ - 수업이해도: 5점 → 1점 ▼ - 과제평가: 5점 → 3점 ▼ - 질문상호작용: 5점 → 1점 ▼</td></tr></tbody></table>\n<header id='33' style='font-size:14px'>프로젝트 개요 시스템 아키텍처 AI 프롬프트 엔지니어링 DEMO 향후 과제</header>\n<h1 id='34' style='font-size:20px'>AI가 학생의 컨텍스트를 파악하여 연속성 맞춤형 피드백 생성</h1>\n<br><table id='35' style='font-size:16px'><thead><tr><td>컨텍스트 정보 수집</td><td>연속성 보장 방법</td></tr></thead><tbody><tr><td>이전 3회 수업 데이터</td><td>이전 피드백 참조</td></tr><tr><td>바로 전 수업 상세</td><td>자연스러운 연결</td></tr><tr><td>점수 변화 추세</td><td>변화점 추적</td></tr><tr><td colspan=\"2\"></td></tr><tr><td colspan=\"2\">학생 맞춤형 분석 피드백의 일관성 유지 피드백의 효과성 검증</td></tr></tbody></table>\n<header id='36' style='font-size:14px'>프로젝트 개요 시스템 아키텍처 AI 프롬프트 엔지니어링 DEMO 향후 과제</header>\n<h1 id='37' style='font-size:20px'>Streamlit 시연</h1>\n<h1 id='38' style='font-size:16px'>시연영상:</h1>\n<br><h1 id='39' style='font-size:16px'>https://drive.google.com/drive/folders/1-XRYH1--0YwWAQq17y2L9ka00MeUNK0n</h1>\n<header id='40' style='font-size:14px'>프로젝트 개요 시스템 아키텍처 AI 프롬프트 엔지니어링 DEMO 향후 과제</header>\n<h1 id='41' style='font-size:20px'>향후과제 및 보완점</h1>\n<table id='42' style='font-size:16px'><thead><tr><td>AI 프롬프트 엔지니어링</td><td>프론트엔드 & 백엔드</td><td>향후 과제</td></tr></thead><tbody><tr><td>• 데이터 퀄리티 높이기 • 데이터 전처리 • RAG, langgraph</td><td>• 서버 연결 • 회원가입 & 로그인 기능 추가 • 인증, 보안 관리 • 기타 프론트엔드 작업</td><td>• 기능 추가 • 학부모, 학생 대상 챗봇 서비스 • 피드백 말투 선택 기능 • …</td></tr></tbody></table>\n<h1 id='43' style='font-size:14px'>27기 신입기수 프로젝트 중간발표</h1>\n<br><h1 id='44' style='font-size:18px'>감사합니다.</h1>",
    "1B-LFAlhNnEZAOzgKeJEt8dC8n7lBZr1u": "<table id='0' style='font-size:14px'><thead><tr><td colspan=\"6\">Product UseCase 프로젝트 데모 요청서 : 과외 피드백 자동 생성 시스템</td></tr><tr><td>프로젝트 목표</td><td colspan=\"5\">과외 선생님이 학생들의 수업 평가에 대한 점수와 코멘트를 입력하면 AI 가 맞춤형 피드백을 자동 생성하여, 학부모에게 전달할 수 있는 전문적이고 따뜻한 피드백을 제공하고, 선생님의 피드백 작성 부담을 줄이며 학생 관리 효율성을 높이는 시스템을 구축합니다</td></tr></thead><tbody><tr><td>담당자</td><td colspan=\"5\">문영운, 엄준서, 이지민, 정지윤</td></tr><tr><td rowspan=\"3\">니즈</td><td colspan=\"5\">피드백 작성의 번거로움: 매 수업마다 개별 학생별 맞춤형 피드백을 수작업으로 작성해야 하는 부담  학생 ID/정보 데이터</td></tr><tr><td colspan=\"5\">학생 진도 추적 어려움: 이전 수업과의 비교 분석 및 변화점 파악이 수동으로 이루어짐</td></tr><tr><td colspan=\"5\">학부모 소통의 비효율: 표준화되지 않은 피드백으로 인한 소통의 일관성 부족</td></tr><tr><td rowspan=\"4\">산출물 목록</td><td colspan=\"5\">프로젝트 코드</td></tr><tr><td>실행 스크립트</td><td colspan=\"4\">깃헙링크 st_app.py ( 웹서빙 예정 ) 추후 예정</td></tr><tr><td colspan=\"5\">데모 문서</td></tr><tr><td colspan=\"5\">데모 가이드 추후 예정</td></tr><tr><td rowspan=\"3\">데이터셋</td><td>링크</td><td colspan=\"4\">과외 학생 평가 데이터 ( 자체 구축) 진도, 등</td></tr><tr><td colspan=\"5\">특징 학생별 수업 평가 점수 데이터셋 - 수업태도/이해도/과제/ 질문상호작용 점수, 수업 특이사항 구조화된 메타데이터</td></tr><tr><td colspan=\"5\">포함 레퍼런스 -</td></tr><tr><td rowspan=\"17\">전체 파이프라인</td><td rowspan=\"3\">시스템 구축</td><td>단계</td><td colspan=\"3\">설명</td></tr><tr><td>Data Loader Text Clean</td><td colspan=\"3\">기존 학생 수업 평가 데이터(CSV) 를 로드하고 MySQL 데이터베이스에 저장 학생 이름, 개인정보를 보호하고 수업 내용을 정규화 LangChain Upstage API 를 연동하여 AI 피드백 생성 모델을 설정</td></tr><tr><td>AI 모델 설정 데이터베이스 구축</td><td colspan=\"3\">MySQL 데이터베이스 스키마를 설정하고 학생/수업/ 피드백 테이블을 구축 기존 학생의 경우 이전 수업과 분석 생성된 피드백과 수업 정보를 학생별 진도, 피드백 이력,   통계 시각화 전체 학생 데이터</td></tr><tr><td colspan=\"5\"></td></tr><tr><td colspan=\"5\"></td></tr><tr><td colspan=\"5\"></td></tr><tr><td colspan=\"5\">사용자 시나리오</td></tr><tr><td colspan=\"5\"></td></tr><tr><td rowspan=\"3\"></td><td>학생 선택 수업 정보 입력 평가 점수 입력 AI 피드백 생성 이력 분석 결과 저장 결과 표시 #</td><td>기존 학생 선택 또는 신규 학생 등록을 수행 과목, 날짜, 진도, 특이사항을 입력 수업태도, 이해도, 과제, 질문상호작용 점수를 입력 LangChain Upstage 를 통해 맞춤형 피드백을 생성 비교하여 변화점을 데이터베이스에 저장 웹 인터페이스 또는 터미널에 AI 피드백 결과를 표시 설명 입력된 수업   및 평가   데이터를   기반으로   AI 피드백 생성 표시하고   수정 가능</td><td>출력 AI  생성 피드백 이전/ 현재 기록</td><td>비고 Upstage API 활용 웹/ 터미널 인터페이스</td></tr><tr><td>모듈 1 Data Loader 2 Text Clean & 정규화 3 AI  모델 설정</td><td>기존 학생   수업 평가   데이터(CSV) 를   로드하고 MySQL DB 에 저장 텍스트 데이터를 전처리하고 필요시 정규화 LangChain Upstage API 를   연동하여 AI  피드백 생성   모델 설정 MySQL  데이터베이스 스키마를   설정하고 학생/수업/ 피드백   테이블을   구축 선택 또는 신규   학생   정보 등록 수업태도, 학부모에게 피드백 자동 발송   또는 공유   기능</td><td>DB 테이블 정규화된   텍스트 AI 모델</td><td>pandas, SQLAlchemy</td></tr><tr><td>4 데이터베이스   구축 # 모듈</td><td>입력 CSV 파일 원본 텍스트 API 키 DB 스키마 설명 입력 기존 학생 과목, 날짜, 진도, 특이사항 등   수업 내용 입력 이해도, 과제, 질문상호작용 점수 입력 이전 수업   기록과 현재   수업의   점수 변화 비교 생성된 피드백을 데이터베이스에 저장 생성된 피드백을 화면에 메일/메시지</td><td>DB 테이블 출력 학생 정보 수업 기록 평가 기록 비교 분석 결과 AI 생성 피드백 저장 완료  최종 피드백 웹 페이지</td><td>데이터   전처리   통일 Upstage API 연동 MySQL, SQLAlchemy ORM 비고 MySQL DB 저장 Streamlit 웹 UI</td></tr><tr><td colspan=\"5\">수업</td></tr><tr><td colspan=\"5\">시스템 구축 파이프라인</td></tr><tr><td colspan=\"5\"></td></tr><tr><td colspan=\"5\"></td></tr><tr><td colspan=\"5\"></td></tr><tr><td colspan=\"5\"></td></tr><tr><td rowspan=\"6\">프로젝트 기능 명세서</td><td colspan=\"5\">1 학생 선택/등록 수업/ 평가</td></tr><tr><td colspan=\"5\">2 수업 정보   입력</td></tr><tr><td colspan=\"5\"></td></tr><tr><td colspan=\"5\"></td></tr><tr><td colspan=\"5\">기록 AI  생성 피드백  최종 피드백</td></tr><tr><td colspan=\"5\">3 평가   점수 입력 점수 데이터 4 AI 피드백   생성 사용자 실시간 흐름 5 이전   수업 비교 6 피드백 저장 7 피드백   표시/수정 8 알림/ 공유 (선택) 9 대시보드   (Streamlit)</td></tr></tbody></table>\n<table id='1' style='font-size:14px'><thead></thead><tbody><tr><td rowspan=\"6\">대시보드 구성</td><td>섹션</td><td>구성 요소</td><td>예시</td></tr><tr><td>① 학생 관리</td><td>학생 선택 드롭다운, 신규 학생 등록 폼</td><td>김도현 (ID: S1001)</td></tr><tr><td>② 수업 정보 입력</td><td>과목, 날짜, 진도, 특이사항 입력 폼</td><td>수학, 2024-01-15, 2 단원 분수</td></tr><tr><td>③ 평가 점수 입력</td><td>수업태도, 이해도, 과제, 질문상호작용 1-5 점 입력 폼</td><td>수업태도: 4점, 이해도: 3점</td></tr><tr><td>④ AI 피드백 결과</td><td>수업보완, 수업태도, 전체 Comment 섹션</td><td>\" 김도현 학생은...\"</td></tr><tr><td>⑤ 학습 이력 분석</td><td>점수 변화 추세 차트, 이전 수업과 비교 결과</td><td>수업태도: 4 점 → 3 점 ▼</td></tr></tbody></table>\n<figure id='2'><img alt=\"\" data-coord=\"top-left:(143,386); bottom-right:(879,1031)\" /></figure>\n<table id='3' style='font-size:18px'><thead></thead><tbody><tr><td colspan=\"8\">Upstage Product UseCase : (1) 상담 기록 유형 분석 및 알림 자동화 업무 관리 대장</td></tr><tr><td>PIC(담당자)</td><td>업무 대분류</td><td>업무 수행 안내</td><td>수행 공간</td><td>시작일</td><td>완료여부</td><td>제작자 업무 수행내역 기재</td><td>특이사항</td></tr><tr><td></td><td></td><td></td><td>업무</td><td></td><td>마감일</td><td></td><td></td></tr></tbody></table>\n<table id='4' style='font-size:14px'><thead></thead><tbody><tr><td colspan=\"9\">프로젝트/ 프로젝트 가이드 검수내역</td></tr><tr><td>검수자</td><td>콘텐츠 종류</td><td>콘텐츠명</td><td>검수항목</td><td>수정 필요 여부</td><td>검수 내역 반영 완료 내역( 수정한 경우,</td><td>어떻게 수정하였는지 세부 내용 기재 & 확인( 운영진</td><td>최종 확인)</td><td rowspan=\"3\">자료로 촬영 필수) 기재)</td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td>최종 검수 반영하지 않는 파일 최종</td><td>경우 사유 링크(</td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>본</td></tr></tbody></table>",
    "1RRO02xUxbjzK4dPdP-FPP77DIoAdFoW9": "<h1 id='0' style='font-size:20px'>카카오톡 대화 기반<br>선물 추천 시스템</h1>\n<br><p id='1' data-category='paragraph' style='font-size:16px'>\"대화 속에 숨겨진 마음을 찾아, 최고의 선물을 추천합니다\"</p>\n<p id='2' data-category='paragraph' style='font-size:14px'>YBIGTA 신입기수 프로젝트 중간발표<br>강예서, 구남혁, 박채연, 어예지, 정진욱</p>\n<br><h1 id='3' style='font-size:20px'>목차</h1>\n<br><p id='4' data-category='index' style='font-size:16px'>1. 문제 정의 및 니즈<br>2. 솔루션 및 프로젝트 개요<br>3. 전체 파이프라인 설계<br>4. 데이터 전처리<br>5. 임베딩 기반 유사도 계산<br>6. 가중치 산출 방식<br>7. GATE 알고리즘<br>8. LLM을 활용한 최종 상품 선정<br>9. 사용자 시나리오</p>\n<footer id='5' style='font-size:14px'>YBIGTA 신입기수 프로젝트</footer>\n<h1 id='6' style='font-size:22px'>문제 정의</h1>\n<p id='7' data-category='paragraph' style='font-size:16px'>1</p>\n<br><p id='8' data-category='paragraph' style='font-size:20px'>2</p>\n<br><p id='9' data-category='paragraph' style='font-size:18px'>3</p>\n<table id='10' style='font-size:14px'><thead></thead><tbody><tr><td>주변인의 생일/기념일 선물</td><td>카카오톡 대화에 힌트가</td><td>기존 카카오톡 AI 선물 추천 서비스의 한</td></tr><tr><td>고민이 많으며 상대방의 취향을 정확</td><td>숨어 있지만 대화량이 많을수록 기</td><td>계 : 개인화 부족, 실제 대화 데이터를 사</td></tr><tr><td>히 파악하기 어려움.</td><td>억하거나 분석하기 어려움</td><td>용하지 않음.</td></tr></tbody></table>\n<h1 id='11' style='font-size:18px'>솔루션</h1>\n<figure id='12'><img style='font-size:14px' alt=\"발화 의도과 주제를\n대화 속 선호도 추출 개인화된 추천 모델 간단한 업로드 기반 서비스\n고려한 맞춤형 추천\n카카오톡 대화 내용에서 선물\n상대방이 필요로 하는 상품, 사용자 프로필과 대화 데이터 분석 복잡한 절차 없이 파일만 업로드하면\n취향 힌트를 자동으로 감지하여\n자주 언급한 관심사 등을 기반으로 결과를 결합하여 완벽한 맞춤형으로 자동으로 분석 및 추천이 이루어지는\n숨겨진 선호도를 발견\n맞춤형 추천 제공 선물 리스트를 생성 서비스 구현.\" data-coord=\"top-left:(5,863); bottom-right:(4000,1689)\" /></figure>\n<br><h1 id='13' style='font-size:18px'>프로젝트 전체 파이프라인</h1>\n<br><figure id='14'><img style='font-size:14px' alt=\"발화-카테고리\n유사도 측정\n상품 관련 주제 분석\n전체\n맞춤형\n대화\n선물 선정\n내역\n발화 의도 라벨\n링\n구매 욕구, 관심도,\n필요성 분석\" data-coord=\"top-left:(564,351); bottom-right:(3449,2102)\" /></figure>\n<br><h1 id='15' style='font-size:18px'>프로젝트 전체 파이프라인</h1>\n<br><figure id='16'><img style='font-size:14px' alt=\"컬럼명 타입 설명 제약/인덱스 예시\nproduct_url TEXT 상품 상세 링크 NOT NULL https://gift.kakao.c\nom/...\nurl_hash TEXT (생성열) product_url 의 PK (PRIMARY KEY) 64자 해시\nSHA-256\ntop_category VARCHAR(100) 상위 카테고리(원본 보 INDEX(idx_topcat) 교환권\n존)\nsub_category VARCHAR(100) 표준 카테고리(우선 사 INDEX(idx_subcat 베이커리/도넛/떡\n용) _price)\nbrand VARCHAR(128) 브랜드명 ( '브랜드명 파리바게뜨\n제거)\nDatabase\nproduct_name VARCHAR(255) 상품명(따옴표 제거) NOT NULL 헤비웨이트 맨투맨\n( g)\n↙ 가격(원, 정수) NOT NULL 39000\nprice INT\nPostgreSQL\nsatisfaction_pc NUMERIC(5,2) 만족도(%) 97.00\nt\nproducts 테이블\nreview_count INT 리뷰 수 246\nwish_count INT 위시 수 1577\ntags TEXT 태그 원문(쉼표/슬래시 '가을,디저트'\n카테고리 필터링 구분 등)\nsub_category 매칭\n인덱스 최적화 updated_at TIMESTAMPTZ 갱신 시각 DEFAULT now()\nindex_subcat_price\n예산 필터링\nprice BETWEEN\nbudget_min/max\n사용자 시나리오\nAPI 응답\nFile(txt/csv), age, gender, Gate 알고리즘 selections[(sub_category, product_name, reason.......\n업로드 파일 검증 전처리 모듈 GPU 요청 후처리 카드\n분석 결과(per_sentence JSON) 메타검색 LLM 최종 선택\nrelation, budget_min, 형식/인코딩 최근 90일/정제/익명화 후보 밖 금지\nbudget_max sentiment/intent/category 가중치(의도& 감정 + 최근성) 카테고리 당 1개 보장\n카테고리 + 예산 필터\nclues Top 1~3 sub_category JSON 파싱 예외처리\n외부 서비스\nGPU Endpoint (RunPod)\nLLM Provider(Upstage)\" data-coord=\"top-left:(91,269); bottom-right:(3925,2115)\" /></figure>\n<h1 id='17' style='font-size:22px'>전처리 개요</h1>\n<h1 id='18' style='font-size:18px'>대화 정제 : 무의미한 발화 제거 및 문장 통합<br>으로 분석 품질 향상</h1>\n<h1 id='19' style='font-size:20px'>데이터 최적화: 최근 3개월 대화만 추출하여<br>현재 취향 반영</h1>\n<p id='20' data-category='paragraph' style='font-size:20px'>개인정보 보호: 계좌번호, 전화번호 등 민감한<br>개인정보 마스킹 처리</p>\n<br><p id='21' data-category='paragraph' style='font-size:14px'>5267 [강예서] [오전 10:30 ] 아 이거 넣을까 TT TT<br>5268 [강예서] [오전 10:30 ] 마케팅 인사이트 빼고 넣을까 고민중...<br>5269 [강예서] [오전 10:30 ] 데이터 학회하면서 같이 들으면 좋을 거 같기도 하고<br>5270 [강예서] [오전 10:30 ] 마케팅 수업만 ③개여서 팀플 너무 힘들까 싶기도 하고<br>5271 ] [오전 1⌀:31 ]<br>5272 [ ] [오전 1⌀:31]<br>5273 [강예서] [오전 1⌀:31 ] ���<br>5274 [강예서] [오전 1⌀:31] 그치 TT<br>5275 [강예서] [오전 1⌀:31 ] 오퍼레이션관리도 팀플잇고...</p>\n<p id='22' data-category='paragraph' style='font-size:16px'>2025-08-12 10:27:00 강예서 \"이거 넣을까 TT �, 마케팅 인사이트 빼고 넣을까 고민중<br>2025-08-12 10:27:00 강예서 \"데이터 학회하면서 같이 들으면 좋을 거 같기도 하고, 마케팅<br>수업만 3개여서 팀플 너무 힘들까 싶기도 하고, 오퍼레이션관리도 팀플잇고...</p>\n<h1 id='23' style='font-size:18px'>전처리 과정</h1>\n<figure id='24'><img style='font-size:14px' alt=\"1. 파일 변환 2. 시간 필터링 3. 사용자 필터링\ntxt → CSV 최근 3개월 간 데이터 필터링 선물 추천 대상자 필터링\nCSV → CSV\n4. 텍스트 정제 5. 메시지 제거 6. 익명화 처리 7. SBD 처리\n정규화 및 정제 불필요한 발화 제거 개인정보 마스킹 문장 병합/분할\" data-coord=\"top-left:(372,484); bottom-right:(3614,1882)\" /></figure>\n<header id='25' style='font-size:22px'>DB</header>\n<figure id='26'><img style='font-size:14px' alt=\"Database\n↗\n컬럼명 타입 설명 제약/인덱스 예시\nproduct_uri TEXT 상품 상세 링크 NOT NULL https://gift.kakao.c\n↘\nomy...\nPostgreSQL url_hash TEXT (생성열) product_url 의 PK (PRIMARY KEY) 64자 해시\nSHA-256\ntop_category VARCHAR(100) 상위 카테고리(원본 보 INDEX(idx_topcat) 교환권\n존)\nproducts 테이블 sub_category VARCHAR(100) 표준 카테고리(우선 사 INDEX(idx_subcat 베이커리/도넛/떡\n용) _price)\nbrand VARCHAR(128) 브랜드명 ( '브랜드명 파리바게뜨\n제거)\nproduct_ name VARCHAR(255) 상품명(따옴표 제거) NOT NULL 헤비웨이트 맨투맨\nprice INT 가격(원, 정수) NOT NULL 39000\nsatisfaction_ pc NUMERIC(5,2) 만족도(%) 97.00\n[\n카테고리 필터링 review_count INT 리뷰 수 246\nsub_category 매칭 wish_count INT 위시 수 1577\ntags TEXT 태그 원문(쉼표/슬래시 '가을,디저트*\n인덱스 최적화 구분 등)\nupdated_at TIMESTAMPTZ 갱신 시각 DEFAULT now()\nindex_subcat_price\n예산 필터링\nprice BETWEEN\nbudget_min/max\" data-coord=\"top-left:(216,446); bottom-right:(2260,1438)\" /></figure>\n<br><h1 id='27' style='font-size:20px'>PostgreSQL 데이터 베이스</h1>\n<h1 id='28' style='font-size:14px'>테이블: 카카오톡 선물하기 선물 목록 meta deta</h1>\n<p id='29' data-category='paragraph' style='font-size:18px'>주요 컬럼: 상품 링크, SHA-256 해시 기반 고유 식별<br>자, 카테고리 정보, 브랜드명, 상품명, 가격, 품질 지표</p>\n<p id='30' data-category='paragraph' style='font-size:16px'>복합 인덱스: idx_subcat_price로 카테고리+가격 동<br>시 검색 최적화</p>\n<p id='31' data-category='paragraph' style='font-size:18px'>데이터 필터링 및 정렬</p>\n<br><p id='32' data-category='list' style='font-size:18px'>● 유사도 및 감정 분석을 통해 나온 카테고리와 예산 범위를 기준으로 필터링<br>● 품질 기반 정렬: 리뷰 수 → 위시 수 → 만족도 순으로 정렬</p>\n<br><h1 id='33' style='font-size:22px'>코사인 유사도</h1>\n<h1 id='34' style='font-size:20px'>코사인 유사도 검색 :</h1>\n<table id='35' style='font-size:14px'><thead></thead><td>교환권</td><td>베이커리/도넛/떡</td><td>카페</td><td>아이스크림/빙수</td><td>치킨</td><td>버거/피자</td><td>편의점</td><td>한식/중식/일식</td><td>패밀리/호텔뷔페</td><td>퓨전/외국/펍</td><td>분식/죽/도시락</td><td>와인/양주/맥주</td><td></td><td></td></tr><tr><td>1482</td><td>5124</td><td>323</td><td>1636</td><td>1809</td><td>1131</td><td>769</td><td>376</td><td>236</td><td>570</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>상품권</td><td>상품권/마트</td><td>뷰티/패션/건강</td><td>영화/OTT/게임</td><td>헤어/네일/스파</td><td>전시/테마/체험</td><td>생활/교육/취미</td><td>종교/나눔</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>300</td><td>104</td><td>188</td><td>93</td><td>70</td><td>306</td><td>1297</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>뷰티</td><td>명품화장품</td><td>요즘 뷰티</td><td>포인트제공 브랜드</td><td>향수</td><td>바디</td><td>스킨케어</td><td>메이크업</td><td>헤어/미용</td><td>남성화장품</td><td>신규입점 브랜드</td><td></td><td></td><td></td><td></td></tr><tr><td>3529</td><td>508</td><td>1061</td><td>2528</td><td>2620</td><td>4251</td><td>1904</td><td>1552</td><td>648</td><td>2099</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>패션</td><td>명품브랜드</td><td>주얼리</td><td>파자마</td><td>브랜드 가방/지갑</td><td>브랜드 의류</td><td>브랜드 신발</td><td>언더웨어</td><td>드자이너 브랜드</td><td>브랜드 잡화</td><td>브랜드 패션</td><td>브랜드 시계</td><td>MD추천</td><td>신규입점</td><td>주문각인</td></tr><tr><td>10000</td><td>10000</td><td>9223</td><td>10000</td><td>10000</td><td>10000</td><td>10000</td><td>9053</td><td>10000</td><td>10000</td><td>10000</td><td>8838</td><td>6297</td><td>8989</td><td></td></tr><tr><td>식품</td><td>과일/견과/채소</td><td>축산/수산</td><td>쌀/반찬/김치</td><td>건강식품</td><td>다이어트/이너뷰티</td><td>가공/보양식</td><td>케이크</td><td>디저트</td><td>유제품/아이스크림</td><td>커피/차/음료</td><td>전통주</td><td></td><td></td><td></td></tr><tr><td>1809</td><td>1019</td><td>319</td><td>8758</td><td>4512</td><td>3689</td><td>432</td><td>4495</td><td>800</td><td>6202</td><td>2287</td><td></td><td></td><td></td><td></td></tr><tr><td>와인/양주/전통주</td><td>추천 *</td><td>와인 *</td><td>양주 **</td><td>전통주</td><td>맥주/기타</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>** 리빙/도서</td><td>주방/수입주방</td><td>캔들디퓨저 인센스</td><td>식물/꽃배달</td><td>침대/패브릭</td><td>조명/무드등</td><td>인테리어</td><td>생필품</td><td>수납/생활</td><td>가구/DIY</td><td>팬시/캐릭터</td><td>문구/취미</td><td>도서</td><td>명품리빙</td><td>리빙편집샵</td></tr><tr><td>10000</td><td>4740</td><td>10000</td><td>10000</td><td>5353</td><td>10000</td><td>5328</td><td>10000</td><td>10000</td><td>10000</td><td>10000</td><td>10000</td><td>6430</td><td>1379</td><td></td></tr><tr><td>레저/스포츠</td><td>글로벌 브랜드본사</td><td>스포츠 의류</td><td>스포츠 슈즈</td><td>스포츠 잡화</td><td>요가/헬스/수영</td><td>레저/캠핑</td><td>등산/아웃도어</td><td>차량용품</td><td>여행용품</td><td>차량용 방향제</td><td>골프선물</td><td>골프/테니스</td><td></td><td></td></tr><tr><td>9727</td><td>10000</td><td>10000</td><td>5594</td><td>10000</td><td>5039</td><td>10000</td><td>2621</td><td>656</td><td>529</td><td>1363</td><td>10000</td><td></td><td></td><td></td></tr><tr><td>아티스트/캐릭터</td><td>스타앨범</td><td>애니메이션 캐릭터</td><td>인디작가</td><td>애니멀캐릭터</td><td>웹소설</td><td>게임</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>유아동/반려</td><td>신생아선물세트</td><td>베이비패션</td><td>키즈패션</td><td>임신/출산/육아</td><td>장난감/인형</td><td>유아교육/도서</td><td>기저귀/물티슈</td><td>분유/간식/영양제</td><td>강아지 간식/용품</td><td>고양이 간식/용품</td><td>기타 소동물용품</td><td></td><td></td><td></td></tr><tr><td>10000</td><td>5826</td><td>10000</td><td>10000</td><td>10000</td><td>10000</td><td>1032</td><td>637</td><td>10000</td><td>6235</td><td>277</td><td></td><td></td><td></td><td></td></tr><tr><td>디지털/가전</td><td>프리미엄 가전</td><td>케이스</td><td>모바일 액세서리</td><td>미니가전</td><td>건강용품/가전</td><td>디지털/음향기기</td><td>계절가전</td><td>생활가전</td><td>주방가전</td><td>미용가전</td><td>카메라</td><td></td><td></td><td></td></tr><tr><td>1504</td><td>10000</td><td>10000</td><td>2571</td><td>974</td><td>8942</td><td>1470</td><td>2109</td><td>1783</td><td>1022</td><td>384</td><td></td><td></td><td></td><td></td></tr><tr><td>카카오프렌즈</td><td>토이</td><td>리빙</td><td>테크</td><td>문구</td><td>패션</td><td>푸드</td><td>골프</td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>242</td><td>682</td><td>633</td><td>69</td><td>114</td><td>15</td><td>43</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table>\n<br><p id='36' data-category='paragraph' style='font-size:16px'>Q1] 사무실이 너무 건조해서 그런지 눈이 계속 빽빽해.<br>메이크업 | cos=⌀ . 122 : p=0.013<br>바디 1 cos=0.118 | p=0.012<br>스킨케어 li cos=0.116 l p=0.012</p>\n<br><p id='37' data-category='paragraph' style='font-size:18px'>Q2] 출퇴근길에 이어폰이 자꾸 한쪽만 소리 나서 짜증난다.<br>디지털/음향기기 1 cos=0.113 1 p=0.012<br>웹소설 : cos=0.106 : p=0.012<br>애니메이션 캐릭터 : cos=⌀ . 105 li p=0.011</p>\n<p id='38' data-category='paragraph' style='font-size:16px'>Q3] 주말에 캠핑 가는데 뭐 챙겨야 할지 감이 안 잡히네.<br>레저/캠핑 li cos=⌀ 147 l p=0.016<br>등산/아웃도어 : cos=0.128 li p=0.013<br>여행용품 cos=0.124 | p=0.013</p>\n<p id='39' data-category='paragraph' style='font-size:14px'>Q4] 회사에서 회의가 길어지니까 허리부터 어깨까지 뻐근하다.<br>바디 : cos=0.139 li p=0.015<br>요가/헬스/수영 : cos=⌀ . 130 : p=0.014<br>골프 1 cos=0.116 1 p=0.012</p>\n<p id='40' data-category='paragraph' style='font-size:14px'>Q5] 지하철에서 책 읽으려는데 손에 들고 있으니까 금방 팔 아프더라.<br>바디 cos=⌀ . 140 p=0.015<br>도서 cos=0.137 p=0.014<br>웹소설 � cos=0.130 | p=0.013</p>\n<br><h1 id='41' style='font-size:22px'>코사인 유사도</h1>\n<h1 id='42' style='font-size:22px'>코사인 유사도 검색</h1>\n<figure id='43'><img style='font-size:14px' alt=\"being\nroyalty\ngender\nhuman\nplural\nfeline\nverb\nliving\nhouses\ncat → 0.6 0.9 0.1 0.4 -0.7 -0.3 -0.2\nDimensionality\nreduction of\nword\nkitten → 0.5 0.8 -0.1 0.2 -0.6 -0.5 -0.1 embeddings\nfrom 7D to 2D\ncat\ndog → 0.7 -0.1 0.4 0.3 -0.4 -0.1 -0.3\nkitten\nhouses → 0.8 -0.4 -0.5 0.1 -0.9 0.3 0.8\ndog\nwoman\nman → 0.6 -0.2 0.8 0.9 -0.1 -0.9 -0.7\nDimensionality\nreduction of\nword\nwoman → 0.7 0.3 0.9 -0.7 0.1 -0.5 -0.4\nembeddings\nfrom 7D to 2D man queen\nking → 0.5 -0.4 0.7 0.8 0.9 -0.7 -0.6\nqueen → 0.8 -0.1 0.8 -0.9 0.8 -0.5 -0.9\nking\nWord Word embedding Dimensionality Visualization of word\nreduction embeddings in 2D\" data-coord=\"top-left:(310,673); bottom-right:(1868,1820)\" /></figure>\n<br><h1 id='44' style='font-size:16px'>교환권</h1>\n<p id='45' data-category='paragraph' style='font-size:16px'>상품권</p>\n<p id='46' data-category='paragraph' style='font-size:16px'>뷰티</p>\n<p id='47' data-category='paragraph' style='font-size:16px'>패션</p>\n<p id='48' data-category='paragraph' style='font-size:16px'>식품</p>\n<p id='49' data-category='paragraph' style='font-size:20px'>와인/양주/전통주</p>\n<br><h1 id='50' style='font-size:16px'>교환권 전체</h1>\n<h1 id='51' style='font-size:16px'>베이커리/도넛/떡</h1>\n<p id='52' data-category='paragraph' style='font-size:14px'>카페</p>\n<h1 id='53' style='font-size:16px'>아이스크림/빙수</h1>\n<p id='54' data-category='paragraph' style='font-size:14px'>치킨</p>\n<p id='55' data-category='paragraph' style='font-size:16px'>버거/피자</p>\n<p id='56' data-category='paragraph' style='font-size:14px'>편의점</p>\n<p id='57' data-category='paragraph' style='font-size:18px'>한식/중식/일식</p>\n<br><p id='58' data-category='paragraph' style='font-size:18px'>리빙/도서</p>\n<p id='59' data-category='paragraph' style='font-size:18px'>아니 마라샹궈를 왜 안 먹는거야</p>\n<br><p id='60' data-category='paragraph' style='font-size:20px'>●</p>\n<br><h1 id='61' style='font-size:22px'>임베딩 모델</h1>\n<p id='62' data-category='paragraph' style='font-size:20px'>infloat/multilingual-e5-large-instruct 모델 사용</p>\n<h1 id='63' style='font-size:18px'>● 리더보드의 벤치마크 성능과 모델 파라미터 수 고려</h1>\n<br><h1 id='64' style='font-size:16px'>종합 순위</h1>\n<table id='65' style='font-size:14px'><thead><tr><td></td><td>STS_Average</td><td>NLI_Average</td><td>Clustering_Average</td><td>Retrieval_Average</td><td>Weig</td></tr></thead><tbody><tr><td>Qwen/Qwen3- Embedding-8B-bf16</td><td>89.36</td><td>77.71</td><td>65.79</td><td>78.73</td><td></td></tr><tr><td>Alibaba-NLP/gte- Qwen2-7B-instruct- fp16</td><td>85.55</td><td>79.48</td><td>67.34</td><td>75.73</td><td></td></tr><tr><td>intfloat/multilingual- e5-large-instruct</td><td>82.24</td><td>65.69</td><td>70.4</td><td>73.4</td><td></td></tr><tr><td>Qwen/Qwen3- Embedding-4B-bf16</td><td>89.2</td><td>76.4</td><td>58.74</td><td>77.68</td><td></td></tr><tr><td>dragonkue/snowflake- arctic-embed-l-v2.0- ko</td><td>81.9</td><td>60.21</td><td>63.82</td><td>79.44</td><td></td></tr><tr><td>nlpai-lab/KURE-v1</td><td>83.37</td><td>64.79</td><td>61.6</td><td>77.24</td><td></td></tr><tr><td>kakaocorp/kanana- nano-2.1b- embedding-fp16</td><td>83.26</td><td>66.86</td><td>59.68</td><td>76.51</td><td></td></tr></tbody></table>\n<br><h1 id='66' style='font-size:22px'>의도 분석</h1>\n<h1 id='67' style='font-size:20px'>임베딩 유사도의 한계</h1>\n<br><p id='68' data-category='paragraph' style='font-size:14px'>- 임베딩은 문장과 카테고리의 표면적 의미 유<br>사도만 계산함.<br>-예: \"립스틱 별로야\" ↔ 카테고리 [립스틱]<br>→ 유사도는 높지만 실제 의미는 배제 신호.<br>- 결과: 부정 신호도 추천 후보에 올라가면서<br>추천 신뢰도 하락.</p>\n<h1 id='69' style='font-size:18px'>Solution: 의도 분석 추가</h1>\n<br><p id='70' data-category='paragraph' style='font-size:16px'>의도 라벨은 문장이 추천 신호인지, 배제 신호인지,<br>무관한 배경인지 알려줌<br>선물 관련 의도 라벨링 기준 (5개)</p>\n<br><table id='71' style='font-size:14px'><thead><tr><td>라벨</td><td>정의</td><td>신호</td><td>예시</td></tr></thead><tbody><tr><td>필요 (Need)</td><td>현재 쓰는 물건에 문제·부족 이 있어서 교체/보충이 필요 한 상황</td><td>\"망가졌어\", \"없어져서 필요 해\", \"버벅거려\"</td><td>\"휴대폰 케이스가 찢어졌어\"</td></tr><tr><td>구매 (Purchase)</td><td>앞으로 직접 구입할 의사를 명확히 드러냄</td><td>\"사야겠다\",\"사고 싶어\", \"살 거야\"</td><td>\"향수 새로 사야겠다\"</td></tr><tr><td>관심 (Interest)</td><td>특정 상품에 호감·호기심은 표현했지만 직접 구매 의사 까지는 아님 → 선물로 주면 좋아할 만한 잠재적 수요</td><td>\"궁금하다\", \"예쁘다\", \"마음 에 들어\", \"봤어?\"</td><td>\"한솥 신메뉴 나왔다는데 궁 금\" / \"이 티셔츠 진짜 예쁘 다\"</td></tr><tr><td>부정 (Negative)</td><td>상품에 대한 거부·부정적 의 견 → 추천/선물에서 제외 신 호</td><td>\"싫어\", \"별로야\", \"안 좋아 해\", \"흥미 없어\"</td><td>\"나는 립스틱은 별로야\"</td></tr><tr><td>단순 언급 (Informative)</td><td>단순한 일상 공유, 구매·관심· 필요·부정과 연결되지 않음</td><td>\"먹었어\", \"봤어\", \"다녀왔 어\", \"날씨\"</td><td>\"한솥 시켜줘서 그거 먹음\"</td></tr></tbody></table>\n<br><h1 id='72' style='font-size:22px'>의도 분석</h1>\n<h1 id='73' style='font-size:20px'>데이터 수집</h1>\n<br><h1 id='74' style='font-size:16px'>데이터 소스 및 특성</h1>\n<br><p id='75' data-category='paragraph' style='font-size:18px'>휴먼 검수 데이터 (Gold Standard): 직접 라벨링한 1,073개의 데이터.<br>모델의 신뢰성 있는 성능 평가와 핵심 학습의 기준으로 사용된다. 클래스 간 분포가 비교적 균일하게 조정되어 있다.</p>\n<p id='76' data-category='paragraph' style='font-size:18px'>실버라벨 데이터: LLM을 통해 대량으로 생성 및 라벨링된 9,698개의 데이터. 양적 측면을 보강하지만,<br>라벨 품질이 낮고 '단순 언급'클래스가 전체의 55% 이상을 차지하는 심각한 클래스 불균형 문제를 내포한다.</p>\n<p id='77' data-category='paragraph' style='font-size:20px'>*실버 라벨(silver label, 은라벨) : 완전히 사람이 라벨링하지 않고, 자동화된 방법(모델 예측, 규칙 기반)으로 만들어진<br>준정답 데이터→ 품질은 골드보다 떨어지지만 대량으로 얻기 쉽고, 학습용으로 보조적으로 자주 사용됨.</p>\n<p id='78' data-category='paragraph' style='font-size:16px'>특징) 검증(Validation)은 전부 휴먼 라벨만 사용(노이즈 차단).<br>학습(Train)은 휴먼 + 은라벨 결합하되, 은라벨 다수 클래스(단순 언급) 다운샘플링으로 불균형 완화.</p>\n<p id='79' data-category='paragraph' style='font-size:20px'>최종 분포</p>\n<br><p id='80' data-category='paragraph' style='font-size:20px'>학습(6,954, silverlabel + 검수 완료 데이터752)<br>검증(321, 검수 완료 데이터)</p>\n<br><table id='81' style='font-size:14px'><thead><tr><td>필요</td><td>구매</td><td>관심</td><td>부정 단순 언급</td></tr></thead><tbody><tr><td>972</td><td>1,142</td><td>1,454 1,281</td><td>2,105</td></tr></tbody></table>\n<table id='82' style='font-size:14px'><thead><tr><td>필요</td><td>구매</td><td>관심</td><td>부정 단순 언급</td></tr></thead><tbody><tr><td>70</td><td>66</td><td>70 70</td><td>45</td></tr></tbody></table>\n<br><h1 id='83' style='font-size:20px'>의도 분석</h1>\n<h1 id='84' style='font-size:18px'>베이스 모델 선정 :  beomi/kcbert-base)</h1>\n<p id='85' data-category='paragraph' style='font-size:14px'>카카오톡 대화는 신조어, 이모티콘, 비문 등 비정형적 요소가 많다.<br>따라서 정제된 백과사전(KoBERT)보다 실제 사용자들이 생성한 뉴스 댓글, 웹 문서(kcbert-base)로 학습된 모델이 본 태<br>스크에 더 적합하다고 판단했다.  kcbert-base LL 한국어 감성 분류 벤치마크(NSMC)에서도 높은 성능을 입증하여, 구<br>어체 기반 분류 태스크에 대한 일반화 성능을 기대할 수 있다.</p>\n<table id='86' style='font-size:16px'><thead></thead><tbody><tr><td>구분</td><td>kcbert-base (선택 모델)</td><td>KoBERT (대안 모델)</td></tr><tr><td>사전학습 데이터</td><td>뉴스 댓글, 웹 문서 (구어체)</td><td>한국어 위키백과 (문어체)</td></tr><tr><td>도메인 유사성</td><td>높음 (프로젝트와 유사)</td><td>낮음</td></tr><tr><td>NSMC 정확도</td><td>90.63%</td><td>90.10%</td></tr></tbody></table>\n<br><h1 id='87' style='font-size:22px'>의도 분석</h1>\n<h1 id='88' style='font-size:20px'>평가 지표</h1>\n<br><p id='89' data-category='paragraph' style='font-size:18px'>'관심' (0.9510) 클래스를 가장 잘 분류하며, 선물 후보를 찾는 데 가장 중요한 신호를 매우 높은 정밀도로 포착하고 있다.<br>반면 '단순 언급' (0.8764)과 '구매' (0.8788) 클래스의 성능이 다른 클래스에 비해 약간 낮음.</p>\n<table id='90' style='font-size:16px'><thead><tr><td>label</td><td>precision</td><td>recall</td><td>f1-score</td></tr></thead><tbody><tr><td>필요</td><td>0.8864</td><td>0.8667</td><td>0.8764</td></tr><tr><td>구매</td><td>0.9275</td><td>0.9143</td><td>0.9209</td></tr><tr><td>관심</td><td>0.9315</td><td>0.9714</td><td>0.9510</td></tr><tr><td>부정</td><td>0.9130</td><td>0.9000</td><td>0.9065</td></tr><tr><td>단순 언급</td><td>0.8788</td><td>0.8788</td><td>0.8788</td></tr></tbody></table>\n<br><figure id='91'><img style='font-size:14px' alt=\">>> 롯데리아 신메뉴 나왔던데 좀 궁금함 >>> 짜증나\n결과 결과\n관 심 : 0.9977 단순 언 급 : 0.9950\n필요 : 0.0007 필요 : 0. 0017\n단순 언 급 : 0.0006 부정 : 0. 0014\n구매 : 0.0006 관심 : 0. 0010\n부정 : 0.0005 구매 : 0.0009\n>>> 나 캔들은 좀 안 맞 는 거 같 아 연 기 때 문 에 >>> 밥 먹었음 ?\n결과 결과\n부정 : 0.7491 단순 언 급 : 0.9963\n단순 언급 : 0.2394\n필 여 : 0. 0017\n필요 : 0.0074\n관심 : 0. 0008\n관심 : 0.0031\n부정 : 0. 0007\n구매 : 0.0011\n구매 : 0.0005\n>>> 나 마 우 스 가 좀 고장난거 같아 갑자기 너무 느리고 이 상 한 소 리 도 나고\n결과\n필요 : 0. 9844\n부정 : 0.0092\n관심 : 0.0033\n단순 언 급 : 0.0024\n구매 : 0.0007\n>>> 나 점 심 으 로 한 솥 도 시 락 먹 음\n결과\n단순 언급 : 0.9950\n구매 : 0.0017\n필요 : 0.0016\n관심 : 0.0009\n부정 : 0.0007\" data-coord=\"top-left:(1825,791); bottom-right:(3658,1961)\" /></figure>\n<h1 id='92' style='font-size:22px'>Gate 알고리즘</h1>\n<p id='93' data-category='list' style='font-size:16px'>1. 문장별_카테고리_점수 = 카테고리_유사도 x 의도_가중치 x 최근성 가중치</p>\n<p id='94' data-category='list' style='font-size:16px'>2. 카테고리 별 누적 점수 계산<br>카테고리_총점 = Z(해당_카테고리의_모든_문장_점수)</p>\n<p id='95' data-category='paragraph' style='font-size:20px'>3. 상위 카테고리 선정</p>\n<br><p id='96' data-category='list' style='font-size:14px'>● 최소 점수 필터링<br>● 상위 3개 카테고리 선정</p>\n<p id='97' data-category='list' style='font-size:18px'>4. 근거 문장 추출 : 각 카테고리 별로 기여도 높은 문장 3개씩 선정</p>\n<h1 id='98' style='font-size:20px'>Gate 알고리즘</h1>\n<p id='99' data-category='list' style='font-size:18px'>1. 문장별_카테고리_점수<br>2. 카테고리 별 누적 점수 계산<br>3. 상위 카테고리 선정<br>4. 근거 문장 추출</p>\n<table id='100' style='font-size:14px'><thead></thead><tbody><tr><td>user sentence</td><td>카테고리 별 임베딩 유사도 :[\"스포츠\", \"디지털기기\", \"화장품\", \"패션의류\", \"식품건강\", \"여행티켓\"]</td></tr><tr><td>sentence_ vector = model.encode(\"노트북이 너무 오래돼서 버벅이는 것 같아\")</td><td>[0.01, 1.98,0.03, 0.02, 0.1, 0.3]</td></tr><tr><td>sentence_ vector = model.encode(\"가을이라 그런지 괜찮은 맨투맨 하 나 사고 싶네\")</td><td>[0.07,0.05,0.27,2.21, 0.12, O.11]</td></tr><tr><td>sentence_ vector = model.encode(\"요즘 부모님 기력이 없으신 것 같아 서 걱정이야\")</td><td>[0.56, 0.08 ,0.13 , 0.32, 1.97, O.31]</td></tr><tr><td>sentence_ vector = model.encode(\"주말에 캠핑가서 불멍 때리고 싶다\")</td><td>[0.36, 0.08 ,0.19, 0.32, 0.27, 1.31]</td></tr><tr><td>sentence_ vector = model.encode(\"염색했더니 머릿결이 완전 상한 것 같아\")</td><td>[0.16, 0.11,0.79, 0.92, 0.17,0.28]</td></tr></tbody></table>\n<p id='101' data-category='paragraph' style='font-size:16px'>[1.16, 2.3, 1.41, 3.79, 2.54, 2.31] → Top 3 카테고리: 패션의류, 식품건강, 여행티켓 선정</p>\n<h1 id='102' style='font-size:22px'>llm 최종 상품 선정</h1>\n<h1 id='103' style='font-size:20px'>핵심 기능</h1>\n<p id='104' data-category='list' style='font-size:14px'>● 필터링된 상품 목록들 중에서 각 카테고리 당 최종 상품 1개씩 선정<br>● 사용자가 입력한 나이/성별/관계를 고려한 맞춤형 추천<br>● Gate 알고리즘에서 추출한 근거 문장 활용</p>\n<p id='105' data-category='paragraph' style='font-size:18px'>프롬프트 설계</p>\n<p id='106' data-category='list' style='font-size:16px'>● 최종 선정된 카테고리에서 정확히 1개씩만 선택<br>● 제공된 목록에서만 선택, 예산/나이/관계 고려<br>● 외부 API나 LLM 호출이 실패하더라도 사용자는 항상 결과를 볼 수 있도록 재시도 ·풀백 메커니<br>즘을 설계</p>\n<h1 id='107' style='font-size:22px'>예상 사용자 시나리오</h1>\n<p id='108' data-category='paragraph' style='font-size:16px'>�</p>\n<br><h1 id='109' style='font-size:18px'>카카오톡 대화 내역 업로드<br>나이, 성별, 관계, 예산 범위 입력</h1>\n<h1 id='110' style='font-size:20px'>전처리 및 AI 분석</h1>\n<br><p id='111' data-category='paragraph' style='font-size:20px'>2</p>\n<br><h1 id='112' style='font-size:14px'>최근 3개월 대화 분석, 임베딩, 감정/의도 분석</h1>\n<p id='113' data-category='paragraph' style='font-size:18px'>3</p>\n<br><p id='114' data-category='paragraph' style='font-size:16px'>Gate 알고리즘 분석<br>Top 3 카테고리 선정 및 근거 문장 추출</p>\n<p id='115' data-category='paragraph' style='font-size:20px'>4</p>\n<br><p id='116' data-category='paragraph' style='font-size:16px'>LLM 기반 최종 추천<br>최적의 선물 리스트 및 추천 이유 생성</p>\n<br><figure id='117'><img style='font-size:14px' alt=\"kakaotalk 선물하기\n카카오 선물 추천\n카카오톡 대화를 분석해서 맞춤형 선물을 추천해드려요!\n선물 추천을 위한 정보 입력\n카카오톡 대화 파일 (TXT/CSV)\n파일 선택 KakaoTalk_Chat_ 박채연 (1).csv\n카카오톡에서 내보낸 텍스트 파일 또는 CSV 파일을 업로드해주세요. ← 선물 추천 결과\n나이\n23 세\n성별 홍길동님을 위한 맞춤 선물 추천\n여성\n디지털기기 패션의류 생활용품\n관계\n친구\n대화에서 발견된 힌트\n예산 범위\n10000 20000 원 '노트북이 너무 느려서 새로 사고 싶어'\n다음 단계 '이번 겨울에 따뜻한 옷이 필요할 것 같아'\n추천 선물\n울트라북 X5 프리미엄\n가볍고 성능 좋은 신형 노트북\n89,000원\n추천이유: 대화에서 노트북 교체에 대한\n언급이 있었고, 고성능 작업을 위한 니즈가\n확인됨\n캐시미어 니트 스웨터\n고급 소재의 따뜻한 겨울 니트\n65,000원\" data-coord=\"top-left:(1952,576); bottom-right:(3757,2021)\" /></figure>\n<h1 id='118' style='font-size:18px'>감사합니 �</h1>\n<h1 id='119' style='font-size:14px'>YBIGTA 신기플 팀 카카오톡</h1>",
    "1uqI9Ft93R9JYj0EBI2oFqVya716Suxrc": "<h1 id='0' style='font-size:20px'>카카오톡<br>대화<br>기반<br><br>선물<br>추천<br>시스템</h1>\n<h1 id='1' style='font-size:18px'>대화<br>속에<br>숨겨진<br>마음을<br>찾아,<br>최고의<br>선물을<br>추천합니다</h1>\n<br><h1 id='2' style='font-size:22px'>💬</h1>\n<h1 id='3' style='font-size:14px'>중간발표<br>YBIGTA</h1>\n<h1 id='4' style='font-size:14px'>발표자 어예지</h1>\n<br><p id='5' data-category='paragraph' style='font-size:16px'>강 예 서 <br> 구 남 혁 <br> 박 채 연 <br> 어 예 지 <br> 정 진 욱</p>\n<h1 id='6' style='font-size:18px'>목차</h1>\n<p id='7' data-category='list' style='font-size:14px'>1. 문제<br>정의<br>및<br>니즈<br><br><br>2. 솔루션<br>및<br>프로젝트<br>개요<br><br><br><br>3. 전체<br>파이프라인<br>설계<br> <br><br>4. 데 이터<br>전처리<br></p>\n<br><p id='8' data-category='list' style='font-size:14px'>5. 임베딩<br>기반<br>유사도<br>계산<br><br>6. 가중치<br>산출<br>방식<br>7. GATE<br>알고리즘<br>8. LLM을<br>활용한<br>최종<br>상품<br>선정<br>9.<br> 사용자<br>시나리오</p>\n<br><header id='9' style='font-size:20px'>문제<br>정의<br>및<br>니즈</header>\n<p id='10' data-category='paragraph' style='font-size:16px'>주변인의<br>생일/기념일<br>선물<br>고민이<br>많으며<br>상대방의<br>취향을<br>정확히<br>파악하기<br>어려움</p>\n<h1 id='11' style='font-size:16px'>카카오톡<br>대화에<br>힌트가<br>숨어<br>있지만<br>대화량이<br>많을수록<br>기억하거나<br>분석하기<br>어려움</h1>\n<p id='12' data-category='paragraph' style='font-size:16px'>기존<br>선물<br>추천<br>서비스의<br>한계<br>:<br>개인화<br>부족,<br>실제<br>대화<br>데이터를<br>활용하지<br>않음</p>\n<br><p id='13' data-category='paragraph' style='font-size:14px'>카카오톡은<br>국내<br>사용량<br>1위<br>메신저지만<br>대화<br>기반<br>취향<br>분석<br>기능이<br>없어<br>개인화된<br>선물<br>추천이<br>어려움</p>\n<br><h1 id='14' style='font-size:18px'>솔루션<br>및<br>프로젝트<br>개요</h1>\n<h1 id='15' style='font-size:14px'>카카오톡<br>대화와<br>선물<br>대상자<br>정보<br>기반<br>⬇<br>대화<br>속에서<br>드러난<br>유사<br>상품<br>카테고리를<br>매칭<br>+<br>의도·감정을<br>분석<br>⬇<br>맞춤형<br>선물<br>리스트를<br>제공하는<br>시스템<br>구축</h1>\n<figure id='16'><img alt=\"\" data-coord=\"top-left:(967,1189); bottom-right:(1998,1432)\" /></figure>\n<br><h1 id='17' style='font-size:18px'>프로젝트<br>전체<br>파이프라인</h1>\n<figure id='18'><img alt=\"\" data-coord=\"top-left:(193,429); bottom-right:(2833,1462)\" /></figure>\n<br><footer id='19' style='font-size:14px'><br>💡<br>핵심<br>차별점:<br>대화<br>내역의<br>임베딩,<br>감정·의도<br>분석,<br>GATE<br>알고리즘을<br>통한<br>상품<br>카테고리<br>매칭</footer>\n<br><header id='20' style='font-size:20px'>전처리</header>\n<p id='21' data-category='list' style='font-size:14px'>대화<br>정제<br>:<br>무의미한<br>발화<br>제거<br>및<br>문장<br>통합으로<br>분석<br>품질<br>향상<br></p>\n<p id='22' data-category='list' style='font-size:14px'>데이터<br>최적화<br>:<br>최근<br>3개월<br>대화만<br>추출하여<br>현재<br>취향<br>반영<br></p>\n<p id='23' data-category='list' style='font-size:14px'>개인정보<br>보호<br>:<br>계좌번호<br>전화번호<br>등<br>민감정보<br>마스킹<br>처리</p>\n<p id='24' data-category='paragraph' style='font-size:16px'><br>💡<br>품질<br>향상<br>효과<br>:<br>전처리를<br>통해<br>무의미한<br>메시지<br>약<br>60%<br>제거<br></p>\n<br><figure id='25'><img alt=\"\" data-coord=\"top-left:(2277,54); bottom-right:(2610,1668)\" /></figure>\n<br><h1 id='26' style='font-size:18px'>전처리<br>-<br>주요<br>기능</h1>\n<p id='27' data-category='list' style='font-size:14px'>file_utils.py:<br>csv,<br>txt텍스트<br>파일<br>읽기,<br>txt<br>파일<br>변환</p>\n<p id='28' data-category='list' style='font-size:14px'>filter_utils.py:<br>시간<br>기반,<br>사용자<br>기반<br>필터링</p>\n<p id='29' data-category='list' style='font-size:14px'>korean_eomi_dict.py:<br>한국어<br>어미<br>사전<br>및<br>분석</p>\n<p id='30' data-category='list' style='font-size:14px'>sbd_processor.py:<br>문장<br>경계<br>탐지<br>후<br>병합<br>및<br>분할</p>\n<p id='31' data-category='list' style='font-size:14px'>text_utils.py:<br>텍스트<br>정규화,<br>정제</p>\n<p id='32' data-category='list' style='font-size:14px'>filter_non_korean.py:<br>프로그래밍<br>코드<br>등<br>비자연어<br>내용<br>제거(한국어<br>비중이<br>낮은,<br>일정<br>길이<br>이상의<br>텍스트<br>행<br>삭제)</p>\n<p id='33' data-category='list' style='font-size:14px'>anonymize.py:<br>개인정보<br>마스킹<br>및<br>익명화</p>\n<br><h1 id='34' style='font-size:14px'>유사도<br>계산<br>-<br>코사인<br>유사도<br>검색</h1>\n<figure id='35'><img alt=\"\" data-coord=\"top-left:(223,419); bottom-right:(2784,1491)\" /></figure>\n<br><header id='36' style='font-size:20px'>임베딩<br>모델</header>\n<p id='37' data-category='paragraph' style='font-size:16px'>한국어<br>임베딩<br>리더보드<br>확인<br>결과<br>intfloat/multilingual-e5-large-instruct<br>모델<br>사용<br>:<br>크기대비<br>성능<br>우수</p>\n<p id='38' data-category='list' style='font-size:14px'>•<br>500M<br>파라미터<br>다국어<br>임베딩<br>모델</p>\n<p id='39' data-category='list' style='font-size:14px'>•<br>MTEB<br>벤치마크에서<br>우수한<br>성능</p>\n<p id='40' data-category='list' style='font-size:14px'>•<br>한국어<br>문장<br>분석에<br>최적화된<br>코사인<br>유사도<br>계산</p>\n<br><h1 id='41' style='font-size:20px'>가중치<br>계산<br></h1>\n<h1 id='42' style='font-size:18px'>3단계<br>가중치<br>적용:<br>맞춤형<br>추천을<br>위한<br>다차원<br>분석<br>적용</h1>\n<p id='43' data-category='paragraph' style='font-size:16px'>의도<br>가중치<br>:<br>구매<br>><br>필요<br>><br>관심<br>><br>고민<br>><br>단순<br>언급</p>\n<br><p id='44' data-category='list' style='font-size:14px'>'필요':<br>교체/보충<br>의도<br>(예:<br>\"노트북이<br>버벅거려\")<br>'구매':<br>구매<br>의사<br>표현<br>(예:<br>\"맨투맨<br>사고<br>싶네\")<br>'관심':<br>흥미<br>표현<br>(예:<br>\"에어팟<br>봤어?\")<br>'부정':<br>명시적인<br>거부<br>또는<br>부정적<br>의견<br>표현<br>(예:<br>\"나는<br>립스틱은<br>별로야\",<br>\"그거는<br>안<br>좋아해”)<br>'단순<br>언급':<br>일반적인<br>일상<br>보고<br>(예:<br>\"오늘<br>날씨<br>예쁘다\")</p>\n<p id='45' data-category='list' style='font-size:16px'>감정<br>가중치<br>:<br><br>긍정,<br>중립,<br>부정<br>고려<br>최근성<br>가중치<br>:<br>오래된<br>대화<br>보다<br>최신의<br>발화<br>우선<br>고려</p>\n<br><h1 id='46' style='font-size:20px'>Gate<br>알고리즘</h1>\n<h1 id='47' style='font-size:18px'>카테고리<br>유사도<br>기반<br>최적<br>카테고리<br>Top3<br>선정<br></h1>\n<br><h1 id='48' style='font-size:16px'><br><br><br><br><br>:<br>GPU에서<br>받은<br>원천<br>스코어를<br>바탕으로<br>최적의<br>카테고리를<br>선정<br><br><br><br><br><br><br><br>임계값<br>필터링,<br>개수<br>제한(최소<br>1개,<br>최대<br>3개)으로<br>추천<br>신뢰도<br>향상</h1>\n<h1 id='49' style='font-size:18px'>가중치<br>적용</h1>\n<h1 id='50' style='font-size:18px'>근거<br>문장<br>추출<br></h1>\n<br><p id='51' data-category='paragraph' style='font-size:16px'><br><br><br><br><br>:<br>각<br>카테고리별<br>가장<br>영향력<br>있는<br>문장<br>3개<br>추출<br><br><br><br><br><br><br><br>원본<br>대화<br>내용<br>보존으로<br>신뢰성<br>확보,<br>LLM에<br>전달하여<br>추천<br>근거<br>제공</p>\n<br><p id='52' data-category='paragraph' style='font-size:14px'><br><br><br><br><br><br><br><br><br>\"노트북이<br>너무<br>느려서<br>새로<br>사고<br>싶어\"<br>→<br>디지털기기<br>카테고리<br>높은<br>점수<br>부여</p>\n<br><h1 id='53' style='font-size:20px'>Llm<br>최종<br>상품<br>선정</h1>\n<h1 id='54' style='font-size:16px'>핵심<br>기능<br></h1>\n<br><p id='55' data-category='list' style='font-size:14px'>필터링된<br>후보들<br>중에서<br>최적<br>상품<br>1개씩<br>선정<br>사용자가<br>입력한<br>나이/성별/관계/예산을<br>고려한<br>맞춤형<br>추천<br>Gate<br>알고리즘에서<br>추출한<br>근거<br>문장<br>활용</p>\n<p id='56' data-category='paragraph' style='font-size:16px'>입력<br>데이터<br>구조<br><br></p>\n<br><p id='57' data-category='paragraph' style='font-size:16px'>프롬프트<br>설계</p>\n<figure id='58'><img alt=\"\" data-coord=\"top-left:(178,1025); bottom-right:(1141,1572)\" /></figure>\n<br><p id='59' data-category='list' style='font-size:14px'>최종<br>선정된<br>카테고리에서<br>정확히<br>1개씩만<br>선택<br>제공된<br>목록에서만<br>선택,<br>예산/나이/관계<br>고려<br>외부<br> API나<br> LLM<br> 호출이<br> 실패하더라도<br> 사용자는<br> 항상<br>결과를<br>볼<br>수<br>있도록<br>재시도·풀백<br>메커니즘을<br>설계</p>\n<br><h1 id='60' style='font-size:20px'>(예상)<br>사용자<br>시나리오</h1>\n<h1 id='61' style='font-size:14px'>전체<br>사용자<br>흐름:<br>업로드부터<br>추천까지</h1>\n<p id='62' data-category='list'></p>\n<p id='63' data-category='list'></p>\n<p id='64' data-category='list'></p>\n<br><figure id='65'><img alt=\"\" data-coord=\"top-left:(1909,227); bottom-right:(2519,1439)\" /></figure>\n<p id='66' data-category='paragraph' style='font-size:16px'><br>💡<br>사용자<br>경험:<br>각<br>추천에는<br>대화에서<br>추출한<br>근거<br>문장과<br>추천<br>이유가<br>함께<br>제공됩니다.</p>\n<br><header id='67' style='font-size:18px'>향후<br>계획</header>\n<h1 id='68' style='font-size:14px'>데이터<br>확대<br>:<br>다양한<br>연령대와<br>상황의<br>대화<br>데이터<br>확보로<br>추천<br>다양성<br>향상</h1>\n<h1 id='69' style='font-size:14px'>품질<br>개선<br>:<br>알고리즘<br>고도화와<br>사용자<br>피드백을<br>통한<br>지속적<br>추천<br>정확도<br>향상</h1>\n<p id='70' data-category='paragraph' style='font-size:14px'>실시간성<br>향상<br>:<br>크롤링<br>자동화</p>\n<h1 id='71' style='font-size:18px'>감사합니다</h1>\n<p id='72' data-category='paragraph' style='font-size:14px'>YBIGTA<br>중간<br>발표</p>",
    "1rFV0eUp10WLTIZMm3F4jYjfs7mE8AtnJ": "<p id='0' data-category='paragraph' style='font-size:18px'>카카오톡 기반 맞춤형 선물 추천</p>\n<p id='1' data-category='paragraph' style='font-size:14px'>ackend/app/search.py (DB 필터링), backend/app/llm.py (LLM 프롬프트 등), backend/app/gpu_client.py (GPU 클라이언트) , data_pipeline/crawler/ ( 카카오 기프트 크롤링), data_pipeline/preprocessor/normalize_products.py ( 상품 정규화), data_pipeline/crawler/ ( 카카오 기프트 크롤링)</p>\n<p id='2' data-category='paragraph' style='font-size:14px'>풍부하게 담은 데이터셋</p>\n<br><table id='3' style='font-size:14px'><thead><tr><td>프로젝트 목표 txt/csv</td><td colspan=\"7\">사용자가 업로드한 대화 내역과 선물 대상자의 기본 정보를 기반으로, 대화 속에서 드러난 유사 상품 카테고리를 매칭하고 의도· 감정을 분석하여, 그 결과를 토대로 맞춤형 선물 리스트를 제공하는 시스템을 구축합니다.</td></tr></thead><tbody><tr><td>담당자 출력 입력 번호 csv 개인정보 마스킹 등 .json 유사 상담 목록</td><td colspan=\"7\">강예서, 구남혁, 박채연, 어예지, 정진욱</td></tr><tr><td rowspan=\"7\">니즈 산출물 목록 출력 비고</td><td colspan=\"7\">주변인의 생일 선물 선택은 항상 고민이 많으며, 상대방의 취향을 정확히 파악하기 어려움 평소 대화 내역이 많을수록, 대화 속 힌트를 모두 기억해내기 어려움. 입력</td></tr><tr><td colspan=\"7\">개인화된 추천이 어려움</td></tr><tr><td colspan=\"7\">카카오톡은 국내 사용량 1 위 메신저지만, 대화 기반 취향 분석 기능이 없어 선물 runpod</td></tr><tr><td colspan=\"7\">프로젝트 코드 backend/app/main.py (FastAPI 엔드포인트), backend/app/pipeline.py ( 전체 파이프라인), backend/app/preprocess/ (전처리), backend/app/algorithm.py (Gate 알고리즘), 데이터베이스 정규화된 상품 데이터, PostgreSQl 스키마, 복합 인덱스</td></tr><tr><td colspan=\"7\">실행 스크립트 requirements.txt, Dockerfile</td></tr><tr><td colspan=\"7\">배포 아티팩트 Docker 이미지, AWS EC2 상에서 실행되는 컨테이너 , runpod 에서 실행되는 GPU 인스턴스</td></tr><tr><td colspan=\"7\">데모 가이드 .json</td></tr><tr><td rowspan=\"2\">데이터셋</td><td>링크</td><td colspan=\"6\">API 엔드포인트 (/ingest) 호출 방법, 입력 형식 (multipart/form-data 예시), 예상 응답(JSON 예시), 오류 코드 (400, 422, 500) 설명 주제별 텍스트 일상 대화 데이터 (AI Hub) 식음료, 주거·생활, 교통, 교육, 가족 등 20 여 개 주제에 대한 자유로운 일상대화 텍스트 수집 각 대화별 주제, 참여 화자 정보, 화행 라벨링 포함 한국어 일상대화의 주제· 화행 등 맥락 정보를 Upstage API</td></tr><tr><td colspan=\"7\">특징</td></tr><tr><td rowspan=\"31\">전체 파이프라인 프로젝트 기능 명세서</td><td rowspan=\"2\" colspan=\"2\">시스템 구축 csv</td><td colspan=\"5\">단계 설명 비고</td></tr><tr><td colspan=\"5\">카카오톡 대화 내역(.txt) 및 상품 카탈로그 데이터 로드 텍스트 필터링, 문장 결합 및 분할, 정규화 및 민감 정보(전화번호, 계좌번호 등) 익명화 runpod 의 GPU 인스턴스에서 모델추론을 통해 임베딩, 의도분석, 감정분석 진행 상품 메타데이터 구축</td></tr><tr><td colspan=\"2\"></td><td colspan=\"5\"></td></tr><tr><td colspan=\"2\"></td><td colspan=\"5\"></td></tr><tr><td colspan=\"2\"></td><td colspan=\"5\">Data Loader Text Clean Model inference PostgreSQL DB 구축 대화내역(.txt/.csv) 업로드 전처리 GPU 분석 Gate 선정 메타 검색 LLM 최종 선정 API 응답</td></tr><tr><td colspan=\"2\"></td><td colspan=\"5\">사용자가 카카오톡 대화</td></tr><tr><td colspan=\"2\">사용자 시나리오</td><td colspan=\"5\">내역 업로드 대화 데이터 전처리 및 마스킹 문장별 의도/ 감정 분석 및 카테고리 유사도 계산 의도/감정/ 최근성 가중치를 적용하여 Top3 카테고리 선정 및 근거 문장 3 개 추출 PostgreSQL 에서 카테고리/ 예산 기반 후보 상품 검색 필터링된 후보 사용자 근거 문장을 LLM 에 전달하여 최종 상품 선정 최종</td></tr><tr><td colspan=\"2\"></td><td colspan=\"5\">상품, 프로필, 추천 결과 반환</td></tr><tr><td colspan=\"2\"></td><td colspan=\"5\">모듈</td></tr><tr><td colspan=\"2\">#</td><td colspan=\"5\"></td></tr><tr><td colspan=\"2\">1</td><td colspan=\"5\">설명 입력 카카오 기프트 상품 데이터 크롤링 및 정규화 최근 3 개월 필터링 csv txt/csv .csv 상품 + 사용자 프로필 Top-K + 선정 최종 추천 문장, URL 반환 JSON ( 추천 상품, 근거 문장,</td></tr><tr><td colspan=\"2\">2 3</td><td colspan=\"5\"></td></tr><tr><td colspan=\"2\">시스템 구축 파이프라인 4 5</td><td colspan=\"5\">텍스트 필터링, 문장 결합 및 분할, 민감정보 마스킹, Runpod GPU 인스턴스에서 의도/ 감정 분석 Top3 카테고리 & 근거 문장 추출 카테고리· 예산 기반 후보 상품 필터링 candidates quer 후보 상품 리스트 LLM 기반 최종 상품 랭킹 /선정 후보 근거 JSON 형태로 최종 추천 상품, 선정 이유, 근거 URL)</td></tr><tr><td colspan=\"2\"></td><td colspan=\"5\">Data Loader Text Clean & 익명화 GPU Client Gate Algorithm DB 필터링</td></tr><tr><td colspan=\"2\"></td><td colspan=\"5\">LLM 최종 선정 API 응답 모듈</td></tr><tr><td colspan=\"2\"></td><td colspan=\"5\"></td></tr><tr><td colspan=\"2\">#</td><td colspan=\"5\">대화 업로드 전처리 GPU 분석 Gate 선정 후보 검색 LLM 재랭킹 대시보드 (Streamlit 등)</td></tr><tr><td colspan=\"2\"></td><td colspan=\"5\"></td></tr><tr><td colspan=\"2\">6 7 1 2 .csv</td><td colspan=\"5\">설명 사용자가 카카오톡 대화 내역 .txt 업로드 + 나이, 시스템이 최근 3 개월 상대방 발화만 similarity / recency 스코어</td></tr><tr><td colspan=\"2\">사용자 실시간 흐름 클린 7</td><td colspan=\"5\"></td></tr><tr><td colspan=\"2\"></td><td colspan=\"5\">성별, 추출 후 정제/연락처, 계좌 / sentiment-intent Top3 카테고리 및 영향 문장 3 개 추출 PostgreSQL 데이터베이스에서 예산/ 카테고리 LLM 이 최종 상품 리스트</td></tr><tr><td colspan=\"2\"></td><td colspan=\"5\"></td></tr><tr><td colspan=\"2\">3 4 5 6</td><td colspan=\"5\">관계, txt/csv txt/csv 산출 사용자에게 선정된 카테고리 추천 상품, 추천 이유,</td></tr><tr><td colspan=\"2\"></td><td colspan=\"5\"></td></tr><tr><td colspan=\"2\"></td><td colspan=\"5\">구성 요소</td></tr><tr><td colspan=\"2\">요약문</td><td colspan=\"5\"></td></tr><tr><td colspan=\"2\">벡터 대시보드 구성</td><td colspan=\"5\"></td></tr><tr><td colspan=\"2\">GPU</td><td colspan=\"5\">대화 파일 업로드(.txt/.csv), 처리</td></tr><tr><td colspan=\"2\"></td><td colspan=\"4\"></td></tr><tr><td colspan=\"2\">runpod 사용 섹션</td><td colspan=\"4\">상태 표시 파 일 업로드</td></tr><tr><td colspan=\"2\">① 업로드창 ② 프로필 업로드창 ③ 추천 결과</td><td colspan=\"4\">예산 텍스트 필터링 텍스트 클린 벡터 클린 텍스트 URL 분류 결과 (JSON) 문장, 근거 응답 예시 성공 프로필 입력(name, age, gender, relation, budget) 구남혁, 나이: 23, 관계: 친구, 예산: 3~5만원 이름: 최종 상품, 추천 이유, 근거 문장 3개, product_url 반환 [ { \"rank\": 1, \"product_name\": \"황올반+BBQ양념반+콜라1.25L\", { \"recommendations\":</td></tr></tbody></table>\n<figure id='4'><img alt=\"\" data-coord=\"top-left:(155,681); bottom-right:(938,1043)\" /></figure>\n<br><p id='5' data-category='paragraph' style='font-size:14px'>\"price\": \"23,500원\", \"reason\": \" 최근 대화에서 치킨을 먹고 싶다고 여러 번 언급했기 때문에 치킨 세트 선물이 적합함\", \"evidence\": [</p>\n<br><p id='6' data-category='paragraph' style='font-size:14px'>\" 야 치킨 땡긴다\",</p>\n<br><p id='7' data-category='paragraph' style='font-size:14px'>\" 양념 반 후라이드 반이 국룰이지\",</p>\n<br><p id='8' data-category='paragraph' style='font-size:14px'>\" 콜라는 무조건 같이 있어야지\" ], \"product_url\": \"https://gift.kakao.com/product/11555337\", } ]}</p>\n<p id='9' data-category='paragraph' style='font-size:18px'>Upstage Product UseCase : (1) 상담 기록 유형 분석 및 알림 자동화 업무 관리 대장</p>\n<br><table id='10' style='font-size:14px'><thead><tr><td colspan=\"2\">PIC(담당자)</td><td>업무 대분류</td><td>업무 수행 안내</td><td>업무 수행 공간</td><td>시작일</td><td>마감일</td><td>완료여부</td><td>제작자 업무 수행내역 기재</td><td>특이사항</td></tr></thead><tbody><tr><td colspan=\"2\">업스</td><td>all</td><td>업무 킥오프 미팅</td><td>- 킥오프 미팅노트</td><td>5/26</td><td>5/26</td><td>TRUE</td><td></td><td></td></tr><tr><td colspan=\"2\">업스</td><td>all</td><td>프로젝트 기능 명세서 작성</td><td>[Upstage Product UseCae] 제작 현황 마스터시트</td><td>5/26</td><td>5/26</td><td>TRUE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA</td><td>기타업무</td><td>리더 선정</td><td></td><td>5/26</td><td>5/27</td><td>TRUE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA</td><td>프로젝트</td><td>프로젝트 설계</td><td>- 업무 진행 github 링크</td><td>5/26</td><td>6/4</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA</td><td>프로젝트 가이드</td><td>프로젝트 가이드 작성</td><td>[Ext] ( 데모 가이드 ) 1. 상담 기록 유형 분석 및 알림 자동화 .docx</td><td>5/26</td><td>6/4</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">업스</td><td>프로젝트</td><td>프로젝트 코드 검수</td><td>[Upstage Product UseCae] 제작 현황 마스터시트</td><td>6/5</td><td>6/5</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">업스</td><td>프로젝트 가이드</td><td>프로젝트 가이드 검수</td><td>[Upstage Product UseCae] 제작 현황 마스터시트</td><td>6/5</td><td>6/5</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA</td><td>all</td><td>검수 내역 반영</td><td>[Upstage Product UseCae] 제작 현황 마스터시트</td><td>6/5</td><td>6/6</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA 업스</td><td>all all</td><td>강의 최종본 검수 및 마무리 아카이빙 업무 마무리 미팅</td><td>최종 가이드 링크 - 웹 데모 링크 - 최종 프로젝트 github 링크</td><td>pr 6/6</td><td>6/6</td><td>FALSE FALSE</td><td></td><td></td></tr></tbody></table>\n<p id='11' data-category='paragraph' style='font-size:18px'>프로젝트/ 프로젝트 가이드 검수내역</p>\n<br><table id='12' style='font-size:14px'><thead></thead><tbody><tr><td>검수자</td><td>콘텐츠 종류 콘텐츠명</td><td>검수항목</td><td>수정 필요 여부</td><td>검수 내역 반영 완료 내역( 수정한 경우, 어떻게</td><td>수정하였는지 세부 내용 기재 & 최종 검수</td><td>링크( 확인( 운영진 최종 확인) 파일 경우 않는</td><td></td><td></td><td>본 자료로 촬영 필수) 사유 기재)</td></tr><tr><td>프로젝트</td><td></td><td>프로젝트 코드</td><td></td><td>필요</td><td></td><td></td><td></td><td>최종 반영하지 TRUE</td><td></td></tr><tr><td>프로젝트</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td></tr><tr><td>퍼블리싱</td><td>문서</td><td></td><td></td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td></tr><tr><td>퍼블리싱 문서</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td></tr></tbody></table>",
    "1NXTVVaXYtKDcTjiBbZJBZeLYGMSuwcGx": "<header id='0' style='font-size:14px'>2025-2 YBIGTA<br>신입기수 프로젝트</header>\n<figure id='1'><img style='font-size:16px' alt=\"BAEKJOON\nHELPER\" data-coord=\"top-left:(169,436); bottom-right:(1121,1305)\" /></figure>\n<br><h1 id='2' style='font-size:22px'>백준 헬퍼<br>Baekjoon Helper</h1>\n<br><p id='3' data-category='paragraph' style='font-size:20px'>자동 반례 탐색 및 사용자 편의성 제공 도구</p>\n<footer id='4' style='font-size:18px'>이재열 강성우 이하람 이지용</footer>\n<br><h1 id='5' style='font-size:22px'>문제 정의 및 배경</h1>\n<p id='6' data-category='paragraph' style='font-size:14px'>01</p>\n<br><h1 id='7' style='font-size:18px'>기존문제상황</h1>\n<br><p id='8' data-category='list' style='font-size:16px'>- 백준 문제 풀이 시 제출은 실패했으나 어디서 틀렸는지 찾기 어려운 경우가 많음<br>- 반례를 직접 만들어야 하는 경우 시간과 노력이 크게 소모됨<br>-디버깅 과정에서 학습 흐름이 끊기는 문제 발생</p>\n<p id='9' data-category='paragraph' style='font-size:14px'>02</p>\n<br><h1 id='10' style='font-size:20px'>기존솔루션의한계</h1>\n<br><p id='11' data-category='list' style='font-size:14px'>-일부 '반례 공유 사이트'가 존재하지만 사용자가 직접 코드와 케이스 생성기를 작성해야<br>-초보자에게는 진입장벽이 높음<br>- 자동화 수준이 낮고 사용성이 떨어짐</p>\n<br><h1 id='12' style='font-size:22px'>프로젝트 소개</h1>\n<h1 id='13' style='font-size:14px'>03</h1>\n<br><h1 id='14' style='font-size:18px'>서비스 필요성</h1>\n<br><p id='15' data-category='list' style='font-size:14px'>- 자동으로 반례를 제시해 주는 서비스 필요<br>- 직관적이고 접근하기 쉬운 인터페이스 필요<br>-다양한 문제 유형과 언어를 지원하는 확장성 필요</p>\n<h1 id='16' style='font-size:20px'>백준 헬퍼 (Baekjoon Helper)</h1>\n<p id='17' data-category='paragraph' style='font-size:16px'>백준 헬퍼는 알고리즘 문제 풀이 과정에서 발생하는 반례 찾기의 어려움을 해결하기 위한 자동화 도구입니다.<br>사용자가 문제 번호와 작성한 코드만 제출하면 LLM을 통해 자동으로 반례를 탐색하여 제공합니다.</p>\n<p id='18' data-category='paragraph' style='font-size:18px'>이 프로젝트는 사용자 편의성을 극대화하고, 학습 효율을 높이는 것을 목표로 합니다.</p>\n<br><h1 id='19' style='font-size:22px'>프로젝트 목표</h1>\n<h1 id='20' style='font-size:18px'>사용자 경험 개선</h1>\n<p id='21' data-category='list' style='font-size:16px'>-문제 번호와 코드 제출만으로 반례 제공<br>-사용자 친화적 인터페이스 설계<br>- 직관적인 결과 표시<br>- 학습 효율성 증대</p>\n<br><p id='22' data-category='paragraph' style='font-size:18px'>자동화 파이프라인 구축</p>\n<p id='23' data-category='list' style='font-size:16px'>- 크롤링:백준 문제 정보 자동 수집<br>-반례 탐색: 알고리즘 기반 자동 생성<br>-결과 제공: 반례 및 예상 출력값 제시<br>-전체 과정 자동화</p>\n<br><h1 id='24' style='font-size:20px'>확장성 있는 구조</h1>\n<p id='25' data-category='list' style='font-size:14px'>- 데이터셋 관리 시스템 구축<br>- Docker 기반 배포 환경 구성<br>-클라우드 실행 환경 고려<br>-다양한 언어 지원 확장성<br>-API 기반 서비스 확장 가능성</p>\n<br><h1 id='26' style='font-size:20px'>프로젝트 구성</h1>\n<figure id='27'><img style='font-size:14px' alt=\"LLM 서버 코드 러너 서버\nFront end 벡엔드 서버\n(react) (fast api)\nDB(Mysql)\" data-coord=\"top-left:(587,358); bottom-right:(2411,1102)\" /></figure>\n<p id='28' data-category='list' style='font-size:16px'>- frontend: React + TypeScript + Vite 기반 웹 애플리케이션<br>- backend: FastAPI 기반 백엔드 서버 (사용자 인증)<br>- ai-server: LLM 통합 AI 서비스 (문제 해결)<br>- code-runner: 안전한 코드 실행 환경</p>\n<br><h1 id='29' style='font-size:22px'>산출물 목록</h1>\n<p id='30' data-category='paragraph' style='font-size:16px'>01</p>\n<p id='31' data-category='paragraph' style='font-size:18px'>코드</p>\n<p id='32' data-category='list' style='font-size:14px'>- app.py: 웹 애플리케이션 메인 코드<br>- search.py: 반례 탐색 알고리즘 구현<br>- crawler.py: 백준 문제 크롤링 모듈<br>- sandbox.py: 안전한 코드 실행 환경</p>\n<p id='33' data-category='paragraph' style='font-size:18px'>03</p>\n<br><p id='34' data-category='paragraph' style='font-size:20px'>데이터셋</p>\n<p id='35' data-category='list' style='font-size:16px'>- dataset.jsonl: 전체 백준 문제 데이터<br>- dataset_simple.jsonl: 간소화된 데이터<br>-태그, 난이도, 예시 입력/출력 포함<br>-문제별 메타데이터 정리</p>\n<br><p id='36' data-category='paragraph' style='font-size:16px'>02</p>\n<br><h1 id='37' style='font-size:20px'>실행 스크립트</h1>\n<p id='38' data-category='list' style='font-size:14px'>- requirements.txt: 필요 패키지 목록<br>- Dockerfile: 컨테이너 이미지 정의<br>- docker-compose.yml: 서비스 구성 정의<br>- run.sh: 실행 스크립트</p>\n<p id='39' data-category='paragraph' style='font-size:16px'>04</p>\n<br><p id='40' data-category='paragraph' style='font-size:20px'>문서</p>\n<p id='41' data-category='list' style='font-size:18px'>-기능 명세서: 시스템 기능 상세 정의<br>-사용자 시나리오: 사용 흐름 설계<br>-API 문서: 외부 연동 인터페이스 정의<br>- 테스트 케이스: 시스템 검증용</p>\n<br><h1 id='42' style='font-size:22px'>산출물 목록</h1>\n<figure id='43'><img style='font-size:14px' alt=\"baekjoon helper\n< > 及 localhost:3001 baekjoon helper 绍 柴 手 ↓ C Y\nBaekjoonHelper 로그인 회원가입\" data-coord=\"top-left:(409,309); bottom-right:(2590,522)\" /></figure>\n<h1 id='44' style='font-size:20px'>BaekjoonHelper</h1>\n<br><p id='45' data-category='paragraph' style='font-size:18px'>이젠 반례도 딸깍으로.</p>\n<p id='46' data-category='paragraph' style='font-size:16px'>문제 번호를 입력하세요...</p>\n<p id='47' data-category='paragraph' style='font-size:16px'>검색</p>\n<p id='48' data-category='paragraph' style='font-size:16px'>백준 문제번호를 입력하고 엔터를 누르거나 검색 버튼을 클릭하세요</p>\n<footer id='49' style='font-size:14px'>2025 BaekjoonHelper. All rights reserved.</footer>\n<br><footer id='50' style='font-size:16px'>개인정보처리방침 이용약관 고객지원</footer>\n<br><h1 id='51' style='font-size:18px'>산출물 목록</h1>\n<figure id='52'><img style='font-size:14px' alt=\"baekjoon helper\n< & localhost:3001/problem/1000 baekjoon helper C � シ 出\nBaekjoonHelper\n코드 작성 JavaScript 초기화 실행\n문제 1000: 숫자 반환하기 Level 1\n11 여기에 코드를 작성하세요\n문제 설명\n정수 n이 주어졌을 때, n을 그대로 반환하는 함수를 작성하세요. 이는 기본적인 함수 작성 연습 문제입니\n다. 이 문제는 프로그래밍의 기초를 다지는 데 도움이 됩니다. 함수의 기본 구조를 이해하고, 매개변수를\n받아서 그대로 반환하는 과정을 연습할 수 있습니다.\n제한사항\n· n은 1 이상 1,000,000 이하의 정수입니다.\n· 함수명은 solution으로 고정입니다.\n· 시간 복잡도는 O(1)이어야 합니다.\n· 공간 복잡도는 O(1)이어야 합니다.\n입출력 예\nn result\n5 5\n123 123\n999999 999999\n입출력 예 설명\n입력받은 정수 n을 그대로 반환하면 됩니다. 이 문제는 함수의 기본 동작을 이해하는 데 중점을 둡니다. 별\n도의 계산이나 변환 없이 입력값을 그대로 출력하는 것이 핵심입니다.\" data-coord=\"top-left:(415,319); bottom-right:(2585,1567)\" /></figure>\n<br><h1 id='53' style='font-size:22px'>전체 파이프라인 (1)</h1>\n<h1 id='54' style='font-size:22px'>BaekjoonHelper</h1>\n<br><p id='55' data-category='paragraph' style='font-size:16px'>이젠 반례도 딸칵으로.</p>\n<p id='56' data-category='paragraph' style='font-size:14px'>문제 번호를 입력하세요...</p>\n<p id='57' data-category='paragraph' style='font-size:14px'>검색</p>\n<p id='58' data-category='paragraph' style='font-size:14px'>백준 문제번호를 입력하고 엔터를 누르거나 검색 버튼을 클릭하세요</p>\n<figure id='59'><img style='font-size:16px' alt=\"코드 작성 Python 초기화 ▷ 실행\nprint(input())\" data-coord=\"top-left:(190,1126); bottom-right:(1421,1566)\" /></figure>\n<br><h1 id='60' style='font-size:20px'>1. 문제검색</h1>\n<p id='61' data-category='list' style='font-size:18px'>- 사용자가 푸는 백준 문제 번호 입력<br>- 서버가 백준 사이트에서 문제 정보 크롤링<br>-문제 제약조건, 입출력 형식 자동 파싱<br>- 데이터셋과 연동하여 문제 정보 보강</p>\n<p id='62' data-category='paragraph' style='font-size:20px'>2. 코드 제출</p>\n<p id='63' data-category='list' style='font-size:18px'>-사용자가 작성한 코드 제출<br>- 서버에서 Docker 기반 sandbox 환경 구축<br>- 안전한 코드 실행 환경 제공<br>- 메모리/시간 제한 설정 및 모니터링</p>\n<br><h1 id='64' style='font-size:22px'>전체 파이프라인 (2)</h1>\n<p id='65' data-category='paragraph' style='font-size:16px'>반례</p>\n<p id='66' data-category='paragraph' style='font-size:16px'>실행 결과:</p>\n<br><p id='67' data-category='paragraph' style='font-size:14px'>입력 : 5</p>\n<br><p id='68' data-category='paragraph' style='font-size:14px'>출력: 5</p>\n<p id='69' data-category='paragraph' style='font-size:16px'>테스트 케이스 1: 통과</p>\n<br><p id='70' data-category='paragraph' style='font-size:16px'>테스트 케이스 2: 통과</p>\n<p id='71' data-category='paragraph' style='font-size:18px'>01</p>\n<p id='72' data-category='paragraph' style='font-size:20px'>3. 반례 탐색</p>\n<br><p id='73' data-category='list' style='font-size:20px'>-알고리즘을 통해 코드 오답 판별<br>-문제 제약조건 기반 테스트 케이스 자동 생성<br>- 정답 코드와 사용자 코드 결과 비교<br>-다양한 입력값 조합으로 반례 탐색<br>-효율적인 탐색을 위한 휴리스틱 알고리즘 적용<br>-발견된 반례 저장 및 분류</p>\n<br><h1 id='74' style='font-size:22px'>문제 12: 숫자 반환하기</h1>\n<h1 id='75' style='font-size:18px'>문제 설명</h1>\n<br><p id='76' data-category='paragraph' style='font-size:14px'>Level 1</p>\n<p id='77' data-category='paragraph' style='font-size:16px'>정수 n이 주어졌을 때, n을 그대로 반환하는 함수를 작성하세요. 이는 기본적인 함수<br>작성 연습 문제입니다. 이 문제는 프로그래밍의 기초를 다지는 데 도움이 됩니다. 함<br>수의 기본 구조를 이해하고, 매개변수를 받아서 그대로 반환하는 과정을 연습할 수<br>있습니다.</p>\n<br><p id='78' data-category='paragraph' style='font-size:18px'>02</p>\n<h1 id='79' style='font-size:20px'>4. 결과 제공</h1>\n<p id='80' data-category='list' style='font-size:20px'>-성공 여부 즉시 알림<br>- 반례 발견 시 입력값 제시<br>- 예상 출력값과 사용자 출력값 비교 제공<br>-오류 유형 분석 및 힌트 제공<br>- 유사 문제 추천<br>-사용자 코드 개선 방향 제안</p>\n<h1 id='81' style='font-size:14px'>현재까지 진행 상황</h1>\n<p id='82' data-category='paragraph' style='font-size:14px'>향후 계획</p>\n<p id='83' data-category='paragraph' style='font-size:14px'>V80</p>\n<h1 id='84' style='font-size:14px'>감사합니다!</h1>",
    "1QkHwIkR-eErZtxU5LWorEqEmariwaP-B": "<table id='0' style='font-size:14px'><thead><tr><td colspan=\"7\">신입기수 프로젝트 - 백준 헬퍼 기능 명세서</td></tr></thead><tbody><tr><td>프로젝트 목표</td><td colspan=\"6\">사용자가 백준 반례를 찾기 힘들었던 기존 문제상황을 해결하기 위해서, 문제 번호와 본인의 답안을 제공하면 LLM 을 통해 쉽게 반례를 찾을 수 있게 해줌.</td></tr><tr><td>담당자</td><td colspan=\"6\">이재열, 강성우, 이지용, 이하람</td></tr><tr><td>니즈</td><td colspan=\"6\">반례 탐색의 어려움: 백준 문제는 사람이 직접 반례를 찾기 어려움 기존 솔루션의 한계: 기존 백준 반례 탐색 사이트는 인간이 답안과 케이스 생성기를 넣어야해서, 전체 문제 개수의 10% 도 커버하지 못하는 한계가 있음</td></tr><tr><td rowspan=\"3\">산출물 목록</td><td colspan=\"6\">프로젝트 코드 app.py, search.py 등</td></tr><tr><td>실행 스크립트</td><td colspan=\"5\">requirements.txt, Dockerfile, docker-compose.yml 등</td></tr><tr><td>데이터셋</td><td colspan=\"5\">백준 문제 데이터셋</td></tr><tr><td rowspan=\"2\">데이터셋</td><td>링크</td><td colspan=\"5\">dataset.jsonl, dataset_simple.jsonl</td></tr><tr><td>특징</td><td colspan=\"5\">1. 백준 문제 데이터셋 2. 태그, 예시입력, solved.ac 난이도, 문제설명, 제출수등의 다양한 정보 3. 크롤링을 통해 직접 생성함</td></tr><tr><td rowspan=\"6\">전체 파이프라인</td><td rowspan=\"6\">사용자 시나리오</td><td>단계</td><td colspan=\"4\">설명</td></tr><tr><td>문제 검색 백준 크롤링 ( 문제 검색) 사용자 코드 제출</td><td colspan=\"4\">사용자가 자신이 풀고있던 백준 문제를 검색 서버에서 백준 문제를 크롤링하여</td></tr><tr><td></td><td colspan=\"4\">문제 정보를 가져옴 사용자가 자신이 작성한 코드를 제출 LLM 이 가져온 문제 정보를 바탕으로 답안을 생성 답안을 검증 ( 백준에 제출 or 다른 방법) Fuzz testing 을 위해 유효한 무작위 입력값을 만드는 코드를 생성 사용자의 코드과 LLM 의 코드가 다른 답을 내는지 확인 답이 반례를 보고.</td></tr><tr><td>답안 생성 답안 검증 입력값 생성기 생성 Fuzz testing 결과 보고</td><td colspan=\"4\">다른 나왔다면</td></tr><tr><td></td><td colspan=\"4\"></td></tr><tr><td></td><td colspan=\"4\"></td></tr><tr><td rowspan=\"3\"></td><td rowspan=\"3\"></td><td># 모듈</td><td>설명</td><td>입력</td><td>출력</td><td>비고</td></tr><tr><td>1 문제 검색 2 백준 크롤링</td><td colspan=\"4\">문제 ID 를 입력받아 백준 문제 정보를 얻어옴. 사용자가 자신이 작성한 코드를 제출</td></tr><tr><td></td><td colspan=\"4\">문제 정보를 받고 LLM 이 답안을 생성함</td></tr><tr><td rowspan=\"13\">프로젝트 기능 명세서</td><td rowspan=\"13\">5 사용자 실시간 흐름</td><td></td><td>사용자가 숫자로 된 유효한 백준 문제 ID 를 입력.</td><td>(사용자) 문제 ID 답안 코드</td><td>문제 ID 문제 정보 사용자 코드 답안 코드 정답 코드 입력값 생성기</td><td>추후 개선 위해 solved.ac 에서도 정보를 가져올것 백준에 제출은 직접 구현할 수도 있지만 boj- cli 를 쓰면 더 쉽게 구현 가능할 것 같음</td></tr><tr><td></td><td colspan=\"4\"></td></tr><tr><td>3 사용자 코드 작성</td><td colspan=\"4\">(사용자)</td></tr><tr><td></td><td colspan=\"4\">LLM 의 선택은 문제의 정보에 따라 자유롭게 할 수 있음.</td></tr><tr><td>4 답안 생성</td><td colspan=\"4\"></td></tr><tr><td></td><td colspan=\"4\">문제 정보</td></tr><tr><td></td><td colspan=\"4\"></td></tr><tr><td></td><td colspan=\"4\"></td></tr><tr><td></td><td colspan=\"4\"></td></tr><tr><td></td><td colspan=\"4\">백준에 LLM 이 생성한 답안코드를 작성해 답안 코드가 정답 코드인지 판별. 만일 정답코드가 아니라면 다시 답안 생성. 문제 정보를 받고 LLM이</td></tr><tr><td>답안 검증</td><td colspan=\"4\"></td></tr><tr><td></td><td colspan=\"4\"></td></tr><tr><td>6 입력값 생성기 생성</td><td colspan=\"4\">무작위로 유효한 입력값을 만드는 문제 정보 입력값 생성기를 생성함</td></tr></tbody></table>\n<h1 id='1' style='font-size:18px'>프로젝트 기능</h1>\n<br><h1 id='2' style='font-size:14px'>사용자 실시간 흐름</h1>\n<br><p id='3' data-category='paragraph' style='font-size:18px'>명세서</p>\n<table id='4' style='font-size:14px'><thead></thead><tbody><tr><td></td><td>7 Fuzz testing 8 결과 보고</td><td>안전한 격리 환경에서 입력값 생성기가 생성한 입력값을 사용자코드, 정답코드 두개에 넣어서 다른 값이 나오거나 Limit 에 도달할때까지 계속해서 반복해서 테스팅 다른 답이 나왔다면 반례를 보고. Limit 도달시 반례를 찾지 못했다 보고</td><td></td><td>입력값 생성기, 사용자 코드, Limit 도달 or 반례 정답 코드 Limit 도달 웹 페이지 or 반례</td><td>안전한 격리환경은 Docker 를 이용하여 구현하거나 오픈소스를 활용한다.</td></tr><tr><td colspan=\"2\">대시보드 구성</td><td>섹션 ① 문제 검색 페이지 ( / ) ② 문제 상세 페이지 ( /problem/{id} ) ③ 로그인 ④ 회원가입</td><td>구성 요소 문제 번호 입력창 문제 정보, 사용자 코드 입력창, 실행버튼, id, pw 입력창, 로그인 버튼 id, 입력창, 회원가입 버튼</td><td>예시</td><td>반례 창 아래의 예시 화면으로 대체 ( 최종 구현체에서는 많이 변경될 수 있음) pw</td></tr></tbody></table>\n<figure id='5'><img alt=\"\" data-coord=\"top-left:(236,543); bottom-right:(745,1083)\" /></figure>\n<br><p id='6' data-category='paragraph' style='font-size:14px'>① 문제 검색 페이지 ( / )</p>\n<br><figure id='7'><img alt=\"\" data-coord=\"top-left:(982,527); bottom-right:(1585,899)\" /></figure>\n<p id='8' data-category='paragraph' style='font-size:14px'>② 문제 상세 페이지 ( /problem/{id} )</p>\n<figure id='9'><img alt=\"\" data-coord=\"top-left:(977,940); bottom-right:(1589,1073)\" /></figure>\n<figure id='10'><img alt=\"\" data-coord=\"top-left:(356,137); bottom-right:(735,581)\" /></figure>\n<figure id='11'><img alt=\"\" data-coord=\"top-left:(172,721); bottom-right:(822,983)\" /></figure>\n<br><figure id='12'><img alt=\"\" data-coord=\"top-left:(979,138); bottom-right:(1588,606)\" /></figure>\n<h1 id='13' style='font-size:14px'>③ 로그인</h1>\n<br><figure id='14'><img alt=\"\" data-coord=\"top-left:(981,651); bottom-right:(1582,1069)\" /></figure>\n<p id='15' data-category='paragraph' style='font-size:14px'>④ 회원가입</p>\n<figure id='16'><img alt=\"\" data-coord=\"top-left:(982,249); bottom-right:(1580,852)\" /></figure>\n\n<br><table id='18' style='font-size:16px'><thead><tr><td colspan=\"2\">PIC(담당자)</td><td>업무 대분류</td><td>업무 수행 안내</td><td>업무 수행 공간</td><td>시작일</td><td>마감일</td><td>완료여부</td><td>제작자 업무 수행내역 기재</td><td>특이사항</td></tr></thead><tbody><tr><td colspan=\"2\">업스</td><td>all</td><td>업무 킥오프 미팅</td><td>- 킥오프 미팅노트</td><td>5/26</td><td>5/26</td><td>TRUE</td><td></td><td></td></tr><tr><td colspan=\"2\">업스</td><td>all</td><td>프로젝트 기능 명세서 작성</td><td>[Upstage Product UseCae] 제작 현황 마스터시트</td><td>5/26</td><td>5/26</td><td>TRUE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA</td><td>기타업무</td><td>리더 선정</td><td></td><td>5/26</td><td>5/27</td><td>TRUE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA</td><td>프로젝트</td><td>프로젝트 설계</td><td>- 업무 진행 github 링크</td><td>5/26</td><td>6/4</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA</td><td>프로젝트 가이드</td><td>프로젝트 가이드 작성</td><td>[Ext] ( 데모 가이드 ) 1. 상담 기록 유형 분석 및 알림 자동화 .docx</td><td>5/26</td><td>6/4</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">업스</td><td>프로젝트</td><td>프로젝트 코드 검수</td><td>[Upstage Product UseCae] 제작 현황 마스터시트</td><td>6/5</td><td>6/5</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">업스</td><td>프로젝트 가이드</td><td>프로젝트 가이드 검수</td><td>[Upstage Product UseCae] 제작 현황 마스터시트 최종 가이드 링크</td><td>6/5</td><td>6/5</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA</td><td>all</td><td>검수 내역 반영</td><td>[Upstage Product UseCae] 제작 현황 마스터시트 - 웹 데모 링크</td><td>6/5</td><td>6/6</td><td>FALSE</td><td></td><td></td></tr><tr><td colspan=\"2\">YBIGTA 업스</td><td>all all</td><td>강의 최종본 검수 및 마무리 아카이빙 업무 마무리 미팅</td><td>- 최종 프로젝트 github 링크 pr</td><td>6/6</td><td>6/6</td><td>FALSE FALSE</td><td></td><td></td></tr></tbody><caption id='17' style='font-size:20px'>Upstage Product UseCase : (1) 상담 기록 유형 분석 및 알림 자동화 업무 관리 대장</caption></table>\n\n<br><table id='20' style='font-size:14px'><thead></thead><tbody><tr><td>검수자</td><td>콘텐츠 종류</td><td>콘텐츠명 검수항목</td><td>수정 필요 여부</td><td>검수 내역 ( 수정한 경우, 어떻게</td><td>반영 완료 내역 수정하였는지 세부 내용 기재 & 최종 검수</td><td></td><td>최종 파일 링크( 본 확인( 운영진 최종 확인) 않는</td><td></td><td>자료로 촬영 필수)</td></tr><tr><td>프로젝트</td><td></td><td>프로젝트 코드</td><td></td><td>필요</td><td></td><td></td><td>반영하지</td><td>경우 사유 기재) TRUE</td><td></td></tr><tr><td></td><td>프로젝트</td><td></td><td></td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td></tr><tr><td></td><td>퍼블리싱 문서</td><td></td><td></td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td></tr><tr><td>퍼블리싱</td><td>문서</td><td></td><td></td><td></td><td></td><td></td><td></td><td>FALSE</td><td></td></tr></tbody><caption id='19' style='font-size:20px'>프로젝트/ 프로젝트 가이드 검수내역</caption></table>",
    "10RChoYXTC19hXj0CLLMVWrtM6_pRyDix": "<figure id='0'><img alt=\"\" data-coord=\"top-left:(5,132); bottom-right:(917,1398)\" /></figure>\n<br><h1 id='1' style='font-size:20px'>음식 이미지 기반 영양 분석 및<br>맞춤 추천 시스템</h1>\n<h1 id='2' style='font-size:16px'>중간 발표 자료</h1>\n<h1 id='3' style='font-size:18px'>담당자: 목동현, 김서정, 이주원, 정다은, 한지수</h1>\n<p id='4' data-category='paragraph' style='font-size:14px'>preencoded.png</p>\n<h1 id='5' style='font-size:20px'>프로젝트 개요</h1>\n<table id='6' style='font-size:16px'><thead></thead><tbody><tr><td>사용자 니즈</td><td>기술 구현</td><td>맞춤형 추천</td></tr><tr><td>텍스트 입력 대신 음식 사진만으로 영양 기록 자동화</td><td>AI 이미지 인식으로 음식 분류 및 영양성 분 매핑</td><td>개인별 영양 목표 기반 최적 식단 제안</td></tr></tbody></table>\n<p id='7' data-category='paragraph' style='font-size:14px'>preencoded.png</p>\n<h1 id='8' style='font-size:20px'>사용자 시나리오</h1>\n<h1 id='9' style='font-size:16px'>사용자가</h1>\n<br><figure id='10'><img style='font-size:18px' alt=\"목표 설정 1\n개인 영양 목표(단백질/탄수화물/지방) 입력\n2 사진 업로드\n식사한 음식 사진 촬영 및 업로드\n자동 분석 3\nAI가 음식 분류 및 영양 성분 분석\n4 목표 추적\n목표 대비 섭취량 시각화\n추천 제공 5\n부족 영양소 기반 추천 음식 제안\" data-coord=\"top-left:(362,223); bottom-right:(1856,1283)\" /></figure>\n<br><p id='11' data-category='paragraph' style='font-size:14px'>preencoded.png</p>\n<h1 id='12' style='font-size:20px'>기술 아키텍처</h1>\n\n<table id='13' style='font-size:16px'><thead></thead><tbody><tr><td>01</td><td>02</td></tr><tr><td>데이터 로딩</td><td>이미지 전처리</td></tr><tr><td>food-101 데이터셋 + 자체 크롤링 한국 음식 이미지</td><td>리사이즈, 정규화, 데이터 증강 적용</td></tr><tr><td>03</td><td>04</td></tr><tr><td>음식 분류</td><td>영양 매핑</td></tr><tr><td>MobileNetV3 전이학습 + CLIP 멀티모달 재랭킹</td><td>분류된 메뉴 → 자체 구축 영양 DB 연결</td></tr><tr><td>05</td><td>06</td></tr><tr><td>목표 추적</td><td>추천 엔진</td></tr><tr><td>사용자 목표 대비 남은 영양소 계산</td><td>부족 영양소 기반 최적 음식 추천 알고리즘</td></tr></tbody><caption id='14' style='font-size:14px'>preencoded.png</caption></table>\n<h1 id='15' style='font-size:20px'>시스템 파이프라인</h1>\n\n<br><figure id='17'><img style='font-size:18px' alt=\"Data Loader Data Augmentation\n이미지 데이터셋 로드 데이터 증강 활용\nONNX 변환 모델 학습\n경량화 및 양자화 전이학습\nMobileNetV3\" data-coord=\"top-left:(424,379); bottom-right:(2031,1179)\" /><figcaption id='16' style='font-size:16px'>음식</figcaption></figure>\n<p id='18' data-category='paragraph' style='font-size:14px'>preencoded.png</p>\n<h1 id='19' style='font-size:20px'>실시간 추론 흐름</h1>\n<table id='20' style='font-size:16px'><thead></thead><tbody><tr><td></td><td><table><thead></thead><tbody><tr><td>이미지 업로드</td></tr><tr><td>Expo 앱을 통한 음식 사진 촬영 및 업로드 모델 추론 ONNX Runtime으로 효율적 추론 (Top-k)</td></tr><tr><td>CLIP 재랭킹 이미지-텍스트 유사도 기반 정확도 향상</td></tr></tbody></table> <figure><img alt=\"\" data-coord=\"top-left:(1236,407); bottom-right:(1445,1113)\" /></figure></td><td>영양정보 조회 메뉴명으로 영양 연결 DB 목표 분석 개인 목표 대비 섭취량 계산 및 시각화 맞춤 추천 부족 영양소 충족 최적 음식 추천</td></tr></tbody></table>\n<p id='21' data-category='paragraph' style='font-size:14px'>preencoded.png</p>\n\n<figure id='22'><img alt=\"\" data-coord=\"top-left:(534,138); bottom-right:(1800,1252)\" /><figcaption id='23' style='font-size:14px'>preencoded.png</figcaption></figure>\n<h1 id='24' style='font-size:20px'>데이터셋 및 영양 DB 구축</h1>\n<h1 id='25' style='font-size:18px'>사용 데이터셋</h1>\n<br><p id='26' data-category='list' style='font-size:16px'>• food-101<br>• 자체 크롤링 한국 음식 이미지 (Google/Bing)</p>\n<br><h1 id='27' style='font-size:18px'>영양 데이터베이스</h1>\n<br><p id='28' data-category='list' style='font-size:16px'>• 식품의약품안전처 공개 영양성분 DB 기반<br>• 한국 음식 33여 종 영양성분 매핑 완료</p>\n<p id='29' data-category='paragraph' style='font-size:14px'>preencoded.png</p>\n<h1 id='30' style='font-size:20px'>대시보드 UI 구성</h1>\n<table id='31' style='font-size:16px'><thead></thead><tbody><tr><td>업로드창</td><td>사진 촬영/업로드 버튼 + 진행 상태 표시 (예: Upload 성공)</td></tr><tr><td>분류 결과</td><td>인식된 메뉴명 표시 (예: \"비빔밥\")</td></tr><tr><td>영양 분석</td><td>탄수화물/단백질/지방 시각화 차트 (예: 단백질 22g/목표 50g)</td></tr><tr><td>목표 대비 현황</td><td>남은 섭취량 계산 및 부족 영양소 강조 표시 (예: \"탄수화물 부족\")</td></tr><tr><td>추천 음식</td><td>목표 충족을 위한 최적 후보 제안 (예: \"닭가슴살 샐러드, 삶은 달걀\")</td></tr></tbody></table>\n<p id='32' data-category='paragraph' style='font-size:14px'>preencoded.png</p>\n<h1 id='33' style='font-size:20px'>향후 개발 계획</h1>\n<h1 id='34' style='font-size:18px'>모델 정확도 향상</h1>\n<br><h1 id='35' style='font-size:16px'>한국 음식 특화 데이터셋 확장 및 멀티모달 추론 강화</h1>\n<h1 id='36' style='font-size:18px'>영양 DB 확장</h1>\n<br><h1 id='37' style='font-size:16px'>한식 기반 메뉴 확장</h1>\n<br><h1 id='38' style='font-size:18px'>모바일 앱 최적화</h1>\n<br><h1 id='39' style='font-size:16px'>iOS/Android 네이티브 성능 개선 및 UI/UX 고도화</h1>\n<h1 id='40' style='font-size:18px'>챗봇 추가</h1>\n<br><h1 id='41' style='font-size:16px'>사용자 식단 기반 대화를 나눌 수 있는 챗봇 추가</h1>\n<p id='42' data-category='paragraph' style='font-size:16px'>감사합니다<br>.</p>\n<p id='43' data-category='paragraph' style='font-size:14px'>preencoded.png</p>",
    "1T95hsooxZ5icQpbn3ds8YRqKNkA_bnuH": "<table id='0' style='font-size:14px'><thead></thead><tbody><tr><td></td><td colspan=\"6\"></td></tr><tr><td rowspan=\"3\"></td><td colspan=\"6\"></td></tr><tr><td colspan=\"6\"></td></tr><tr><td colspan=\"6\"><table><thead></thead><tbody><tr><td colspan=\"3\">신입 기수 프로젝트 데모 요청서 : 음식 이미지 기반 영양 분석 및 맞춤 추천 시스템</td></tr><tr><td>프로젝트 목표</td><td colspan=\"2\">사용자가 업로드한 음식 이미지를 기반으로 메뉴명을 분류, 해당 음식의 영양 성분을 분석하고, 사전에 입력한 개인 영양 목표(단백질/탄수화물/지방) 에 맞춰 남은 섭취량과 추천 음식을 제공하는 시스템을 구축한다</td></tr><tr><td>담당자</td><td colspan=\"2\">목동현, 김서정, 이주원, 정다은, 한지수</td></tr><tr><td rowspan=\"3\">니즈</td><td colspan=\"2\">음식 기록 자동화: 텍스트 입력 대신 사진 업로드로 기록 가능</td></tr><tr><td colspan=\"2\">개인별 영양 목표 기반 식단 추천</td></tr><tr><td colspan=\"2\">기존 음식 기록 앱 대비 사용 편의성 향상</td></tr><tr><td rowspan=\"5\">산출물 목록</td><td>프로젝트 코드</td><td>app.py, inference.py, recommend.py 등</td></tr><tr><td>모델 가중치</td><td>mobilenet.onnx</td></tr><tr><td>실행 스크립트</td><td>requirements.txt, run_demo.sh</td></tr><tr><td>데모 문서</td><td>시연용 음식 이미지 1 건 및 예상 출력 예시(스크린샷)</td></tr><tr><td>데모 가이드</td><td>데모 가이드: 실행 방법 및 예시</td></tr><tr><td rowspan=\"2\">데이터셋</td><td>링크</td><td>food-101, 자체 크롤링 이미지(Google/Bing)</td></tr><tr><td>특징</td><td>음식명 라벨링, 영양 성분 매핑 가능, 한국 음식 중심</td></tr></tbody></table></td></tr><tr><td rowspan=\"4\"></td><td colspan=\"6\"></td></tr><tr><td></td><td colspan=\"5\"></td></tr><tr><td></td><td colspan=\"5\"></td></tr><tr><td></td><td colspan=\"5\"></td></tr><tr><td rowspan=\"2\"></td><td></td><td colspan=\"5\"></td></tr><tr><td>레퍼런스</td><td colspan=\"5\">food-101, AI-Hub</td></tr><tr><td rowspan=\"4\">전체 파이프라인</td><td rowspan=\"4\">시스템 구축 사용자 시나리오</td><td colspan=\"5\">단계 설명</td></tr><tr><td>Data Loader Image Preprocess Food Classification Nutrition Mapping Goal Tracking Recommendation</td><td colspan=\"4\">food-101 + 자체 크롤링 데이터 로드 리사이즈, 정규화, 데이터 증강 MobileNet 전이학습, CLIP 멀티모달 검색 분류된 메뉴 -> 영양 DB 매핑 사용자 목표 대비 남은 영양 성분 계산 부족한 영양소 채우는 음식 추천</td></tr><tr><td></td><td colspan=\"4\"></td></tr><tr><td>목표 식단 입력 음식 사진 업로드 Classification & Nutrition Mapping Goal Tracking Recommendation</td><td colspan=\"4\">사용자가 식단 목표 입력 음식 사진 업로드 모델이 음식명 분류 및 영양 분석 목표 대비 남은 영양 성분 표시 부족 영양소 기반 추천 음식 제공</td></tr><tr><td rowspan=\"4\"></td><td rowspan=\"4\">시스템 구축 파이프라인</td><td>모듈 1 Data Loader 2 Preprocess</td><td>설명 음식 이미지 데이터셋 로딩 (train/val) 이미지 크기 변환, 정규화, 증강 전이학습 기반 분류 학습</td><td>입력 이미지 폴더 원본 이미지 학습용 데이터 모델 가중치 (.pth)</td><td>출력 Tensor Dataset 학습용 텐서 모델 가중치(.pth) mobilenet.onnx</td><td>비고 torchvision ImageFolder albumentations, torchvision Colab GPU onnxruntime</td></tr><tr><td>& Augment Model</td><td colspan=\"4\"></td></tr><tr><td># Training 3 (MobileNetV3) 4 Export to ONNX</td><td colspan=\"4\">모델 → ONNX 변환 및 양자화</td></tr><tr><td></td><td colspan=\"4\">PyTorch</td></tr><tr><td rowspan=\"3\">프로젝트 기능 명세서</td><td rowspan=\"3\">1</td><td>모듈</td><td>설명 앱에서 음식 사진 업로드</td><td>입력 JPEG/PNG 이미지</td><td>출력 이미지 경로 후보 메뉴 + 확률</td><td>비고 Expo 앱 inference.py</td></tr><tr><td># 이미지 업로드 2 Inference (ONNX Runtime)</td><td colspan=\"4\"></td></tr><tr><td></td><td colspan=\"4\">ONNX 모델로 메뉴 분류 (Top-K 후보)</td></tr></tbody></table>\n<p id='1' data-category='paragraph' style='font-size:14px'>사용자 실시간 흐름</p>\n<h1 id='2' style='font-size:18px'>프로젝트 기능</h1>\n<br><h1 id='3' style='font-size:18px'>명세서</h1>\n<br><table id='4' style='font-size:14px'><thead></thead><tbody><tr><td></td><td>사용자 실시간 흐름</td><td>3 CLIP Re-ranking 4 Nutrition Lookup 5 목표 대비 분석 6 Recommend 7 결과 시각화</td><td>후보 메뉴 재랭킹 (이미지- 텍스트 유사도) 최종 메뉴명으로 영양 DB 조회 사용자 목표와 비교 잔여량 기반 추천 음식 생성 최종 결과 화면 (차트, 텍스트)</td><td>이미지 + 후보 메뉴명 영양 정보 + 목표 잔여량 결과 JSON</td><td>최종 메뉴명 영양 정보(JSON) 잔여량 계산 추천 음식 리스트 UI</td><td>clip_rerank.py nutrition.csv 백엔드 모듈 recommend.py Expo 앱</td></tr><tr><td colspan=\"2\">대시보드 구성</td><td>섹션 ① 업로드창 ② 분류 결과 ③ 영양 분석 ④ 목표 대비 현황 ⑤ 추천 음식</td><td>구성 요소 사진 업로드 버튼 + 진행 상태 표시 인식된 메뉴명 탄/단/ 지 게이지 차트 남은 섭취량, 부족 영양소 강조 목표 충족 위한 후보</td><td>예시 ✅ Upload 성공 \"비빔밥\"</td><td>단백질 22g/ 목표 50g \" 탄수화물 부족\" \" 닭가슴살 샐러드, 삶은 달걀\"</td><td></td></tr></tbody></table>\n<figure id='5'><img alt=\"\" data-coord=\"top-left:(298,501); bottom-right:(919,1025)\" /></figure>\n<table id='6' style='font-size:18px'><thead></thead><tbody><tr><td>신입 기수 프로젝트 데모</td><td>요청서 : 음식 이미지 기반</td><td>영양 분석 및 맞춤 추천 시스템</td><td></td><td>시작일</td><td></td><td></td><td></td><td></td></tr><tr><td>PIC(담당자)</td><td>업무 대분류</td><td>업무 수행 안내</td><td>업무 수행 공간</td><td></td><td>마감일</td><td>완료여부</td><td>제작자 업무 수행내역 기재</td><td>특이사항</td></tr><tr><td>목동현</td><td>모델학습/답변생성 프론트 구현</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>정다은 김서정</td><td>데이터 수집/라벨링, API 구현</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>이주원</td><td>데이터정제/DB연결</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>한지수</td><td>프론트 구현, 서비스 배포</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table>\n<table id='7' style='font-size:14px'><thead></thead><tbody><tr><td>프로젝트/ 프로젝트</td><td>가이드</td><td>검수내역</td><td></td><td></td><td></td><td>최종</td><td>최종 파일</td><td></td><td></td><td>링크 사유 기재)</td></tr><tr><td>검수자</td><td>콘텐츠 종류</td><td>콘텐츠명</td><td>검수항목</td><td>수정 필요 여부 필요</td><td></td><td>검수 내역 반영 완료 내역( 수정한 경우,</td><td>어떻게 수정하였는지</td><td>검수 반영하지 세부 내용 기재 & 확인(</td><td>않는 경우 운영진 최종 자료로 확인) ( 본</td><td>필수) 촬영</td></tr></tbody></table>",
    "1UOQvuIGC9aInCvW-dGDT2pm7NV230JL9": "https://github.com/wognsths/simple-agent-example",
    "151rZ23UGGlxwLDtfDQqmYYYSpn5wQa5t": "<h1 id='0' style='font-size:20px'>신입기수 교육세션 - RAG Agent 과제 명세서</h1>\n<br><table id='1' style='font-size:14px'><thead></thead><tbody><tr><td>프로젝트 목표</td><td colspan=\"3\"></td></tr><tr><td>담당자</td><td colspan=\"3\"></td></tr><tr><td>산출물 목록</td><td>프로젝트 코드</td><td colspan=\"2\">깃허브 주소 입력 바랍니다.</td></tr><tr><td rowspan=\"2\">데이터셋</td><td>내용</td><td colspan=\"2\"></td></tr><tr><td>특징</td><td colspan=\"2\"></td></tr><tr><td rowspan=\"3\">전체 파이프라인</td><td rowspan=\"2\">데이터 구축</td><td>단계</td><td>설명</td></tr><tr><td>Data Loader Text Clean Solar Embedding Vector DB 구축</td><td>Al-Hub 상담 데이터셋 로드 이름, 학교 등 민감 정보 익명화 Upstage API로 벡터 임베딩 수행 FAISS를 사용한 유사 사례 검색 인덱스 구축</td></tr><tr><td>사용자 시나리오</td><td>PDF 업로드 Document Parse Text Clean Summarize Embedding Retrieval Classification Dash</td><td>사용자가 자신의 상담기록(PDF) 업로드 문서 HTML 형태로 파싱 전처리 및 익명화 처리 Solar LLM 기반 요약 생성 유사도 기반 검색을 위한 임베딩 Vector DB로부터 유사 사례 N건 검색 Solar LLM 기반 상담 유형, 위기 단계, 학대 유형 분류 전체 결과 시각화 및 메일 발송 알림</td></tr></tbody></table>\n<br><p id='2' data-category='paragraph' style='font-size:16px'>기능 명세서와 전체 파이프라인들은 과제에 맞게 수정바랍니다. / 로직은 Draw.io로 그려서 CSV와 README에 첨부바랍니다.</p>\n<br><table id='3' style='font-size:14px'><thead></thead><tbody><tr><td rowspan=\"15\">프로젝트 기능 명세서</td><td rowspan=\"5\">시스템 구축 파이프라인</td><td rowspan=\"5\"># 1 2</td><td>모듈</td><td>설명</td><td>입력</td><td>출력</td><td>비고</td></tr><tr><td>Al-Hub Data Loader</td><td>Al-Hub 데이터셋 로딩</td><td>*.json</td><td>원문 텍스트</td><td>Upstage Embedding API</td></tr><tr><td>Text Clean & 익명화 3</td><td>이름/학교/지역 등 마스킹 처리</td><td>원문 텍스트</td><td>정제 텍스트</td><td rowspan=\"3\"></td></tr><tr><td>Solar Embedding</td><td>상담 내용을 벡터화</td><td>정제 텍스트</td><td>벡터</td></tr><tr><td>4 Vector DB 구축 (FAISS 등)</td><td>검색용 DB 구축</td><td>벡터 + 메타</td><td>faiss.index 파일</td></tr><tr><td rowspan=\"10\">사용자 실시간 흐름</td><td>#</td><td>모듈</td><td>설명</td><td>입력</td><td>출력</td><td>비고</td></tr><tr><td>1</td><td>PDF 업로드</td><td>사용자 상담기록 업로드</td><td>PDF</td><td>파일 경로</td><td></td></tr><tr><td>2</td><td>Document Parse</td><td>문서 OCR + 구조화</td><td>PDF</td><td>추출 텍스트(HTML)</td><td>Upstage Document Parse API</td></tr><tr><td>3</td><td>Text Clean & 익명화</td><td>텍스트 전처리 및 익명화</td><td>텍스트</td><td>클린 텍스트</td><td>전처리 통일</td></tr><tr><td>4</td><td>Solar LLM 요약</td><td>핵심 내용 요약</td><td>클린 텍스트</td><td>요약문</td><td>Upstage Embedding API</td></tr><tr><td>5</td><td>Solar Embedding</td><td>유사도 비교용 임베딩 벡터 생성</td><td>클린</td><td>벡터</td><td></td></tr><tr><td></td><td>유사 사례 검색 (FAISS)</td><td>벡터 DB (예: 3건) 검색</td><td>텍스트 벡터</td><td>유사 상담 목록</td><td></td></tr><tr><td>6</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td>7 Solar LLM 유형 분류</td><td>상담 유형 / 위기 단계 / 학대유형 분류</td><td>클린 텍스트</td><td>분류 결과 (JSON)</td><td></td></tr><tr><td></td><td>8 위험 알림</td><td>위기단계>3 or 학대#없음일 때 자동화 메일</td><td>분류 결과</td><td>메일</td><td></td></tr></tbody></table>\n<figure id='4'><img style='font-size:14px' alt=\"9 대시보드 (Streamlit 등) 요약, 유형, 유사사례, 로그 시각화 전체 결과 웹 페이지\n섹션 구성 요소 예시\n어로 「 ラト DDR drow 。 dron 치미 사대 � 1 I □ I Inlood 서 고\n사용자 시나리오\nPDF 업로드\n시스템 구축 (사전 구성)\nAl-Hub Data Loader Document Parse\nText Clean Text Clean\nSolar Embedding Solar Embedding\n검색\nVector DB 구축\nSummarize with Solar\n유사 사례 N건\nLLM\nClassification with Solar\nLLM\" data-coord=\"top-left:(134,142); bottom-right:(1563,1079)\" /></figure>\n<figure id='5'><img style='font-size:14px' alt=\"위기 단계 or 학대 유형 존재\n대시보드 & 알림 로그 ! Email 알림\" data-coord=\"top-left:(185,142); bottom-right:(1198,313)\" /></figure>",
    "141NN5L-qFpOtDi551GDFMI1k4KU_d6sz": "<h1 id='0' style='font-size:22px'>RAG, Agent 과제</h1>\n<h1 id='1' style='font-size:20px'>기간</h1>\n<br><h1 id='2' style='font-size:18px'>마감: 8월 11일 23시 59분<br>지각 제출: 8월 12일 23시 59분</h1>\n<h1 id='3' style='font-size:20px'>명세</h1>\n<br><p id='4' data-category='paragraph' style='font-size:16px'>이번 과제는 RAG, AGENT에 대한 기본적인 지식을 활용하여 수집한 데이터를 바탕으로 간<br>단한 챗봇을 만들어보는 것이 주제입니다! 각각의 노드의 챗봇은 랭체인으로 구현하고, 분기<br>는 랭그래프로 설계하여 보세요!</p>\n<br><h1 id='5' style='font-size:16px'>이번 과제의 개요는 다음과 같습니다.</h1>\n<br><p id='6' data-category='paragraph' style='font-size:16px'>먼저, 다음 세 가지 챗봇을 설계합니다. 설계 단계에서 명세를 먼저 작성하시길 권장드립니<br>다.</p>\n<br><p id='7' data-category='list' style='font-size:14px'> Chat Node - 기본 대화를 수행하는 LLM<br> Subject info Node - 리뷰 대상에 대한 정보를 바탕으로 답변하는 LLM<br> RAG Review Node - 사용자가 궁금해하는 리뷰 내용을 바탕으로 답변하는 LLM</p>\n<br><p id='8' data-category='paragraph' style='font-size:14px'>그런 다음 다음 세 챗봇을 랭그래프로 연결하여 주면 됩니다</p>\n<br><p id='9' data-category='list' style='font-size:16px'>평소에는 Chat Node에서 대화</p>\n<p id='10' data-category='list' style='font-size:14px'>정보 + 주제 키워드 감지 시 → Subject Info Node (사용자가 리뷰 대상에 대한 정보를<br>원할 경우)</p>\n<p id='11' data-category='list' style='font-size:14px'>리뷰 키워드 감지 시 → RAG Review Node (사용자가 리뷰에 대한 정보 참조를 원하거<br>나 필요할 경우)</p>\n<br><p id='12' data-category='paragraph' style='font-size:16px'>처리 후 자동으로 다시 Chat Node로 복귀</p>\n<br><p id='13' data-category='paragraph' style='font-size:16px'>하는 LangGraph 조건부 라우팅 구조를 완성하시면 됩니다!</p>\n<br><p id='14' data-category='paragraph' style='font-size:16px'>단, 조건부 라우팅 시 규칙 기반의 라우팅이 아니라 LLM이 판단하여 유동적으로 조건부<br>라우팅을 진행하도록 설계하세요.</p>\n<br><p id='15' data-category='paragraph' style='font-size:16px'>본 과제는 사실 LangChain만으로도 구현이 가능하지만, 간단한 실습을 위해 2가지를 섞어<br>쓰도록 명세를 설계하였으니 양해 부탁드립니다.</p>\n<footer id='16' style='font-size:14px'>RAG, Agent 과제</footer>\n<br><footer id='17' style='font-size:14px'>1</footer>\n<p id='18' data-category='paragraph' style='font-size:16px'>이 구조를 완성한 이후 Streamlit Cloud를 통해 데모를 서비스하시고, 이 링크와 실행 사진<br>을 Readme에 달아두시면 제가 직접 접속하여 정상 작동하는지 테스트해보도록 하겠습니<br>다.</p>\n<br><p id='19' data-category='paragraph' style='font-size:18px'>Streamlit에서 채팅 UI는 자율적으로 보기 편하게 설계하시면 됩니다.</p>\n<h1 id='20' style='font-size:20px'>주의사항</h1>\n<br><p id='21' data-category='paragraph' style='font-size:18px'>Upstage api key가 유출되지 않도록, Streamlit cloud에 deploy 시에 직접 입력하시길<br>바랍니다! toml로 public에 올리지 않도록 유의바랍니다.</p>\n<br><p id='22' data-category='paragraph' style='font-size:16px'>본 과제는 개인에 따라 내용에 대해 완전히 이해하고 진행하기에는 시간 상 무리가 있을 수<br>도 있으므로, AI 툴 (커서, 클로드 코드, Gemini cli 등) 의 적극적인 사용을 권장합니다.</p>\n<br><p id='23' data-category='paragraph' style='font-size:14px'>본 과제는 프로젝트 등에 필요한 핵심 지식을 담고 있으므로, 위 과제를 성실히 이수하지 않을<br>경우, 프로젝트 배정 및 팀 배정 등에 불이익이 있을 수 있음을 명시합니다.</p>\n<h1 id='24' style='font-size:22px'>제출 방법</h1>\n<br><p id='25' data-category='paragraph' style='font-size:14px'>먼저 프로젝트를 진행하기 이전에 첨부된 명세서 파일을 작성하시기 바랍니다.</p>\n<br><p id='26' data-category='paragraph' style='font-size:18px'>이후 아래와 같이 파일을 수정하신 뒤, Streamlit Cloud 에 데모를 업로드해주시고,<br>README에 해당 링크와 작동 화면, 수정한 명세 CSV를 첨부해주세요!</p>\n<p id='27' data-category='paragraph' style='font-size:14px'>YBIGTA_newbie_team_project</p>\n<br><table id='28' style='font-size:14px'><thead></thead><tbody><tr><td>├──</td><td>.github ├── .gitignore ├── Dockerfile ├── streamlit_app.py # Streamlit UI  LangGraph 실행진입점 ├── st_app/</td></tr><tr><td>│ │ │ │ │ │ │ │ │ │ │ │</td><td>├── db/ │ ├── subject_information/ # 리뷰 대상 기본 정보 저장소 │ │ ├── subjects.json # 예시: 제품별/대상별 기초 정보 │ └── faiss_index/ # 추가 │ ├── index.faiss # 추가 │ └── meta.json # 추가 ├── rag/ │ ├── embedder.py # FAISS 구축 │ ├── retriever.py # RAG 로직 │ ├── prompt.py # RAG 프롬프트 │ └── llm.py # LLM 호출 ├── graph/ # LangGraph 로직</td></tr></tbody></table>\n<footer id='29' style='font-size:14px'>RAG, Agent 과제</footer>\n<br><footer id='30' style='font-size:14px'>2</footer>\n<table id='31' style='font-size:16px'><thead></thead><tbody><tr><td>│ │ ├── nodes/ │ │ │ ├── chat_node.py # 기본 대화 상태 처리 │ │ │ ├── subject_info_node.py # subject_information 검색/응답 │ │ │ ├── rag_review_node.py # FAISS 기반 리뷰 RAG 응답 │ │ └── router.py # 조건부 라우팅 정의 (LangGraph) │ └── utils/ │ └── state.py # 세션 상태 구조 정의 (메모리) ├── app ├── aws ├── database ├── README.md # 변경, streamlit cloud 주소와 작동 화면 필요 ├── requirements.txt # streamlit cloud 정상 작동을 위해 관리 필요 ├── 신입기수 교육세션 - RAG AGENT 과제 명세서.xlsx ├── review_analysis ├── test └── ...</td></tr></tbody></table>\n<h1 id='32' style='font-size:20px'>채점 기준</h1>\n<br><h1 id='33' style='font-size:16px'> RAG</h1>\n<br><p id='34' data-category='paragraph' style='font-size:16px'>명세서 작성 ( 구현 이전에 명세서를 작성하여 팀원과 협의 후 진행하길 권장드립니<br>다. )<br>RAG 챗봇 구현<br>Streamlit Cloud demo 서비스 구현</p>\n<br><h1 id='35' style='font-size:16px'> Agent</h1>\n<br><p id='36' data-category='paragraph' style='font-size:16px'>조건부 라우팅 구현 ( 단, 규칙 기반이 아니어야함 )</p>\n<br><h1 id='37' style='font-size:18px'> 멋져요!</h1>\n<br><p id='38' data-category='paragraph' style='font-size:16px'>( 이건 제출 기준 외이니 멋져요! 를 받고 싶으신 분들만 하시면 됩니다.<br>아래 기준 하나 만족 시 1멋져요! - 모두 만족 시 2멋져요! )<br>README에 state class 구현 방식과 조건부 라우팅 구현 방식에 대한 설명 쓰기<br>Draw.io로 전체 로직을 그린 뒤 첨부<br> The Greatest Of All Time - 비필수 항목</p>\n<footer id='39' style='font-size:14px'>RAG, Agent 과제</footer>\n<br><footer id='40' style='font-size:14px'>3</footer>\n<h1 id='41' style='font-size:20px'>( 도전과제 - 비필수 항목, 어려움, 끊임없는 버그, 완성여부 불확실, 성공 시 명예와 지식 )</h1>\n<br><p id='42' data-category='paragraph' style='font-size:16px'>AWS로 리뷰 데이터에 대한 분석이 가능한 MCP 서버를 열고 이를 챗봇과 연결하여, 사<br>용자가 원하는 분석을 실시간으로 수행</p>\n<footer id='43' style='font-size:14px'>RAG, Agent 과제</footer>\n<br><footer id='44' style='font-size:14px'>4</footer>",
    "1YsCNjbNC_14S0jzLv8ryKupQuM5zke3O": "<header id='0' style='font-size:14px'>2025-2<br>YBIGTA</header>\n<h1 id='1' style='font-size:20px'>AI Agent</h1>\n<footer id='2' style='font-size:16px'>26기<br>DE<br>손재훈</footer>\n<h1 id='3' style='font-size:18px'>목<br>차</h1>\n<p id='4' data-category='list' style='font-size:14px'>1. Outline<br>2. Core<br>Components<br>of<br>AI<br>Agent<br>3. AI<br>Agent<br>Frameworks<br>4. AI<br>Agent<br>Engineering<br>Tactics<br>5. Agent<br>Development<br>Guidelines</p>\n<h1 id='5' style='font-size:14px'>Outline</h1>\n<header id='6' style='font-size:14px'>Outline</header>\n<br><h1 id='7' style='font-size:20px'>AI<br>발전,<br>현재<br>어디에<br>있는가!</h1>\n<h1 id='8' style='font-size:18px'>2025년의<br>AI<br>발전의<br>4대<br>혁신</h1>\n<p id='9' data-category='list' style='font-size:16px'>성능:<br>SWE-bench<br>2023:<br>4.4%<br>→<br>2025:<br>75.2%<br>효율성:<br>Phi-3-mini:<br>38억<br>개<br>파라미터로<br>PaLM<br>540억<br>개와<br>동일<br>성능<br>속도:<br>2023:<br>응답<br>시간<br>5~10초<br>→<br>2025:<br>0.3~2초<br>대중화:<br>DeepSeek<br>AI,<br>FP8<br>훈련<br>기술</p>\n<br><figure id='10'><img alt=\"\" data-coord=\"top-left:(1912,872); bottom-right:(2889,1476)\" /></figure>\n<h1 id='11' style='font-size:20px'>2025년<br>=<br>AI<br>Agent</h1>\n<br><header id='12' style='font-size:14px'>Outline</header>\n<h1 id='13' style='font-size:18px'>Super<br>Agent</h1>\n<br><p id='14' data-category='list' style='font-size:16px'>Manus<br>AI<br>Genspark</p>\n<br><h1 id='15' style='font-size:18px'>Framework</h1>\n<br><p id='16' data-category='list' style='font-size:16px'>MCP<br>ACP,<br>A2A,<br>...</p>\n<br><h1 id='17' style='font-size:18px'>Code<br>Agent</h1>\n<br><p id='18' data-category='list' style='font-size:16px'>Cursor,<br>Windsurf<br>Codex,<br>Jules<br>Claude<br>code,<br>Gemini<br>CLI</p>\n<br><figure id='19'><img alt=\"\" data-coord=\"top-left:(1453,450); bottom-right:(2823,1233)\" /></figure>\n<h1 id='20' style='font-size:20px'>Single<br>Agent<br>→<br>MultiAgent</h1>\n<br><header id='21' style='font-size:14px'>Outline</header>\n<h1 id='22' style='font-size:16px'>세상은<br>단일<br>에이전트가<br>아닌<br>이제는<br>다수의<br>에이전트가<br>유연하게<br>작동하는<br>것을<br>원한다!</h1>\n<figure id='23'><img alt=\"\" data-coord=\"top-left:(2036,1011); bottom-right:(2353,1316)\" /></figure>\n<br><figure id='24'><img alt=\"\" data-coord=\"top-left:(2420,1005); bottom-right:(2744,1320)\" /></figure>\n<br><figure id='25'><img alt=\"\" data-coord=\"top-left:(2033,546); bottom-right:(2347,817)\" /></figure>\n<br><figure id='26'><img alt=\"\" data-coord=\"top-left:(1705,526); bottom-right:(1941,821)\" /></figure>\n<br><figure id='27'><img alt=\"\" data-coord=\"top-left:(2448,558); bottom-right:(2732,834)\" /></figure>\n<figure id='28'><img alt=\"\" data-coord=\"top-left:(1744,1039); bottom-right:(1899,1305)\" /></figure>\n<h1 id='29' style='font-size:18px'>AI<br>Agent</h1>\n<br><header id='30' style='font-size:14px'>Outline</header>\n<figure id='31'><img alt=\"\" data-coord=\"top-left:(219,360); bottom-right:(2726,1505)\" /></figure>\n<h1 id='32' style='font-size:14px'>Core<br>Components<br>of<br>AI<br>Agent</h1>\n<h1 id='33' style='font-size:22px'>ReAct</h1>\n<h1 id='34' style='font-size:20px'>CoT<br>(Chain<br>of<br>Thought)</h1>\n<br><h1 id='35' style='font-size:16px'>Core<br>Components<br>of<br>AI<br>Agent</h1>\n<h1 id='36' style='font-size:14px'>https://www.promptingguide.ai/kr/techniques/react<br>https://arxiv.org/pdf/2210.03629</h1>\n<br><h1 id='37' style='font-size:18px'>생각을<br>단계적으로<br>하자!</h1>\n<br><h1 id='38' style='font-size:18px'>Think<br>step<br>by<br>step<br>한<br>마디로<br><br>더<br>좋은<br>성과를<br>내기</h1>\n<br><h1 id='39' style='font-size:18px'>외부<br>세계에<br>대한<br>접근성이<br>부족한<br>경우<br>hallucination이<br>일어날<br>수<br>있음</h1>\n<h1 id='40' style='font-size:20px'>ReACT<br>(Reason<br>+<br>Act)</h1>\n<br><p id='41' data-category='list' style='font-size:18px'>생각-행동-관찰<br>“행동”은<br>어떻게<br>하지?<br>→<br>Tool!!</p>\n<figure id='42'><img alt=\"\" data-coord=\"top-left:(207,1130); bottom-right:(2017,1633)\" /></figure>\n<h1 id='43' style='font-size:22px'>Tools<br>언어모델에<br>무기를<br>달아주자</h1>\n<br><h1 id='44' style='font-size:18px'>Core<br>Components<br>of<br>AI<br>Agent</h1>\n<h1 id='45' style='font-size:20px'>1. User<br>Query<br>→<br>LLM<br>2. LLM<br>→<br>의도<br>파악<br>+<br>Tool<br>호출<br>결정<br>3. LLM<br>→<br>Tool-call<br>JSON<br>생성<br>4. Orchestrator<br>→<br>Tool<br>호출<br>5. Third-Party<br>API<br>→<br>응답<br>반환<br>6. Orchestrator<br>→<br>응답을<br>LLM에<br>전달<br>7. LLM<br>정보를<br>바탕으로<br>자연어<br>응답<br>생성</h1>\n<p id='46' data-category='paragraph' style='font-size:14px'>역대<br>GOAT<br>축구선수는<br>누구지?</p>\n<figure id='47'><img alt=\"\" data-coord=\"top-left:(213,1250); bottom-right:(1615,1550)\" /></figure>\n<br><p id='48' data-category='paragraph' style='font-size:16px'>Function<br>Description<br>+<br>@<br>→<br>JSON<br>format<br>response</p>\n<br><figure id='49'><img style='font-size:18px' alt=\"Third\nParty\nAPI\nFunction\nCalling\" data-coord=\"top-left:(1815,355); bottom-right:(2940,1497)\" /></figure>\n<h1 id='50' style='font-size:22px'>Tools<br>+<br></h1>\n<br><h1 id='51' style='font-size:18px'>MCP<br>=<br>표준화된<br>tool</h1>\n<br><h1 id='52' style='font-size:16px'>Core<br>Components<br>of<br>AI<br>Agent</h1>\n<h1 id='53' style='font-size:20px'>MCP(Model<br>Context<br>Protocol):<br></h1>\n<br><p id='54' data-category='list' style='font-size:20px'>AI<br>에이전트를<br>다양한<br>외부<br>도구<br>및<br>데이터<br>소스에<br>연결하기<br>위한<br>표준화된<br>프로토콜<br>장점:</p>\n<br><p id='55' data-category='list' style='font-size:20px'>동적<br>발견:<br>LLM의<br>프롬프트에<br>도구에<br>대한<br>별도<br>설명을<br>둘<br>필요<br>X<br>확장성:<br>표준화된<br>프로토콜이기에<br>LLM의<br>능력<br>을<br>유연하게<br>확장할<br>수<br>있음</p>\n<br><figure id='56'><img alt=\"\" data-coord=\"top-left:(1789,318); bottom-right:(2834,1543)\" /></figure>\n<br><footer id='57' style='font-size:14px'>https://smithery.ai</footer>\n<h1 id='58' style='font-size:20px'>MCP<br>활용해보기!</h1>\n<br><h1 id='59' style='font-size:16px'>Core<br>Components<br>of<br>AI<br>Agent</h1>\n<figure id='60'><img alt=\"\" data-coord=\"top-left:(183,438); bottom-right:(1207,697)\" /></figure>\n<br><h1 id='61' style='font-size:14px'>Up-to-date,<br>version-specific<br>documentation</h1>\n<figure id='62'><img alt=\"\" data-coord=\"top-left:(168,849); bottom-right:(1211,1119)\" /></figure>\n<br><h1 id='63' style='font-size:14px'>Web<br>Searching<br>&<br>Crawling</h1>\n<br><figure id='64'><img alt=\"\" data-coord=\"top-left:(1453,423); bottom-right:(2810,1382)\" /></figure>\n<h1 id='65' style='font-size:14px'>Core<br>Components<br>of<br>AI<br>Agent</h1>\n<br><h1 id='66' style='font-size:20px'>Memory</h1>\n<br><h1 id='67' style='font-size:16px'>Short-Term<br>Memory:<br>대화<br>맥락을<br>유지하자!</h1>\n<h1 id='68' style='font-size:16px'>1.<br>Rolling<br>Buffer<br>/<br>Sliding<br>Window<br>최신<br>k개의<br>메시지<br>또는<br>토큰만<br>저장하는<br>슬라이딩<br>윈도우<br>방식</h1>\n<h1 id='69' style='font-size:16px'>2.<br>Filtering<br>&<br>Importance-Based<br>Storage<br>핵심<br>정보<br>추출<br>후<br>저장<br>/<br>중복<br>및<br>상대적으로<br>덜<br>중요한<br>정보<br>제거</h1>\n<h1 id='70' style='font-size:16px'>3.<br>Detection<br>&<br>Trimming</h1>\n<br><p id='71' data-category='paragraph' style='font-size:16px'>메타데이터<br>기반<br>데이터<br>중요도<br>순서<br>기록,<br>토큰<br>초과<br>시<br>덜<br>중요<br>한<br>것부터<br>삭제</p>\n<h1 id='72' style='font-size:16px'>4.<br>Working<br>Memory<br>Separation</h1>\n<br><p id='73' data-category='paragraph' style='font-size:16px'>대화문과<br>별도로<br>임시<br>추론을<br>위한<br>메모리<br>공간<br>확보,<br>논리<br>흐름<br>또는<br>계획<br>과정<br>중<br>생긴<br>중간<br>상태를<br>스크래치패드에서<br>관리</p>\n<h1 id='74' style='font-size:20px'>Memory</h1>\n<br><h1 id='75' style='font-size:16px'>Long-Term<br>Memory:<br>사용자에게<br>맞추기</h1>\n<h1 id='76' style='font-size:16px'>1.<br>Extraction<br>/<br>Storage</h1>\n<br><h1 id='77' style='font-size:16px'>중요<br>정보<br>추출<br>및<br>DB<br>저장<br>(Vector<br>DB,<br>NoSQL<br>등)</h1>\n<h1 id='78' style='font-size:16px'>2.<br>Search<br>/<br>Lookup</h1>\n<br><h1 id='79' style='font-size:16px'>세션<br>활성화<br>또는<br>특정<br>질의<br>시,<br>임베딩<br>또는<br>엔티티<br>기반<br>검색</h1>\n<h1 id='80' style='font-size:16px'>3.<br>Update</h1>\n<br><h1 id='81' style='font-size:16px'>중요<br>정보<br>반영,<br>덜<br>중요한<br>경우<br>배치<br>요약<br>후<br>저장</h1>\n<br><h1 id='82' style='font-size:14px'>Core<br>Components<br>of<br>AI<br>Agent</h1>\n<figure id='83'><img alt=\"\" data-coord=\"top-left:(179,1167); bottom-right:(1089,1585)\" /></figure>\n<h1 id='84' style='font-size:20px'>Memory</h1>\n<br><h1 id='85' style='font-size:16px'>Mid-Term<br>Memory:<br>Cursor로<br>알아보자!</h1>\n<h1 id='86' style='font-size:16px'>.cursor/memory_bank</h1>\n<br><p id='87' data-category='list' style='font-size:16px'>projectbrief.md:<br>High<br>level에서<br>프로젝트에<br>대한<br>개요<br>기록<br>techContext.md:<br>환경<br>설정,<br>버전에<br>관한<br>setup<br>기록<br>progress.md:<br>완료된<br>작업<br>또는<br>변경<br>&<br>수정<br>기록<br>productContext.md:<br>기능(Feature)<br>&<br>비즈니스<br>로직<br>기록<br>systemPatterns.md:<br>아키텍처<br>패턴<br>및<br>코드<br>스탠다드<br>기록</p>\n<br><h1 id='88' style='font-size:14px'>Core<br>Components<br>of<br>AI<br>Agent</h1>\n<figure id='89'><img alt=\"\" data-coord=\"top-left:(1923,378); bottom-right:(2883,1268)\" /></figure>\n<br><p id='90' data-category='paragraph' style='font-size:16px'>Hot-path<br>기록<br>및<br>백그라운드<br>요약으로<br>기록하기!!</p>\n<h1 id='91' style='font-size:22px'>Memory</h1>\n<br><h1 id='92' style='font-size:18px'>Core<br>Components<br>of<br>AI<br>Agent</h1>\n<h1 id='93' style='font-size:20px'>Memory<br>as<br>OS</h1>\n<table id='94' style='font-size:14px'><thead></thead><tbody><tr><td>컴퓨터 OS</td><td>LLM OS (예: MemGPT, MemoryOS)</td></tr><tr><td>RAM, Cache, Disk 등 다양한 저장 공간 관 리</td><td>STM, MTM, LPM 등 계층적 메모리 관리</td></tr><tr><td>LRU, FIFO, 세그먼트 등 교체 전략 사용</td><td>FIFO, Heat 기반 교체, 세그먼트 구조</td></tr><tr><td>프로세스별 메모리 할당 및 해제</td><td>대화 주제/사용자 맥락 기반 메모리 활성화/ 비활성화</td></tr><tr><td>가상 메모리 스와핑</td><td>맥락 스와핑, 중요성 기반 메모리 이동</td></tr></tbody></table>\n<p id='95' data-category='paragraph' style='font-size:16px'>https://arxiv.org/pdf/2310.08560<br>https://arxiv.org/pdf/2506.06326</p>\n<h1 id='96' style='font-size:16px'>Core<br>Components<br>of<br>AI<br>Agent</h1>\n<br><h1 id='97' style='font-size:20px'>Structured<br>Output</h1>\n<br><h1 id='98' style='font-size:18px'>작업<br>분기<br>및<br>루프<br>등의<br>구현</h1>\n<h1 id='99' style='font-size:14px'>하나의<br>예시를<br>들어봅시다.</h1>\n<h1 id='100' style='font-size:14px'>“문서<br>생성<br>→<br>문서<br>제출”<br>을<br>하는<br>에이전트<br>A가<br>있다고<br>해봅시다!<br>그리고<br>그<br>문서에<br>대해<br>평가를<br>해주는<br>에이전트<br>B도<br>있고요.</h1>\n<h1 id='101' style='font-size:14px'>생성된<br>문서에<br>대해서<br>점수를<br>내야<br>하는데,<br>100점<br>만점<br>중에<br>글의<br>완성도가<br>최대<br>30점,<br>요청과의<br>연관성이<br>20점<br>...<br>이렇게<br>명확<br>한<br>평가<br>지표를<br>두고<br>싶어요.</h1>\n<h1 id='102' style='font-size:14px'>단순히<br>“이렇게<br>해서<br>몇<br>점인지<br>점수를<br>내줘!”라고<br>B에게<br>요청하면<br>아마<br>B는<br>“글의<br>완성도는<br>90점인데<br>사용자<br>요청이<br>~~였으니<br>잘<br>부합해서<br>18점이고...”</h1>\n<p id='103' data-category='paragraph' style='font-size:14px'>이런<br>식으로<br>대답할<br>것<br>같아요.<br>그러면<br>각<br>평가<br>지표<br>점수<br>최소치와<br>전체<br>점수<br>커트라인을<br>둬서<br>재시도<br>로직을<br>구현하고<br>싶은<br>저<br>는<br>이<br>로직을<br>구현하기<br>어려울<br>수<br>있을<br>것<br>같아요.<br>왜냐하면<br>일관적으로<br>응답이<br>똑같은<br>형식으로<br>와야<br>자동화를<br>할<br>수<br>있으니까요!</p>\n<p id='104' data-category='paragraph' style='font-size:14px'>이런<br>문제를<br>해결해주는<br>것이,<br>“Structured<br>Output”<br>로직입니다!</p>\n<h1 id='105' style='font-size:20px'>Structured<br>Output</h1>\n<br><h1 id='106' style='font-size:18px'>구조화된<br>응답으로<br>출력하도록<br>하자!</h1>\n<h1 id='107' style='font-size:14px'>1.<br>Prompt<br>기반<br>출력<br>제약</h1>\n<br><p id='108' data-category='list' style='font-size:14px'>LLM에게<br>응답을<br>JSON이나<br>사전에<br>정의된<br>스키마<br>형태로<br>명시적<br>으로<br>지시하는<br>방식입니다.<br>하지만<br>스키마가<br>복잡해지는<br>경우<br>LLM이<br>지시를<br>명확히<br>따르지<br>않을<br>수도<br>있어요.</p>\n<h1 id='109' style='font-size:14px'>2.<br>Output<br>Parsing<br>Module</h1>\n<br><p id='110' data-category='list' style='font-size:14px'>PydanticOutputParser:<br>Pydantic<br>모델로<br>스키마를<br>정의하고,<br>LLM<br>호출<br>시<br>자동<br>파싱<br>및<br>검증<br>LangChain<br>StructuredOutputParser도<br>동일<br>기능을<br>합니다!</p>\n<h1 id='111' style='font-size:14px'>3.<br><br>타입<br>구조<br>검증<br>및<br>오류<br>시<br>재시도<br>로직</h1>\n<h1 id='112' style='font-size:14px'>4.<br>Output<br>Schema를<br>언어모델의<br>tool로<br>바인딩</h1>\n<br><p id='113' data-category='paragraph' style='font-size:14px'>LLM이<br>도구<br>호출<br>형식으로<br>출력하도록<br>설계하면<br>됩니다!</p>\n<br><h1 id='114' style='font-size:16px'>Core<br>Components<br>of<br>AI<br>Agent</h1>\n<figure id='115'><img alt=\"\" data-coord=\"top-left:(1794,302); bottom-right:(2805,836)\" /></figure>\n<figure id='116'><img alt=\"\" data-coord=\"top-left:(1795,888); bottom-right:(2794,1154)\" /></figure>\n<figure id='117'><img alt=\"\" data-coord=\"top-left:(1805,1195); bottom-right:(2800,1558)\" /></figure>\n<h1 id='118' style='font-size:20px'>AI<br>Agents<br>Frameworks</h1>\n<p id='119' data-category='paragraph' style='font-size:16px'>Contributors!!</p>\n<br><p id='120' data-category='paragraph' style='font-size:14px'>YBIGTA<br>26기<br>DS<br>정민지<br>YBIGTA<br>26기<br>DE<br>윤희찬</p>\n<header id='121' style='font-size:16px'>Outline</header>\n<br><h1 id='122' style='font-size:20px'>AI<br>Agent<br>Frameworks</h1>\n<h1 id='123' style='font-size:14px'>이번에는<br>AI<br>Agent의<br>프레임워크가<br>어떤<br>것이<br>있는지<br>알아봅시다.<br>각각의<br>특징,<br>장단점,<br>언제<br>사용하는<br>것이<br>좋은지<br>알아봐요!</h1>\n<h1 id='124' style='font-size:22px'>LangChain</h1>\n<br><h1 id='125' style='font-size:20px'>LLM<br>with<br>Chain</h1>\n<h1 id='126' style='font-size:18px'>LangChain은<br>프롬프트,<br>LLM,<br>도구,<br>메모리<br>등을<br>조합하여<br>파이프라인<br>기반으로<br>챗봇,<br>질의응답(QA),<br>자동<br>요약<br>등<br>다양한<br>LLM<br>애플리케이션을<br>구축할<br>수<br>있는<br>프레임워크입니다.</h1>\n<br><h1 id='127' style='font-size:16px'>LangChain</h1>\n<figure id='128'><img alt=\"\" data-coord=\"top-left:(2321,256); bottom-right:(2877,543)\" /></figure>\n<h1 id='129' style='font-size:18px'>기존의<br>LLM의<br>부족한<br>점(지식<br>단절,<br>작업<br>처리의<br>한계<br>등)을<br>보완하여<br>하<br>나의<br>“실행<br>가능한<br>시스템”으로<br>바꾸어준다는<br>것이<br>핵심이에요.</h1>\n<p id='130' data-category='list' style='font-size:14px'>모델<br>I/O<br>:<br>언어<br>모델과의<br>인터페이스<br>데이터<br>연결<br>:<br>애플리케이션별<br>데이터와의<br>인터페이스<br>체인<br>:<br>호출<br>시퀀스<br>구축<br>에이전트<br>:<br>상위<br>지시문이<br>주어지면<br>체인이<br>사용할<br>툴을<br>선택할<br>수<br>있도록<br>함<br>메모리<br>:<br>체인<br>실행<br>간<br>애플리케이션<br>상태<br>유지<br>콜백<br>:<br>체인의<br>중간<br>단계를<br>기록<br>및<br>스트리밍</p>\n<br><figure id='131'><img alt=\"\" data-coord=\"top-left:(1866,937); bottom-right:(2343,1414)\" /></figure>\n<br><figure id='132'><img alt=\"\" data-coord=\"top-left:(2468,939); bottom-right:(2934,1412)\" /></figure>\n<header id='133' style='font-size:16px'>LangChain</header>\n<br><h1 id='134' style='font-size:22px'>LCEL<br>(LangChain<br>Expression<br>Language)</h1>\n<br><h1 id='135' style='font-size:20px'>:<br>복잡한<br>작업흐름을<br>간단하게<br>만들고<br>관리할<br>수<br>있도록<br>돕는<br>도구</h1>\n<h1 id='136' style='font-size:14px'>chain = prompt | model | output_parser 파이프(|)<br>연산자를<br>사용한<br>체인<br>구성</h1>\n<table id='137' style='font-size:18px'><thead></thead><tbody><tr><td></td><td>Prompt<br>Template과<br>함께라면 필요한<br>부분만<br>수정할<br>수<br>있어~</td><td><br><br><br>장점: 간결하고<br>직관적인<br>문법 스트리밍<br>지원 병렬<br>실행<br>최적화 비동기<br>처리<br>지원</td></tr></tbody></table>\n<h1 id='138' style='font-size:20px'>LangGraph</h1>\n<br><h1 id='139' style='font-size:18px'>LangChain과<br>무엇이<br>다를까?</h1>\n<br><h1 id='140' style='font-size:16px'>LangGraph</h1>\n<h1 id='141' style='font-size:14px'>LangChain은<br>어떠한<br>워크플로우를<br>순차적으로<br>가동하는<br>프레임워크죠.<br>그래서<br>조금<br>은<br>아쉬운<br>측면들이<br>있습니다.</h1>\n<br><p id='142' data-category='list' style='font-size:14px'>복잡한<br>워크플로우<br>작동<br>통제가<br>제한적<br>상태<br>추적<br>제한적</p>\n<br><figure id='143'><img alt=\"\" data-coord=\"top-left:(2319,265); bottom-right:(2864,550)\" /></figure>\n<h1 id='144' style='font-size:14px'>LangGraph는<br>이러한<br>문제점을<br>보완하는<br>프레임워크입니다!<br>그래프에서<br>사용되는<br>node와<br>edge의<br>개념을<br>기반으로,<br>state를<br>통해서<br>상태<br>및<br>분기<br>제어가<br>가능합니다.</h1>\n<h1 id='145' style='font-size:14px'>마치<br>언어모델이<br>달려있는<br>DAG라고<br>보면<br>되겠죠?</h1>\n<p id='146' data-category='list' style='font-size:14px'>State:<br>어플리케이션의<br>현재<br>상태<br>Node:<br>실제<br>작업을<br>수행하는<br>함수<br>Edge:<br>노드<br>간의<br>연결을<br>정의하는<br>요소</p>\n<br><footer id='147' style='font-size:18px'>이렇게<br>말하면...<br>모르니<br>실습을<br>해봅시다!</footer>\n<h1 id='148' style='font-size:20px'>LangGraph</h1>\n<br><h1 id='149' style='font-size:18px'>LangGraph의<br>장/단점</h1>\n<h1 id='150' style='font-size:14px'>현재<br>나와있는<br>프레임워크<br>중에서,<br>잘<br>쓰면<br>가장<br>우수한<br>성능을<br>보이는<br>프레임워크는<br>LangGraph라<br>생각합니다.</h1>\n<p id='151' data-category='list' style='font-size:14px'>State기반<br>워크플로우<br>→<br>로직을<br>명확하게<br>제어<br>가능<br>ReACT<br>구조에<br>가장<br>최적화<br>ParentGraph,<br>SubGraph로<br>동적인<br>State<br>로딩<br>가능<br>멀티에이전트<br>아키텍처<br>설계<br>가능<br>LangChain<br>연결<br>가능<br>(다른<br>아키텍처도<br>연결할<br>수<br>있다!)</p>\n<h1 id='152' style='font-size:14px'>단점은...<br>너무<br>어려워요.<br>복잡하기도<br>하고요.<br>특히<br>재설계가<br>필요할<br>때<br>로직<br>수정이<br>꽤나<br>어렵습니다.</h1>\n<br><h1 id='153' style='font-size:16px'>LangGraph</h1>\n<figure id='154'><img alt=\"\" data-coord=\"top-left:(2319,264); bottom-right:(2864,550)\" /></figure>\n<h1 id='155' style='font-size:20px'>Google-ADK</h1>\n<br><h1 id='156' style='font-size:18px'>멀티에이전트<br>프레임워크</h1>\n<br><h1 id='157' style='font-size:14px'>Google-ADK</h1>\n<figure id='158'><img alt=\"\" data-coord=\"top-left:(2430,282); bottom-right:(2768,638)\" /></figure>\n<br><h1 id='159' style='font-size:16px'>지금까지<br>LangChain,<br>LangGraph는<br>단일<br>LLM(Agent)으로<br>설계가<br>맞추어져<br>있다<br>면,<br>Google에서<br>만든<br>ADK(Agent<br>Development<br>Kit)은<br>처음부터<br>멀티에이전트를<br>염두해두고<br>만들어진<br>프레임워크에요.</h1>\n<h1 id='160' style='font-size:16px'>즉<br>하나의<br>테스크에<br>대해서</h1>\n<br><p id='161' data-category='list' style='font-size:16px'>LangChain은<br>chain<br>파이프라인을<br>통해<br>LangGraph는<br>State,<br>Node를<br>통해</p>\n<p id='162' data-category='paragraph' style='font-size:16px'>문제를<br>해결했다면<br>ADK는<br>각<br>스텝마다<br>서로<br>다른<br>역할을<br>수행하는<br>에이전트가<br>구성<br>되어<br>문제해결을<br>합니다.</p>\n<header id='163' style='font-size:18px'>Google-ADK</header>\n<br><p id='164' data-category='paragraph' style='font-size:22px'>ADK-Agents</p>\n<br><p id='165' data-category='paragraph' style='font-size:20px'>미리<br>설계된<br>워크플로우들</p>\n<p id='166' data-category='list' style='font-size:14px'>LlmAgent:<br>일반적으로<br>알고<br>있는,<br>“언어모델”이<br>탑재된<br>에이전트.<br>실제로<br>Task를<br>수행하는<br>주체</p>\n<p id='167' data-category='list' style='font-size:14px'>SequentialAgent:<br>정의된<br>에이전트를<br>순차<br>실행<br>할<br>수<br>있는<br>에이전트</p>\n<p id='168' data-category='list' style='font-size:14px'>ParallelAgent:<br>정의된<br>에이전트를<br>병렬로<br>실행할<br>수<br>있는<br>에이전트</p>\n<p id='169' data-category='list' style='font-size:14px'>CustomAgent:<br>위에서<br>정의된<br>에이전트를<br>넘어<br>더<br>복잡한<br>워크플로우를<br>실행하고자<br>할<br>때<br>사용하<br>는<br>에이전트</p>\n<br><figure id='170'><img alt=\"\" data-coord=\"top-left:(1356,424); bottom-right:(2898,1147)\" /></figure>\n<p id='171' data-category='paragraph' style='font-size:16px'>이번에는<br>시연<br>영상이<br>있어요!<br>https://github.com/wognsths/adk-agent-sample</p>\n<h1 id='172' style='font-size:20px'>Google-ADK</h1>\n<br><h1 id='173' style='font-size:18px'>ADK의<br>장/단점</h1>\n<br><h1 id='174' style='font-size:14px'>Google-ADK</h1>\n<h1 id='175' style='font-size:16px'>ADK는<br>google이<br>만들었다는<br>것과,<br>멀티에이전트<br>아키텍처인<br>것에서<br>장점을<br>가집니다!</h1>\n<br><figure id='176'><img alt=\"\" data-coord=\"top-left:(2430,283); bottom-right:(2767,638)\" /></figure>\n<br><p id='177' data-category='list' style='font-size:16px'>분리<br>책임<br>원칙:<br>디버깅<br>및<br>수정,<br>업데이트<br>용이<br>간단하지만<br>복잡한<br>워크플로우도<br>충분히<br>수행할<br>수<br>있음<br>Google<br>생태계:<br>Vertex<br>AI,<br>GCP<br>platform<br>연동<br>가능<br>adk<br>web,<br>adk<br>serve<br>등의<br>강력한<br>데모<br>및<br>배포<br>툴<br>output_key로<br>결과물<br>추적,<br>로깅,<br>분기<br>로직<br>생성<br>가능</p>\n<h1 id='178' style='font-size:16px'>단점들은...</h1>\n<br><p id='179' data-category='list' style='font-size:16px'>Google<br>생태계<br>안에서는<br>강력하지만,<br>Google<br>생태계를<br>쓰지<br>않는다면<br>아쉽다<br>ReACT를<br>정교하게<br>구현하기에는<br>비효율적<br>Token을<br>다소<br>낭비하는<br>경향</p>\n<header id='180' style='font-size:16px'>CrewAI</header>\n<br><h1 id='181' style='font-size:20px'>CrewAI</h1>\n<br><h1 id='182' style='font-size:18px'>Crews<br>&<br>Flows</h1>\n<h1 id='183' style='font-size:14px'>Agent</h1>\n<br><p id='184' data-category='list' style='font-size:14px'>CrewAI에서<br>작업을<br>수행하는<br>주체<br>role,<br>goal,<br>backstory<br>정의를<br>통해<br>페르소나가<br>정<br>의됨</p>\n<h1 id='185' style='font-size:14px'>Crew</h1>\n<br><p id='186' data-category='list' style='font-size:14px'>여러<br>에이전트로<br>이루어진<br>팀<br>워크플로우<br>및<br>오케스트레이션<br>수행</p>\n<h1 id='187' style='font-size:14px'>Flow</h1>\n<br><p id='188' data-category='list' style='font-size:14px'>이벤트<br>기반의<br>정교한<br>실행<br>제어<br>메커니즘<br>Crew-Crew,<br>Crew-Event<br>연결<br>가능</p>\n<br><figure id='189'><img alt=\"\" data-coord=\"top-left:(1547,599); bottom-right:(2852,1533)\" /></figure>\n<header id='190' style='font-size:14px'>CrewAI</header>\n<br><h1 id='191' style='font-size:18px'>CrewAI</h1>\n<header id='192' style='font-size:16px'>n8n</header>\n<br><h1 id='193' style='font-size:20px'>n8n</h1>\n<br><h1 id='194' style='font-size:18px'>나도<br>Agent<br>써서<br>업무자동화<br>해보고<br>싶은데...</h1>\n<h1 id='195' style='font-size:14px'>앞서<br>설명드린<br>LangChain,<br>LangGraph,<br>ADK,<br>CrewAI...<br>등의<br>에이전트를<br>구현하는<br>것은<br>다소<br>난이도가<br>있어요.<br>또<br>무언가를<br>연동하고<br>서빙하기<br>시작하면<br>더더욱<br>까다로워질<br>겁니다.</h1>\n<h1 id='196' style='font-size:14px'>반면<br>n8n은<br>다음과<br>같은<br>장점들<br>때문에<br>쉽고<br>강력합니다.</h1>\n<br><p id='197' data-category='list' style='font-size:14px'>Drag-and-drop<br>구조<br>400+<br>플러그인,<br>풍부한<br>통합<br>배포하기<br>쉬운<br>구조</p>\n<p id='198' data-category='paragraph' style='font-size:14px'>개발에<br>익숙하지<br>않아도<br>아이디어만<br>있으면<br>얼마든지<br>좋은<br>에이전트를<br>만들어낼<br>수<br>있고,<br>개발에<br>익숙한<br>분들도<br>자신의<br>아이디어<br>를<br>빠르게<br>적용해보고<br>복잡한<br>프레임워크를<br>사용할<br>수<br>있겠죠.</p>\n<br><figure id='199'><img alt=\"\" data-coord=\"top-left:(1582,1125); bottom-right:(2833,1636)\" /></figure>\n<p id='200' data-category='paragraph' style='font-size:14px'>_Agent<br>Protocols</p>\n<header id='201' style='font-size:16px'>Agent<br>Protocols</header>\n<br><h1 id='202' style='font-size:20px'>_MCP</h1>\n<br><h1 id='203' style='font-size:18px'>Why<br>MCP?</h1>\n<h1 id='204' style='font-size:14px'>사실<br>MCP는<br>그냥<br>HTTP<br>통신<br>기반<br>데이터를<br>받을<br>수<br>있는<br>tool입니<br>다.<br>그럼에도<br>왜<br>MCP가<br>유용한<br>것인가요?</h1>\n<p id='205' data-category='list' style='font-size:14px'>표준화:<br>USB<br>포트에<br>비유하기도<br>하죠.<br>클라이언트는<br>MCP에<br>연<br>결하기<br>위해<br>MCP의<br>내부<br>구조를<br>알<br>필요가<br>없습니다.<br>표준화되<br>어<br>“어떻게<br>연결하는지”만<br>알고<br>있으면<br>되니까요.<br>확장성:<br>연결만<br>하면<br>끝.<br>그러면<br>제가<br>제<br>입맛대로<br>마음대로<br>연결<br>하면<br>되겠네요!</p>\n<p id='206' data-category='paragraph' style='font-size:14px'>그냥<br>tool을<br>만든다고<br>하면,<br>인풋<br>형태부터<br>아웃풋<br>형태<br>정해주고,<br>프<br>롬프트에<br>어떻게<br>써야<br>하는지<br>상세히<br>알려줘야<br>하고...<br>한두번이면<br>몰<br>라도<br>너무<br>힘든<br>것<br>같아요.</p>\n<p id='207' data-category='paragraph' style='font-size:14px'>너무<br>MCP가<br>주는<br>효용에<br>대해서<br>짧게<br>이야기했지만,<br>이<br>정도면<br>Agent<br>protocol이<br>무엇을<br>하기<br>위해<br>있는<br>것인지<br>알<br>수<br>있겠죠?</p>\n<br><figure id='208'><img alt=\"\" data-coord=\"top-left:(1662,506); bottom-right:(2824,1172)\" /></figure>\n<header id='209' style='font-size:16px'>Agent<br>Protocols</header>\n<br><h1 id='210' style='font-size:20px'>Agent<br>Protocol</h1>\n<br><h1 id='211' style='font-size:18px'>Agent<br>Protocol은<br>무엇을<br>갖추어야<br>하는가?</h1>\n<h1 id='212' style='font-size:14px'>결국<br>Agent<br>Protocol은,<br>MCP와<br>같이<br>입/출력<br>형식이<br>통일된<br>프로<br>토콜입니다.</h1>\n<h1 id='213' style='font-size:14px'>MCP도<br>설계<br>철학이<br>있죠.<br>도구,<br>리소스,<br>프롬프트<br>등의<br>컨텍스트를<br>구조화되게<br>제공하거나,<br>AI<br>모델이<br>동적으로<br>리소스를<br>탐색하고<br>호출<br>할<br>수<br>있도록<br>설계됩니다.</h1>\n<h1 id='214' style='font-size:14px'>Agent<br>Protocol은<br>에이전트<br>간<br>프로토콜이기<br>때문에,<br>MCP보다는<br>더욱<br>발전된<br>설계<br>철학이<br>필요합니다.</h1>\n<p id='215' data-category='list' style='font-size:14px'>에이전트<br>자율성<br>강화:<br>에이전트는<br>자신의<br>기능을<br>명시적으로<br>광<br>고하고,<br>독립적으로<br>판단하여<br>동작할<br>수<br>있어야<br>합니다.<br>즉<br>자신<br>의<br>능력을<br>공개하고,<br>필요<br>시<br>동료<br>에이전트를<br>호출하거나<br>결과를<br>위임할<br>수<br>있어야<br>하죠.<br>협업:<br>단순<br>요청-응답<br>구조를<br>넘어서,<br>에이전트<br>간<br>상호작용을<br>잘<br>할<br>수<br>있도록<br>설계되어야<br>합니다.</p>\n<br><figure id='216'><img alt=\"\" data-coord=\"top-left:(1719,410); bottom-right:(2833,1409)\" /></figure>\n<header id='217' style='font-size:16px'>Agent<br>Protocols</header>\n<br><h1 id='218' style='font-size:20px'>Agent<br>Protocol</h1>\n<br><h1 id='219' style='font-size:18px'>Agent<br>Protocols...<br>춘추전국시대?</h1>\n<table id='220' style='font-size:14px'><thead></thead><tbody><tr><td>프로토콜</td><td>주요 기능 계층</td><td>핵심 특징</td></tr><tr><td>ACP (Agent Communication Protocol)</td><td>메시징 및 협업</td><td>REST+스트리밍, 멀티파트 메시지, 대기형/비동기 협업, BeeAI 플랫폼 기반 (IBM, IBM Research, Niklas Heidloff)</td></tr><tr><td>A2A (Agent-to-Agent Protocol)</td><td>직접 협업(P2P)</td><td>Agent Card로 기능 광고/탐색, 위임 중심, 리눅스재단 오픈 거버넌스 (Google Developers Blog, linuxfoundation.org, Descope, Google Cloud)</td></tr><tr><td>ANP (Agent Network Protocol)</td><td>분산 네트워크 구조</td><td>DID 기반 신원·디스커버리, JSON-LD, 분산형 에이전트 마켓플레이스 지향 (GitHub, arXiv, Medium, AIbase)</td></tr><tr><td>Agora Protocol</td><td>메타 메시징 협상</td><td>대형 에이전트 네트워크 대상 메타 프로토콜, 구조적 통신 협상, 확장성 중심 (arXiv, thebytebeat.substack.com, AZoAi)</td></tr><tr><td>LMOS (Language Model Operating System)</td><td>운영·오케스트레이션</td><td>멀티 에이전트를 OS 스타일로 관리, 메모리·툴 공유·경로 라우팅 지원 (eclipse.dev, eclipse.dev, projects.eclipse.org)</td></tr><tr><td>AITP (Agent Interaction & Transaction Protocol)</td><td>보안·거래</td><td>신뢰 경계 간 안전한 거래/트랜잭션, 웹2/웹3 지원, 경제적 주체 모델(NEAR AI, aitp.dev, Binance, X (formerly Twitter))</td></tr></tbody></table>\n<p id='221' data-category='paragraph' style='font-size:14px'>AI<br>Agent<br>Engineering<br>Tactics</p>\n<h1 id='222' style='font-size:20px'>Triage</h1>\n<br><h1 id='223' style='font-size:18px'>어떤<br>요청인지<br>판단하자!</h1>\n<br><h1 id='224' style='font-size:16px'>AI<br>Agent<br>Engineering<br>Tactics</h1>\n<h1 id='225' style='font-size:14px'>같이<br>프로젝트를<br>하는<br>팀이<br>있어요.<br>저는</h1>\n<br><p id='226' data-category='list' style='font-size:14px'>웹/UI<br>디자인<br>및<br>연결을<br>담당하는<br>A<br>백앤드를<br>담당하는<br>B<br>ML/DL<br>모델링을<br>담당하는<br>C</p>\n<h1 id='227' style='font-size:14px'>이런<br>든든한<br>팀원들을<br>가지고<br>있어요.</h1>\n<h1 id='228' style='font-size:14px'>클라이언트가<br>저에게<br>어떤<br>서비스를<br>만들어달라고<br>요청을<br>하면,<br>저는<br>이<br>요청을<br>우리<br>팀이<br>수행할<br>수<br>있는지<br>판단하고,<br>누구에게<br>무엇을<br>맡겨야<br>할지<br>결정을<br>해야<br>합니다.</h1>\n<h1 id='229' style='font-size:14px'>이것을<br>Triage라고<br>부릅니다!</h1>\n<br><figure id='230'><img alt=\"\" data-coord=\"top-left:(1580,411); bottom-right:(2986,1293)\" /></figure>\n<h1 id='231' style='font-size:20px'>Handoff</h1>\n<br><h1 id='232' style='font-size:16px'>AI<br>Agent<br>Engineering<br>Tactics</h1>\n<br><h1 id='233' style='font-size:18px'>임무를<br>맡기자!!</h1>\n<h1 id='234' style='font-size:14px'>누구에게<br>무엇을<br>맡길지<br>판단을<br>했으니,<br>실제로<br>세부<br>요청과<br>함께<br>해당<br>테<br>스크를<br>넘길거에요.</h1>\n<h1 id='235' style='font-size:14px'>테스크를<br>넘겨받은<br>사람은<br>자기<br>일을<br>하다가,<br>어?<br>이거는<br>내가<br>할<br>일이<br>아<br>닌<br>것<br>같은데?<br>하고<br>다음<br>사람에게<br>일을<br>넘길<br>수<br>있어요.</h1>\n<h1 id='236' style='font-size:14px'>이렇게<br>테스크를<br>세부<br>요청<br>사항과<br>데이터<br>등을<br>함께<br>전달해서<br>다른<br>에이<br>전트가<br>임무를<br>수행하도록<br>하는<br>것이<br>handoff이에요.</h1>\n<h1 id='237' style='font-size:20px'>Auto<br>Scaling</h1>\n<br><h1 id='238' style='font-size:18px'>빠른<br>서비스를<br>구축하기</h1>\n<br><h1 id='239' style='font-size:16px'>AI<br>Agent<br>Engineering<br>Tactics</h1>\n<h1 id='240' style='font-size:14px'>AI가<br>많은<br>데이터를<br>다루어야<br>하는<br>서비스를<br>구축해야<br>해요.</h1>\n<h1 id='241' style='font-size:14px'>그런데<br>데이터가<br>너무<br>많으니,<br>사용자<br>입장에서<br>한<br>번<br>테스크를<br>수행하는<br>데<br>10분씩<br>걸리니<br>답답해<br>할<br>것<br>같아요.</h1>\n<h1 id='242' style='font-size:14px'>이럴<br>때에는<br>AI의<br>인스턴스<br>수를<br>늘려버리면<br>됩니다!</h1>\n<h1 id='243' style='font-size:14px'>여기에<br>더해서<br>데이터<br>개수를<br>감지하고,<br>데이터<br>개수에<br>비례하여<br>AI<br>인스<br>턴스를<br>활성화하도록<br>하면<br>더<br>빠른<br>서비스를<br>가동할<br>수<br>있을<br>것<br>같아요.</h1>\n<h1 id='244' style='font-size:22px'>LLM<br>with<br>Persona</h1>\n<br><h1 id='245' style='font-size:20px'>내가<br>누군지<br>알려줘</h1>\n<br><h1 id='246' style='font-size:16px'>AI<br>Agent<br>Engineering<br>Tactics</h1>\n<h1 id='247' style='font-size:14px'>같은<br>언어모델인데도</h1>\n<h1 id='248' style='font-size:14px'>“너는<br>데이터<br>분석<br>전문가야“라고<br>설정하는<br>것이<br>일반적인<br>System<br>Instruction을<br>적용하는<br>것보다<br>성능이<br>좋아진다는<br>것을<br>알고<br>계신가요?</h1>\n<p id='249' data-category='list' style='font-size:14px'>명확히<br>정의된<br>역할<br>명세를<br>주고<br>해야<br>하는<br>것,<br>할<br>수<br>있는<br>것,<br>하면<br>안되는<br>것을<br>제공하면</p>\n<h1 id='250' style='font-size:14px'>에이전트의<br>임무<br>수행<br>능력을<br>크게<br>올릴<br>수<br>있습니다!</h1>\n<h1 id='251' style='font-size:14px'>그럼<br>어떻게<br>언어모델에게<br>역할을<br>주입해야<br>가장<br>효과가<br>좋을까요?</h1>\n<p id='252' data-category='paragraph' style='font-size:18px'>https://arxiv.org/pdf/2305.14688</p>\n<h1 id='253' style='font-size:20px'>Prompting</h1>\n<br><h1 id='254' style='font-size:18px'>좋은<br>System<br>Instruction은<br>무엇인가</h1>\n<h1 id='255' style='font-size:14px'>Markdown과<br>XML을<br>사용해보면<br>좋아요!</h1>\n<br><p id='256' data-category='list' style='font-size:14px'>Markdown:<br>##<br>RULES<br>XML:<br><RULES><br>...<br><\\RULES></p>\n<h1 id='257' style='font-size:14px'>명시적인<br>구획과<br>태그<br>덕분에<br>LLM이<br>instruction과<br>예시를<br>더<br>명확히<br>해석할<br>수<br>있어요.</h1>\n<h1 id='258' style='font-size:14px'>혼합해서<br>쓰는<br>것도<br>좋아요!</h1>\n<h1 id='259' style='font-size:14px'><RULES><br>##<br>IMPORTANT<br>You<br>**must**<br>read<br>과제<br>명세서<br></RULES></h1>\n<br><h1 id='260' style='font-size:16px'>AI<br>Agent<br>Engineering<br>Tactics</h1>\n<figure id='261'><img alt=\"\" data-coord=\"top-left:(2014,976); bottom-right:(2840,1521)\" /></figure>\n<p id='262' data-category='paragraph' style='font-size:14px'>Agent<br>Development<br>Guidelines</p>\n<h1 id='263' style='font-size:20px'>Outline</h1>\n<br><h1 id='264' style='font-size:18px'>그래서<br>무엇을<br>해야<br>하지...</h1>\n<h1 id='265' style='font-size:14px'>AI<br>Agent를<br>처음<br>접했을<br>적의<br>저는,<br>무엇부터<br>시작해야<br>하는지에<br>대해서<br>너무<br>어려워했던<br>것<br>같아요.</h1>\n<h1 id='266' style='font-size:14px'>이번<br>목차에서는<br>제<br>경험을<br>기반으로<br>어떻게<br>해야<br>좋은<br>에이전트<br>프로젝트를<br>만들<br>수<br>있는지<br>공유해보고자<br>합니다!</h1>\n<br><h1 id='267' style='font-size:16px'>Agent<br>Development<br>Guidelines</h1>\n<figure id='268'><img alt=\"\" data-coord=\"top-left:(2150,371); bottom-right:(2836,1424)\" /></figure>\n<h1 id='269' style='font-size:20px'>Design</h1>\n<br><h1 id='270' style='font-size:16px'>Agent<br>Development<br>Guidelines</h1>\n<br><h1 id='271' style='font-size:18px'>설계가<br>제일<br>중요</h1>\n<h1 id='272' style='font-size:14px'>처음부터<br>디자인을<br>하고<br>시작합시다!<br>전체<br>워크플로우는<br>추상적이게,<br>단일<br>워크플로우는<br>구체적이게,<br>그리고<br>단일<br>워크플로우가<br>결정되<br>면<br>전체<br>워크플로우를<br>구체적으로<br>구성하면<br>좋아요.</h1>\n<h1 id='273' style='font-size:14px'>다이어그램<br>그리기</h1>\n<br><p id='274' data-category='list' style='font-size:14px'>그림을<br>그리면서<br>플로우가<br>어떻게<br>되는지<br>설계해야<br>합니다!<br>draw.io<br>같은<br>사이트를<br>이용하면<br>좋아요</p>\n<h1 id='275' style='font-size:14px'>Input/Output<br>결정하기</h1>\n<br><p id='276' data-category='list' style='font-size:14px'>먼저,<br>사용자가<br>되었다고<br>생각하고<br>어떤<br>입력이<br>올<br>것인지<br>고려해보는<br>것이<br>좋아요.<br>특정한<br>테스크만<br>수행하는<br>에이전트의<br>경우<br>입력을<br>제한하고,<br>그런<br>에이전트를<br>총괄하는<br>에이전트의<br>경우<br>다양한<br>입력<br>시나리오를<br>고려해보면<br>돼요.<br>이후<br>정확한<br>Input/Output<br>스키마를<br>정해줍시다!</p>\n<h1 id='277' style='font-size:22px'>Design</h1>\n<br><h1 id='278' style='font-size:18px'>Agent<br>Development<br>Guidelines</h1>\n<br><h1 id='279' style='font-size:20px'>계획서<br>작성하기</h1>\n<h1 id='280' style='font-size:16px'>그렇게<br>설계가<br>되었으면,<br>이제<br>계획서를<br>제대로<br>작성해봐야<br>해요</h1>\n<h1 id='281' style='font-size:14px'>구성과<br>파이프라인은<br>어떻게<br>되는지</h1>\n<br><p id='282' data-category='list' style='font-size:14px'>병렬<br>구조와<br>순차<br>구조<br>정리<br>Fallback,<br>Feedback<br>등<br>루프<br>구조<br>정리</p>\n<h1 id='283' style='font-size:14px'>데이터는<br>어떤<br>것을<br>사용하는지</h1>\n<br><p id='284' data-category='list' style='font-size:14px'>데이터<br>수집을<br>어떻게<br>할<br>것인지<br>데이터<br>체계는<br>어떻게<br>하는지</p>\n<h1 id='285' style='font-size:14px'>기술<br>스택은<br>어떤<br>것이<br>적합할<br>것인지</h1>\n<br><p id='286' data-category='list' style='font-size:14px'>정해진<br>사고<br>과정<br>+<br>행동으로<br>테스크를<br>수행한다?<br>→<br>LangGraph<br>단순<br>파이프라인이다?<br>→<br>LangChain<br>서로<br>다른<br>임무를<br>수행해서<br>합치고<br>싶다?<br>→<br>ADK,<br>CrewAI<br>빠르게<br>개발하고<br>테스팅부터<br>하고싶다?<br>→<br>n8n</p>\n<h1 id='287' style='font-size:14px'>어떤<br>방법론을<br>사용할<br>것인지</h1>\n<br><h1 id='288' style='font-size:14px'>RAG<br>vs<br>Elastic<br>Search</h1>\n<h1 id='289' style='font-size:20px'>Simple<br>Start</h1>\n<br><h1 id='290' style='font-size:18px'>복잡하게<br>생각하지<br>않기</h1>\n<br><h1 id='291' style='font-size:16px'>Agent<br>Development<br>Guidelines</h1>\n<h1 id='292' style='font-size:14px'>처음<br>시작할<br>때에는,<br>정말<br>필요한<br>경우가<br>아니면<br>이런<br>로직들은<br>피해줍시다!</h1>\n<br><p id='293' data-category='list' style='font-size:14px'>Fallback,<br>Feedback<br>loop<br>만들기<br>질문이<br>모호한<br>경우,<br>사용자에게<br>다시<br>질문하기</p>\n<h1 id='294' style='font-size:14px'>이런<br>것들은<br>처음부터<br>시작하는<br>경우<br>머리도<br>복잡해지고<br>코드도<br>난잡해집니다.<br>항상<br>간단하게<br>시작해서<br>원하는<br>대로<br>작동되는<br>것을<br>파악하고,<br>이후</h1>\n<br><p id='295' data-category='list' style='font-size:14px'>리팩토링<br>프롬프트<br>고도화<br>Feedback,<br>Fallback<br>loop<br>구성</p>\n<br><h1 id='296' style='font-size:14px'>등을<br>만들어주는<br>것이<br>제일<br>좋아요.</h1>\n<p id='297' data-category='paragraph' style='font-size:14px'>혹은,<br>상대적으로<br>쉬운<br>n8n으로<br>로직을<br>먼저<br>만들어보고,<br>그<br>로직이<br>괜찮은<br>것을<br>확인한<br>후<br>다른<br>정교한<br>에이전트<br>프레임워크로<br>가는<br>것이<br>좋습니다!</p>\n<h1 id='298' style='font-size:14px'>감사합니다!</h1>",
    "1YqPk4KlvTrKNFSq7puowtwuznAAYpq9d": "<header id='0' style='font-size:14px'>2025-2<br>YBIGTA</header>\n<h1 id='1' style='font-size:20px'>RAG</h1>\n<p id='2' data-category='paragraph' style='font-size:16px'>26기<br>DE<br>대희찬<br>26기<br>DE<br>손재훈</p>\n<h1 id='3' style='font-size:20px'>목<br>차</h1>\n<br><h1 id='4' style='font-size:14px'>2025-2<br>YBIGTA</h1>\n<p id='5' data-category='list' style='font-size:16px'>1. Intro</p>\n<p id='6' data-category='list' style='font-size:18px'>2. Architecture</p>\n<p id='7' data-category='list' style='font-size:18px'>3. Techniques</p>\n<p id='8' data-category='list' style='font-size:18px'>4. Contextual<br>Retrieval</p>\n<h1 id='9' style='font-size:14px'>Intro</h1>\n<header id='10' style='font-size:14px'>Intro</header>\n<br><h1 id='11' style='font-size:20px'>Intro</h1>\n<h1 id='12' style='font-size:16px'>2024년<br>이후<br>모든<br>AI<br>서비스의<br>기본<br>옵션으로<br>따라붙는<br>이름<br>-<br><br><br><br><br><br>→<br><br>RAG(Retrieval<br>Augmented<br>Generation)</h1>\n<h1 id='13' style='font-size:16px'>이번<br>세션에서는<br>이런<br>질문에<br>답해봅시다:</h1>\n<p id='14' data-category='list' style='font-size:16px'>RAG가<br>등장한<br>배경은<br>무엇인지,<br>RAG을<br>하기<br>위해서<br>어떤<br>설계가<br>필요한지,<br>RAG<br>파이프라인은<br>어떻게<br>되어<br>있는지,<br>한계점은<br>무엇이고<br>이를<br>어떻게<br>극복할<br>수<br>있는지</p>\n<h1 id='15' style='font-size:16px'>함께<br>알아봅시다!</h1>\n<h1 id='16' style='font-size:20px'>Problems<br>with<br>LLMs</h1>\n<h1 id='17' style='font-size:14px'>LLM의<br>한계</h1>\n<br><header id='18' style='font-size:16px'>Intro</header>\n<p id='19' data-category='list' style='font-size:18px'>환각<br>(Hallucination)<br>오래된<br>정보<br>(Outdated<br>information)<br>지식을<br>매개변수화(parameterizing<br>knowledge)하는<br>데<br>효율성이<br>낮음<br>전문<br>분야에<br>대한<br>심층적<br>지식<br>부족<br>약한<br>추론<br>능력</p>\n<h1 id='20' style='font-size:14px'>실제<br>요구<br>사항</h1>\n<br><p id='21' data-category='list' style='font-size:18px'>도메인<br>별<br>정확한<br>답변<br>빈번한<br>데이터<br>업데이트<br>생성된<br>컨텐츠의<br>추적성<br>및<br>설명성<br>통제<br>가능한<br>비용<br>데이터의<br>개인정보<br>보호</p>\n<br><h1 id='22' style='font-size:18px'>언어모델이<br>참고할<br>수<br>있는<br>데이터를</h1>\n<br><p id='23' data-category='list' style='font-size:18px'>정확하고,<br>효율적으로</p>\n<br><h1 id='24' style='font-size:18px'>가져오는<br>방법!</h1>\n<header id='25' style='font-size:18px'>Intro</header>\n<br><h1 id='26' style='font-size:22px'>RAG</h1>\n<br><h1 id='27' style='font-size:16px'>Retrieval<br>Augmented<br>Generation</h1>\n<h1 id='28' style='font-size:20px'>RAG란</h1>\n<h1 id='29' style='font-size:20px'>외부<br>문서(지식<br>베이스<br>등)을<br>검색(Retrieve)한<br>후<br>해당<br>내용을<br>바탕으로<br>응답을<br>생성(Generate)하는<br>방식</h1>\n<p id='30' data-category='list' style='font-size:14px'>정보를<br>학습하지<br>않아도<br>되어<br>비용도<br>낮고<br>최신/신뢰<br>가능한<br>문서를<br>기반으로<br>답변해서<br>정확도도<br>높다!</p>\n<br><figure id='31' data-category='chart'><img data-coord=\"top-left:(1617,570); bottom-right:(2801,1180)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>Low</td><td>Low (Retrieval-Augmented Generation)</td><td>High (Retrieval-Augmented Generation)</td><td>High (Fing)</td><td>Low (Fin)</td><td>High (Fin)</td></tr></thead><tbody><tr><td>item_01</td><td>10</td><td>10</td><td>10</td><td>10</td><td>10</td><td>10</td></tr></tbody></table></figure>\n<h1 id='32' style='font-size:14px'>Architecture</h1>\n<header id='33' style='font-size:14px'>Architecture</header>\n<br><h1 id='34' style='font-size:18px'>Architecture<br>for<br>RAG</h1>\n<figure id='35'><img alt=\"\" data-coord=\"top-left:(491,531); bottom-right:(2542,1384)\" /></figure>\n<h1 id='36' style='font-size:18px'>Retriever</h1>\n<br><header id='37' style='font-size:14px'>Architecture</header>\n<figure id='38'><img alt=\"\" data-coord=\"top-left:(483,492); bottom-right:(2541,1404)\" /></figure>\n<header id='39' style='font-size:16px'>Architecture</header>\n<br><h1 id='40' style='font-size:20px'>Retriever</h1>\n<br><h1 id='41' style='font-size:14px'>Embedding<br>-<br>Sparse</h1>\n<h1 id='42' style='font-size:18px'>지식을<br>가져오기<br>위해서는<br>우선<br>키워드<br>기반<br>검색을<br>생각할<br>수<br>있어요</h1>\n<p id='43' data-category='list' style='font-size:18px'>사용자의<br>입력<br>텍스트를<br>기준으로<br>관련<br>키워드를<br>설정한<br>후<br>역색인<br>구조로<br>설계된<br>지식<br>베이스에서<br>문서를<br>가져오고<br>해당<br>문서에<br>대한<br>점수화를<br>통해서<br>선정된<br>문서를<br>가져오면<br>됩니다!</p>\n<h1 id='44' style='font-size:18px'>장점:</h1>\n<br><p id='45' data-category='list' style='font-size:18px'>속도가<br>빠름<br>구현이<br>간단하며<br>해석이<br>쉬움</p>\n<p id='46' data-category='paragraph' style='font-size:18px'>한계:</p>\n<br><p id='47' data-category='paragraph' style='font-size:18px'>의미<br>가반<br>유사도에는<br>약함</p>\n<br><figure id='48'><img alt=\"\" data-coord=\"top-left:(2178,610); bottom-right:(2543,1008)\" /></figure>\n<header id='49' style='font-size:16px'>Architecture</header>\n<br><h1 id='50' style='font-size:20px'>Retriever</h1>\n<br><h1 id='51' style='font-size:14px'>Embedding<br>-<br>Dense를<br>하기<br>전에...</h1>\n<h1 id='52' style='font-size:18px'>의미<br>기반<br>검색을<br>하려면<br>어떻게<br>할까요?</h1>\n<h1 id='53' style='font-size:18px'>그렇다면<br>기계도<br>문서의<br>의미를<br>이해할<br>수<br>있어야<br>하겠죠?<br>기계는<br>벡터로<br>“이<br>문서는<br>어떤<br>문서다~”라<br>말합니다.</h1>\n<h1 id='54' style='font-size:18px'>사용자의<br>요청을<br>벡터로<br>변환하고<br>나면<br>그<br>벡터와<br>유사한<br>문서<br>벡터들을<br>찾아서<br>해당<br>문서를<br>반환해주면<br>됩니다.</h1>\n<h1 id='55' style='font-size:18px'>그런데...</h1>\n<br><p id='56' data-category='list' style='font-size:18px'>“유사하다”는<br>어떻게<br>판단하나요?<br>이런<br>벡터는<br>어떻게<br>만들어지나요?</p>\n<header id='57' style='font-size:18px'>Architecture</header>\n<br><h1 id='58' style='font-size:20px'>Retriever</h1>\n<br><h1 id='59' style='font-size:16px'>Similarity</h1>\n<h1 id='60' style='font-size:14px'>두<br>벡터가<br>같음을<br>알<br>수<br>있는<br>방법으로<br>우선<br>벡터<br>간<br>거리를<br>생각해보면<br>돼요.<br>전형적인<br>L2<br>norm을<br>사용하면<br>되겠죠?</h1>\n<h1 id='61' style='font-size:14px'>그러나<br>언어를<br>벡터로<br>표현하려면,<br>낮은<br>차원으로는<br>어렵겠죠.<br>그래서<br>높은<br>차원을<br>가진<br>벡터를<br>기본적으로<br>생각할<br>수밖에<br>없어요.</h1>\n<h1 id='62' style='font-size:14px'>고차원<br>공간에서는<br>모든<br>벡터<br>간<br>거리가<br>비슷하게<br>수렴하는,<br>Distance<br>Concentration<br>문제가<br>생깁니다.<br>그렇다면<br>같은<br>것과<br>다른<br>것을<br>의미<br>있게<br>구분하기는<br>어려울<br>것<br>같아요.<br>또<br>L2<br>norm은<br>방향보다는<br>크기에<br>민감하기도<br>하고요.</h1>\n<p id='63' data-category='paragraph' style='font-size:14px'>그래서<br>Cosine<br>Similarity을<br>대안으로<br>사용합니다!<br>L2<br>norm에<br>비해안정적이며,<br>임베딩된<br>언어<br>벡터들의<br>의미적<br>유사성은<br>“방향”에<br>더<br>큰<br>영향을<br>받기<br>때문이죠.</p>\n<footer id='64' style='font-size:14px'>요즘은<br>inner<br>product로<br>유사도를<br>판단한다고<br>합니다!</footer>\n<header id='65' style='font-size:18px'>Architecture</header>\n<br><h1 id='66' style='font-size:20px'>Retriever</h1>\n<br><h1 id='67' style='font-size:16px'>Representation<br>of<br>Vector</h1>\n<h1 id='68' style='font-size:14px'>벡터<br>간<br>유사도를<br>통해서<br>의미<br>유사도를<br>확인하는<br>것까지는<br>이해했을<br>겁니다.<br>그러면<br>그<br>벡터는<br>어떻게<br>만들어지나요?</h1>\n<h1 id='69' style='font-size:14px'>를<br>알기<br>위해서</h1>\n<br><p id='70' data-category='list' style='font-size:14px'>Representation<br>Learning<br>Word2Vec<br>Contextual<br>Embedding<br>Sentence<br>Embedding<br>Constrastive<br>Learning</p>\n<h1 id='71' style='font-size:14px'>을<br>알아보도록<br>합시다!</h1>\n<header id='72' style='font-size:20px'>Architecture</header>\n<br><h1 id='73' style='font-size:22px'>Representation<br>Learning</h1>\n<h1 id='74' style='font-size:16px'>원래의<br>ML<br>테스크를<br>생각해볼까요?<br>“A는<br>B이다“를<br>바탕으로,<br>사람이<br>만든<br>피처와<br>레이블을<br>바탕으로<br>모델이<br>학습하는<br>구조였죠.<br>그러나</h1>\n<br><p id='75' data-category='list' style='font-size:14px'>라벨링을<br>위해서는<br>높은<br>비용이<br>들고<br>피처를<br>설계하기가<br>너무<br>어려웠어요.</p>\n<h1 id='76' style='font-size:16px'>따라서<br>입력된<br>데이터에<br>대해서<br>스스로<br>좋은<br>feature를<br>학습할<br>수<br>있으면<br>어떨까요?</h1>\n<br><p id='77' data-category='list' style='font-size:14px'>사람이<br>설계하지<br>않아도<br>중요한<br>정보를<br>자동으로<br>추출하여<br>더<br>잘<br>일반화된<br>모델을<br>만들<br>수<br>있겠죠.</p>\n<h1 id='78' style='font-size:16px'>어떻게<br>“좋은<br>표현”을<br>학습할까요?<br>답은<br>Self-Supervised<br>Learning!</h1>\n<br><p id='79' data-category='list' style='font-size:14px'>이미지를<br>조각으로<br>나눈<br>후,<br>다시<br>순서를<br>맞추게<br>한다거나<br>흑백으로<br>색깔을<br>두고<br>복원을<br>시키거나<br>일부러<br>노이즈를<br>추가하고<br>복원시키면</p>\n<br><h1 id='80' style='font-size:16px'>학습<br>과정에서<br>기계가<br>대상을<br>올바르게<br>이해할<br>수<br>있을<br>것<br>같아요.</h1>\n<p id='81' data-category='paragraph' style='font-size:18px'>이렇게<br>데이터를<br>스스로<br>기계가<br>이해할<br>수<br>있는<br>벡터로<br>변환하는<br>것을<br>Representation<br>Learning이라<br>합니다!</p>\n<header id='82' style='font-size:16px'>Architecture</header>\n<br><h1 id='83' style='font-size:20px'>Word2Vec</h1>\n<h1 id='84' style='font-size:14px'>이전<br>슬라이드에는<br>이미지에<br>대한<br>Representation<br>Learning을<br>보았어요.</h1>\n<h1 id='85' style='font-size:14px'>그렇다면<br>언어에<br>대한<br>표현은<br>어떻게<br>학습하나요?</h1>\n<h1 id='86' style='font-size:14px'>과제로<br>한<br>Word2Vec도<br>사실은<br>Representation<br>Learning입니다!<br>주변<br>단어들을<br>통해서<br>주어진<br>단어를<br>예측하는<br>CBOW,<br>주어진<br>단어를<br>바탕으로<br>주변<br>단어들을<br>예측하는<br>Skip-gram도<br>모두<br>문맥을<br>보면서<br>학습을<br>하고,<br>단어를<br>임베딩으로<br>변환시켜줍니다.</h1>\n<h1 id='87' style='font-size:14px'>하지만<br>Word2Vec는<br>단어마다<br>하나의<br>고정된<br>벡터만<br>제공합니다.<br>예를<br>들어서,<br>“I<br>record<br>a<br>record”에서,<br>두<br>record라는<br>단어는<br>분명히<br>다름에도,<br>같은<br>벡터로<br>표현된다는<br>문제가<br>있습니다.</h1>\n<p id='88' data-category='paragraph' style='font-size:14px'>그래서<br>우리는<br>이제<br>Contextual<br>Embedding이라는<br>개념으로<br>나아가게<br>됩니다.</p>\n<header id='89' style='font-size:16px'>Architecture</header>\n<br><h1 id='90' style='font-size:20px'>Contextual<br>Embedding</h1>\n<h1 id='91' style='font-size:16px'>우리가<br>원하는<br>것은<br>단어를<br>의미<br>있는<br>벡터로<br>바꾸는<br>것이에요.<br>그런데<br>문맥에<br>따라<br>단어의<br>의미는<br>달라지니,<br>벡터<br>또한<br>문맥에<br>따라<br>달라져야만<br>합니다!</h1>\n<h1 id='92' style='font-size:16px'>ELMo,<br>BERT,<br>GPT가<br>어떻게<br>학습되고,<br>문맥을<br>반영하는지<br>알아봅시다!</h1>\n<br><p id='93' data-category='list' style='font-size:14px'>ELMo:<br>LSTM<br>기반<br>Foward/Backward<br>예측<br>→<br>두<br>방향의<br>hidden<br>state<br>합쳐서<br>임베딩<br>생성<br>BERT:<br>Self-Attention<br>기반<br>MLM<br>학습<br>→<br>문장<br>내<br>모든<br>단어를<br>서로<br>Attention,<br>단어의<br>문맥<br>임베딩<br>생성<br>GPT:<br>Masked<br>self-Attention<br>기반<br>Auto-Regressive<br>학습<br>→<br>이전<br>단어를<br>바탕으로<br>다음<br>단어의<br>문맥<br>임베딩<br>생성</p>\n<h1 id='94' style='font-size:16px'>이렇게<br>문장을<br>스스로<br>예측하면서<br>학습하는<br>방식을<br>통해,<br>모델은<br>문맥에<br>따라<br>의미를<br>바꾸는<br>단어의<br>진짜<br>의미를<br>학습하게<br>됩니다!</h1>\n<p id='95' data-category='paragraph' style='font-size:18px'>그리고<br>그것이<br>우리가<br>말하는<br>Contextual<br>Embedding,<br>즉<br>문맥<br>기반<br>표현<br>학습입니다.</p>\n<header id='96' style='font-size:14px'>Architecture</header>\n<br><h1 id='97' style='font-size:18px'>Sentence<br>Embedding</h1>\n<h1 id='98' style='font-size:14px'>아직까지는<br>단어의<br>임베딩에<br>대해서만<br>다루었어요.<br>문장에<br>대한<br>임베딩은<br>어떻게<br>다룰<br>수<br>있을까요?</h1>\n<h1 id='99' style='font-size:14px'>같은<br>단어로<br>이루어진<br>문장이라도<br>순서나<br>구조에<br>따라<br>의미는<br>달라집니다.<br>그렇다면<br>문장<br>자체를<br>하나의<br>벡터로<br>표현하려면<br>어떤<br>방식이<br>필요할까요?</h1>\n<h1 id='100' style='font-size:14px'>옛날에는<br>단어마다<br>embedding을<br>생성해서,<br>pooling하는<br>방법을<br>썼다고<br>합니다.<br>현재는<br>문장<br>자체를<br>모델에<br>넣으면<br>그대로<br>문장<br>임베딩<br>벡터가<br>나오는<br>구조를<br>사용하고<br>있습니다.<br>대표적인<br>예시로는<br>OpenAI의<br>text-embedding-3가<br>있습니다.</h1>\n<p id='101' data-category='paragraph' style='font-size:14px'>문장을<br>결국<br>벡터로<br>표현하기<br>때문에,<br>표현<br>학습이<br>되는데...<br>어떻게<br>하면<br>더욱<br>잘<br>표현할<br>수<br>있을까요?<br>그리고<br>문장<br>간<br>유사도를<br>잘<br>반영할<br>수<br>있도록<br>학습하는<br>방법은<br>무엇일까요?</p>\n<p id='102' data-category='paragraph' style='font-size:14px'>이제<br>Constrastive<br>Learning으로<br>넘어가봅시다.</p>\n<header id='103' style='font-size:16px'>Architecture</header>\n<br><h1 id='104' style='font-size:20px'>Constrastive<br>Learning</h1>\n<br><h1 id='105' style='font-size:14px'>Anisotropic<br>→<br>Isotropic</h1>\n<br><h1 id='106' style='font-size:16px'>아직까지<br>설명한<br>Representation<br>Learning에는<br>살짝<br>문제가<br>있어요.</h1>\n<p id='107' data-category='list' style='font-size:16px'>문장<br>임베딩들이<br>embedding<br>space의<br>일부<br>방향에만<br>몰려<br>있어(anisotropy)<br>문장<br>간<br>의미<br>차이를<br>잘<br>반영하지<br>못하고<br>있어요.</p>\n<h1 id='108' style='font-size:16px'>따라서<br>의미가<br>비슷한<br>문장은<br>가깝게,<br>의미가<br>다른<br>문장은<br>멀게<br>만들면</h1>\n<br><p id='109' data-category='list' style='font-size:16px'>문장<br>임베딩들이<br>embedding<br>space에<br>고르게<br>퍼져<br>있고(isotropy)<br>문장<br>간<br>의미<br>차이를<br>잘<br>반영할<br>수<br>있는<br>embedding을<br>만들<br>수<br>있어요.</p>\n<h1 id='110' style='font-size:16px'>어떻게<br>학습할<br>수<br>있나요?</h1>\n<br><p id='111' data-category='paragraph' style='font-size:16px'>→<br>Loss<br>Term에<br>같은<br>것(positive<br>pair)과<br>다른<br>것(negative<br>pair)를<br>구분할<br>수<br>있도록<br>제약<br>조건을<br>추가해주면<br>되겠죠!</p>\n<header id='112' style='font-size:14px'>Architecture</header>\n<br><h1 id='113' style='font-size:18px'>TL;DR</h1>\n<h1 id='114' style='font-size:14px'>정리하면,</h1>\n<br><p id='115' data-category='list' style='font-size:14px'>기계는<br>문장의<br>의미를<br>벡터로<br>표현하는<br>법을<br>학습한다.<br>이<br>벡터는<br>문장<br>간<br>의미<br>유사도를<br>반영해야<br>하며,<br>이를<br>위해<br>유사한<br>문장은<br>가까이,<br>다른<br>문장은<br>멀게<br>만드는<br>방식으로<br>학습한다.<br>Contrastive<br>Loss는<br>이러한<br>유사도<br>기반<br>구조를<br>학습하는<br>핵심<br>도구다!</p>\n<p id='116' data-category='paragraph' style='font-size:14px'>이렇게<br>학습된<br>모델을<br>사용하면<br>제<br>요청사항을<br>벡터로<br>변환해서,<br>문서들의<br>“벡터”와<br>대조하며<br>높은<br>유사도를<br>가지는<br>데이터를<br>가져올<br>수<br>있겠네요!</p>\n<p id='117' data-category='paragraph' style='font-size:14px'>당연히<br>문서들은<br>제가<br>요청할<br>때마다<br>벡터화가<br>되어<br>있는<br>것이<br>아니라,<br>미리<br>변환되어서<br>어딘가에<br>저장된<br>상태겠죠?</p>\n<p id='118' data-category='paragraph' style='font-size:14px'>그러면<br>어떻게<br>저장이<br>되나요?<br>이제는<br>Vector<br>Database에<br>대해서<br>알아보는<br>시간을<br>가집시다.</p>\n<header id='119' style='font-size:14px'>Architecture</header>\n<br><h1 id='120' style='font-size:18px'>Vector<br>Database</h1>\n<h1 id='121' style='font-size:14px'>Vector<br>Database란</h1>\n<br><p id='122' data-category='list' style='font-size:14px'>문장,<br>문서,<br>이미지<br>등<br>의미를<br>담은<br>고차원<br>벡터들을<br>저장하고,<br>유사도<br>기반으로<br>빠르게<br>검색할<br>수<br>있도록<br>만들어진<br>특수한<br>데이터베이스입니다.</p>\n<br><h1 id='123' style='font-size:14px'>일반적인<br>데이터베이스랑은<br>확실히<br>다를<br>것<br>같아요.</h1>\n<h1 id='124' style='font-size:14px'>이번에는<br>Vector<br>Database의<br>핵심<br>기술</h1>\n<br><p id='125' data-category='list' style='font-size:14px'>HNSW<br>(Hierarchical<br>Navigate<br>Small<br>World)<br>PQ<br>(Product<br>Quantization)</p>\n<br><h1 id='126' style='font-size:14px'>에<br>대해서<br>알아보는<br>시간을<br>가집시다!</h1>\n<figure id='127'><img alt=\"\" data-coord=\"top-left:(215,1316); bottom-right:(469,1493)\" /></figure>\n<header id='128' style='font-size:18px'>Architecture</header>\n<br><h1 id='129' style='font-size:20px'>HNSW</h1>\n<br><h1 id='130' style='font-size:16px'>빠른<br>탐색을<br>위한<br>그래프<br>기반<br>인덱싱</h1>\n<h1 id='131' style='font-size:18px'>각<br>벡터를<br>node로<br>보고,<br>가까운<br>벡터끼리<br>연결(edge)합니다!</h1>\n<h1 id='132' style='font-size:18px'>그리고<br>몇몇<br>벡터는<br>하위<br>레벨에도<br>저장되며,<br>하위<br>레벨로<br>갈수록<br>더욱<br>dense하게<br>저장됩니다.</h1>\n<h1 id='133' style='font-size:18px'>이렇게<br>하면<br>탐색<br>과정에서,<br>1.가장<br>높은<br>레벨에서<br>임의의<br>노드<br>선택<br>2.query<br>벡터와<br>가장<br>가까운<br>이웃을<br>찾아<br>이동<br>3.더<br>이상<br>가까운<br>노드가<br>없으면<br>하위<br>레벨로<br>이동<br>4.최하위<br>레벨에서는<br>정밀<br>탐색<br>(priority<br>queue)<br>5.Top-k<br>가까운<br>벡터<br>변환</h1>\n<p id='134' data-category='paragraph' style='font-size:18px'>이로써<br>정확도를<br>유지하면서<br>비교<br>횟수는<br>O(logN)으로<br>만듭니다!</p>\n<br><figure id='135' data-category='chart'><img data-coord=\"top-left:(1879,409); bottom-right:(2861,1516)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>Layer=1</td><td>Layer=2</td><td>Layer=0</td><td>Layer=-hnSW/oales</td><td>Layer=0.com/faiss-1-hnSW/other</td></tr></thead><tbody><tr><td>item_01</td><td>10000Days</td><td>10000Days</td><td>10000Days</td><td>1Days</td><td>5000Days</td></tr></tbody></table></figure>\n<header id='136' style='font-size:16px'>Architecture</header>\n<br><h1 id='137' style='font-size:20px'>PQ</h1>\n<br><h1 id='138' style='font-size:14px'>메모리<br>사용량을<br>낮추자</h1>\n<figure id='139'><img alt=\"\" data-coord=\"top-left:(324,519); bottom-right:(2618,1335)\" /></figure>\n<h1 id='140' style='font-size:20px'>Embedding<br>Model</h1>\n<br><h1 id='141' style='font-size:16px'>“좋은”<br>임베딩<br>모델은<br>무엇인가!</h1>\n<br><h1 id='142' style='font-size:18px'>임베딩이<br>만들어지고<br>학습되는<br>방법도<br>배웠고,<br>벡터<br>데이터베이스에<br>대해서<br>간략히<br>들었고...</h1>\n<h1 id='143' style='font-size:18px'>그런데<br>그러면<br>어떤<br>임베딩<br>모델을<br>사용해야<br>하죠?<br>다시<br>말해서,<br>좋은<br>임베딩<br>모델은<br>무엇일까요?<br>그러한<br>“좋은<br>임베딩”모델의<br>평가<br>기준을<br>제공하는,<br>MTEB를<br>이번에<br>알아봅시다!</h1>\n<h1 id='144' style='font-size:18px'>MTEB(Massive<br>Text<br>Embedding<br>Benchmark)는<br>다양한<br>임베딩<br>작업에서,</h1>\n<br><p id='145' data-category='list' style='font-size:18px'>분류<br>(Classification)<br>군집화<br>(Clustering)<br>검색<br>(Retrieval)</p>\n<br><p id='146' data-category='paragraph' style='font-size:18px'>등의<br>테스크<br>성능을<br>종합적으로<br>판단할<br>수<br>있는<br>벤치마크입니다.</p>\n<p id='147' data-category='paragraph' style='font-size:18px'>RAG<br>서비스를<br>구축하기<br>전에,<br>사용하려는<br>임베딩<br>모델의<br>성능을<br>확인해보면<br>좋겠죠?</p>\n<br><h1 id='148' style='font-size:18px'>Architecture</h1>\n<figure id='149'><img alt=\"\" data-coord=\"top-left:(1764,345); bottom-right:(2912,944)\" /></figure>\n<br><h1 id='150' style='font-size:14px'>https://huggingface.co/spaces/mteb/leaderboard</h1>\n<h1 id='151' style='font-size:18px'>Generator</h1>\n<br><header id='152' style='font-size:14px'>Architecture</header>\n<figure id='153'><img alt=\"\" data-coord=\"top-left:(486,483); bottom-right:(2547,1388)\" /></figure>\n<header id='154' style='font-size:16px'>Architecture</header>\n<br><h1 id='155' style='font-size:20px'>Generator</h1>\n<br><h1 id='156' style='font-size:14px'>LLM<br>+<br>Context</h1>\n<br><h1 id='157' style='font-size:16px'>Retriever가<br>데이터를<br>가져왔어요.</h1>\n<h1 id='158' style='font-size:16px'>이제<br>LLM이<br>가지고<br>있는<br>것은</h1>\n<br><p id='159' data-category='list' style='font-size:16px'>사용자의<br>요청에<br>관련된<br>내용<br>기존에<br>가지고<br>있는<br>지식<br>Retriever가<br>가져온<br>데이터</p>\n<br><h1 id='160' style='font-size:16px'>로<br>답변을<br>생성하기에<br>충분한<br>것<br>같아요.</h1>\n<h1 id='161' style='font-size:16px'>이제<br>이<br>Generator은<br>사용자의<br>요청에<br>대해서<br>구체적이고<br>유의미한<br>답변을<br>제공합니다~!</h1>\n<br><figure id='162'><img alt=\"\" data-coord=\"top-left:(1809,588); bottom-right:(2615,996)\" /></figure>\n<h1 id='163' style='font-size:14px'>Techniques</h1>\n<header id='164' style='font-size:14px'>Techniques</header>\n<br><h1 id='165' style='font-size:18px'>그냥<br>RAG로는<br>부족해</h1>\n<h1 id='166' style='font-size:14px'>지금까지<br>배운<br>내용을<br>정리하면,<br><br>사용자의<br>질문을<br>임베딩으로<br>변환한<br>뒤,<br><br>벡터<br>데이터베이스에서<br>유사한<br>문서를<br>검색하고,<br><br>Generator가<br>이<br>문서들을<br>context로<br>활용해<br>답변을<br>생성합니다.</h1>\n<h1 id='167' style='font-size:14px'>하지만<br>이<br>과정이<br>항상<br>완벽한<br>것은<br>아닙니다.</h1>\n<br><p id='168' data-category='list' style='font-size:14px'>Retriever가<br>부정확한<br>문서를<br>가져올<br>수도<br>있고,<br>문서를<br>어떻게<br>나누느냐(chunking)에<br>따라<br>성능이<br>크게<br>달라지기도<br>하죠.</p>\n<p id='169' data-category='paragraph' style='font-size:14px'>오히려<br>잘못된<br>정보를<br>가져오면<br>LLM이<br>더<br>그럴듯한<br>‘틀린’<br>답을<br>생성하는<br>문제가<br>생길<br>수도<br>있습니다.<br>그래서<br>이번에는<br>이러한<br>문제를<br>극복하고<br>RAG의<br>성능을<br>높이기<br>위한<br>다양한<br>확장<br>방법들에<br>대해<br>알아보겠습니다.</p>\n<br><figure id='170'><img alt=\"\" data-coord=\"top-left:(2118,345); bottom-right:(2798,1103)\" /></figure>\n<header id='171' style='font-size:14px'>Techniques</header>\n<br><h1 id='172' style='font-size:18px'>Graph<br>RAG</h1>\n<h1 id='173' style='font-size:14px'>기존<br>RAG는<br>문서들을<br>단순한<br>텍스트로<br>취급하고,<br>벡터<br>유사도<br>기반으로만<br>관련<br>문서를<br>검색하죠.</h1>\n<h1 id='174' style='font-size:14px'>하지만<br>실제<br>세계의<br>문서들은<br>서로<br>관계를<br>가지기도<br>하죠.</h1>\n<h1 id='175' style='font-size:14px'>따라서<br>Graph<br>RAG는<br>문서들<br>간의<br>구조적<br>관계를<br>그래프<br>형태로<br>표현하고,<br>Node-Edge<br>구조를<br>활용해<br>더<br>의미<br>있는<br>컨텍스트를<br>구성합니다.</h1>\n<br><figure id='176'><img alt=\"\" data-coord=\"top-left:(1828,402); bottom-right:(2835,1280)\" /></figure>\n<br><p id='177' data-category='list' style='font-size:14px'>데이터<br>분할:<br>Corpus를<br>TextUnit<br>분석<br>단위로<br>분할<br>엔티티<br>및<br>관계<br>추출:<br>LLM을<br>활용하여<br>TextUnit에서<br>모든<br>엔티티,<br>관계,<br>주요<br>주장<br>추출<br>계층적<br>클러스터링:<br>엔티티<br>간의<br>커뮤니티(관련된<br>노드들의<br>그룹)<br>생성<br>및<br>커뮤니티<br>요약<br>생성</p>\n<header id='178' style='font-size:16px'>Techniques</header>\n<br><h1 id='179' style='font-size:20px'>Hybrid<br>RAG</h1>\n<br><h1 id='180' style='font-size:14px'>Vector<br>RAG<br>+<br>Graph<br>RAG</h1>\n<br><h1 id='181' style='font-size:16px'>Vector<br>RAG는<br>데이터를<br>하나의<br>청크로<br>인식할<br>뿐,<br>그<br>안의<br>데이터<br>구조<br>및<br>관계를<br>파악하는<br>것은<br>잘<br>하지<br>못합니다.</h1>\n<h1 id='182' style='font-size:16px'>Graph<br>RAG는<br>사용자의<br>쿼리에서<br>구축된<br>그래프의<br>엔티티를<br>직접<br>언급하지<br>않으면<br>잘<br>작동하지<br>않는다는<br>문제점이<br>있습니다.</h1>\n<h1 id='183' style='font-size:16px'>그래서<br>Hybrid<br>RAG는<br>Vector<br>RAG와<br>Graph<br>RAG를<br>둘<br>다<br>활용하여,<br>벡터<br>데이터베이스와<br>지식<br>그래프<br>모두에서<br>관련<br>정보를<br>가져와서<br>더<br>나은<br>답변을<br>가져올<br>수<br>있습니다!</h1>\n<header id='184' style='font-size:16px'>Techniques</header>\n<br><h1 id='185' style='font-size:20px'>Self-RAG</h1>\n<br><h1 id='186' style='font-size:14px'>RAG<br>with<br>Feedback</h1>\n<br><h1 id='187' style='font-size:16px'>RAG을<br>수행하다<br>보면<br>관련<br>없는<br>문서임에도<br>유사도<br>점수가<br>높게<br>나와<br>언어모델에<br>잘못된<br>컨텍스트를<br>줄<br>수<br>있죠.</h1>\n<h1 id='188' style='font-size:16px'>그렇다면<br>가져오는<br>문서를<br>평가하는<br>절차를<br>거치면<br>좋을<br>것<br>같아요.<br>구조는<br>다음과<br>같습니다:</h1>\n<br><p id='189' data-category='list' style='font-size:16px'>첫<br>쿼리로<br>문서<br>검색<br>문서를<br>읽고<br>평가<br>문서<br>품질이<br>낮다고<br>판단하는<br>경우<br>→<br>쿼리<br>수정<br>+<br>재검색<br>가져올<br>최소<br>문서<br>개수<br>만족<br>또는<br>최대<br>반복<br>횟수에<br>도달하면<br>응답<br>생성</p>\n<p id='190' data-category='paragraph' style='font-size:16px'>재시도를<br>통해서<br>보다<br>정확하고<br>관련도<br>높은<br>문서를<br>확보할<br>수<br>있으며<br>사람이<br>개입하지<br>않아<br>작업이<br>자동화되어<br>에이전트에도<br>적합하네요!</p>\n<br><figure id='191'><img alt=\"\" data-coord=\"top-left:(1504,626); bottom-right:(2864,1167)\" /></figure>\n<h1 id='192' style='font-size:20px'>Chunking</h1>\n<br><header id='193' style='font-size:16px'>Techniques</header>\n<h1 id='194' style='font-size:14px'>좋은<br>임베딩<br>생성을<br>위해</h1>\n<br><h1 id='195' style='font-size:16px'>RAG의<br>낮은<br>성능의<br>요인으로는</h1>\n<br><h1 id='196' style='font-size:16px'>1.임베딩<br>모델<br>성능의<br>한계<br>2.임베딩<br>대상<br>문서의<br>Chunk<br>품질<br>저하<br>가<br>있죠.<br>단순히<br>고정된<br>길이로<br>문서를<br>분할하는<br>것은<br>RAG<br>성능<br>저하로<br>이어질<br>것<br>같아요.</h1>\n<h1 id='197' style='font-size:16px'>올바른<br>Chunk를<br>위해서는<br>어떤<br>방법이<br>있을까요?</h1>\n<p id='198' data-category='list' style='font-size:16px'>Semantic<br>Chunking:<br>의미<br>단위(문단/문장/의미<br>단락)로<br>분할하여,<br>문맥을<br>자연스럽게<br>보존</p>\n<p id='199' data-category='list' style='font-size:16px'>Overlapping<br>Chunks:<br>Chunk<br>간<br>일부<br>토큰이나<br>문장을<br>중복<br>포함시켜<br><br><br><br><br><br><br>정보<br>단절<br>없이<br>이어질<br>수<br>있도록<br>처리</p>\n<p id='200' data-category='list' style='font-size:16px'>Graph-based<br>Chunking:<br>문서<br>내<br>엔티티<br>및<br>관계를<br>그래프로<br>구성하고,<br>관련<br>노드/서브그래프를<br>중심으로<br>의미<br>있는<br>chunk<br>생성</p>\n<header id='201' style='font-size:14px'>Techniques</header>\n<br><h1 id='202' style='font-size:18px'>Contextual<br>Retrieval</h1>\n<h1 id='203' style='font-size:14px'>문서를<br>단순히<br>청킹하는<br>것보다<br>청크<br>앞에<br>“Situated<br>Context”를<br>삽입하는<br>Chunk<br>Prepending을<br>하면<br>검색<br>정확도를<br>향상시킬<br>수<br>있습니다!</h1>\n<figure id='204'><img alt=\"\" data-coord=\"top-left:(150,657); bottom-right:(2014,1125)\" /></figure>\n<br><p id='205' data-category='list' style='font-size:14px'>원본<br>청크:<br>“회사의<br>수익은<br>전<br>분기<br>대비<br>3%<br>증가했습니다.”<br>컨텍스트<br>추가<br>후의<br>청크:<br>“이<br>정보는<br>ACME<br>기업의<br>2023년<br>2분기<br>SEC<br>보고서에서<br>발췌되었습니다.<br>이전<br>분<br>기의<br>수익은<br>3억<br>1400만<br>달러였습니다.<br>회사의<br>수익은<br>전<br>분기<br>대비<br>3%<br>증가했습니다.”</p>\n<h1 id='206' style='font-size:14px'>Techniques</h1>\n<br><h1 id='207' style='font-size:18px'>Contextual<br>Retrieval</h1>\n<h1 id='208' style='font-size:14px'>더<br>좋은<br>효율을<br>위해<br>다음과<br>같은<br>아키텍처를<br>포함합시다:</h1>\n<p id='209' data-category='list' style='font-size:14px'>Contextual<br>Hybrid<br>Search:<br>벡터<br>임베딩<br>기반<br>의미론적<br>검색과<br>TF-IDF<br>기반<br>키워드<br>검색을<br>결합</p>\n<p id='210' data-category='list' style='font-size:14px'>Reranking:<br>검색<br>결과<br>재정렬을<br>통해<br>가장<br>관련성이<br>높은<br>청크만<br>선별하여<br>모델에<br>전달</p>\n<figure id='211' data-category='chart'><img data-coord=\"top-left:(213,995); bottom-right:(1110,1529)\" /><figcaption><p>Chart Title: Complex Questions (Average of 25 results)</p><p>Y-Axis: Average Score</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>AnswerRelevancy</td><td>Faithfulness</td><td>ContextRecall</td><td>ContextPrecision</td></tr></thead><tbody><tr><td>item_01</td><td>0.82Decimal</td><td>0.88Decimal</td><td>0.72Decimal</td><td>0.68Decimal</td></tr></tbody></table></figure>\n<br><figure id='212' data-category='chart'><img data-coord=\"top-left:(1112,990); bottom-right:(2021,1535)\" /><figcaption><p>Chart Title: Simple Questions (Average of 25 results)</p><p>Y-Axis: Average Score</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>AnswerRelevancy</td><td>Faithfulness</td><td>ContextRecall</td><td>ContextPrecision</td></tr></thead><tbody><tr><td>item_01</td><td>0.81</td><td>0.97</td><td>0.78</td><td>0.81</td></tr></tbody></table></figure>\n<br><figure id='213'><img alt=\"\" data-coord=\"top-left:(1962,326); bottom-right:(2737,705)\" /></figure>\n<header id='214' style='font-size:14px'>Techniques</header>\n<br><h1 id='215' style='font-size:18px'>Contextual<br>Retrieval</h1>\n<figure id='216'><img alt=\"\" data-coord=\"top-left:(267,369); bottom-right:(2735,1523)\" /></figure>\n<h1 id='217' style='font-size:14px'>감사합니다!</h1>",
    "1eAJXeqXL3DpdGQngGn7RZft0AnZ8uMN-": "<h1 id='0' style='font-size:14px'>2025-2<br>YBIGTA</h1>\n<h1 id='1' style='font-size:20px'>DB</h1>\n<footer id='2' style='font-size:16px'>26기<br>DE<br>손재훈</footer>\n<h1 id='3' style='font-size:14px'>2025-2<br>YBIGTA</h1>\n<br><h1 id='4' style='font-size:20px'>목<br>차</h1>\n<p id='5' data-category='list' style='font-size:16px'>1. Intro<br>2. DB<br>기초<br>개념<br>3. RDBMS<br>4. SQL<br>5. 개발<br>환경<br>6. 추가<br>주제들</p>\n<h1 id='6' style='font-size:14px'>Intro</h1>\n<h1 id='7' style='font-size:20px'>새로운<br>기술<br>배우기...</h1>\n<h1 id='8' style='font-size:18px'>새로운<br>기술을<br>배울<br>때에는</h1>\n<p id='9' data-category='list' style='font-size:18px'>왜<br>이런<br>기술이<br>존재하는지<br>이<br>기술이<br>제공하는<br>것은<br>무엇인지<br>이<br>기술을<br>어떻게<br>쓰면<br>좋을<br>것인지</p>\n<h1 id='10' style='font-size:18px'>생각해보면서<br>배우는<br>것이<br>좋은<br>것<br>같아요.</h1>\n<p id='11' data-category='paragraph' style='font-size:18px'>따라서<br>이번에는<br>데이터베이스의<br>기본<br>개념을<br>공부하고,<br>실습을<br>통해<br>직접<br>확인하면서,<br>이러한<br>질문들에<br>답해보는<br>시간을<br>가져보려<br>합니다.</p>\n<br><h1 id='12' style='font-size:16px'>Intro</h1>\n<figure id='13'><img alt=\"\" data-coord=\"top-left:(1917,226); bottom-right:(2533,1254)\" /></figure>\n<figure id='14'><img alt=\"\" data-coord=\"top-left:(2147,1284); bottom-right:(2412,1396)\" /></figure>\n<br><figure id='15'><img alt=\"\" data-coord=\"top-left:(2463,1027); bottom-right:(2829,1450)\" /><br><figcaption id='16' style='font-size:14px'>그리고...엑셀에서<br>벗어나고요<br>ㅠ</figcaption></figure>\n\n<h1 id='17' style='font-size:14px'>DB<br>기초<br>개념</h1>\n<h1 id='18' style='font-size:22px'>데이터와<br>정보</h1>\n<br><header id='19' style='font-size:18px'>DB<br>기초<br>개념</header>\n<figure id='20'><img style='font-size:18px' alt=\"데이터 정보\" data-coord=\"top-left:(645,409); bottom-right:(2349,691)\" /></figure>\n<h1 id='21' style='font-size:20px'>현실<br>세계에서<br>수집된<br>값/사실</h1>\n<p id='22' data-category='list' style='font-size:16px'>정형<br>데이터:<br>미리<br>형식이<br>정해진<br>데이터<br>비정형<br>데이터:<br>형식이<br>정해지지<br>않은<br>데<br>이터<br>반정형<br>데이터:<br>구조는<br>있지만<br>완전히<br>형<br>식이<br>정해지지<br>않은<br>데이터</p>\n<br><h1 id='23' style='font-size:20px'>데이터를<br>의사결정에<br>유용하도록<br>처리하여<br>체계적으로<br>저장한<br>결과물</h1>\n<footer id='24' style='font-size:14px'>데이터베이스는<br>여기서<br>무엇을<br>하나요?</footer>\n<header id='25' style='font-size:16px'>DB<br>기초<br>개념</header>\n<br><h1 id='26' style='font-size:22px'>DB<br>&<br>DBMS</h1>\n<h1 id='27' style='font-size:20px'>데이터베이스(Database)는<br>현실<br>세계의<br>데이터를<br>구조화된<br>형태(테이블<br>등)로<br>저장한<br>데이터의<br>집합이며,</h1>\n<h1 id='28' style='font-size:20px'>이를<br>효율적이고<br>일관성<br>있게<br>다루기<br>위해<br>사용하는<br>소프트웨어<br>시스템이<br>DBMS(Database<br>Management<br>System)입니다.</h1>\n<h1 id='29' style='font-size:18px'>DBMS는<br>데이터를:</h1>\n<br><p id='30' data-category='list' style='font-size:18px'>-<br>저장하고<br>(Storage)<br>-<br>구조화하며<br>(Schema)<br>-<br>처리하고<br>(SQL)<br>-<br>무결성과<br>동시성을<br>보장하고<br>(Transaction<br>&<br>Lock)<br>-<br>보안<br>및<br>백업<br>기능을<br>통해<br>관리합니다.</p>\n<br><h1 id='31' style='font-size:16px'>DBMS</h1>\n<figure id='32'><img alt=\"\" data-coord=\"top-left:(2228,490); bottom-right:(2800,1229)\" /></figure>\n<br><p id='33' data-category='paragraph' style='font-size:16px'>DB</p>\n<p id='34' data-category='paragraph' style='font-size:14px'>데이터베이스는<br>데이터를<br>정보로<br>바꾸는<br>기반이자,<br><br>정보를<br>안전하게<br>저장하고<br>빠르게<br>꺼내주는<br>시스템입니다.</p>\n<header id='35' style='font-size:16px'>DB<br>기초<br>개념</header>\n<br><h1 id='36' style='font-size:20px'>DB의<br>분류:<br>작동<br>환경</h1>\n<figure id='37'><img alt=\"\" data-coord=\"top-left:(328,542); bottom-right:(620,749)\" /></figure>\n<br><figure id='38'><img alt=\"\" data-coord=\"top-left:(1025,471); bottom-right:(1696,1185)\" /></figure>\n<br><figure id='39'><img alt=\"\" data-coord=\"top-left:(2113,422); bottom-right:(2792,1178)\" /></figure>\n<p id='40' data-category='paragraph' style='font-size:14px'>프로그램에<br>내장된<br>데이터베이스</p>\n<br><p id='41' data-category='paragraph' style='font-size:14px'>하나의<br>중앙<br>서버가<br>데이터<br>저장/관리<br>역할을<br>하는<br>구조</p>\n<br><p id='42' data-category='paragraph' style='font-size:14px'>데이터를<br>여러<br>서버/노드에<br>나누어<br>저장<br>및<br>처리하는<br>구조</p>\n<p id='43' data-category='paragraph' style='font-size:14px'>LevelDB,<br>SQLite</p>\n<br><p id='44' data-category='paragraph' style='font-size:14px'>MySQL,<br>PostgreSQL,<br>Oracle</p>\n<br><p id='45' data-category='paragraph' style='font-size:14px'>Cassandra,<br>MongoDB<br>(Sharded),<br>Google<br>Spanner</p>\n<header id='46' style='font-size:18px'>DB<br>기초<br>개념</header>\n<br><h1 id='47' style='font-size:22px'>DB의<br>분류:<br>저장<br>형식</h1>\n<br><h1 id='48' style='font-size:20px'>Relational<br>Database</h1>\n<br><h1 id='49' style='font-size:18px'><student table></h1>\n<br><table id='50' style='font-size:14px'><thead></thead><tbody><tr><td rowspan=\"2\">Student_id</td><td rowspan=\"2\">name</td><td rowspan=\"2\">age</td><td rowspan=\"2\">major_id</td><td colspan=\"2\"><major table></td></tr><tr><td>major_id</td><td>name</td></tr><tr><td>2021122006</td><td>손응통</td><td>26</td><td>122</td><td>121</td><td>응용통계학과</td></tr><tr><td>2021121753</td><td>김경제</td><td>24</td><td>121</td><td>122</td><td>경제학과</td></tr><tr><td>2023123891</td><td>이경영</td><td>22</td><td>123</td><td>123</td><td>경영학과</td></tr></tbody></table>\n<br><h1 id='51' style='font-size:16px'>간단하게<br>보면<br>테이블<br>형식으로<br>데이터를<br>저장.<br>테이블끼리<br>연관될<br>수<br>있음.</h1>\n<br><figure id='52'><img alt=\"\" data-coord=\"top-left:(1915,1107); bottom-right:(2086,1275)\" /></figure>\n<br><figure id='53'><img alt=\"\" data-coord=\"top-left:(2110,1137); bottom-right:(2300,1274)\" /></figure>\n<br><figure id='54'><img alt=\"\" data-coord=\"top-left:(2339,1144); bottom-right:(2474,1264)\" /></figure>\n<br><figure id='55'><img alt=\"\" data-coord=\"top-left:(2515,1142); bottom-right:(2666,1271)\" /></figure>\n<br><figure id='56'><img alt=\"\" data-coord=\"top-left:(2702,1136); bottom-right:(2824,1269)\" /></figure>\n<br><p id='57' data-category='paragraph' style='font-size:16px'>고상하게<br>설명하면<br>entity<br>혹은<br>relation(테이블)은<br>attribute(열)을<br>지니고<br>각각의<br>row(행)은<br>실제<br>데이터를<br>표현함!<br>뒤에서<br>추가<br>설명<br>예정</p>\n<footer id='58' style='font-size:14px'>보통<br>RDBMS은<br>분산환경과는<br>잘<br>맞지<br>않음...ㅠㅠ</footer>\n<header id='59' style='font-size:14px'>DB<br>기초<br>개념</header>\n<br><h1 id='60' style='font-size:20px'>DB의<br>분류:<br>저장<br>형식</h1>\n<br><h1 id='61' style='font-size:16px'>NoSQL<br>Database</h1>\n<br><h1 id='62' style='font-size:14px'>Key-Value<br>DB</h1>\n<p id='63' data-category='list' style='font-size:14px'>가장<br>원초적인<br>DB<br>형태<br>단순<br>KEY<br>→<br>VALUE<br>형태<br>속도가<br>매우<br>빠름<br>주로<br>캐시,<br>세션,<br>임시<br>데이터<br>용도<br>ex)<br>Redis,<br>LevelDB,<br>DynamoDB<br>(Key-Value<br>모드)</p>\n<br><h1 id='64' style='font-size:14px'>Document<br>DB</h1>\n<figure id='65'><img alt=\"\" data-coord=\"top-left:(1029,974); bottom-right:(1194,1158)\" /></figure>\n<br><p id='66' data-category='list' style='font-size:14px'>JSON,<br>XML<br>형태<br>문서<br>전체를<br>하나의<br>단위로<br>저장<br>구조화된<br>문서를<br>저장하되,<br>스키마는<br>자유로움<br>문서<br>내부<br>필드로도<br>검색<br>가능<br>ex)<br>MongoDB,<br>CouchDB</p>\n<figure id='67'><img alt=\"\" data-coord=\"top-left:(1666,962); bottom-right:(1834,1143)\" /></figure>\n<br><figure id='68'><img alt=\"\" data-coord=\"top-left:(1898,989); bottom-right:(2146,1189)\" /></figure>\n<figure id='69'><img alt=\"\" data-coord=\"top-left:(2168,1413); bottom-right:(2682,1650)\" /></figure>\n<br><figure id='70'><img alt=\"\" data-coord=\"top-left:(1862,1392); bottom-right:(2088,1446)\" /></figure>\n<header id='71' style='font-size:14px'>DB<br>기초<br>개념</header>\n<br><h1 id='72' style='font-size:20px'>DB의<br>분류:<br>저장<br>형식</h1>\n<br><h1 id='73' style='font-size:16px'>NoSQL<br>DB<br>-<br>Search<br>Engine<br>Base<br>-<br>Vector<br>DB</h1>\n<h1 id='74' style='font-size:14px'>최근(사실<br>많이<br>지남)<br>주목받는<br>RAG에서<br>활용되는,<br>문서를<br>벡터<br>형태로<br>변환해<br>저장하는<br>데이터베이스입니다.</h1>\n<h1 id='75' style='font-size:14px'>다음<br>세션에<br>설명되겠지만,<br>RAG는<br>외부<br>문서에서<br>관련<br>정보를<br>검색한<br>후,<br>그<br>내용을<br>바탕으로<br>답변을<br>생성하는<br>기법이에요.</h1>\n<h1 id='76' style='font-size:14px'>문서들을<br>임베딩(벡터화)하여<br>저장해두고,<br>사용자의<br>질문<br>또한<br>벡터화한<br>후<br>사용자의<br>질문과<br>가장<br>유사한<br>벡터를<br>찾고,<br>그<br>벡터를<br>가진<br>문서를<br>반환해줍니다.</h1>\n<h1 id='77' style='font-size:14px'>ex)<br>Faiss,<br>Pinecone,<br>ChromaDB</h1>\n<header id='78' style='font-size:16px'>DB<br>기초<br>개념</header>\n<br><h1 id='79' style='font-size:20px'>DB의<br>분류:<br>저장<br>형식</h1>\n<br><h1 id='80' style='font-size:18px'>NoSQL<br>DB<br>-<br>Search<br>Engine<br>Base<br>-<br>Elastic<br>Search</h1>\n<h1 id='81' style='font-size:16px'>ElasticSearch는<br>문서를<br>JSON형식으로<br>저장하고,<br>이를<br>색인(index)<br>하는<br>구조를<br>가집니다.</h1>\n<h1 id='82' style='font-size:16px'>다른<br>DB들과<br>다르게,<br>저장과<br>동시에<br>검색을<br>위한<br>인덱싱이<br>자동으로<br>이루어지는<br>것이<br>핵심이에요.</h1>\n<figure id='83'><img style='font-size:16px' alt=\"Index ID\nField\" data-coord=\"top-left:(171,899); bottom-right:(1741,1439)\" /><br><figcaption id='84' style='font-size:14px'>이<br>문서를<br>저장하면<br>names와<br>tags<br>필드의<br>텍스트가<br>분석기를<br>통해<br>토큰화되고<br><br><br><br><br><br><br>→<br><br><br><br>각<br>토큰에<br>대해<br>어느<br>문서에<br>등장하는지<br>저장!</figcaption></figure>\n\n<br><figure id='85'><img alt=\"\" data-coord=\"top-left:(1916,842); bottom-right:(2785,1420)\" /></figure>\n<h1 id='86' style='font-size:14px'>RDBMS</h1>\n<header id='87' style='font-size:14px'>RDBMS</header>\n<br><h1 id='88' style='font-size:20px'>Relational<br>Database의<br>특징</h1>\n<br><h1 id='89' style='font-size:16px'>엄격한<br>관리!</h1>\n<h1 id='90' style='font-size:16px'>데이터<br>무결성(data<br>integrity):<br>데이터<br>값이<br>정확한<br>상태</h1>\n<br><p id='91' data-category='list' style='font-size:16px'>엔티티<br>무결성(Entity<br>Integrity):<br>null<br>값을<br>가지면<br>안된다!<br>도메인<br>무결성(Domain<br>Integrity):<br>속성과<br>관련된<br>제약<br>ex)<br>나이가<br>-20?!</p>\n<h1 id='92' style='font-size:16px'>데이터<br>정합성(Data<br>Consistency):<br>데이터들이<br>일치하는<br>상태.<br>이상현상이<br>발생하면<br>성립<br>안<br>함.</h1>\n<br><p id='93' data-category='list' style='font-size:16px'>학생<br>이름<br>관련<br>테이블에서<br>학과<br>번호가<br>122라고<br>했는데,<br>학과<br>번호<br>테이블에는<br>122가<br>없는<br>경우!<br>2021122006<br>학번을<br>가진<br>사람이<br>두<br>명!<br>이메일인데<br>전화번호가<br>입력되는<br>경우</p>\n<p id='94' data-category='paragraph' style='font-size:18px'>이런<br>엄격한<br>관리를<br>위해,<br>제약조건(Constraints)과<br>정규화(Normalization)을<br>적용합니다!<br>그리고<br>마지막으로...<br>트랜젝션(Transaction)!</p>\n<header id='95' style='font-size:16px'>RDBMS</header>\n<br><h1 id='96' style='font-size:20px'>용어정리부터<br>하자!</h1>\n<figure id='97' data-category='chart'><img data-coord=\"top-left:(345,342); bottom-right:(2290,980)\" /><figcaption><p>Chart Title: 얼 (COI)</p><p>X-Axis: 응물</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>PK</td><td>2021121753</td><td>FK</td></tr></thead><tbody><tr><td>item_01</td><td>2023123891년</td><td>202612년</td><td>22년</td></tr><tr><td>item_02</td><td>2023123891년</td><td>203112706년</td><td>202312년</td></tr><tr><td>item_03</td><td>202312년</td><td>202312년</td><td>2026년</td></tr><tr><td>item_04</td><td>2026년</td><td>2026년</td><td>2097년</td></tr><tr><td>item_05</td><td>2026년</td><td>2093년</td><td>2093년</td></tr><tr><td>item_06</td><td>2026년</td><td>2026년</td><td>2026년</td></tr><tr><td>item_07</td><td>2026년</td><td>2097년</td><td>2093년</td></tr><tr><td>item_08</td><td>2097년</td><td>2045년</td><td>2051년</td></tr></tbody></table></figure>\n<br><p id='98' data-category='paragraph' style='font-size:18px'>행<br>=<br>row<br>=<br>tuple<br>=<br>record:<br>각<br>데이터<br>항목<br>열<br>=<br>column<br>=<br>field<br>=<br>attribute:<br>속성을<br>나타냄.<br>각<br>열에는<br>하나의<br>타입만<br>삽입<br>가능<br>domain:<br>하나의<br>attribute에서<br>나올<br>수<br>있는<br>값들의<br>집합<br>ex)<br>age:<br>1<br>~<br>120<br>relation<br>=<br>table:<br>tuple/row/column<br>들의<br>집합<br>key:<br>행을<br>고유하게<br>식별하는<br>데<br>사용하는<br>값!</p>\n<br><p id='99' data-category='list' style='font-size:18px'>primary<br>key:<br>행들을<br>고유하게<br>식별할<br>수<br>있는<br>열들(super<br>key)<br>중<br>실제로<br>사용하는<br>하나<br>이상의<br>열<br>foreign<br>key:<br>다른<br>테이블의<br>primary<br>key를<br>참조하는<br>열</p>\n<header id='100' style='font-size:16px'>RDBMS</header>\n<br><h1 id='101' style='font-size:22px'>제약조건<br>(Constraints)</h1>\n<br><h1 id='102' style='font-size:18px'>무결성을<br>지키자</h1>\n<table id='103' style='font-size:14px'><thead><tr><td>제약 조건</td><td>설명</td><td>예시</td></tr></thead><tbody><tr><td>NOT NULL</td><td>필수 값 (NULL 금지)</td><td>학생 이름, 학번 등 필수 정보</td></tr><tr><td>UNIQUE</td><td>중복 금지</td><td>학번, 이메일 등</td></tr><tr><td>PRIMARY KEY</td><td>유일성과 NOT NULL을 동시에 보장</td><td>학번(PK), 주민번호 등</td></tr><tr><td>FOREIGN KEY</td><td>다른 테이블의 값을 참조</td><td>학생.학과번호 → 학과.학과번호</td></tr><tr><td>CHECK</td><td>도메인 무결성 (값의 범위 등 제약)</td><td>나이 ≥ 0, 급여 ≤ 10억 등</td></tr><tr><td>DEFAULT</td><td>값이 없을 경우 기본값 지정</td><td>가입일 → 오늘 날짜</td></tr></tbody></table>\n<p id='104' data-category='paragraph' style='font-size:20px'>데이터베이스<br>설계<br>시,<br>오류가<br>있는<br>데이터가<br>입력되지<br>않도록<br>다양한<br>제약<br>조건을<br>설정합니다!</p>\n<header id='105' style='font-size:14px'>RDBMS</header>\n<br><h1 id='106' style='font-size:20px'>정규화<br>(Normalization)</h1>\n<br><h1 id='107' style='font-size:16px'>를<br>하기전에<br>이상현상부터<br>보고<br>가자</h1>\n<h1 id='108' style='font-size:16px'>데이터<br>정합성(Data<br>Consistency):<br>데이터들이<br>일치하는<br>상태.<br>이상현상(anomaly)이<br>발생하면<br>성립하지<br>않음.</h1>\n<h1 id='109' style='font-size:16px'>이상현상은</h1>\n<br><p id='110' data-category='list' style='font-size:16px'>삽입이상<br>삭제이상<br>갱신이상</p>\n<h1 id='111' style='font-size:16px'>이<br>있으니<br>알아보는<br>시간을<br>가집시다!</h1>\n<br><figure id='112'><img alt=\"\" data-coord=\"top-left:(1534,585); bottom-right:(2829,1314)\" /></figure>\n<p id='113' data-category='paragraph' style='font-size:18px'>앞선<br>DE<br>선배님들께<br>감사드립니다!</p>\n<header id='114' style='font-size:14px'>RDBMS</header>\n<br><h1 id='115' style='font-size:20px'>정규화<br>(Normalization)</h1>\n<br><h1 id='116' style='font-size:16px'>를<br>하기전에<br>이상현상부터<br>보고<br>가자</h1>\n<header id='117' style='font-size:14px'>RDBMS</header>\n<br><h1 id='118' style='font-size:20px'>정규화<br>(Normalization)</h1>\n<br><h1 id='119' style='font-size:16px'>를<br>하기전에<br>이상현상부터<br>보고<br>가자</h1>\n<header id='120' style='font-size:14px'>RDBMS</header>\n<br><h1 id='121' style='font-size:20px'>정규화<br>(Normalization)</h1>\n<br><h1 id='122' style='font-size:16px'>를<br>하기전에<br>이상현상부터<br>보고<br>가자</h1>\n<header id='123' style='font-size:14px'>RDBMS</header>\n<br><h1 id='124' style='font-size:20px'>정규화<br>(Normalization)</h1>\n<br><h1 id='125' style='font-size:16px'>란<br>무엇인가</h1>\n<h1 id='126' style='font-size:16px'>속성<br>간의<br>종속성으로<br>인한<br>이상현상이<br>발생하는<br>관계를<br>분해하여<br>재디자인함으로써<br>이상현상을<br>없애는<br>과정<br>데이터<br>중복<br>방지<br>및<br>무결성<br>충족을<br>위해<br>데이터베이스를<br>설계하는<br>방법</h1>\n<h1 id='127' style='font-size:16px'>정규화<br>3원칙</h1>\n<br><p id='128' data-category='list' style='font-size:16px'>1. <br>정보의<br>무손실:<br>분해된<br>관계가<br>표현하는<br>정보는<br>분해되기<br>전의<br>정보를<br>모두<br>포함해야<br>한다.<br>2. <br>최소<br>데이터<br>중복:<br>이상현상을<br>제거하며<br>데이터<br>중복을<br>최소화한다.<br>3. <br>분리의<br>원칙:<br>하나의<br>독립된<br>관계성은<br>하나의<br>독립된<br>릴레이션(Table)으로<br>분리해서<br>표현한다.</p>\n<h1 id='129' style='font-size:16px'>정규화의<br>장점</h1>\n<br><p id='130' data-category='list' style='font-size:16px'>각종<br>이상현상을<br>해결할<br>수<br>있다.<br>새로운<br>속성의<br>추가로<br>인해<br>DB<br>구조를<br>확장하는<br>경우,<br>구조<br>변경을<br>최소화할<br>수<br>있다.<br>정규화<br>된<br>릴레이션<br>간의<br>관계가<br>현실<br>세계에서의<br>개념들<br>간의<br>관계를<br>잘<br>보여준다.</p>\n<header id='131' style='font-size:16px'>RDBMS</header>\n<br><h1 id='132' style='font-size:20px'>정규화<br>(Normalization)</h1>\n<br><h1 id='133' style='font-size:14px'>를<br>쉽게<br>다시<br>이야기하면...</h1>\n<br><h1 id='134' style='font-size:18px'>정규화는<br>결국<br>이상현상(삽입이상,<br>삭제이상,<br>갱신이상)을<br>없애기<br>위해서<br>테이블을<br>쪼개는<br>것</h1>\n<h1 id='135' style='font-size:18px'>정규화는<br>1단계~6단계까지<br>있지만<br>보통<br>3단계까지<br>진행</h1>\n<p id='136' data-category='list' style='font-size:18px'>삭제,<br>갱신,<br>삽입<br>없이<br>단순히<br>데이터<br>분석만<br>진행하는<br>경우<br>불필요할<br>수<br>있음<br>정규화의<br>목적과<br>개념을<br>이해하고<br>trade-off를<br>생각해보며<br>활용해보자!<br>데이터<br>정합성이<br>확보되지만<br>검색<br>성능이<br>떨어짐</p>\n<br><h1 id='137' style='font-size:18px'>그래서<br>반정규화(De-Normalization)을<br>하는<br>경우가<br>있다.</h1>\n<figure id='138'><img alt=\"\" data-coord=\"top-left:(1286,1152); bottom-right:(2853,1581)\" /></figure>\n<h1 id='139' style='font-size:20px'>정규화<br>(Normalization)</h1>\n<br><header id='140' style='font-size:16px'>RDBMS</header>\n<h1 id='141' style='font-size:14px'>단계<br>알아보기</h1>\n<br><figure id='142'><img style='font-size:16px' alt=\"한 셀에는 하나의 값만! 기본키의 일부에만 종속된 속성을 제거 키가 아닌 속성에 종속된 속성을 제거\n모든 결정자가 후보키어야 한다! 하나의 키가 여러 독립적인 값을 가지면 분리 분해된 테이블을 조인할 때 의미가 유지되어야 함\n????????????????\" data-coord=\"top-left:(614,343); bottom-right:(2680,1656)\" /></figure>\n<header id='143' style='font-size:16px'>RDBMS</header>\n<br><h1 id='144' style='font-size:20px'>정규화<br>(Normalization)</h1>\n<br><h1 id='145' style='font-size:14px'>1단계<br>알아보기</h1>\n<figure id='146'><img alt=\"\" data-coord=\"top-left:(1433,954); bottom-right:(1467,1064)\" /></figure>\n<figure id='147'><img alt=\"\" data-coord=\"top-left:(2392,1072); bottom-right:(2858,1594)\" /></figure>\n<header id='148' style='font-size:16px'>RDBMS</header>\n<br><h1 id='149' style='font-size:20px'>정규화<br>(Normalization)</h1>\n<br><h1 id='150' style='font-size:14px'>2단계<br>알아보기</h1>\n<figure id='151'><img alt=\"\" data-coord=\"top-left:(720,501); bottom-right:(2101,937)\" /></figure>\n<p id='152' data-category='list'></p>\n<br><p id='153' data-category='list'></p>\n<br><figure id='154'><img alt=\"\" data-coord=\"top-left:(2336,1075); bottom-right:(2860,1594)\" /></figure>\n<header id='155' style='font-size:18px'>RDBMS</header>\n<br><h1 id='156' style='font-size:20px'>정규화<br>(Normalization)</h1>\n<br><h1 id='157' style='font-size:16px'>2단계<br>알아보기</h1>\n<p id='158' data-category='list' style='font-size:14px'>교수는<br>학번에<br>의존하지<br>않는다<br>학과(이때는<br>수업)은<br>학번에<br>의존하지<br>않는다</p>\n<figure id='159'><img alt=\"\" data-coord=\"top-left:(2392,1072); bottom-right:(2858,1595)\" /></figure>\n<header id='160' style='font-size:18px'>RDBMS</header>\n<br><h1 id='161' style='font-size:20px'>정규화<br>(Normalization)</h1>\n<br><h1 id='162' style='font-size:16px'>3단계<br>알아보기</h1>\n<figure id='163'><img alt=\"\" data-coord=\"top-left:(178,704); bottom-right:(1691,1128)\" /></figure>\n<p id='164' data-category='paragraph' style='font-size:14px'>이행적<br>함수<br>종속<br>제거:<br>키가<br>아닌<br>속성에<br>종속된<br>속성을<br>제거</p>\n<br><figure id='165'><img alt=\"\" data-coord=\"top-left:(2338,1074); bottom-right:(2861,1594)\" /></figure>\n<header id='166' style='font-size:18px'>RDBMS</header>\n<br><h1 id='167' style='font-size:20px'>정규화<br>(Normalization)</h1>\n<br><h1 id='168' style='font-size:16px'>3단계<br>알아보기</h1>\n<br><h1 id='169' style='font-size:14px'>교수가<br>결정되면,<br>학과는<br>결정된다!<br>그러면<br>학과는<br>교수에게도<br>종속적이고<br>과목번호에도<br>종속적이니,<br>이를<br>이행적<br>함수<br>종속성이라<br>하는<br>것~<br>그러면<br>또<br>릴레이션을<br>분리하는<br>것이<br>좋겠다!</h1>\n<figure id='170'><img alt=\"\" data-coord=\"top-left:(2393,1072); bottom-right:(2858,1596)\" /></figure>\n<header id='171' style='font-size:18px'>RDBMS</header>\n<br><h1 id='172' style='font-size:20px'>정규화<br>(Normalization)</h1>\n<br><h1 id='173' style='font-size:16px'>나머지<br>단계들...</h1>\n<table id='174' style='font-size:14px'><thead></thead><tbody><tr><td>정규형</td><td>핵심 개념</td><td>문제 상황 예시</td><td>해결 방법</td></tr><tr><td>BCNF(Boyce-Codd Normal Form)</td><td>모든 결정자는 후보키여야 한다</td><td>학과이름 → 학과장, 교수이름 → 연구실 → 후보키가 아닌 속성이 결정자가 됨</td><td>후보키가 아닌 결정자가 다른 속 성을 결정할 경우, 테이블을 분해</td></tr><tr><td>4NF(Fourth Normal Form)</td><td>다치 종속(Multivalued Dependency) 제거</td><td>학생 → 전화번호학생 → 동아리 → 전화번호와 동아리가 서로 독 립적</td><td>다치 종속된 속성들을 분리하여 각각의 테이블로 나눔</td></tr><tr><td>5NF(Fifth Normal Form)</td><td>조인 종속(Join Dependency) 제거</td><td>제품 → 부품, 공급업체, 지역 간 의 3방 관계→ 일부 조인만으로는 전체 관계 표현 불가</td><td>관계를 완전하게 분해하고, 자연 조인으로 정확히 복원 가능한 구 조로 나눔</td></tr></tbody></table>\n<br><p id='175' data-category='paragraph' style='font-size:16px'>여기까지...</p>\n<br><figure id='176'><img alt=\"\" data-coord=\"top-left:(2339,1074); bottom-right:(2860,1593)\" /></figure>\n<header id='177' style='font-size:18px'>RDBMS</header>\n<br><h1 id='178' style='font-size:22px'>트랜잭션<br>(Transaction)</h1>\n<br><h1 id='179' style='font-size:16px'>한<br>번에<br>안정적으로<br>처리되어야<br>할<br>작업의<br>단위</h1>\n<h1 id='180' style='font-size:20px'>트랜잭션이란~</h1>\n<br><p id='181' data-category='list' style='font-size:16px'>하나이<br>논리적<br>작업<br>단위로<br>묶인<br>SQL<br>연산들의<br>집합<br>db<br>client들은<br>기본적으로<br>auto<br>commit이<br>활성화되어<br>있어,<br>sql<br>한<br>줄이<br>트랜잭션이<br>된다!<br>따라서<br>모두<br>성공하거나,<br>모두<br>실패해야<br>합니다</p>\n<h1 id='182' style='font-size:16px'>예를<br>들어서,<br>은행<br>이체의<br>경우<br>A<br>계좌<br>만<br>원<br>출금과<br>B<br>계좌<br>만<br>원<br>입금은,<br>둘<br>다<br>기록이<br>되거나<br>둘<br>다<br>실패해야<br>합니다!</h1>\n<table id='183' style='font-size:14px'><thead></thead><tbody><tr><td>A (Atomicity, 원자성)</td><td>전부 실행하거나, 전부 안 하거나 (All or Nothing)</td></tr><tr><td>C (Consistency, 일관성)</td><td>무결성 제약조건을 항상 만족하는 상태 유지, 트랜잭션 이 전과 이후, 데이터베이스의 상태는 이전과 유효</td></tr><tr><td>I (Isolation, 고립성)</td><td>각 트랜잭션이 동시에 실행돼도 서로 간섭 없이 독립적으 로 처리</td></tr><tr><td>D (Duration, 지속성)</td><td>트랜잭션 완료 후, 결과는 영구 반영됨 (전원 꺼져도 보존)</td></tr></tbody></table>\n<h1 id='184' style='font-size:14px'>SQL</h1>\n<header id='185' style='font-size:14px'>SQL</header>\n<br><h1 id='186' style='font-size:20px'>SQL<br>(Structured<br>Query<br>Language)</h1>\n<h1 id='187' style='font-size:16px'>관계형<br>데이터베이스에<br>대한<br>질의<br>언어!</h1>\n<h1 id='188' style='font-size:16px'>단순<br>질의(검색,<br>갱신)<br>이외의<br>데이터<br>구조(테이블)<br>정의/갱신,<br><br><br><br><br><br><br><br><br><br><br><br><br>유저<br>권한<br>설정<br><br><br><br><br><br><br><br><br><br><br><br><br>트랜잭션<br>관리<br><br><br><br><br><br><br><br><br><br><br><br><br>등을<br>수행한다.</h1>\n<h1 id='189' style='font-size:16px'>특징:</h1>\n<br><p id='190' data-category='list' style='font-size:16px'>비절차적<br>선언적</p>\n<br><figure id='191'><img alt=\"\" data-coord=\"top-left:(1312,463); bottom-right:(2754,1128)\" /></figure>\n<header id='192' style='font-size:14px'>SQL</header>\n<br><h1 id='193' style='font-size:18px'>SQL<br>(Structured<br>Query<br>Language)</h1>\n<figure id='194'><img alt=\"\" data-coord=\"top-left:(202,379); bottom-right:(1652,1535)\" /></figure>\n<br><figure id='195'><img alt=\"\" data-coord=\"top-left:(1538,625); bottom-right:(2615,1519)\" /></figure>\n<header id='196' style='font-size:18px'>SQL</header>\n<br><h1 id='197' style='font-size:20px'>SQL<br>(Structured<br>Query<br>Language)</h1>\n<br><h1 id='198' style='font-size:16px'>비순차성과<br>선언성</h1>\n<h1 id='199' style='font-size:18px'>사용자가<br>SQL<br>쿼리를<br>입력하면,<br>Optimizer는<br>입력된<br>쿼리에<br>따라<br>실행<br>계획을<br>세운다!</h1>\n<br><figure id='200'><img alt=\"\" data-coord=\"top-left:(188,524); bottom-right:(1144,1493)\" /></figure>\n<br><h1 id='201' style='font-size:18px'>하지만<br>SQL<br>쿼리만<br>봐서는<br>어떤<br>순서로<br>실행될지<br>감이<br>잡히지<br>않고...<br>각<br>DBMS마다<br>실행계획을<br>세우는<br>방식도<br>다르고...</h1>\n<h1 id='202' style='font-size:18px'>따라서<br>Optimizer을<br>생각해가며<br>쿼리를<br>최적화하는<br>것은<br>전문가의<br>영역!</h1>\n<table id='203' style='font-size:14px'><thead></thead><tbody><tr><td>구성 요소</td><td>설명</td></tr><tr><td>파서(Parser)</td><td>SQL 문장을 구문 분석 → 내부 트리 구조(AST) 생성</td></tr><tr><td>리라이팅 엔진(Rewriter)</td><td>논리적으로 같은 쿼리를 더 단순한 형태로 변환 (예: 서브 쿼리 → 조인)</td></tr><tr><td>계획 탐색기(Plan Enumerator)</td><td>가능한 모든 실행 계획 후보를 생성</td></tr><tr><td>비용 평가기(Cost Estimator)</td><td>각 실행 계획의 예상 비용을 계산</td></tr><tr><td>최적화기(Plan Selector)</td><td>가장 낮은 비용의 실행 계획 선택</td></tr></tbody></table>\n<header id='204' style='font-size:14px'>SQL</header>\n<br><h1 id='205' style='font-size:18px'>실습!</h1>\n<figure id='206'><img alt=\"\" data-coord=\"top-left:(444,475); bottom-right:(2565,1470)\" /></figure>\n<h1 id='207' style='font-size:18px'>SQL</h1>\n<br><p id='208' data-category='paragraph' style='font-size:20px'>DDL:<br>데이터베이스<br>구조(스키마)를<br>정의/변경하는<br>명령어<br>#1.<br>create:<br>table<br>생성</p>\n<p id='209' data-category='paragraph' style='font-size:14px'>https://www.sqlshack.com/learn-sql-sql-data-types/</p>\n<p id='210' data-category='paragraph' style='font-size:16px'>데이터<br>타입<br>이해하기</p>\n<h1 id='211' style='font-size:14px'>SQL</h1>\n<br><h1 id='212' style='font-size:20px'>DDL:<br>데이터베이스<br>구조(스키마)를<br>정의/변경하는<br>명령어</h1>\n<br><h1 id='213' style='font-size:18px'>#2.<br>alter(구조<br>변경),<br>drop(삭제),<br>truncate(내용만<br>삭제)</h1>\n<br><h1 id='214' style='font-size:16px'>ALTER<br>statement:<br>TABLE<br>구조를<br>바꿈</h1>\n<br><table id='215' style='font-size:16px'><thead></thead><tbody><tr><td></td></tr><tr><td>DESCRIBE<br>statement:<br>TABLE<br>의<br>정보를<br>보여줌(alias로<br>DESC<br>사용가능)<br></td></tr><tr><td></td></tr><tr><td>TRUNCATE<br>statement:<br>TABLE<br>구조의<br>모든<br>row를<br>삭제.<br>table자체는<br>삭제<br>하지<br>않음<br></td></tr><tr><td>DROP<br>statement:<br>TABLE<br>자체를<br>삭제(IF<br>EXIST<br>는<br>옵션)</td></tr></tbody></table>\n<h1 id='216' style='font-size:16px'>SQL</h1>\n<br><h1 id='217' style='font-size:20px'>DML:<br>데이터<br>조작어<br>#1.<br>INSERT</h1>\n<table id='218' style='font-size:14px'><thead></thead><tbody><tr><td>INTO<br>부분에서<br>일부<br>컬럼<br>생략<br>시<br>default<br>값이</td><td rowspan=\"3\">있으면<br>default,<br>없으면<br>null 정의된<br>순서대로<br>빠짐없이<br>명시하기</td></tr><tr><td>INTO<br>부분에서<br>모든<br>컬럼을<br>생략하면<br>table에서</td></tr><tr><td>한<br>번에<br>여러<br>값도<br>넣을<br>수<br>있다!</td></tr></tbody></table>\n<header id='219' style='font-size:14px'>SQL</header>\n<br><h1 id='220' style='font-size:18px'>DML:<br>데이터<br>조작어<br>#2.<br>DELETE,<br>UPDATE</h1>\n<figure id='221'><img alt=\"\" data-coord=\"top-left:(1141,761); bottom-right:(2524,1519)\" /></figure>\n<header id='222' style='font-size:16px'>SQL</header>\n<br><h1 id='223' style='font-size:20px'>DQL:<br>데이터<br>조회<br>#1.<br>SELECT</h1>\n<figure id='224'><img alt=\"\" data-coord=\"top-left:(280,468); bottom-right:(872,1491)\" /></figure>\n<br><h1 id='225' style='font-size:14px'>테이블에서<br>검색을<br>하는<br>구문입니다.<br>가장<br>복잡해질<br>수<br>있는<br>구문이기에<br>어렵죠<br>ㅠㅠ</h1>\n<h1 id='226' style='font-size:14px'>사용되는<br>예시들을<br>많이<br>보는<br>것과<br>스펙을<br>정확히<br>익히는<br>것이<br>중요한<br>것<br>같습니다!</h1>\n<h1 id='227' style='font-size:14px'>가장<br>중요한<br>것은<br>Select의<br>결과도<br>table(derived<br>table)<br>라는<br>개념을<br>잡으면<br>복잡한<br>쿼리를<br>작성하는<br>방법들<br>(sub-query,<br>common<br>table<br>expression[cte])<br>를<br>쉽게<br>받아들일<br>수<br>있습니다!</h1>\n<header id='228' style='font-size:18px'>SQL</header>\n<br><h1 id='229' style='font-size:22px'>DQL:<br>데이터<br>조회</h1>\n<br><h1 id='230' style='font-size:20px'>#1.<br>SELECT:<br>기초적인<br>임플란트<br>1</h1>\n<table id='231' style='font-size:16px'><thead></thead><tbody><tr><td></td><td colspan=\"3\">student<br>테이블의<br>모든<br>열과<br>모든<br>행을<br>조회!</td></tr><tr><td></td><td colspan=\"3\">student<br>테이블의<br>이름과<br>나이만<br>조회</td></tr><tr><td>나이가<br>21세<br>이상인<br>학생만<br>조회</td><td rowspan=\"7\" colspan=\"3\"></td></tr><tr><td rowspan=\"6\"></td></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr><td rowspan=\"2\"></td><td rowspan=\"5\">나이<br>순으로<br>내림차순<br>정렬 별칭(alias)<br>사용 상위<br>일부만<br>조회</td><td rowspan=\"3\"></td><td rowspan=\"3\"></td></tr><tr></tr><tr><td></td></tr><tr><td rowspan=\"2\"></td><td rowspan=\"2\"><table><thead></thead><tbody><tr><td>구문</td><td>설명</td></tr><tr><td>SELECT</td><td>조회할 컬럼 지정</td></tr><tr><td>FROM</td><td>조회 대상 테이블 지 정</td></tr><tr><td>WHERE</td><td>조건 지정 (필터링)</td></tr><tr><td>ORDER BY</td><td>정렬</td></tr><tr><td>LIMIT</td><td>개수 제한</td></tr><tr><td>AS</td><td>컬럼 이름 별칭 지정</td></tr></tbody></table></td><td rowspan=\"2\"></td></tr><tr></tr></tbody></table>\n<header id='232' style='font-size:16px'>SQL</header>\n<br><h1 id='233' style='font-size:20px'>DQL:<br>데이터<br>조회</h1>\n<br><h1 id='234' style='font-size:18px'>#1.<br>SELECT:<br>기초적인<br>임플란트<br>2</h1>\n<h1 id='235' style='font-size:14px'>학생<br>수가<br>3명<br>이상인<br>전공의<br>학생<br>수와<br>평균<br>나<br>이<br>집계</h1>\n<h1 id='236' style='font-size:14px'>서브쿼리<br>만들기<br>전체<br>학생<br>평균보다<br>나이가<br>많은<br>학생들만<br>조회</h1>\n<figure id='237'><img alt=\"\" data-coord=\"top-left:(173,1134); bottom-right:(1479,1617)\" /><br><figcaption id='238' style='font-size:14px'>CASE<br>WHEN<br>조건<br>분기</figcaption></figure>\n\n<header id='239' style='font-size:14px'>SQL</header>\n<br><h1 id='240' style='font-size:18px'>DQL:<br>데이터<br>조회<br>#2.<br>JOIN/UNION<br>테이블<br>합치기</h1>\n<figure id='241'><img alt=\"\" data-coord=\"top-left:(213,942); bottom-right:(1204,1375)\" /></figure>\n<header id='242' style='font-size:14px'>SQL</header>\n<br><h1 id='243' style='font-size:18px'>DQL:<br>데이터<br>조회</h1>\n<figure id='244'><img alt=\"\" data-coord=\"top-left:(830,316); bottom-right:(1404,730)\" /></figure>\n<figure id='245'><img alt=\"\" data-coord=\"top-left:(833,1001); bottom-right:(1071,1337)\" /></figure>\n<br><figure id='246'><img alt=\"\" data-coord=\"top-left:(328,949); bottom-right:(492,1516)\" /></figure>\n<br><figure id='247'><img alt=\"\" data-coord=\"top-left:(1593,977); bottom-right:(1832,1327)\" /></figure>\n<br><figure id='248'><img alt=\"\" data-coord=\"top-left:(2196,968); bottom-right:(2428,1315)\" /></figure>\n<header id='249' style='font-size:14px'>SQL</header>\n<br><h1 id='250' style='font-size:18px'>DQL:<br>데이터<br>조회</h1>\n<figure id='251'><img alt=\"\" data-coord=\"top-left:(275,749); bottom-right:(593,1454)\" /></figure>\n<br><figure id='252'><img alt=\"\" data-coord=\"top-left:(910,751); bottom-right:(1088,1283)\" /></figure>\n<br><figure id='253'><img alt=\"\" data-coord=\"top-left:(1424,754); bottom-right:(1582,1456)\" /></figure>\n<br><figure id='254'><img alt=\"\" data-coord=\"top-left:(2039,749); bottom-right:(2373,1274)\" /></figure>\n<h1 id='255' style='font-size:14px'>개발<br>환경</h1>\n<header id='256' style='font-size:18px'>개발<br>환경</header>\n<br><h1 id='257' style='font-size:22px'>Docker<br>&<br>DB</h1>\n<br><h1 id='258' style='font-size:16px'>Docker의<br>효능<br>어쩌구...</h1>\n<h1 id='259' style='font-size:20px'>로컬에서<br>DB<br>직접<br>설치해서<br>쓰면<br>여러<br>번<br>삭제/재설치를<br>해야<br>하고,<br>버전<br>등<br>의존성<br>문제도<br>많이<br>일어나죠.</h1>\n<h1 id='260' style='font-size:20px'>개발<br>중<br>데이터도<br>자주<br>초기화되고<br>스키마도<br>이랬다저랬다...</h1>\n<h1 id='261' style='font-size:20px'>이럴<br>때에는<br>Docker로<br>DB를<br>띄워서<br>처리하는<br>것이<br>좋습니다!</h1>\n<p id='262' data-category='list' style='font-size:20px'>DB<br>직접<br>설치<br>없이<br>docker<br>run<br>한<br>줄<br>DB를<br>여러<br>개<br>두어<br>버전이<br>충돌할<br>때는<br>컨테이너를<br>여러<br>개<br>두어<br>컨테이너마다<br>다른<br>버전<br>독립적으로<br>실행<br>가능<br>컨테이너<br>삭제/재생성으로<br>쉽게<br>초기화</p>\n<br><figure id='263'><img alt=\"\" data-coord=\"top-left:(1862,302); bottom-right:(2833,855)\" /></figure>\n<br><h1 id='264' style='font-size:14px'>https://www.youtube.com/watch?v=e0koWWAmXSk</h1>\n<p id='265' data-category='paragraph' style='font-size:14px'>docker<br>run<br>--name<br>my-mysql<br>-e<br>MYSQL_ROOT_PASSWORD=1234<br>-p<br>3306:3306<br>-d<br>mysql:8.0<br>딸깍딸깍<br>캐뤼~</p>\n<h1 id='266' style='font-size:16px'>개발<br>환경</h1>\n<br><h1 id='267' style='font-size:20px'>Docker<br>Compose</h1>\n<br><h1 id='268' style='font-size:14px'>그런데<br>서비스<br>많아지면?</h1>\n<h1 id='269' style='font-size:18px'>프론트<br>+<br>API<br>서버<br>+<br>DB<br>등<br>여러<br>컨테이너가<br>필요하게<br>되면,<br>컨테이너마다<br>실행<br>명령도<br>복잡하고,<br>네트워크<br>연결도<br>번거로워집니다.</h1>\n<h1 id='270' style='font-size:18px'>그러니<br>여러<br>컨테이너를<br>하나의<br>YAML<br>파일로<br>정의해서<br>docker-compose<br>up<br>한<br>번에<br>또<br>실행<br>가능!</h1>\n<br><figure id='271'><img alt=\"\" data-coord=\"top-left:(1884,274); bottom-right:(2807,1537)\" /></figure>\n<h1 id='272' style='font-size:16px'>개발<br>환경</h1>\n<br><h1 id='273' style='font-size:20px'>Docker<br>Compose</h1>\n<br><h1 id='274' style='font-size:14px'>HealthCheck</h1>\n<h1 id='275' style='font-size:18px'>DB<br>서버<br>컨테이너가<br>아직<br>부팅<br>중인데,<br>백앤드<br>서버가<br>DB<br>연결을<br>시도하면?</h1>\n<h1 id='276' style='font-size:18px'>연결할<br>수<br>없다는<br>문제가<br>뜨겠죠...<br>Healthcheck<br>없이<br>depends_on:<br>db만<br>하는<br>경우<br>문제가<br>발생!<br>depends_on:<br>db는<br>\"실행<br>순서\"만<br>보장하지<br>\"DB가<br>준비됐는지\"는<br>확인하지<br>않습니다.</h1>\n<p id='277' data-category='paragraph' style='font-size:18px'>backend<br>서비스에서<br>depends_on과<br>condition:<br>service_healthy를<br>함께<br>사용하면<br>DB가<br>완전히<br>준비된<br>뒤에만<br>백엔드가<br>시작되도록<br>보장할<br>수<br>있습니다.</p>\n<header id='278' style='font-size:16px'>개발<br>환경</header>\n<br><h1 id='279' style='font-size:20px'>Docker<br>Compose</h1>\n<br><h1 id='280' style='font-size:14px'>Bridge</h1>\n<h1 id='281' style='font-size:18px'>오른쪽과<br>같은<br>Docker<br>Compose<br>네트워크<br>구성에서는<br>프론트앤드에서<br>직접<br>DB를<br>공격하는<br>것은<br>불가능합니다.</h1>\n<h1 id='282' style='font-size:18px'>왜냐하면<br>bridge로<br>DB가<br>백앤드와<br>내부<br>통신만<br>가능하도록<br>구성했기<br>때문이죠.</h1>\n<h1 id='283' style='font-size:18px'>같은<br>Docker<br>네트워크<br>내<br>다른<br>컨테이너에서<br>db:3306으로<br>접근은<br>가능하지만,<br>호스트(Ec2)에서의<br>3306포트는<br>열리지<br>않았기<br>때문에<br>외부에서<br>직접<br>접속할<br>수<br>없습니다.</h1>\n<p id='284' data-category='paragraph' style='font-size:18px'>그러나...<br>로그인<br>창<br>같이<br>프론트앤드에서<br>백앤드가<br>열려있는<br>곳에서<br>접근할<br>수<br>있다는<br>것이<br>문제!</p>\n<h1 id='285' style='font-size:20px'>Docker<br>Compose</h1>\n<br><h1 id='286' style='font-size:14px'>백앤드에서<br>들어올<br>공격<br>막기</h1>\n<h1 id='287' style='font-size:18px'>간단한<br>몇<br>가지<br>방법만<br>소개하고<br>넘어가겠습니다!</h1>\n<h1 id='288' style='font-size:18px'>입력값<br>검증:</h1>\n<br><h1 id='289' style='font-size:18px'>프론트에서<br>받은<br>입력값을<br>엄격히<br>필터링(정규표현식)</h1>\n<br><p id='290' data-category='list' style='font-size:18px'>Rate<br>Limit을<br>통한<br>요청<br>수<br>차단<br>Prepared<br>Statements:</p>\n<br><h1 id='291' style='font-size:18px'>SQL<br>쿼리<br>직접<br>입력이<br>아닌<br>패러미터<br>바인딩</h1>\n<br><p id='292' data-category='paragraph' style='font-size:18px'>WAF</p>\n<br><h1 id='293' style='font-size:18px'>인젝션<br>패턴<br>감지<br>시<br>자동<br>차단</h1>\n<br><h1 id='294' style='font-size:18px'>백앤드<br>권한<br>설정</h1>\n<br><p id='295' data-category='paragraph' style='font-size:18px'>읽기<br>전용!</p>\n<br><header id='296' style='font-size:16px'>개발<br>환경</header>\n<figure id='297'><img alt=\"\" data-coord=\"top-left:(1705,469); bottom-right:(2915,1364)\" /></figure>\n<h1 id='298' style='font-size:18px'>개발<br>환경</h1>\n<br><h1 id='299' style='font-size:22px'>Docker<br>Compose</h1>\n<br><h1 id='300' style='font-size:16px'>현관문<br>열고<br>들어왔어도<br>DB는<br>지키고<br>싶어</h1>\n<h1 id='301' style='font-size:20px'>인터넷은<br>무법지대에요.<br>저는<br>한두번<br>털려본게<br>아닙니다<br>ㅠㅠ</h1>\n<h1 id='302' style='font-size:20px'>제<br>Ec2가<br>털려버려서<br>DB가<br>날라가게<br>생겼어요.<br>단순히<br>네트워크<br>브릿지로<br>설정한<br>것으로는<br>역부족이죠.</h1>\n<h1 id='303' style='font-size:20px'>그럴<br>때를<br>대비해서<br>프라이빗<br>서브넷<br>+<br>SG<br>제한<br>+<br>인증이<br>있습니다!</h1>\n<br><p id='304' data-category='list' style='font-size:20px'>프라이빗<br>서브넷:<br>외부<br>인터넷에서<br>직접<br>접근할<br>수<br>없는<br>내부<br>전용<br>네트워크입니다.<br>침투자가<br>Ec2를<br>털어도<br>DB<br>직접<br>접근이<br>불가능하죠.<br>보안<br>그룹(SG)<br>제한:<br>특정<br>인스턴스나<br>포트만<br>접근<br>허용하는<br>방화벽<br>역할을<br>합니다.<br>DB는<br>백앤드에서<br>오는<br>연결만<br>받아들이죠.<br>DB<br>인증:<br>사용자<br>계정,<br>비밀번호,<br>IP<br>제한<br>등으로<br>접근을<br>통제합니다.</p>\n<br><figure id='305'><img alt=\"\" data-coord=\"top-left:(1879,239); bottom-right:(2834,946)\" /></figure>\n<figure id='306'><img alt=\"\" data-coord=\"top-left:(2188,1108); bottom-right:(2925,1534)\" /></figure>\n<br><p id='307' data-category='paragraph' style='font-size:14px'>https://www.youtube.com/watch?v=LbGS7s67Rh0</p>\n<header id='308' style='font-size:16px'>개발<br>환경</header>\n<br><h1 id='309' style='font-size:20px'>개발<br>시나리오</h1>\n<br><h1 id='310' style='font-size:14px'>초기<br>개발은<br>어떻게<br>할까</h1>\n<h1 id='311' style='font-size:18px'>이전에<br>DB를<br>배우고<br>나서<br>프로젝트에<br>활용해보면서...</h1>\n<h1 id='312' style='font-size:18px'>아<br>나는<br>PostgreSQL로<br>DB를<br>다<br>짜두어야지!<br>하고<br>막상<br>스키마를<br>짜려는데<br>데이터는<br>자꾸<br>바뀌고,<br>관계<br>정규화<br>이해하느라<br>머리는<br>복잡해지고,<br>팀원들은<br>RDB<br>사용하는<br>것에<br>어려움을<br>느끼고...</h1>\n<p id='313' data-category='paragraph' style='font-size:18px'>그러다보니<br>다시<br>친숙한<br>csv,<br>json으로<br>돌아가는<br>현실...<br>Github에<br>무한대로<br>올라가는<br>csv<br>파일들과<br>pull할<br>때는<br>이제<br>5분씩<br>걸리고...</p>\n<h1 id='314' style='font-size:18px'>따라서<br>간단한<br>MongoDB로<br>시작하는<br>것을<br>추천합니다!</h1>\n<br><p id='315' data-category='list' style='font-size:18px'>개발<br>속도<br>빠르다!<br>때려박아도<br>상관<br>없다!</p>\n<h1 id='316' style='font-size:14px'>추가<br>주제들</h1>\n<header id='317' style='font-size:16px'>추가<br>주제들</header>\n<br><h1 id='318' style='font-size:20px'>CDN</h1>\n<br><h1 id='319' style='font-size:14px'>Content<br>Delivery<br>Network</h1>\n<h1 id='320' style='font-size:18px'>사용자에게<br>어떻게<br>하면<br>더<br>빠른<br>서비스를<br>제공할<br>수<br>있을까요?</h1>\n<h1 id='321' style='font-size:18px'>특히<br>인스타그램같이<br>전<br>세계의<br>사용자들이<br>이용하는<br>경우에,<br>로딩이<br>지연되어<br>사용자<br>경험이<br>하락되는<br>일은<br>없어야<br>하겠죠?</h1>\n<h1 id='322' style='font-size:18px'>그래서<br>특정<br>컨텐츠를<br>이용하고자<br>할<br>때,<br>가장<br>가까운<br>서버에서<br>컨텐츠를<br>가져올<br>수<br>있도록<br>합니다.<br>특정<br>지역의<br>사용자들이<br>주로<br>보는<br>컨텐츠를<br>미리<br>CDN<br>서버에<br>로드해둔<br>뒤,<br>그<br>지역의<br>사용자들이<br>해당<br>컨텐츠를<br>빠르게<br>이용할<br>수<br>있도록<br>할<br>수<br>있겠죠?</h1>\n<br><figure id='323'><img alt=\"\" data-coord=\"top-left:(1697,406); bottom-right:(2838,1001)\" /></figure>\n<p id='324' data-category='paragraph' style='font-size:18px'>이를<br>이용해서,<br>다음<br>컨텐츠의<br>같은<br>경우에는<br>사용자의<br>로컬<br>캐시에<br>preload시킨<br>뒤,<br>사용자가<br>이용하려고<br>할<br>때<br>초반<br>몇<br>초는<br>로컬에서<br>로드시키고,<br>이후<br>서버에서<br>로드를<br>시켜<br>지연성을<br>방지합니다.</p>\n<header id='325' style='font-size:16px'>추가<br>주제들</header>\n<br><h1 id='326' style='font-size:20px'>Redis</h1>\n<br><h1 id='327' style='font-size:14px'>Remote<br>Dictionary<br>Server</h1>\n<h1 id='328' style='font-size:18px'>사용자에게<br>빠른<br>서비스를<br>주고<br>싶어요.<br>자주<br>쓰는<br>데이터의<br>경우에는,<br>DB에<br>매번<br>쿼리를<br>작성하는<br>경우<br>DB<br>서버도<br>부담일<br>것이고,<br>응답<br>시간도<br>느릴<br>것<br>같아요.</h1>\n<h1 id='329' style='font-size:18px'>따라서<br>인메모리<br>기반의<br>초고속<br>데이터<br>저장소인,<br>Redis가<br>필요하게<br>됩니다!</h1>\n<p id='330' data-category='list' style='font-size:18px'>RAM에<br>저장되기<br>때문에<br>디스크<br>기반<br>DB보다<br>빠름<br>채팅<br>서비스,<br>실시간<br>랭킹,<br>알림<br>등에<br>활용<br>가능!</p>\n<br><figure id='331'><img alt=\"\" data-coord=\"top-left:(1942,475); bottom-right:(2776,1243)\" /></figure>\n<header id='332' style='font-size:18px'>추가<br>주제들</header>\n<br><h1 id='333' style='font-size:22px'>분산<br>데이터<br>스토리지<br>시스템</h1>\n<br><h1 id='334' style='font-size:16px'>feat:<br>Dynamo</h1>\n<h1 id='335' style='font-size:20px'>서비스가<br>항상,<br>그리고<br>빠르게<br>동작해야<br>한다면<br>어떻게<br>해야<br>하나요?</h1>\n<h1 id='336' style='font-size:20px'>그렇다면<br>RDBMS가<br>가진<br>정합성을<br>일부<br>포기하고,<br>가용성을<br>우선으로<br>다루어야<br>하며<br>복잡한<br>SQL<br>쿼리보다는<br>단순한<br>Key-Value<br>저장/조회<br>중심(NoSQL)이<br>더욱<br>좋을<br>것<br>같아요.</h1>\n<h1 id='337' style='font-size:20px'>대규모<br>분산<br>시스템에서는<br>장애가<br>일어나는<br>것은<br>상수.<br>따라서<br>이를<br>핸들링할<br>방법도<br>필요할<br>것<br>같아요.</h1>\n<p id='338' data-category='paragraph' style='font-size:20px'>어떻게<br>대규모<br>분산<br>데이터<br>스토리지<br>시스템을<br>구현하는지<br>알고<br>싶으면,<br>Dynamo:<br>Amazon’s<br>Highly<br>Available<br>Key-value<br>Store<br>논문을<br>추천합니다!</p>\n<figure id='339'><img alt=\"\" data-coord=\"top-left:(2054,1321); bottom-right:(2289,1582)\" /></figure>\n<br><p id='340' data-category='paragraph' style='font-size:14px'>https://manfromearth1.tistory.com/23</p>\n<h1 id='341' style='font-size:14px'>감사합니다!</h1>",
    "1GIW_G6ZKCeaNXP2Bpa_hWvPYB0bdKrK2": "<h1 id='0' style='font-size:22px'>DB 실습</h1>\n<h1 id='1' style='font-size:18px'>0. Docker Desktop 앱 실행하기</h1>\n<br><p id='2' data-category='paragraph' style='font-size:16px'>https://www.notion.so/yonseibigdata/DB2428360423c98015b33cc1cf7de8b9e7<br>여기로 접근하셔도 됩니다~!</p>\n<p id='3' data-category='paragraph' style='font-size:20px'>1. MySQL Docker Image Pull & 접속하기!</p>\n<p id='4' data-category='paragraph' style='font-size:14px'>docker run --name my-mysql -e MYSQL_ROOT_PASSWORD1234 -p 33063306 -d<br>mysql:8.0</p>\n<p id='5' data-category='paragraph' style='font-size:14px'># MySQL 접속하기! password: 1234<br>docker exec -it my-mysql mysql -u root -p</p>\n<h1 id='6' style='font-size:16px'>이렇게 접속되면 성공!</h1>\n<h1 id='7' style='font-size:18px'>2. 하나씩 실행해봅시다</h1>\n<h1 id='8' style='font-size:18px'>데이터베이스 만들기</h1>\n<p id='9' data-category='paragraph' style='font-size:14px'>-- 1<br>CREATE DATABASE IF NOT EXISTS sql_practice;</p>\n<p id='10' data-category='paragraph' style='font-size:14px'>-- 2<br>SHOW DATABASES;</p>\n<p id='11' data-category='paragraph' style='font-size:16px'>/*<br>이런 식으로 뜹니다!</p>\n<br><p id='12' data-category='paragraph' style='font-size:14px'>+--------------------+</p>\n<footer id='13' style='font-size:14px'>DB 실습</footer>\n<br><footer id='14' style='font-size:14px'>1</footer>\n<h1 id='15' style='font-size:16px'>| Database</h1>\n<br><p id='16' data-category='paragraph' style='font-size:16px'>|</p>\n<br><h1 id='17' style='font-size:16px'>+--------------------+</h1>\n<br><p id='18' data-category='paragraph' style='font-size:16px'>| information_schema |<br>| mysql |<br>| performance_schema |<br>| sql_practice |  만든 데이터베이스<br>| sys |<br>+--------------------+</p>\n<br><h1 id='19' style='font-size:16px'>*/</h1>\n<p id='20' data-category='paragraph' style='font-size:16px'>-- 3<br>USE sql_practice; -- \"이 데이터베이스를 쓸게요\" -> 아래 명령어들 쓰려면 database 지정 필<br>요</p>\n<h1 id='21' style='font-size:20px'>Table 만들어주기</h1>\n<h1 id='22' style='font-size:16px'>-- 4</h1>\n<br><h1 id='23' style='font-size:16px'>CREATE TABLE IF NOT EXISTS student (</h1>\n<br><p id='24' data-category='paragraph' style='font-size:16px'>student_id VARCHAR10 PRIMARY KEY,</p>\n<br><p id='25' data-category='paragraph' style='font-size:16px'>name VARCHAR20 NOT NULL,<br>age INT CHECK (age  0,<br>major_id INT,<br>admission_dt DATE DEFAULT CURRENT_DATE,<br>FOREIGN KEY (major_id) REFERENCES major(major_id)<br>);</p>\n<p id='26' data-category='list' style='font-size:16px'>-- 이렇게 하면 오류가 생긴다~ major 테이블과<br>-- major_id 컬럼이 정의되지 않았기 때문<br>-- ERROR 1824 HY000 Failed to open the referenced table 'major'</p>\n<p id='27' data-category='paragraph' style='font-size:16px'>-- 5<br>CREATE TABLE IF NOT EXISTS major (</p>\n<br><p id='28' data-category='paragraph' style='font-size:16px'>major_id INT PRIMARY KEY,<br>major_name VARCHAR20 NOT NULL<br>);</p>\n<p id='29' data-category='paragraph' style='font-size:16px'>-- 6<br>CREATE TABLE IF NOT EXISTS student (</p>\n<br><p id='30' data-category='paragraph' style='font-size:16px'>student_id VARCHAR10 PRIMARY KEY,</p>\n<br><p id='31' data-category='paragraph' style='font-size:16px'>name VARCHAR20 NOT NULL,<br>age INT CHECK (age  0,<br>major_id INT,</p>\n<footer id='32' style='font-size:14px'>DB 실습</footer>\n<br><footer id='33' style='font-size:14px'>2</footer>\n<p id='34' data-category='paragraph' style='font-size:16px'>admission_dt DATE DEFAULT CURRENT_DATE,<br>FOREIGN KEY (major_id) REFERENCES major(major_id)<br>);</p>\n<h1 id='35' style='font-size:20px'>DDL</h1>\n<p id='36' data-category='paragraph' style='font-size:16px'>-- 7<br>DESCRIBE student;</p>\n<p id='37' data-category='paragraph' style='font-size:16px'>-- 8 Column name 바꾸기<br>ALTER TABLE student RENAME COLUMN name TO student_name;<br>-- 9 Default 값 바꾸기<br>ALTER TABLE student ALTER COLUMN admission_dt SET DEFAULT '20250701';</p>\n<p id='38' data-category='paragraph' style='font-size:16px'>-- 10 테이블 DROP<br>DROP TABLE major; -- 왜 안될까요?</p>\n<h1 id='39' style='font-size:20px'>DML - INSERT</h1>\n<p id='40' data-category='paragraph' style='font-size:16px'>-- 11<br>INSERT INTO major (major_id, major_name)<br>VALUES<br>121, \"Economics\"),<br>122, \"Applied Statistics\"),<br>123, \"Business\"),<br>1001, \"Engineering\"),<br>1002, \"Industrial Design\"),<br>1003, \"Visual Design\");</p>\n<h1 id='41' style='font-size:16px'>-- 12</h1>\n<br><p id='42' data-category='paragraph' style='font-size:16px'>INSERT INTO student (student_id, student_name, age, major_id)</p>\n<br><p id='43' data-category='paragraph' style='font-size:16px'>VALUES</p>\n<br><p id='44' data-category='paragraph' style='font-size:16px'>(\"2021122006\", \"A\", 26, 122,<br>(\"2021123999\", \"B\", 24, 123,<br>(\"2025121986\", \"C\", 19, 121,<br>(\"2023122123\", \"D\", 22, 122,<br>(\"2024122124\", \"E\", 21, 122,<br>(\"2024122125\", \"F\", 20, 122,<br>(\"2023122126\", \"G\", 22, 122;</p>\n<footer id='45' style='font-size:14px'>DB 실습</footer>\n<br><footer id='46' style='font-size:14px'>3</footer>\n<p id='47' data-category='paragraph' style='font-size:16px'>-- 13<br>INSERT INTO student<br>VALUES \"2023122099\", \"H\", 28, 1001, \"20250731\");</p>\n<h1 id='48' style='font-size:20px'>DML-DELETE, UPDATE</h1>\n<p id='49' data-category='paragraph' style='font-size:16px'>-- 14<br>DELETE FROM student WHERE student_id = \"2021122006\";</p>\n<p id='50' data-category='paragraph' style='font-size:16px'>-- 15<br>UPDATE student SET major_id  1003 WHERE student_id = \"2023122126\";</p>\n<h1 id='51' style='font-size:20px'>DQL-SELECT (1)</h1>\n<p id='52' data-category='paragraph' style='font-size:16px'>-- 16<br>SELECT * FROM student; -- student 테이블의 모든 열과 행을 조회!</p>\n<p id='53' data-category='paragraph' style='font-size:16px'>-- (17)<br>SELECT major_id FROM major; -- major 테이블의 id만 조회</p>\n<p id='54' data-category='paragraph' style='font-size:16px'>-- (18)<br>SELECT * FROM student WHERE age  22;  22세 이상 학생만 조회</p>\n<p id='55' data-category='paragraph' style='font-size:16px'>-- (19)<br>SELECT * FROM student WHERE age  22 ORDER BY age DESC;</p>\n<p id='56' data-category='paragraph' style='font-size:16px'>-- 20<br>SELECT student_name as n, age as a FROM student; -- alias</p>\n<p id='57' data-category='paragraph' style='font-size:16px'>-- 21 나이 정렬 후 내림차순으로 3명 조회<br>SELECT * FROM student<br>ORDER BY age DESC<br>LIMIT 3;</p>\n<h1 id='58' style='font-size:20px'>DQL-SELECT (2)</h1>\n<p id='59' data-category='paragraph' style='font-size:16px'>-- 22<br>SELECT major_id, COUNT* AS student_count, AVG(age) AS avg_age<br>FROM student<br>GROUP BY major_id</p>\n<footer id='60' style='font-size:14px'>DB 실습</footer>\n<br><footer id='61' style='font-size:14px'>4</footer>\n<h1 id='62' style='font-size:16px'>HAVING COUNT*  3;</h1>\n<p id='63' data-category='paragraph' style='font-size:16px'>-- 23<br>SELECT student_id, student_name, age<br>FROM student<br>WHERE age > (<br>SELECT AVG(age) FROM student<br>);</p>\n<p id='64' data-category='paragraph' style='font-size:16px'>-- 24<br>SELECT student_name,<br>age,<br>CASE<br>WHEN age  20 THEN 'young'<br>ELSE 'adult'<br>END AS age_group<br>FROM student;</p>\n<h1 id='65' style='font-size:20px'>DQL-JOIN</h1>\n<br><p id='66' data-category='paragraph' style='font-size:16px'>INNER JOIN</p>\n<p id='67' data-category='paragraph' style='font-size:16px'>-- 25<br>SELECT<br>s.student_id,<br>s.student_name,<br>s.age,<br>m.major_name<br>FROM<br>student s<br>INNER JOIN<br>major m<br>ON<br>s.major_id = m.major_id;</p>\n<p id='68' data-category='paragraph' style='font-size:16px'>LEFT JOIN</p>\n<p id='69' data-category='paragraph' style='font-size:16px'>-- 26<br>SELECT<br>s.student_id,<br>s.student_name,<br>s.age,<br>m.major_name</p>\n<footer id='70' style='font-size:14px'>DB 실습</footer>\n<br><footer id='71' style='font-size:14px'>5</footer>\n<p id='72' data-category='paragraph' style='font-size:18px'>FROM<br>student s<br>LEFT JOIN<br>major m<br>ON<br>s.major_id = m.major_id;</p>\n<h1 id='73' style='font-size:18px'>JOIN  GROUP BY</h1>\n<p id='74' data-category='paragraph' style='font-size:18px'>-- 27<br>SELECT<br>m.major_name,<br>COUNT(s.student_id) AS student_count<br>FROM<br>major m<br>LEFT JOIN<br>student s<br>ON<br>m.major_id = s.major_id<br>GROUP BY<br>m.major_name;</p>\n<footer id='75' style='font-size:14px'>DB 실습</footer>\n<br><footer id='76' style='font-size:14px'>6</footer>",
    "1-B5JkeKmxkI_cp8mc1JA0E-6HwzAVly1": "<header id='0' style='font-size:14px'>2025-2<br>YBIGTA</header>\n<h1 id='1' style='font-size:20px'>AWS</h1>\n<footer id='2' style='font-size:16px'>26기<br>윤희찬</footer>\n<h1 id='3' style='font-size:20px'>목<br>차</h1>\n<p id='4' data-category='list' style='font-size:14px'>1. 클라우드<br>컴퓨팅<br>서비스란?</p>\n<p id='5' data-category='list' style='font-size:16px'>2. AWS와<br>함께하는<br>네트워크<br>복습</p>\n<p id='6' data-category='list' style='font-size:16px'>3. 실습<br>1<br>-<br>웹사이트를<br>열어보자</p>\n<p id='7' data-category='list' style='font-size:16px'>4. 실습<br>2<br>-<br>DB에<br>접속해보자</p>\n<h1 id='8' style='font-size:14px'>클라우드<br>컴퓨팅<br><br>서비스란?</h1>\n<h1 id='9' style='font-size:20px'>과거에는...</h1>\n<figure id='10'><img alt=\"\" data-coord=\"top-left:(117,395); bottom-right:(1453,1291)\" /></figure>\n<br><header id='11' style='font-size:14px'>1. 클라우드<br>컴퓨팅<br>서비스</header>\n<h1 id='12' style='font-size:16px'>자사<br>데이터<br>센터를<br>만들기<br>위해<br>필요한것</h1>\n<br><p id='13' data-category='list' style='font-size:16px'>하드웨어와<br>매우<br>비싼<br>하드웨어들<br>네트워킹<br>장비<br>전원공급<br>장치<br>백업<br>발전기<br>냉각장치<br>운영<br>인력,<br>보안<br>인력<br>등등등등...</p>\n<p id='14' data-category='paragraph' style='font-size:16px'>→<br>On<br>Premise<br>Computing<br>확장도<br>어렵고<br>유지보수도<br>어렵고<br>비싸다!</p>\n<header id='15' style='font-size:14px'>1. 클라우드<br>컴퓨팅<br>서비스</header>\n<br><h1 id='16' style='font-size:20px'>클라우드<br>컴퓨팅이란<br>무엇인가</h1>\n<figure id='17'><img alt=\"\" data-coord=\"top-left:(205,496); bottom-right:(1093,1194)\" /></figure>\n<br><h1 id='18' style='font-size:16px'>서버를<br>직접<br>만들기<br>힘들다..!</h1>\n<br><h1 id='19' style='font-size:16px'>→<br>인터넷을<br>통해<br>원격으로<br>서버,<br>스토리지<br>등의<br>자원을<br>필요할<br>때(on-demand)<br>사용하는<br>서비스<br>=<br>클라우드<br>컴퓨팅</h1>\n<p id='20' data-category='paragraph' style='font-size:16px'>장점</p>\n<br><h1 id='21' style='font-size:16px'>유연한<br>확장<br>/<br>비용<br>효율<br>/<br>접근성<br>/<br>관리<br>편의성</h1>\n<h1 id='22' style='font-size:16px'>클라우드<br>컴퓨팅의<br>서비스<br>모델</h1>\n<br><p id='23' data-category='list' style='font-size:16px'>IaaS<br>(Infrastructure<br>as<br>a<br>Service):<br>가상<br>서버,<br>스토리<br>지,<br>네트워크<br>등<br>기본<br>인프라를<br>서비스로<br>제공<br>PaaS<br>(Platform<br>as<br>a<br>Service):<br>개발<br>환경을<br>제공하여<br>애플리케이션<br>개발·배포를<br>지원<br>SaaS<br>(Software<br>as<br>a<br>Service):<br>완성된<br>소프트웨어를<br>인터넷을<br>통해<br>서비스<br>형태로<br>제공</p>\n<header id='24' style='font-size:14px'>1. 클라우드<br>컴퓨팅<br>서비스</header>\n<br><h1 id='25' style='font-size:20px'>좀<br>더<br>구체적으로..</h1>\n<h1 id='26' style='font-size:16px'>클라우드<br>컴퓨팅이란?</h1>\n<p id='27' data-category='list'></p>\n<p id='28' data-category='paragraph' style='font-size:16px'>참고<br>:<br>https://aws.amazon.com/ko/what-is-cloud-computing/?nc1=f_cc</p>\n<h1 id='29' style='font-size:20px'>클라우드<br>서비스<br>분류<br></h1>\n<figure id='30'><img alt=\"\" data-coord=\"top-left:(113,461); bottom-right:(1487,1334)\" /></figure>\n<br><h1 id='31' style='font-size:14px'>1.<br>클라우드<br>컴퓨팅<br>서비스<br></h1>\n<h1 id='32' style='font-size:16px'>IaaS(Infrastructure-as-a-Service)</h1>\n<br><h1 id='33' style='font-size:16px'>서비스<br> 제공업체가<br> 컴퓨팅,<br> 스토리지,<br> 네트워킹,<br> 가상화<br> 같<br>은<br> 백엔드<br> 인프라를<br> 호스팅,<br> 유지보수,<br> 업데이트하며<br> 제공!<br>운영체제,<br>미들웨어,<br>데이터,<br>앱<br>포함<br>다른<br>항목은<br>이용자가<br>관리!<br>→<br>AWS<br>EC2가<br>여기에<br>해당됩니다!</h1>\n<h1 id='34' style='font-size:16px'>PaaS(Platform-as-a-Service)</h1>\n<br><h1 id='35' style='font-size:16px'>앱<br>개발에<br>필요한<br>모든<br>소프트웨어<br>기능<br>및<br>도구<br>제공<br>여전<br>히<br>사용자가<br>코드<br>작성하고<br>앱/데이터<br>관리해야하지만,<br>소프<br>트웨어<br>개발<br>플랫폼의<br>관리와<br>유지보수<br>지원</h1>\n<p id='36' data-category='paragraph' style='font-size:16px'>SaaS(Software-as-a-Service)</p>\n<br><p id='37' data-category='paragraph' style='font-size:16px'>서비스<br>제공업체가<br>전체<br>애플리케이션과<br>이를<br>제공하는<br>데<br>필요한<br>모든<br>인프라까지<br>전체<br>애플리케이션<br>스택을<br>제공<br>고객이<br>인터넷을<br>통해<br>앱만<br>연결하면<br>제공업체가<br>다른<br>모든<br>작업<br>수행</p>\n<h1 id='38' style='font-size:20px'>클라우드<br>마이그레이션</h1>\n<figure id='39'><img alt=\"\" data-coord=\"top-left:(55,616); bottom-right:(1537,1192)\" /></figure>\n<br><h1 id='40' style='font-size:14px'>1.<br>클라우드<br>컴퓨팅<br>서비스<br></h1>\n<h1 id='41' style='font-size:18px'>온프레미스<br>→<br>클라우드로!<br>:<br>클라우드<br>마이그레이션<br>(DevOps<br>engineer등이<br>하는일)</h1>\n<h1 id='42' style='font-size:16px'>물리적<br>서버<br>인프라에서<br>클라우드<br>기반<br>인프라로<br>전환</h1>\n<br><p id='43' data-category='list' style='font-size:16px'>1.<br><br>계획<br>및<br>평가:<br>기존<br>인프라<br>분석<br>→<br>클라우드<br>전환<br>계<br>획<br>2.<br><br>선택과<br>최적화:<br>적합한<br>클라우드<br>서비스<br>(AWS<br>예시)<br>선택<br>→<br>애플리케이션과<br>데이터를<br>클라우드에<br>최적화<br>3.<br><br>데이터<br>마이그레이션:<br>데이터를<br>안전하게<br>클라우드로<br>이전<br>4.<br>시스템<br>통합:<br>클라우드<br>환경에서<br>기존<br>시스템과<br>새<br>시<br>스템을<br>통합<br>5.<br>테스트<br>및<br>최적화:<br>클라우드에서의<br>성능을<br>테스트하고<br>지속적으로<br>최적화</p>\n<p id='44' data-category='paragraph' style='font-size:16px'>참고:<br>https://aws.amazon.com/ko/devops/what-is-<br>devops/?nc1=f_cc</p>\n<header id='45' style='font-size:14px'>1.<br>클라우드<br>컴퓨팅<br>서비스<br></header>\n<br><h1 id='46' style='font-size:20px'>클라우드<br>왜<br>쓸까?<br>(+devops)</h1>\n<h1 id='47' style='font-size:16px'>현대의<br>모든<br>APP이<br>겪을<br>수밖에<br>없는<br>문제들을<br>해결하기<br>위한<br>시도.</h1>\n<h1 id='48' style='font-size:16px'>문제점</h1>\n<br><p id='49' data-category='list' style='font-size:16px'>개발:<br>반복되는<br>업무와<br>휴먼에러<br>배포:<br>인프라<br>확장<br>축소에<br>따른<br>비용<br>문제<br>운영:<br>데이터<br>관리,<br>서비스<br>중단<br>상황에<br>대한<br>대처</p>\n<p id='50' data-category='paragraph' style='font-size:16px'>해결</p>\n<br><p id='51' data-category='list' style='font-size:16px'>개발:<br>CI/CD<br>파이프라인<br>자동화<br>배포:<br>탄력적인<br>인프라<br>설계<br>운영:<br>데이터<br>모니터링,<br>무중단<br>서비스</p>\n<br><figure id='52'><img alt=\"\" data-coord=\"top-left:(1858,475); bottom-right:(2854,1038)\" /></figure>\n<header id='53' style='font-size:14px'>1.<br>클라우드<br>컴퓨팅<br>서비스란?<br></header>\n<br><h1 id='54' style='font-size:20px'>클라우드<br>왜<br>쓸까?<br>(+devops)</h1>\n<figure id='55'><img alt=\"\" data-coord=\"top-left:(106,435); bottom-right:(500,816)\" /></figure>\n<br><figure id='56'><img alt=\"\" data-coord=\"top-left:(850,408); bottom-right:(1507,821)\" /></figure>\n<figure id='57'><img alt=\"\" data-coord=\"top-left:(114,1063); bottom-right:(518,1441)\" /></figure>\n<br><figure id='58'><img alt=\"\" data-coord=\"top-left:(1013,1042); bottom-right:(1404,1478)\" /></figure>\n<br><h1 id='59' style='font-size:16px'>핵심효과</h1>\n<br><p id='60' data-category='list' style='font-size:16px'>민첩성과<br>탄력성<br>확보<br>스케일<br>업<br>스케일<br>다운<br>→<br>오토스케일링<br>종량제<br>가격모델<br>:<br>쓴<br>만큼<br>지불한다!<br>(Pay-as-You-<br>Go)서버가<br>부족해서<br>터지는<br>것과,<br>서버<br>자원이<br>남아<br>서<br>낭비되는<br>걸<br>막을<br>수<br>있음</p>\n<p id='61' data-category='paragraph' style='font-size:16px'>첫번째<br>사진에서는<br>20석이<br>낭비되고,<br>두<br>번째에서는<br>식당<br>이<br>미어터지겠죠?<br>이런걸<br>방지하려고<br>배민!으로만<br>주문을<br>받고,<br>주문이<br>오는<br>것<br>만큼만<br>식당을<br>운영하겠다!<br>라는<br>것입니다.</p>\n<br><p id='62' data-category='list' style='font-size:16px'>확보를<br>위한<br>필요사항:<br>모니터링,<br>파이프라인,<br>자동화<br>확보의<br>결과:<br>비용효용성,<br>운영효율성<br>증가</p>\n<header id='63' style='font-size:14px'>1. 클라우드<br>컴퓨팅<br>서비스</header>\n<br><h1 id='64' style='font-size:20px'>AWS<br>:<br>The<br>world<br>is<br>asynchronous</h1>\n<figure id='65'><img alt=\"\" data-coord=\"top-left:(65,455); bottom-right:(1343,1188)\" /></figure>\n<br><h1 id='66' style='font-size:16px'>서버를<br>직접<br>만들기<br>힘들어?<br>→<br>AWS<br>:<br>우리가<br>서버를<br>대신<br>제공해줄게~</h1>\n<h1 id='67' style='font-size:16px'>국내<br>사용<br>사례</h1>\n<br><p id='68' data-category='list' style='font-size:16px'>넷플릭스<br>(<br>넷플릭스의<br>모든<br>서비스는<br>AWS<br>기반<br>)<br>iCloud<br>일부<br>삼성전자,<br>KBS,<br>코웨이<br>등등등등<br>수많은<br>대기업</p>\n<br><h1 id='69' style='font-size:16px'>어떤<br>서비스를<br>제공할까?</h1>\n<br><p id='70' data-category='list' style='font-size:16px'>EC2<br>:<br>Elastic<br>Compute<br>Cloud<br>-<br>가상의<br>서버<br>인스턴스<br>S3<br>:<br>대용량<br>객체<br>스토리지<br>서비스<br>-<br>파일<br>저장<br>버킷<br>RDS<br>:<br>관계형<br>데이터베이스를<br>설치,<br>관리<br>Lambda<br>:<br>서버리스<br>컴퓨팅<br>서비스<br>VPC<br>:<br>클라우드<br>내에<br>서브넷을<br>구성하여<br>트래픽<br>관리<br>IAM<br>:<br>AWS<br>리소스<br>접근<br>권한<br>제어<br>-<br>협업<br>및<br>관리<br>유용</p>\n<h1 id='71' style='font-size:14px'>AWS와<br>함께하는<br><br>네트워크<br>복습</h1>\n<header id='72' style='font-size:14px'>2.<br>AWS란?</header>\n<br><p id='73' data-category='paragraph' style='font-size:18px'>AWS<br>=<br>아마존에서<br>제공하는<br>클라우드<br>컴퓨팅<br>서비스</p>\n<header id='74' style='font-size:14px'>2.<br>AWS란?</header>\n<br><h1 id='75' style='font-size:18px'>AWS<br>SERVICE(Top3)</h1>\n<figure id='76'><img alt=\"\" data-coord=\"top-left:(161,575); bottom-right:(1439,1519)\" /></figure>\n<br><h1 id='77' style='font-size:14px'>EC2:<br>Elastic<br>Compute<br>Cloud<br><br>Computing<br>빌려주는<br>서비스</h1>\n<h1 id='78' style='font-size:14px'>S3:<br>Simple<br>Storage<br>Service<br>객체<br>스토리지<br>서비스</h1>\n<p id='79' data-category='paragraph' style='font-size:14px'>RDS:<br>Relational<br>Database<br>Service<br>관계형<br>데이터베이스<br>서비스</p>\n<header id='80' style='font-size:20px'>EC2</header>\n<br><h1 id='81' style='font-size:16px'>3.<br>AWS<br>대표<br>서비스<br>소개</h1>\n<h1 id='82' style='font-size:14px'>가상<br>머신<br>인스턴스<br>제공.<br>사용자가<br>필요한<br>만큼의<br>컴퓨팅<br>리소스<br>확보할<br>수<br>있도록<br>하는<br>서<br>비스</h1>\n<figure id='83'><img alt=\"\" data-coord=\"top-left:(572,669); bottom-right:(789,886)\" /></figure>\n<br><p id='84' data-category='list' style='font-size:14px'>쉽게<br>말해서,<br>필요한<br>만큼<br>컴퓨터<br>인스턴스<br>빌려주는<br>서비스<br>탄력성!<br>용량을<br>늘리거나<br>줄릴<br>수<br>있음<br>-><br>쓴<br>만큼<br>돈<br>내면됨<br>!<br>사용자가<br>인스턴스<br>완전히<br>제어할<br>수<br>있음<br>보안,<br>네트워크<br>구성,<br>스토리지에<br>효과적</p>\n<h1 id='85' style='font-size:14px'>AMI<br>(Amazon<br>Machine<br>Image):</h1>\n<br><p id='86' data-category='list' style='font-size:14px'>AMI는<br>EC2<br>인스턴스의<br>템플릿!<br>운영체제,<br>애플리케이션,<br>데이터<br>설정을<br>포함한<br>이미지<br>를<br>만들어,<br>여러<br>인스턴스에서<br>동일한<br>설정으로<br>시작할<br>수<br>있음<br>이를<br>통해<br>서버<br>환경을<br>일관되게<br>배포할<br>수<br>있고,<br>백업<br>목적으로도<br>사용할<br>수<br>있음</p>\n<h1 id='87' style='font-size:14px'>Auto<br>Scaling:</h1>\n<p id='88' data-category='paragraph' style='font-size:14px'>오늘<br>실습은<br>EC2만<br>나머지는<br>DE세션에서~</p>\n<br><p id='89' data-category='list' style='font-size:14px'>EC2<br>인스턴스는<br>Auto<br>Scaling<br>기능을<br>통해<br>트래픽<br>변화에<br>따라<br>자동으로<br>서버의<br>수를<br>조절할<br>수<br>있음.<br>트래픽이<br>많을<br>때는<br>서버를<br>늘리고,<br>적을<br>때는<br>줄여서<br>비용과<br>성능을<br>효<br>율적으로<br>관리할<br>수<br>있음.<br>Auto<br>Scaling은<br>Elastic<br>Load<br>Balancer(ELB)와<br>함께<br>작동해<br>서<br>트래픽을<br>여러<br>서버<br>에<br>고르게<br>분산함</p>\n<header id='90' style='font-size:14px'>3.<br>AWS<br>대표<br>서비스<br>소개</header>\n<br><h1 id='91' style='font-size:18px'>EC2</h1>\n<figure id='92'><img alt=\"\" data-coord=\"top-left:(2000,1068); bottom-right:(2546,1378)\" /></figure>\n<br><figure id='93'><img alt=\"\" data-coord=\"top-left:(305,431); bottom-right:(589,1646)\" /></figure>\n<header id='94' style='font-size:16px'>3.<br>AWS<br>대표<br>서비스<br>소개</header>\n<br><h1 id='95' style='font-size:20px'>EC2</h1>\n<table id='96' style='font-size:14px'><thead><tr><td></td><td></td></tr></thead><tbody><tr><td><figure><img alt=\"\" data-coord=\"top-left:(304,441); bottom-right:(590,1640)\" /></figure></td><td>인스턴스 <br>EC2에서<br>컴퓨터<br>하나를<br>의미 -<br>EC2<br>하나<br>/<br>서버<br>하나 이미지 동일한<br>구성의<br>인스턴스<br>필요시<br>저장해서<br>사용 EBS 컴퓨터<br>HDD/인스턴스는<br>연산에<br>관한<br>처리(CPU,<br>메모리<br>등) EC2에<br>종속되지<br>않은<br>EC2<br>서버에<br>붙일<br>수<br>있는<br>외장<br>하드 네트워크<br>및<br>보안 컴퓨터<br>네트워크와<br>보안<br>관리<br> 로드<br>밸런싱 클라이언트와<br>서버<br>그룹<br>사이에<br>있어<br>트래픽을<br>여러<br>서버에<br>고르게<br>분배해<br> 특정<br>서버의<br>부하를<br>줄여<br>줌<br> -<br>백엔드<br>포트<br>노출을<br>막기<br>위해<br>보통은<br>로드<br>밸런서만<br>public<br>subnet에<br>위치시킵니다.</td></tr></tbody></table>\n<h1 id='97' style='font-size:20px'>보안그룹</h1>\n<br><header id='98' style='font-size:14px'>3.<br>AWS<br>대표<br>서비스<br>소개</header>\n<figure id='99'><img alt=\"\" data-coord=\"top-left:(146,514); bottom-right:(1660,1267)\" /></figure>\n<br><h1 id='100' style='font-size:16px'>인바운드<br>규칙<br>외부에서<br>EC2<br>인스턴스로<br>접속할<br>때</h1>\n<h1 id='101' style='font-size:16px'>아웃바운드<br>규칙</h1>\n<br><h1 id='102' style='font-size:16px'>EC2<br>인스턴스에서<br>외부로<br>접속할<br>때</h1>\n<p id='103' data-category='paragraph' style='font-size:16px'>아웃바운드는<br>다<br>열고<br>인바운드는<br>최소한으로<br>열어<br>주는<br>것이<br>보안상으로<br>안전</p>\n<header id='104' style='font-size:14px'>3.<br>AWS<br>대표<br>서비스<br>소개</header>\n<br><h1 id='105' style='font-size:20px'>네트워크</h1>\n<h1 id='106' style='font-size:16px'>SSH(Secure<br>Shell)<br></h1>\n<br><h1 id='107' style='font-size:16px'>네트워크<br>상의<br>다른<br>컴퓨터에<br>로그인하거나<br>원격<br>시스템에서<br>명령을<br>실행하고<br>다른<br>시스템으로<br>파일<br>을<br>복사할<br>수<br>있도록<br>해주는<br>응용<br>프로그램<br>OR<br>프로토콜<br>-<br>비밀<br>터널을<br>파서<br>대화(서버<br>접속)</h1>\n<h1 id='108' style='font-size:16px'>HTTP(HyperText<br>Transfer<br>Protocol)<br></h1>\n<br><h1 id='109' style='font-size:16px'>하이퍼<br>텍스트<br>전송<br>프로토콜로<br>웹서버<br>및<br>웹<br>브라우저<br>간<br>상호<br>간의<br>데이터<br>전송을<br>위한<br>응용계층<br>프로토콜<br>-<br>엽서로<br>보내는<br>편지<br>(웹사이트<br>정보를<br>주고받는<br>기본적인<br>방식)</h1>\n<h1 id='110' style='font-size:16px'>HTTPS(HyperText<br>Transfer<br>Protocol<br>Secure)<br></h1>\n<br><p id='111' data-category='paragraph' style='font-size:16px'>하이퍼<br>텍스트<br>전송<br>프로토콜<br>보안으로<br>표준<br>HTTP와<br>동일한<br>방식으로<br>작동함<br></p>\n<br><p id='112' data-category='paragraph' style='font-size:16px'>-<br>봉투에<br>넣어<br>자물쇠<br>잠근<br>편지<br>(암호화된<br>웹사이트<br>정보<br>통신)<br></p>\n<p id='113' data-category='paragraph' style='font-size:16px'>주의<br>사항<br>:<br>HTTPS로<br>웹사이트가<br>로드되었을<br>때<br>그<br>안에<br>HTTP<br>프로토콜<br>콘텐츠가<br>있다면<br>HTTP/HTTPS<br>혼합<br>컨텐츠<br>이슈가<br>발생한다.<br>→<br>로드<br>밸런서<br>등으로<br>감싸야함.</p>\n<header id='114' style='font-size:14px'>3.<br>AWS<br>대표<br>서비스<br>소개</header>\n<br><h1 id='115' style='font-size:20px'>통신<br>프로토콜이<br>뭐죠</h1>\n<h1 id='116' style='font-size:16px'>통신<br>프로토콜<br>:<br>어떻게<br>정보를<br>주고<br>받을거에요?</h1>\n<h1 id='117' style='font-size:16px'>TCP<br>:<br>전화<br>-<br>응답을<br>기다림<br>/<br>신뢰성<br>보장<br>→<br>잘<br>받았나..?<br>UDP<br>:<br>메가폰<br>-<br>그냥<br>말하고<br>끝.<br>일단<br>던져!</h1>\n<p id='118' data-category='paragraph' style='font-size:16px'>→<br>그냥<br>AWS<br>에서는<br>TCP만<br>알고<br>사용하면<br>충분하다.<br>(모르겠으면<br>일단<br>TCP를<br>눌러두자.)</p>\n<br><h1 id='119' style='font-size:16px'>정리:<br>어떤<br>상황에<br>어떤<br>프로토콜?</h1>\n<br><p id='120' data-category='list' style='font-size:16px'>EC2<br>서버에<br>접속하고<br>싶다<br>-<br>SSH<br>(TCP<br>22번)<br>웹서비스<br>열고<br>싶다<br>-<br>HTTP<br>(80),<br>HTTPS<br>(443)<br>외부에서<br>도메인으로<br>접속하게<br>하고<br>싶다<br>-<br>DNS<br>(Route<br>53)<br>데이터<br>암호화하고<br>싶다<br>-<br>HTTPS<br>(TLS/SSL)</p>\n<header id='121' style='font-size:14px'>3.<br>AWS<br>대표<br>서비스<br>소개</header>\n<br><h1 id='122' style='font-size:20px'>IP가<br>뭔가요?</h1>\n<h1 id='123' style='font-size:16px'>IP<br>주소<br>:<br>인터넷<br>상의<br>모든<br>장치의<br>주소!</h1>\n<br><p id='124' data-category='list' style='font-size:16px'>Public<br>IP<br>:<br>인터넷에서<br>누구나<br>접속<br>가능<br>Private<br>IP<br>:<br>VPC<br>내부에서만<br>통신<br>가능한<br>IP<br>(<br>안에서<br>서로에게<br>붙여둔<br>이름!<br>)</p>\n<h1 id='125' style='font-size:16px'>서브넷이란<br>뭘까?</h1>\n<br><h1 id='126' style='font-size:16px'>→<br>VPC<br>:<br>AWS<br>사용하는<br>독립적인<br>네트워크<br>공간</h1>\n<br><p id='127' data-category='list' style='font-size:16px'>VPC<br>안을<br>이리저리<br>쪼갠<br>것<br>:<br>서브넷!<br>서브넷은<br>공개할<br>수도,<br>내부에서만<br>접속가능하도록<br>감춰둘<br>수도<br>있다.</p>\n<p id='128' data-category='paragraph' style='font-size:16px'>EC2<br>IP<br>:<br>서브넷에<br>할당된<br>개별<br>인스턴스<br>주소<br><br>예시<br>:<br>10.0.1.25<br>VPC<br>:<br>전체<br>가상<br>네트워크<br>(나만의<br>클라우드<br>네트워크<br>공간)<br>예시<br>:<br>10.0.0.0/16<br>→<br>10.0.X.X<br>서브넷<br>:<br>VPC<br>안에서<br>분리된<br>네트워크<br>구역<br>예시<br>:<br>10.0.1.0/24<br>CIDR<br>:<br>앞에서부터<br>몇<br>비트가<br>서브넷(=네트워크<br>영역)인지<br>의미</p>\n<header id='129' style='font-size:14px'>3.<br>AWS<br>대표<br>서비스<br>소개</header>\n<br><h1 id='130' style='font-size:20px'>그럼<br>서버에<br>작업을<br>어떻게<br>해요??<br></h1>\n<h1 id='131' style='font-size:16px'>서버에서<br>먼가<br>만들고<br>싶을<br>때<br>서버에서<br>작업을<br>할까?<br>→<br>노노<br>로컬에서<br>만들고<br>서버에<br>배포해도<br>충분하다!</h1>\n<h1 id='132' style='font-size:16px'>로컬에서<br>만든<br>걸<br>서버에<br>올리면<br>환경이<br>다른데<br>문제가<br>생기지<br>않나요?<br>→<br>그걸<br>해결해주는게<br>도커!<br>도커는<br>지정된<br>격리된<br>환경을<br>만들어줘서<br>서버에<br>배포할<br>때<br>버그가<br>적다</h1>\n<h1 id='133' style='font-size:16px'>그럼<br>도커를<br>어떻게<br>서버에<br>올려요?</h1>\n<br><p id='134' data-category='paragraph' style='font-size:16px'>1.도커를<br>만든다<br>2.만든<br>도커를<br>도커<br>허브에<br>PUSH!<br>3.서버에서<br>도커<br>허브에<br>올려둔<br>이미지를<br>PULL<br>4.서버에서<br>RUN</p>\n<h1 id='135' style='font-size:14px'>실습<br>1<br>웹사이트<br>열어보기</h1>\n<p id='136' data-category='paragraph' style='font-size:14px'>실습<br>2<br>DB에<br>접속해보기<br><br>in<br>EC2</p>\n<h1 id='137' style='font-size:14px'>감사합니다!</h1>",
    "1snhjSoEVQNaXA_RR3v0MkmO_zcJv535W": "<h1 id='0' style='font-size:22px'>DB, Docker, AWS 과제</h1>\n<h1 id='1' style='font-size:20px'>기간</h1>\n<br><h1 id='2' style='font-size:18px'>마감: 8월 7일 23시 59분<br>지각 제출: 8월 8일 23시 59분</h1>\n<h1 id='3' style='font-size:20px'>intro</h1>\n<br><p id='4' data-category='paragraph' style='font-size:16px'>이번 과제는 AWS, Docker, DB를 활용하며 그간 배웠던 기본적인 네트워크 지식, CS지식<br>등을 종합적으로 적용해보는 과제입니다.</p>\n<br><p id='5' data-category='paragraph' style='font-size:14px'>생각지도 못한 부분에서 문제가 생길 수 있으며, 가르쳐주지 않은 부분에 대해서도 과제가<br>출제되어 있으니 팀원들과 함께 고민하며 과제를 풀어나가길 권장드립니다. 특히, 서로 유기<br>적으로 연결된 과제이기 때문에 단순히 역할을 나누기보단, 서로 리뷰해주고 이끌어주며 함<br>께 문제를 해결하시길 바랍니다!</p>\n<br><h1 id='6' style='font-size:16px'>이번 과제의 개요는 다음과 같습니다.</h1>\n<br><p id='7' data-category='paragraph' style='font-size:16px'>먼저, MySQL과 MongoDB를 활용해서 DB환경을 구축한 뒤, Docker 이미지를 생성합니<br>다. 이후, docker hub에 이미지를 업로드하고, AWS EC2에서 컨테이너를 실행합니다.<br>마지막으로 Github Action을 통해 CI/CD를 자동화까지 해봅시다!</p>\n<br><p id='8' data-category='paragraph' style='font-size:16px'>물론 앞으로 와빅 프로젝트를 하면서 굳이 DB를 두개를 사용하거나, CI/CD를 자동화 하는<br>일은 거의 없을 것입니다. 그러나, 더 완성도 있는 프로젝트를 구성하기 위한 방법론들을 숙<br>지하고 있으면 좋을 것 같습니다. 또한 산학협력 프로젝트를 하다보면 DB와 서버에 대한 기<br>본적인 이해도가 필요한 경우가 많기에, 반드시 숙지하시기 바랍니다.</p>\n<h1 id='9' style='font-size:20px'>명세</h1>\n<br><p id='10' data-category='paragraph' style='font-size:14px'>과제를 시작하기 전, 가장 상위 디렉토리에 .env 파일을 생성합시다. 또한 제공된 파일들을<br>아래 제출방법 레포 구조에 맞게 넣어주세요.</p>\n<h1 id='11' style='font-size:20px'>1. DB</h1>\n<br><p id='12' data-category='paragraph' style='font-size:16px'>유저 정보를 MySQL에 저장하기</p>\n<footer id='13' style='font-size:14px'>DB, Docker, AWS 과제</footer>\n<br><footer id='14' style='font-size:14px'>1</footer>\n<p id='15' data-category='list' style='font-size:16px'>제공된 mysql_connection.py 파일을 사용하여 사용자 정보를 MySQL에서 CRUD하<br>도록 user_repository.py 의 함수들를 수정하세요.</p>\n<p id='16' data-category='list' style='font-size:16px'>이때, dependencies.py 파일을 잘 수정해서 활용해보세요! 여기에서 언급된 파일만<br>수정하세요.</p>\n<p id='17' data-category='list' style='font-size:16px'>test/test_user_repository.py 를 통과하세요!</p>\n<br><h1 id='18' style='font-size:16px'>MongoDB로 데이터 전처리 자동화</h1>\n<br><p id='19' data-category='list' style='font-size:20px'>먼저, 크롤링한 데이터를 mongodb에 넣어주세요. 로컬에서는<br>mongodbcompass에서 가능합니다.</p>\n<p id='20' data-category='list' style='font-size:16px'>제공된 mongodb_connection.py 파일을 사용하여 preprocess API를 만들어서 데이<br>터 전처리를 자동화하세요. API endpoint는 다음과 같습니다.</p>\n<p id='21' data-category='list' style='font-size:14px'>Method: POST /review/preprocess/{site_name}</p>\n<br><p id='22' data-category='paragraph' style='font-size:16px'>{site_name}의 크롤링 데이터를 MongoDB에서 조회하여 앞선 과제에서 구<br>현한 전처리 클래스를 활용하여 전처리한 뒤 MongoDB에 저장하는 API입니<br>다.</p>\n<br><h1 id='23' style='font-size:20px'>응답은 자유롭게 설정하세요. 전처리클래스도 mongodb에 맞게 수정하세요!</h1>\n<p id='24' data-category='paragraph' style='font-size:18px'>이때, MySQL table이름은 users 로 만들어주세요. 나머지는 상관없으니, 팀별로 정해보세<br>요!</p>\n<h1 id='25' style='font-size:22px'>2. Docker</h1>\n<p id='26' data-category='list' style='font-size:18px'>프로젝트에 대한 Dockerfile 을 작성하고, 이미지를 생성하여 docker hub에 push해주<br>세요. 이때, 제가 확인할 수 있도록 public으로 올려주세요!</p>\n<p id='27' data-category='list' style='font-size:16px'>이때, .env 같은 파일은 올리면 여러분들의 개인정보가 유출될 수 있으니, 반드시<br>dockerignore 파일을 생성하여 올리지 않도록 설정하세요!</p>\n<h1 id='28' style='font-size:22px'>3. AWS</h1>\n<br><p id='29' data-category='paragraph' style='font-size:16px'>(aws 담당자는 pem 키를 팀원끼리 공유하여 팀원 모두가 인스턴스에 접속할 수 있도록 하<br>세요! )</p>\n<br><h1 id='30' style='font-size:16px'>AWS EC2로 인스턴스 생성 후 배포</h1>\n<br><p id='31' data-category='paragraph' style='font-size:18px'>인스턴스를 생성하여 docker hub에 올렸던 이미지를 pull받아 컨테이너를 생성<br>하세요.</p>\n<br><h1 id='32' style='font-size:16px'>클라우드 환경에서 디비를 호스팅</h1>\n<footer id='33' style='font-size:14px'>DB, Docker, AWS 과제</footer>\n<br><footer id='34' style='font-size:14px'>2</footer>\n<p id='35' data-category='paragraph' style='font-size:20px'>MySQL은 RDS로, MongoDB는 atlas를 사용하세요. 이때, 데이터 개수는 적게<br>하셔도 됩니다! 그냥 디비를 연결할 수 있다는 것만 인증하실 수 있으면 돼요.</p>\n<p id='36' data-category='paragraph' style='font-size:18px'>디비 연결까지 완료된다면, swagger에서 다음과 같이 모든 API 실행 결과(총 5개)를<br>캡쳐하세요. 이때 반드시 ip주소와 endpoint, 성공 응답이 보여야합니다. 예시 이미지<br>를 참고해주세요. 파일 이름은 {api endpoint의 가장 마지막 부분}.png 로 해주시면 됩니다.</p>\n<br><p id='37' data-category='paragraph' style='font-size:14px'>( /review/preprocess/{site_name} → preprocess.png)</p>\n<br><p id='38' data-category='paragraph' style='font-size:16px'>register.png</p>\n<figure id='39'><img alt=\"\" data-coord=\"top-left:(150,475); bottom-right:(1084,1264)\" /></figure>\n<h1 id='40' style='font-size:22px'>4. Github Action</h1>\n<br><p id='41' data-category='list' style='font-size:18px'>위의 과정처럼 프로젝트 파일에 변경사항이 존재할 때마다 docker push를 통해 이미<br>지를 생성하고, ec2인스턴스에서 docker pull하여 컨테이너를 생성한 뒤, 서버에 반영<br>하는 과정을 수작업으로 수행하는 것은 비효율적입니다. 그러므로 이 과정을 github<br>action을 통해 자동화해봅시다.</p>\n<p id='42' data-category='list' style='font-size:20px'>먼저 .github/workflows/deploy.yaml 을 생성하세요. 이후, 두개의 job을 생성하세요. 첫번째<br>job이름은 Build and Push Docker Image이고, 두번째 job이름은 Deploy to EC2</p>\n<footer id='43' style='font-size:14px'>DB, Docker, AWS 과제</footer>\n<br><footer id='44' style='font-size:14px'>3</footer>\n<p id='45' data-category='paragraph' style='font-size:18px'>로 만들어주세요. 말 그대로 첫번째 job에서는 docker 이미지를 빌드한 뒤 docker<br>hub에 이미지를 푸시합니다. 두번째 job에서는 ec2에 접속하여 docker hub로부터<br>이미지를 pull한 뒤 컨테이너를 생성하고, 실행하면 됩니다.</p>\n<br><p id='46' data-category='list' style='font-size:18px'>이때, 유출되면 큰일나는 정보들(docker id, password, ec2 ip주소 등등..)은 당연히<br>그대로 작성하면 안되겠죠? github에서 settings> secrets and variables ><br>actions에서 repository secret들을 변수당 한개씩 생성하세요!</p>\n<br><p id='47' data-category='list' style='font-size:20px'>완료된 화면을 캡쳐해주세요! 반드시 status와 job이름들이 나타나야합니다.</p>\n<br><h1 id='48' style='font-size:14px'>github_action.png</h1>\n<figure id='49'><img alt=\"\" data-coord=\"top-left:(165,545); bottom-right:(1086,620)\" /></figure>\n<br><figure id='50'><img alt=\"\" data-coord=\"top-left:(162,594); bottom-right:(1089,847)\" /></figure>\n<p id='51' data-category='paragraph' style='font-size:16px'>생소한 내용들은 구글링을 열심히 해보세요! 아주 친절하게 설명되어있으니, 충분히 따라하<br>실 수 있습니다~!</p>\n<p id='52' data-category='paragraph' style='font-size:16px'>참고- 명세상에서는 1~4로 숫자로 표현되어 있지만, 순서대로 진행할 필요는 없으며, 오히<br>려 순서대로 진행하는 것이 비효율적일 수 있습니다. 각자 잘 순서를 정리하여 역할을 나누<br>어 진행하는 것을 추천드립니다!</p>\n<h1 id='53' style='font-size:22px'>주의사항</h1>\n<br><p id='54' data-category='paragraph' style='font-size:18px'>반드시 ec2 인스턴스는 종료, RDS에서 만든 디비는 삭제하세요! 과금을 청구하게 될 수도<br>있습니다…</p>\n<br><p id='55' data-category='paragraph' style='font-size:16px'>또한, 저희는 무료 요금제를 사용하고 있기 때문에 ec2나 altas, RDS에서 너무 많은 리소스<br>를 사용하면 연결이 갑자기 종료될 수도 있습니다 주의하세요!! 실제로 저희 학회에서 PEM<br>키를 유출하여 200만원이 넘는 과금을 당한 경우가 있으니 매우매우 주의하시기 바랍니다.<br>반드시!! Dockerignore과 gitignore를 상세히 관리하시기 바라며, PEM키나 ENV가 담긴<br>커밋 기록이 public에 남는 것만으로도 공격받을 수 있으니 매우매우 조심하시기 바랍니다.</p>\n<footer id='56' style='font-size:14px'>DB, Docker, AWS 과제</footer>\n<br><footer id='57' style='font-size:14px'>4</footer>\n<p id='58' data-category='paragraph' style='font-size:16px'>본 과제는 산학협력 등에 필요한 지식을 담고 있으므로, 위 과제를 성실히 이수하지 않을 경<br>우, 산학협력 프로젝트 배정 및 팀 배정 등에 불이익이 있을 수 있음을 명시합니다.</p>\n<h1 id='59' style='font-size:20px'>제출 방법</h1>\n<p id='60' data-category='paragraph' style='font-size:18px'>Docker hub 주소, aws 과제 수행시 사진 → README.md에 첨부해주세요.<br>이때, 사진들은 모두 aws 폴더 안에 넣어주세요.<br>변경 및 추가할 파일들은 주석을 달아놨으니 참고하세요!</p>\n<figure id='61'><img style='font-size:16px' alt=\"YBIGTA_newbie_team_project\n├── .github # 추가\n│ └── workflows\n│ └── deploy.yaml\n├── .gitignore\n├── Dockerfile # 추가\n├── app\n│ ├── __init__.py\n│ ├── dependencies.py # 변경\n│ ├── main.py # 변경\n│ ├── responses\n│ │ ├── __init__.py\n│ │ └── base_response.py\n│ ├── review # 추가\n│ │ └── review_router.py # 추가\n│ ├── static\n│ │ └── index.html\n│ └── user\n│ ├── __init__.py\n│ ├── user_repository.py # 변경\n│ ├── user_router.py\n│ ├── user_schema.py\n│ └── user_service.py\n├── aws # 추가, 폴더 안에 aws 및 github action 과제에서 캡쳐한 사진들을 넣\n어주세요.\n├── database\n│ ├── mongodb_connection.py # 추가, 제공됨\n│ ├── mysql_connection.py # 추가, 제공됨\n│ └── ...\" data-coord=\"top-left:(159,484); bottom-right:(1084,1600)\" /></figure>\n<footer id='62' style='font-size:14px'>DB, Docker, AWS 과제</footer>\n<br><footer id='63' style='font-size:14px'>5</footer>\n<h1 id='64' style='font-size:18px'>├── README.md # 변경, docker hub 레포 주소 및 캡쳐 사진들 나타내기</h1>\n<br><p id='65' data-category='paragraph' style='font-size:18px'>├── requirements.txt # 변경 가능</p>\n<br><table id='66' style='font-size:18px'><thead></thead><tbody><tr><td>├── review_analysis │ 제공됨 │ │ └── test_user_service.py</td></tr><tr><td>│ ├── __init__.py │ ├── crawling │ │ ├── __init__.py │ │ ├── base_crawler.py │ │ ├── example_crawler.py │ │ ├── main.py │ │ └── ... │ └── preprocessing │ ├── base_processor.py │ ├── example_processor.py # 변경 │ ├── main.py │ └── ... ├── test ├── __init__.py │ ├── test_user_repository.py # 추가, ├── test_user_router.py</td></tr></tbody></table>\n<br><h1 id='67' style='font-size:18px'>└── ...</h1>\n<h1 id='68' style='font-size:20px'>채점 기준</h1>\n<br><h1 id='69' style='font-size:18px'> DB</h1>\n<p id='70' data-category='paragraph' style='font-size:18px'>pytest test_user_repository.py 통과(로컬에서 실행합니다)</p>\n<br><p id='71' data-category='paragraph' style='font-size:18px'>데이터 전처리 자동화 api 생성</p>\n<br><h1 id='72' style='font-size:18px'> Docker</h1>\n<br><p id='73' data-category='paragraph' style='font-size:18px'>docker hub 주소 제출</p>\n<h1 id='74' style='font-size:16px'>Dockerfile 제출</h1>\n<br><h1 id='75' style='font-size:18px'> AWS</h1>\n<br><p id='76' data-category='list' style='font-size:18px'>총 6개의 api endpoint 사진 첨부 및 응답 성공<br>github action 사진 첨부 및 status 성공</p>\n<footer id='77' style='font-size:14px'>DB, Docker, AWS 과제</footer>\n<br><footer id='78' style='font-size:14px'>6</footer>\n<h1 id='79' style='font-size:20px'> 멋져요!</h1>\n<br><p id='80' data-category='paragraph' style='font-size:18px'>( 이건 제출 기준 외이니 멋져요! 를 받고 싶으신 분들만 하시면 됩니다.</p>\n<br><p id='81' data-category='paragraph' style='font-size:18px'>아래 기준 하나 만족 시 1멋져요! - 모두 만족 시 3멋져요! )</p>\n<br><p id='82' data-category='paragraph' style='font-size:16px'>RDS 활용시 퍼블릭 엑세스를 허용하지 않고, VPC를 활용하여 보안 설정하기 (<br>README에 이에 관해 간단한 설명 및 설정 화면 추가 필요 )</p>\n<br><p id='83' data-category='paragraph' style='font-size:16px'>로드 밸런서를 활용하여 포트를 외부에 노출시키지 않기 ( README에 이에 관해 간단<br>한 설명 및 설정 화면 추가 필요 / 다만, 로드 밸런서는 소량의 과금이 필요함에 유의하셔야<br>합니다. )</p>\n<br><p id='84' data-category='paragraph' style='font-size:18px'>프로젝트를 진행하며 깨달은 점, 마주쳤던 오류를 해결한 경험을 README에 작성하고<br>이와 관련된 개념 정리 ( 너무 짧으면 안되겠죠? )</p>\n<footer id='85' style='font-size:14px'>DB, Docker, AWS 과제</footer>\n<br><footer id='86' style='font-size:14px'>7</footer>",
    "1ED-Mi_xrBEkhNNvw0-OPiEpHvLUeNuae": "<header id='0' style='font-size:14px'>2025-2<br>YBIGTA</header>\n<h1 id='1' style='font-size:20px'>Docker</h1>\n<footer id='2' style='font-size:16px'>26기<br>이재영</footer>\n<h1 id='3' style='font-size:20px'>목<br>차</h1>\n<p id='4' data-category='list' style='font-size:14px'>1. Recap</p>\n<p id='5' data-category='list' style='font-size:16px'>2. Docker<br>Again</p>\n<p id='6' data-category='list' style='font-size:16px'>3. Docker<br>Compose</p>\n<p id='7' data-category='paragraph' style='font-size:16px'>4. 실습</p>\n<header id='8' style='font-size:14px'>Quick<br>Intro</header>\n<br><h1 id='9' style='font-size:20px'>Quick<br>Introduction</h1>\n<h1 id='10' style='font-size:16px'>반갑습니다<br>이재영입니다!<br><br><br>제대로<br>인사드리는<br>것은<br>처음...!</h1>\n<h1 id='11' style='font-size:14px'>Recap</h1>\n<h1 id='12' style='font-size:20px'>RECAP</h1>\n<br><header id='13' style='font-size:14px'>RECAP</header>\n<h1 id='14' style='font-size:16px'>Why<br>recap</h1>\n<p id='15' data-category='list' style='font-size:16px'>1. <br>교육세션의<br>흐름<br>파악하기<br>2. 나중<br>신기플,<br>컨퍼에서<br>서비스를<br>제작을<br>할<br>때<br>고려해야<br>할<br>흐름<br>파악하기</p>\n<p id='16' data-category='paragraph' style='font-size:16px'>※warning<br><br>단순화된<br>내용이<br>많으므로<br>교육세션<br>흐름을<br>다시<br>고민하는<br>용도로만<br>사용할<br>것을<br>추천함.</p>\n<header id='17' style='font-size:14px'>RECAP</header>\n<br><h1 id='18' style='font-size:18px'>DATA</h1>\n<p id='19' data-category='paragraph' style='font-size:14px'>+<br>tip<br>:<br>본인의<br>지원과<br>다른<br>팀에<br>관심이<br>있으면<br>뒷풀이에<br>와서<br>해당<br>팀<br>선배기수에게<br>무슨<br>활동을<br>하는지<br>적극적<br>으로<br>물어보자.<br>보통<br>어떤<br>팀을<br>가도<br>후회하는<br>사람은<br>잘<br>없음.<br>(그만큼<br>어딜가도<br>알참!)<br><br>하지만,<br>자기가<br>기대했던<br>것과<br>다른<br>활동<br>및<br>현실(eg<br>진로)에<br>실망하는<br>사람은<br>간혹있다고<br>느껴짐.</p>\n<h1 id='20' style='font-size:20px'>DATA</h1>\n<br><header id='21' style='font-size:14px'>RECAP</header>\n<h1 id='22' style='font-size:16px'>It<br>is<br>all<br>about<br>Data!</h1>\n<p id='23' data-category='paragraph' style='font-size:16px'>결국<br>우리가<br>하려고<br>하는<br>테스크는<br>데이터에서<br>가치를<br>창출하는게<br>아닐까?</p>\n<p id='24' data-category='paragraph' style='font-size:16px'>데이터<br>내에서<br>가치를<br>창출하기<br>위해서는<br>da,<br>ds,<br>de<br>의<br>총체적<br>과정이<br>필요하다.</p>\n<p id='25' data-category='paragraph' style='font-size:16px'>제<br>비전은<br>현재<br>de<br>쪽에<br>관심이<br>있지만<br>추후에는<br>데이터에서<br>가치를<br>얻어내는<br>총체적<br>과정을<br>이끌<br>수<br>있는<br>pm<br>혹은<br>회사<br>사장이<br>되고<br>싶습니다.</p>\n<header id='26' style='font-size:14px'>RECAP</header>\n<br><h1 id='27' style='font-size:20px'>DATA에서<br>가치<br>창출하기</h1>\n<h1 id='28' style='font-size:16px'>그럼<br>어떻게<br>데이터로<br>가치<br>창출을<br>한다는<br>거야?<br>어떻게<br>서비스를<br>만들꺼야?</h1>\n<p id='29' data-category='paragraph' style='font-size:16px'>문제제기<br>→<br>문제정의<br><br>→<br>데이터<br>수집<br>→<br>데이터<br>분석<br>→<br>데이터<br>모델링<br>→<br>검증<br>단계<br>→<br>서비스<br>제작</p>\n<h1 id='30' style='font-size:20px'>DATA에서<br>가치<br>창출하기</h1>\n<br><header id='31' style='font-size:14px'>RECAP</header>\n<br><h1 id='32' style='font-size:16px'>문제제기<br>:<br>나<br>자전거<br>잘<br>타고<br>싶어</h1>\n<h1 id='33' style='font-size:16px'>문제정의<br>:<br>특정<br>코스에서<br>가장<br>빠르게<br>타고<br>싶어</h1>\n<h1 id='34' style='font-size:16px'>데이터<br>수집<br>:<br>특정<br>코스에서의<br>데이터가<br>필요<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>자전거를<br>타는<br>사람의<br>데이터<br>(키,<br>몸무게,<br>최대<br>심박<br>등등)<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>자전거<br>데이터<br>수집<br>(심박,<br>파워,<br>케이던스<br>등등)<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>해당<br>코스<br>거리,<br>경사도,<br>위도<br>경도<br>등<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>날짜별<br>특정<br>코스내<br>온도,<br>바람<br>등</h1>\n<h1 id='35' style='font-size:16px'>데이터<br>분석<br>:<br>배경<br>지식<br>학습,<br>시각화를<br>통한<br>관계<br>파악,<br>FE</h1>\n<p id='36' data-category='paragraph' style='font-size:16px'>데이터<br>모델링<br>:<br>나의<br>퍼포먼스를<br>분석할<br>수<br>있어야하며<br>이를<br>기반으로<br>코스<br>와<br>날씨에<br>따른<br>최적의<br>파워<br>분배<br>방법을<br>예측하는<br>모델<br>제작.</p>\n<p id='37' data-category='paragraph' style='font-size:16px'>검증<br>단계<br>:<br>검증을<br>해보며<br>결과에<br>따라<br>문제정의<br>부터<br>다시<br>할<br>수<br>도<br>있고<br>데<br>이터<br>수집과<br>분석은<br>충분히<br>다시<br>할<br>수<br>있음</p>\n<p id='38' data-category='paragraph' style='font-size:16px'>서비스<br>제작<br>:<br>해당<br>예측<br>서비스를<br>사용할<br>수<br>있는<br>앱<br>제작</p>\n<h1 id='39' style='font-size:20px'>RECAP</h1>\n<br><header id='40' style='font-size:14px'>RECAP</header>\n<h1 id='41' style='font-size:16px'>Week<br>1<br><br><br><br><br><br><br>Python<br>&<br>개발환경<br><br><br><br><br><br><br>CS<br>기초<br><br><br><br><br><br>Git<br><br><br><br><br><br>네트워크<br><br><br><br><br><br>Web</h1>\n<p id='42' data-category='paragraph' style='font-size:16px'>Week2<br><br><br><br><br><br>기초통계<br>/<br>ML<br><br><br><br><br><br>크롤링<br><br><br><br><br><br>EDA<br>/<br>FE<br><br><br><br><br><br>데이터<br>시각화</p>\n<br><h1 id='43' style='font-size:16px'>Week<br>3<br><br><br><br><br><br><br>DMP<br><br><br><br><br><br><br>DL<br><br><br><br><br><br><br>NLP<br><br><br><br><br><br><br>CV</h1>\n<h1 id='44' style='font-size:16px'>To<br>be<br>continued<br>(Week<br>4<br>~)</h1>\n<br><h1 id='45' style='font-size:16px'><br><br><br><br><br>LLM<br>전반<br>개요<br>및<br>흐름<br><br><br><br><br><br>Docker<br><br><br><br><br><br>AWS<br><br><br><br><br><br>DB<br><br><br><br><br><br>AI<br>Agent<br><br><br><br><br><br>RAG</h1>\n<header id='46' style='font-size:14px'>RECAP</header>\n<br><h1 id='47' style='font-size:20px'>DATA</h1>\n<br><table id='48' style='font-size:16px'><thead></thead><tbody><tr><td>DA<br>-<br>데이터<br>수집<br>및<br>분석</td><td>DE<br>-<br>데이터<br>공유</td></tr><tr><td><br><br><br><br><br>크롤링<br><br><br><br><br></td><td><br><br><br><br><br><br>Python<br>&<br>개발환경<br></td></tr><tr><td><br><br><br><br><br>EDA<br>/<br>FE</td><td><br><br><br><br><br><br>CS<br>기초</td></tr><tr><td><br><br><br><br><br>데이터<br>시각화</td><td><br><br><br><br><br><br>Git</td></tr><tr><td><br><br><br><br><br>DMP</td><td><br><br><br><br><br><br>네트워크</td></tr><tr><td><br><br><br><br><br>기초통계<br>/<br>ML</td><td><br><br><br><br><br><br>Web</td></tr><tr><td><br><br><br><br><br></td><td><br><br><br><br><br><br>Docker</td></tr><tr><td>DS<br>-<br>데이터<br>활용</td><td><br><br><br><br><br><br>AWS</td></tr><tr><td><br><br><br><br><br>DL</td><td><br><br><br><br><br><br>DB</td></tr><tr><td><br><br><br><br><br>NLP</td><td><br></td></tr><tr><td><br><br><br><br><br>CV</td><td></td></tr><tr><td><br><br><br><br><br>LLM<br>전반<br>개요<br>및<br>흐름</td><td>문제제기<br>→<br>문제정의<br>→<br>데이터<br>수집<br>→<br>데이터<br>분석<br>→<br> 데이터<br>모델링<br>→<br>검증<br>단계<br>→<br>서비스<br>제작</td></tr><tr><td><br><br><br><br><br>Rag</td><td></td></tr><tr><td><br><br><br><br><br>AI<br>Agent</td><td></td></tr></tbody></table>\n<br><p id='49' data-category='paragraph' style='font-size:18px'><br><br><br><br><br><br><br><br><br></p>\n<header id='50' style='font-size:14px'>RECAP</header>\n<br><h1 id='51' style='font-size:20px'>SERVICE</h1>\n<h1 id='52' style='font-size:16px'>서비스가<br>두려워요<br>ㅠㅠ<br>이미<br>잘하는<br>분도<br>많겠지만<br>저번<br>교육세션<br>당시<br>저의<br>상황은<br>그랬던<br>것<br>같습니다.</h1>\n<p id='53' data-category='paragraph' style='font-size:16px'>근데<br>서비스를<br>만들기<br>위해<br>필요한<br>것을<br>단순화<br>시켜보면<br>자료구조<br>및<br>알고리즘으로<br>FE/BE<br>로직<br>설계,<br>네트워크로<br>사용자와<br>서버간<br>연결,<br>마지막으<br>로<br>데이터베이스를<br>통해<br>정보를<br>저장하고<br>불러오면<br>서비스가<br>뚝딱!<br>나온다고<br>할<br>수<br>있어요.</p>\n<p id='54' data-category='paragraph' style='font-size:16px'>그러므로<br>낯선<br>것일<br>뿐<br>이를<br>너무<br>두려워하지<br>않았으면<br>좋겠습니다!</p>\n<header id='55' style='font-size:14px'>RECAP</header>\n<br><h1 id='56' style='font-size:20px'>DATA<br>ENGINEERING</h1>\n<h1 id='57' style='font-size:16px'>DE<br>-<br>데이터<br>공유<br>(교육세션<br>중에는)<br><br><br><br><br><br><br>Python<br>&<br>개발환경<br><br>-<br>Virtual<br>environment,<br>Docstring,<br>OOP<br><br><br><br><br><br><br>CS<br>기초<br>-<br>OS,<br>Linux,<br>VM<br><br><br><br><br><br><br>Git<br>-<br>Version<br>control<br><br><br><br><br><br><br>네트워크<br>-<br>말그대로<br>network<br>(communicates)<br><br><br><br><br><br><br>Web<br>-<br>Frontend,<br>Backend<br><br><br><br><br><br><br>Docker<br>-<br><br>Container<br><br><br><br><br><br><br>AWS<br>-<br>Cloud<br>service<br><br><br><br><br><br><br>DB<br>-<br>말그대로<br>database<br>(stores<br>data)</h1>\n<footer id='58' style='font-size:14px'>+<br>tip<br>:<br>교육세션내<br>de<br>내용으로<br>서비스를<br>만들고<br>배포하는<br>내용이<br>많음.<br>정규세션에<br>오면<br>이뿐만<br>아니라<br>대규모<br>데이터<br>처리를<br>하는<br>방식에<br>대해서도<br>많이<br>배우게<br>됨<br>(많관부)</footer>\n<header id='59' style='font-size:14px'>RECAP</header>\n<br><h1 id='60' style='font-size:20px'>DATA<br>ENGINEERING</h1>\n<h1 id='61' style='font-size:16px'>교육<br>세션내<br>배웠던<br>DE<br>개념을<br>단순화<br>시켜보겠습니다.<br><br></h1>\n<h1 id='62' style='font-size:18px'>Virtualization<br>(개발을<br>위해)<br>-<br>Python<br>&<br>개발환경<br>/<br>CS<br>기초<br>/<br>Docker<br>Version<br>control<br>(개발을<br>위해)<br>-<br>Git<br><br>Service<br>(서비스를<br>위해)<br>-<br>Web,<br>DB<br>Connection<br>(서비스를<br>위해)<br>-<br>Network,<br>AWS</h1>\n<p id='63' data-category='paragraph' style='font-size:16px'>이렇게<br>바라보면<br>각<br>주제를<br>왜<br>어떻게<br>다뤘는지<br>이해하기<br>쉬울<br>것<br>같고<br>앞으로<br>새로운<br>주제를<br>배울때<br>비슷한<br>틀로<br>사고할<br>수<br>있을<br>것이라고<br>생각합니다.</p>\n<h1 id='64' style='font-size:14px'>Docker<br>Again</h1>\n<h1 id='65' style='font-size:20px'>DOCKER<br>AGAIN</h1>\n<br><header id='66' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<h1 id='67' style='font-size:16px'>이미<br>많이<br>다룬거<br>같지만<br>그래도<br>도커<br>어게인..!</h1>\n<figure id='68'><img alt=\"\" data-coord=\"top-left:(826,598); bottom-right:(2199,1632)\" /></figure>\n<header id='69' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='70' style='font-size:20px'>DOCKER<br>AGAIN</h1>\n<h1 id='71' style='font-size:16px'>그래서<br>도커가<br>뭐야??</h1>\n<h1 id='72' style='font-size:16px'>“Docker<br>is<br>an<br>open<br>platform<br>for<br>developing,<br>shipping,<br>and<br>running<br>applications.<br></h1>\n<h1 id='73' style='font-size:16px'>Docker<br>enables<br>you<br>to<br>separate<br>your<br>applications<br>from<br>your<br>infrastructure<br>so<br>you<br>can<br>deliver<br>software<br>quickly.</h1>\n<p id='74' data-category='paragraph' style='font-size:16px'>Docker<br>provides<br>the<br>ability<br>to<br>package<br>and<br>run<br>an<br>application<br>in<br>a<br>loosely<br>isolated<br>environment<br>called<br>a<br>container.</p>\n<br><p id='75' data-category='paragraph' style='font-size:16px'>”</p>\n<p id='76' data-category='paragraph' style='font-size:16px'>뭐라는거지??<br>머리속에<br>남는<br>건<br>컨테이너에서<br>앱<br>실행을<br>한다는<br>것<br></p>\n<header id='77' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='78' style='font-size:20px'>WHY<br>DOCKER</h1>\n<figure id='79'><img alt=\"\" data-coord=\"top-left:(285,378); bottom-right:(2823,1306)\" /></figure>\n<p id='80' data-category='paragraph' style='font-size:16px'>과거에는<br>환경자체를<br>직접<br>설정하거나<br>거대한<br>환경<br>자체를<br>전부<br>공유해야했지만<br>이제는<br>컨테이너<br>단위로<br>현재<br>앱을<br>실행하기<br>위한<br>환경만<br>공유해도<br>된다.</p>\n<header id='81' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='82' style='font-size:18px'>DOCKER<br>ARCHITECTURE</h1>\n<figure id='83'><img alt=\"\" data-coord=\"top-left:(354,360); bottom-right:(2545,1519)\" /></figure>\n<header id='84' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='85' style='font-size:20px'>DOCKER<br>ARCHITECTURE</h1>\n<h1 id='86' style='font-size:16px'>Client<br>-<br>Server<br>Architecture<br><br><br><br><br><br><br><br>User<br>가<br>내리는<br>명령은<br>클라이언트<br>(docker)<br>를<br>통한<br>것이다.<br><br><br><br><br><br><br><br>User<br>가<br>내린<br>명령은<br>도커<br>daemon<br>(dockerd)를<br>통해<br>실행<br>된다.<br><br><br><br><br><br><br><br>이때<br>대표적<br>명령으로<br>docker<br>run,<br>build,<br>pull을<br>생각할<br>수<br>있다.<br><br><br><br><br><br><br><br>docker<br>pull을<br>하면<br>docker<br>hub내<br>registry에서<br>이미지를<br>daemon으로<br>전달해준다.</h1>\n<h1 id='87' style='font-size:16px'>Daemon</h1>\n<br><h1 id='88' style='font-size:16px'><br><br><br><br><br><br><br>Daemon은<br>원래<br>리눅스에서<br>사용하는<br>용어로<br>모든<br>명령을<br>듣는<br>백그라운드<br>프로세스이다<br><br><br><br><br><br><br><br>Docker에서도<br>daemon은<br>중앙<br>제어<br>역할의<br>서버로<br>유사한<br>역할을<br>한다.<br><br><br><br><br><br><br><br>이때<br>docker<br>daemon은<br>로컬내에<br>있을<br>수<br>도<br>있고<br>외부<br>서버내<br>존재할<br>수<br>도<br>있다.<br><br><br><br><br><br><br><br>핵심은<br>daemon이<br>클라이언트의<br>명령을<br>처리해준다는<br>것을<br>기억하면<br>된다.</h1>\n<h1 id='89' style='font-size:20px'>IS<br>DOCKER<br>ULTIMATE?</h1>\n<br><header id='90' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<figure id='91'><img alt=\"\" data-coord=\"top-left:(261,353); bottom-right:(1634,1099)\" /></figure>\n<br><h1 id='92' style='font-size:16px'>PODMAN</h1>\n<h1 id='93' style='font-size:16px'>Daemonless<br>(리소스<br>적게<br>사용)<br>Rootless<br>(일반<br>권한으로<br>실행<br>가능,<br>보안<br>이슈<br>적음)<br>Linux<br>에서만<br><br>(단점이자,<br>systemd를<br>직접<br>활용한다는<br>장점)</h1>\n<br><p id='94' data-category='paragraph' style='font-size:16px'><br></p>\n<figure id='95'><img alt=\"\" data-coord=\"top-left:(185,1147); bottom-right:(988,1600)\" /></figure>\n<br><p id='96' data-category='paragraph' style='font-size:16px'>Containerization</p>\n<p id='97' data-category='paragraph' style='font-size:16px'>HW<br>(apple<br>silicon)<br>수준<br>최적화<br>애플<br>생태계내<br>활용</p>\n<header id='98' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='99' style='font-size:18px'>DOCKER<br>OBJECT</h1>\n<figure id='100'><img alt=\"\" data-coord=\"top-left:(253,409); bottom-right:(2747,1303)\" /></figure>\n<br><p id='101' data-category='paragraph' style='font-size:14px'>Docker<br>File<br>:<br>앱<br>실행에<br>필요한<br>환경과<br>명령어<br>선언<br><br>Images<br>:<br>도커<br>파일을<br>읽어<br>컨테이너<br>생성을<br>위한<br>이미지의<br>형태로<br>만듦<br>Containers<br>:<br>이미지를<br>기반으로<br>컨테이너<br>즉<br>실제<br>실행<br>환경을<br>만듦</p>\n<header id='102' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='103' style='font-size:20px'>DOCKER<br>OBJECT</h1>\n<h1 id='104' style='font-size:16px'>아직<br>헷갈린다면</h1>\n<p id='105' data-category='paragraph' style='font-size:16px'>도커<br>파일을<br>“정의”<br>이미지를<br>“정의에<br>따라<br>빌드된<br>실행<br>환경”<br>컨테이너를<br>“이미지에<br>따라<br>실제<br>동작<br>중인<br>환경<br>(running<br>instance)”</p>\n<p id='106' data-category='paragraph' style='font-size:16px'>로<br>생각하면<br>좋을<br>것<br>같다.</p>\n<header id='107' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='108' style='font-size:20px'>DOCKER<br>OBJECT</h1>\n<h1 id='109' style='font-size:16px'>Building<br>Images</h1>\n<br><h1 id='110' style='font-size:16px'>이미지<br>레이어</h1>\n<br><h1 id='111' style='font-size:16px'><br><br><br><br><br><br><br><br><br><br>도커<br>이미지는<br>여러<br>레이어로<br>구성됨<br><br><br><br><br><br><br><br><br><br><br>각<br>명령어<br>(FROM,<br>COPY,<br>RUN)이<br>새로운<br>레이어<br>생성<br><br><br><br><br><br><br><br><br><br><br>캐시를<br>활용해<br>재<br>빌드<br>시<br>변경된<br>레이어만<br>수정함<br><br><br><br><br><br><br><br><br><br></h1>\n<h1 id='112' style='font-size:16px'>이미지<br>빌드,<br>태그,<br>배포</h1>\n<br><p id='113' data-category='paragraph' style='font-size:16px'><br><br><br><br><br><br><br><br><br><br>docker<br>build<br>-t<br><repository>/<image>:<tag><br>.<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>빌드<br>할때<br>-t<br><br>뒤에<br>도커<br>사용자<br>이름,<br>이미지<br>이름,<br>구분용<br>태그를<br>포함<br><br><br><br><br><br><br><br><br><br><br>docker<br>push<br><repository>/<image>:<tag><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>도커<br>허브에<br>푸쉬<br>해주기</p>\n<h1 id='114' style='font-size:18px'>DOCKER<br>OBJECT</h1>\n<br><header id='115' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<header id='116' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='117' style='font-size:20px'>DOCKER<br>OBJECT</h1>\n<h1 id='118' style='font-size:16px'>Building<br>Images</h1>\n<br><h1 id='119' style='font-size:16px'>Dockerfile<br>작성<br>(주요<br>명령어)</h1>\n<p id='120' data-category='list' style='font-size:16px'><br><br><br><br><br><br><br><br><br><br>FROM<br>:<br>베이스<br>이미지<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>어떤<br>운영체제<br>혹은<br>런타임<br>환경을<br>기반으로<br>이미지를<br>만드는지<br><br><br><br><br><br><br><br><br><br><br>WORKDIR<br>:<br>작업<br>디렉토리<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>이후<br>명령어가<br>실행될<br>기본<br>작업<br>디렉토리<br><br><br><br><br><br><br><br><br><br><br>COPY<br>:<br>파일<br>복사<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>해당<br>파일을<br>컨테이너내에<br>포함해준다는<br>것<br><br><br><br><br><br><br><br><br><br><br>RUN<br>:<br>쉘<br>명령<br>실행<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>실제<br>터미널에서<br>실행될<br>명령어<br><br><br><br><br><br><br><br><br><br><br>CMD<br>/<br>ENTRYPOINT<br>:<br>컨테이너<br>실행시<br>기본<br>명령<br>설정<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>컨테이너<br>실행시<br>기본으로<br>수행되는<br>명령</p>\n<h1 id='121' style='font-size:20px'>DOCKER<br>OBJECT</h1>\n<br><header id='122' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<h1 id='123' style='font-size:16px'>Running<br>Containers</h1>\n<br><p id='124' data-category='list' style='font-size:16px'>포트<br>매핑<br><br><br><br><br><br><br><br><br><br><br>docker<br>run<br>-p<br>8080:80<br>myapp<br>환경변수<br>포함<br><br><br><br><br><br><br><br><br><br><br>docker<br>run<br>--env-file<br>.env<br>myapp<br><br><br><br><br><br><br><br><br><br><br>docker<br>run<br>-e<br><GLOBALVAR>=production<br>myapp<br>로컬<br>디렉토리<br>마운트하기<br><br><br><br><br><br><br><br><br><br><br>docker<br>run<br>-v<br><호스트경로>:<컨테이너경로><br>myapp</p>\n<h1 id='125' style='font-size:20px'>DOCKER<br>OBJECT</h1>\n<h1 id='126' style='font-size:16px'>Rebuilding<br>Image</h1>\n<br><h1 id='127' style='font-size:16px'>Docker<br>file이<br>변경<br>되었을때</h1>\n<br><p id='128' data-category='list' style='font-size:16px'>실행<br>중인<br>컨테이너<br>확인<br><br><br><br><br><br><br><br><br><br><br><br><br>docker<br>ps<br>컨테이너<br>정지<br>및<br>제거<br><br><br><br><br><br><br><br><br><br><br><br><br>docker<br>stop<br><CONTAINER_ID><br><br><br><br><br><br><br><br><br><br><br><br><br>docker<br>rm<br><CONTAINER_ID><br>이미지<br>다시<br>빌드하고<br>실행하기<br><br><br><br><br><br><br><br><br><br><br><br><br>docker<br>build<br>-t<br>myapp<br>.<br><br><br><br><br><br><br><br><br><br><br><br><br>docker<br>run<br>myapp</p>\n<br><h1 id='129' style='font-size:16px'>To<br>end<br>the<br>Container</h1>\n<br><h1 id='130' style='font-size:14px'>DOCKER<br>AGAIN</h1>\n<p id='131' data-category='list' style='font-size:16px'>컨테이너<br>정지<br>및<br>제거<br><br><br><br><br><br><br><br><br><br><br><br>+<br>추가로<br>docker<br>ps<br>-a<br>는<br>멈춘<br>컨테이너도<br>확인해<br>이미지<br>목록<br>확인<br>및<br>제거<br><br><br><br><br><br><br><br><br><br><br><br>docker<br>images<br><br><br><br><br><br><br><br><br><br><br><br>docker<br>rmi<br><IMAGE_ID></p>\n<header id='132' style='font-size:14px'>DOCKER<br>HUB</header>\n<br><h1 id='133' style='font-size:20px'>DOCKER<br>HUB</h1>\n<figure id='134'><img alt=\"\" data-coord=\"top-left:(629,346); bottom-right:(2319,1437)\" /></figure>\n<p id='135' data-category='paragraph' style='font-size:16px'>깃헙<br>같은<br>도커<br>이미지<br>저장소<br>but<br>협업과<br>버전<br>관리의<br>도구는<br>아님</p>\n<h1 id='136' style='font-size:14px'>DOCKER<br>AGAIN</h1>\n<br><h1 id='137' style='font-size:20px'>DOCKER<br>DESKTOP</h1>\n<figure id='138'><img alt=\"\" data-coord=\"top-left:(545,337); bottom-right:(2336,1462)\" /></figure>\n<br><p id='139' data-category='paragraph' style='font-size:16px'>필수는<br>아니지만<br>사용하면<br>편한<br>GUI</p>\n<h1 id='140' style='font-size:14px'>Docker<br>Compose</h1>\n<header id='141' style='font-size:14px'>DOCKER<br>COMPOSE<br></header>\n<br><h1 id='142' style='font-size:20px'>MSA</h1>\n<figure id='143'><img alt=\"\" data-coord=\"top-left:(591,440); bottom-right:(2536,1350)\" /></figure>\n<br><p id='144' data-category='paragraph' style='font-size:16px'>기존<br>Monlithic<br>Architecture와<br>달리<br>Microservice<br>Architecture는<br>서비스를<br>기능별<br>분리하여<br>운영한다.<br>이에<br>따라<br>하나의<br>서비스에서<br>문제가<br>발생하여도<br>해당<br>기능을<br>제외한<br>다른<br>서비스는<br>사용이<br>가능하다.<br>즉<br>대규모<br>서비스에서<br>유지보수가<br>더<br>쉬워진다는<br>이점이<br>있다.</p>\n<header id='145' style='font-size:18px'>MSA</header>\n<br><header id='146' style='font-size:14px'>DOCKER<br>COMPOSE<br></header>\n<figure id='147'><img alt=\"\" data-coord=\"top-left:(636,402); bottom-right:(2496,1503)\" /></figure>\n<h1 id='148' style='font-size:18px'>DOCKER<br>COMPOSE</h1>\n<br><header id='149' style='font-size:14px'>DOCKER<br>COMPOSE<br></header>\n<figure id='150'><img alt=\"\" data-coord=\"top-left:(196,419); bottom-right:(2900,1562)\" /></figure>\n<header id='151' style='font-size:14px'>DOCKER<br>COMPOSE<br></header>\n<br><h1 id='152' style='font-size:20px'>DOCKER<br>COMPOSE</h1>\n<h1 id='153' style='font-size:16px'>Docker<br>compose는<br>멀티<br>컨테이너로<br>구성된<br>앱을<br>구동할때<br>사용하는<br>도구이다.<br>이는<br>여러<br>docker<br>file<br>관리하기<br>위한<br>docker<br>file<br>의<br>변주라고<br>생각하면<br>이해하기<br>편하다.</h1>\n<p id='154' data-category='paragraph' style='font-size:16px'>우리는<br>docker<br>compose를<br>사용하기<br>위해<br>compose.yaml<br>를<br>작성한다.</p>\n<h1 id='155' style='font-size:16px'>도커<br>컴포즈<br>실행<br>방법</h1>\n<br><p id='156' data-category='paragraph' style='font-size:16px'><br><br><br><br><br><br><br><br><br><br>docker-compose<br>build<br><br><br><br><br><br><br><br><br><br><br>docker-compose<br>up<br><br><br><br><br><br><br><br><br><br><br>docker-compose<br>down</p>\n<header id='157' style='font-size:14px'>DOCKER<br>COMPOSE<br></header>\n<br><h1 id='158' style='font-size:18px'>DOCKER<br>COMPOSE</h1>\n<figure id='159'><img alt=\"\" data-coord=\"top-left:(598,435); bottom-right:(1245,1600)\" /></figure>\n<br><figure id='160'><img alt=\"\" data-coord=\"top-left:(1312,438); bottom-right:(2590,1595)\" /></figure>\n<h1 id='161' style='font-size:14px'>DOCKER<br>COMPOSE<br></h1>\n<br><h1 id='162' style='font-size:20px'>DOCKER<br>COMPOSE</h1>\n<p id='163' data-category='paragraph' style='font-size:16px'>compose.yaml<br>내부<br>구성<br>(docker-compose.yaml<br>&<br>docker-compose.yml도<br>가능)</p>\n<h1 id='164' style='font-size:16px'>++<br>주요<br>구성요소<br>services<br>:<br>실행할<br>컨테이너<br>정의<br>volumes<br>:<br>컨테이너가<br>꺼져도<br>로컬내<br>저장이<br>될<br>수<br>있도록<br>설정<br>networks<br>:<br>services<br>간<br>네트워크</h1>\n<h1 id='165' style='font-size:16px'>++<br>추가<br>구성요소</h1>\n<br><p id='166' data-category='paragraph' style='font-size:16px'>depends_on<br>:<br>서비스<br>간<br>실행<br>순서<br>정의<br>healthcheck<br>:<br>컨테이너가<br>정상<br>동작중인지<br>확인<br>restart<br>:<br>컨테이너가<br>죽었을<br>경우<br>자동<br>재시작<br>정책</p>\n<header id='167' style='font-size:14px'>DOCKER<br>COMPOSE<br></header>\n<br><h1 id='168' style='font-size:20px'>KUBERNETES</h1>\n<figure id='169'><img alt=\"\" data-coord=\"top-left:(491,340); bottom-right:(2374,1325)\" /></figure>\n<p id='170' data-category='paragraph' style='font-size:16px'>Docker<br>compose는<br>여러<br>container를<br>동시에<br>다룰<br>수<br>있지만,<br>결국<br>하나의<br>daemon(서버)<br>내에서<br>작동한다.<br><br>이에<br>반해<br>Kubernetes는<br>여러<br>서버에<br>분산된<br>컨테이너들을<br>통합적으로<br>관리한다.<br>컨테이너<br>상태를<br>지속적으로<br>모니터링하며,<br>필요에<br>따라<br>리소스<br>자동<br>재배치<br>및<br>다운된<br>컨테이너<br>복구<br>등의<br>기능이<br>있다.</p>\n<h1 id='171' style='font-size:14px'>실습</h1>\n<header id='172' style='font-size:20px'>실습</header>\n<br><header id='173' style='font-size:14px'>실습</header>\n<br><figure id='174'><img alt=\"\" data-coord=\"top-left:(845,175); bottom-right:(2253,1215)\" /><br><figcaption id='175' style='font-size:16px'>TODO<br>어플을<br>간단하게<br>구현하였습니다!</figcaption></figure>\n\n<p id='176' data-category='paragraph' style='font-size:16px'>서비스를<br>간단하게<br>구성한다는<br>아이디어로<br>시작을<br>하였고</p>\n<p id='177' data-category='paragraph' style='font-size:16px'>이<br>과정에서<br>도커<br>컴포즈를<br>얹었습니다.</p>\n<h1 id='178' style='font-size:20px'>실습</h1>\n<br><header id='179' style='font-size:14px'>실습</header>\n<h1 id='180' style='font-size:16px'>git<br>clone<br>https://github.com/sleepylee02/docker_session.git</h1>\n<h1 id='181' style='font-size:16px'>cd<br>docker_session</h1>\n<p id='182' data-category='paragraph' style='font-size:16px'>docker<br>compose<br>build<br>docker<br>compose<br>up</p>\n<h1 id='183' style='font-size:16px'>localhost:8080</h1>\n<p id='184' data-category='paragraph' style='font-size:16px'>docker<br>compose<br>down</p>\n<p id='185' data-category='paragraph' style='font-size:16px'>아<br>편리하다!!</p>\n<p id='186' data-category='paragraph' style='font-size:16px'>docker<br>file과<br>docker-compose.yml<br>만<br>있으면<br>containerization<br>뚝딱!</p>\n<h1 id='187' style='font-size:18px'>실습</h1>\n<br><header id='188' style='font-size:14px'>실습</header>\n<figure id='189'><img alt=\"\" data-coord=\"top-left:(593,397); bottom-right:(1244,1563)\" /></figure>\n<br><figure id='190'><img alt=\"\" data-coord=\"top-left:(1316,396); bottom-right:(2591,1553)\" /></figure>\n<header id='191' style='font-size:14px'>실습</header>\n<br><h1 id='192' style='font-size:18px'>실습</h1>\n<h1 id='193' style='font-size:14px'>감사합니다</h1>",
    "11-jBCajUWqoRnbXCR1Boj7PjfZ0NcSPD": "<header id='0' style='font-size:14px'>2025-2<br>YBIGTA</header>\n<h1 id='1' style='font-size:20px'>Docker</h1>\n<footer id='2' style='font-size:16px'>26기<br>이재영</footer>\n<h1 id='3' style='font-size:18px'>목<br>차</h1>\n<p id='4' data-category='list' style='font-size:14px'>1. Recap<br>2. Docker<br>Again<br>3. Docker<br>Compose<br>/<br>MSA<br>4. 실습<br>(서비스<br>구성)</p>\n<header id='5' style='font-size:14px'>Quick<br>Intro</header>\n<br><h1 id='6' style='font-size:20px'>Quick<br>Introduction</h1>\n<h1 id='7' style='font-size:16px'>반갑습니다<br>이재영입니다!<br><br><br>제대로<br>인사드리는<br>것은<br>처음...!</h1>\n<h1 id='8' style='font-size:14px'>Recap</h1>\n<h1 id='9' style='font-size:20px'>RECAP</h1>\n<br><header id='10' style='font-size:14px'>RECAP</header>\n<h1 id='11' style='font-size:16px'>Why<br>recap</h1>\n<p id='12' data-category='list' style='font-size:16px'>1. <br>교육세션의<br>흐름<br>파악하기<br>2. 나중<br>신기플,<br>컨퍼에서<br>서비스를<br>제작을<br>할<br>때<br>고려해야<br>할<br>흐름<br>파악하기</p>\n<p id='13' data-category='paragraph' style='font-size:16px'>※warning<br><br>단순화된<br>내용이<br>많으므로<br>교육세션<br>흐름을<br>다시<br>고민하는<br>용도로만<br>사용할<br>것을<br>추천함.</p>\n<h1 id='14' style='font-size:18px'>DATA</h1>\n<br><header id='15' style='font-size:14px'>RECAP</header>\n<p id='16' data-category='paragraph' style='font-size:14px'>+<br>tip<br>:<br>본인의<br>지원과<br>다른<br>팀에<br>관심이<br>있으면<br>뒷풀이에<br>와서<br>해당<br>팀<br>선배기수에게<br>무슨<br>활동을<br>하는지<br>적극적<br>으로<br>물어보자.<br>보통<br>어떤<br>팀을<br>가도<br>후회하는<br>사람은<br>잘<br>없음.<br>(그만큼<br>어딜가도<br>알참!)<br><br>하지만,<br>자기가<br>기대했던<br>것과<br>다른<br>활동<br>및<br>현실(eg<br>진로)에<br>실망하는<br>사람은<br>간혹있다고<br>느껴짐.</p>\n<header id='17' style='font-size:14px'>RECAP</header>\n<br><h1 id='18' style='font-size:20px'>DATA</h1>\n<h1 id='19' style='font-size:16px'>It<br>is<br>all<br>about<br>Data!</h1>\n<p id='20' data-category='paragraph' style='font-size:16px'>결국<br>우리가<br>하려고<br>하는<br>테스크는<br>데이터에서<br>가치를<br>창출하는게<br>아닐까?</p>\n<p id='21' data-category='paragraph' style='font-size:16px'>데이터<br>내에서<br>가치를<br>창출하기<br>위해서는<br>da,<br>ds,<br>de<br>의<br>총체적<br>과정이<br>필요하다.</p>\n<p id='22' data-category='paragraph' style='font-size:16px'>제<br>비전은<br>현재<br>de<br>쪽에<br>관심이<br>있지만<br>추후에는<br>데이터에서<br>가치를<br>얻어내는<br>총체적<br>과정을<br>이끌<br>수<br>있는<br>pm<br>혹은<br>회사<br>사장이<br>되고<br>싶습니다.</p>\n<h1 id='23' style='font-size:20px'>RECAP</h1>\n<br><header id='24' style='font-size:14px'>RECAP</header>\n<h1 id='25' style='font-size:16px'>Week<br>1<br><br><br><br><br><br><br>Python<br>&<br>개발환경<br><br><br><br><br><br><br>CS<br>기초<br><br><br><br><br><br>Git<br><br><br><br><br><br>네트워크<br><br><br><br><br><br>Web</h1>\n<p id='26' data-category='paragraph' style='font-size:16px'>Week2<br><br><br><br><br><br>기초통계<br>/<br>ML<br><br><br><br><br><br>크롤링<br><br><br><br><br><br>EDA<br>/<br>FE<br><br><br><br><br><br>데이터<br>시각화</p>\n<br><h1 id='27' style='font-size:16px'>Week<br>3<br><br><br><br><br><br><br>DMP<br><br><br><br><br><br><br>DL<br><br><br><br><br><br><br>NLP<br><br><br><br><br><br><br>CV</h1>\n<h1 id='28' style='font-size:16px'>To<br>be<br>continued<br>(Week<br>4<br>~)</h1>\n<br><h1 id='29' style='font-size:16px'><br><br><br><br><br>LLM<br>전반<br>개요<br>및<br>흐름<br><br><br><br><br><br>Docker<br><br><br><br><br><br>AWS<br><br><br><br><br><br>DB<br><br><br><br><br><br>AI<br>Agent<br><br><br><br><br><br>RAG</h1>\n<h1 id='30' style='font-size:20px'>DATA</h1>\n<br><header id='31' style='font-size:14px'>RECAP</header>\n<h1 id='32' style='font-size:16px'>DA<br>-<br>데이터<br>수집<br>및<br>분석</h1>\n<br><h1 id='33' style='font-size:16px'><br><br><br><br><br>크롤링<br><br><br><br><br><br><br><br><br><br><br>EDA<br>/<br>FE<br><br><br><br><br><br>데이터<br>시각화<br><br><br><br><br><br>DMP<br><br><br><br><br><br>기초통계<br>/<br>ML</h1>\n<br><h1 id='34' style='font-size:16px'><br><br><br><br><br></h1>\n<br><h1 id='35' style='font-size:16px'>DS<br>-<br>데이터<br>활용</h1>\n<br><p id='36' data-category='paragraph' style='font-size:16px'><br><br><br><br><br>DL</p>\n<br><p id='37' data-category='paragraph' style='font-size:16px'><br><br><br><br><br>NLP</p>\n<br><p id='38' data-category='paragraph' style='font-size:16px'><br><br><br><br><br>CV</p>\n<br><p id='39' data-category='paragraph' style='font-size:16px'><br><br><br><br><br>LLM<br>전반<br>개요<br>및<br>흐름</p>\n<br><h1 id='40' style='font-size:16px'>DE<br>-<br>데이터<br>공유</h1>\n<br><h1 id='41' style='font-size:16px'><br><br><br><br><br><br>Python<br>&<br>개발환경<br></h1>\n<br><h1 id='42' style='font-size:16px'><br><br><br><br><br><br>CS<br>기초</h1>\n<br><h1 id='43' style='font-size:16px'><br><br><br><br><br><br>Git</h1>\n<br><h1 id='44' style='font-size:16px'><br><br><br><br><br><br>네트워크</h1>\n<br><h1 id='45' style='font-size:16px'><br><br><br><br><br><br>Web</h1>\n<br><h1 id='46' style='font-size:16px'><br><br><br><br><br><br>Docker</h1>\n<br><h1 id='47' style='font-size:16px'><br><br><br><br><br><br>AWS</h1>\n<br><p id='48' data-category='paragraph' style='font-size:16px'><br><br><br><br><br><br>DB</p>\n<br><p id='49' data-category='paragraph' style='font-size:16px'><br></p>\n<p id='50' data-category='paragraph' style='font-size:16px'><br><br><br><br><br>Rag</p>\n<br><p id='51' data-category='paragraph' style='font-size:16px'><br><br><br><br><br>AI<br>Agent</p>\n<br><p id='52' data-category='paragraph' style='font-size:16px'><br><br><br><br><br><br><br><br><br></p>\n<header id='53' style='font-size:16px'>RECAP</header>\n<br><h1 id='54' style='font-size:20px'>DATA에서<br>가치<br>창출하기</h1>\n<table id='55' style='font-size:14px'><thead><tr><td>DA<br>-<br>데이터<br>수집<br>및<br>분석</td><td>DE<br>-<br>데이터<br>공유</td></tr></thead><tbody><tr><td><br><br><br><br><br>크롤링<br><br><br><br><br></td><td><br><br><br><br><br><br>Python<br>&<br>개발환경<br></td></tr><tr><td><br><br><br><br><br>EDA<br>/<br>FE</td><td><br><br><br><br><br><br>CS<br>기초</td></tr><tr><td><br><br><br><br><br>데이터<br>시각화</td><td><br><br><br><br><br><br>Git</td></tr><tr><td><br><br><br><br><br>DMP</td><td><br><br><br><br><br><br>네트워크</td></tr><tr><td><br><br><br><br><br>기초통계<br>/<br>ML</td><td><br><br><br><br><br><br>Web</td></tr><tr><td><br><br><br><br><br> DS<br>-<br>데이터<br>활용</td><td><br><br><br><br><br><br>Docker</td></tr><tr><td></td><td><br><br><br><br><br><br>AWS</td></tr><tr><td><br><br><br><br><br>DL</td><td><br><br><br><br><br><br>DB</td></tr><tr><td><br><br><br><br><br>NLP</td><td><br></td></tr><tr><td><br><br><br><br><br>CV</td><td></td></tr><tr><td><br><br><br><br><br>LLM<br>전반<br>개요<br>및<br>흐름</td><td></td></tr><tr><td><br><br><br><br><br>Rag <br><br><br><br><br>AI<br>Agent</td><td></td></tr><tr><td></td><td></td></tr></tbody></table>\n<br><h1 id='56' style='font-size:14px'><br><br><br><br><br><br><br><br><br></h1>\n<br><h1 id='57' style='font-size:18px'>문제제기<br>:<br>효율적으로<br>자전거를<br>타고<br>싶어요</h1>\n<h1 id='58' style='font-size:18px'>문제정의<br>:<br>특정<br>코스에서<br>구간별<br>효율적인<br>파워<br>분배를<br>하고<br>싶어요.</h1>\n<h1 id='59' style='font-size:18px'>데이터<br>수집<br>:<br>자전거<br>데이터<br>수집<br>(심박,<br>파워,<br>케이던스<br>등등)<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>특정<br>코스<br>거리,<br>경사도,<br>위도<br>경도<br>등<br>크롤링<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>날짜별<br>특정<br>코스내<br>날씨,<br>바람<br>크롤링<br>파이프라인<br>구축</h1>\n<h1 id='60' style='font-size:18px'>데이터<br>분석<br>:<br>배경<br>지식<br>학습,<br>시각화를<br>통한<br>관계<br>파악,<br>FE</h1>\n<p id='61' data-category='paragraph' style='font-size:18px'>데이터<br>모델링<br>:<br>나의<br>퍼포먼스를<br>분석할<br>수<br>있어야하며<br>이를<br>기반으로<br>코스<br>와<br>날씨에<br>따른<br>최적의<br>파워<br>분배<br>방법을<br>예측하는<br>모델<br>제작.</p>\n<p id='62' data-category='paragraph' style='font-size:18px'>검증<br>단계<br>:<br>검증을<br>해보며<br>결과에<br>따라<br>문제정의<br>부터<br>다시<br>할<br>수<br>도<br>있고<br>데이터<br>수집과<br>분석은<br>충분히<br>다시<br>할<br>수<br>있음</p>\n<p id='63' data-category='paragraph' style='font-size:18px'>서비스<br>제작<br>:<br>해당<br>예측<br>서비스를<br>사용할<br>수<br>있는<br>앱<br>제작</p>\n<header id='64' style='font-size:14px'>RECAP</header>\n<br><h1 id='65' style='font-size:20px'>SERVICE</h1>\n<h1 id='66' style='font-size:16px'>서비스가<br>두려워요<br>ㅠㅠ<br>이미<br>잘하는<br>분도<br>많겠지만<br>저번<br>교육세션<br>당시<br>저의<br>상황은<br>그랬던<br>것<br>같습니다.</h1>\n<h1 id='67' style='font-size:16px'>근데<br>서비스를<br>만들기<br>위해<br>필요한<br>것을<br>단순화<br>시켜보면<br>자료구조<br>및<br>알고리즘으로<br>FE/BE<br>로직<br>설계,<br>네트워크로<br>사용자와<br>서버간<br>연결,<br>마지막으<br>로<br>데이터베이스를<br>통해<br>정보를<br>저장하고<br>불러오면<br>서비스가<br>뚝딱!<br>나온다고<br>할<br>수<br>있어요.</h1>\n<p id='68' data-category='paragraph' style='font-size:16px'>그러므로<br>낯선<br>것일<br>뿐<br>이를<br>너무<br>두려워하지<br>않았으면<br>좋겠습니다!</p>\n<header id='69' style='font-size:14px'>RECAP</header>\n<br><h1 id='70' style='font-size:20px'>DATA<br>ENGINEERING</h1>\n<h1 id='71' style='font-size:16px'>DE<br>-<br>데이터<br>공유<br>(교육세션<br>중에는)<br><br><br><br><br><br><br>Python<br>&<br>개발환경<br><br>-<br>Virtual<br>environment,<br>Docstring,<br>OOP<br><br><br><br><br><br><br>CS<br>기초<br>-<br>OS,<br>Linux,<br>VM,<br>Docker<br><br><br><br><br><br><br><br>Git<br>-<br>Version<br>control<br><br><br><br><br><br><br>네트워크<br>-<br>말그대로<br>network<br>(communicates)<br><br><br><br><br><br><br>Web<br>-<br>Frontend,<br>Backend<br><br><br><br><br><br><br>Docker<br>-<br><br>Container<br><br><br><br><br><br><br>AWS<br>-<br>Cloud<br>service<br><br><br><br><br><br><br>DB<br>-<br>말그대로<br>database<br>(stores<br>data)</h1>\n<footer id='72' style='font-size:14px'>+<br>tip<br>:<br>교육세션내<br>de<br>내용으로<br>서비스를<br>만들고<br>배포하는<br>내용이<br>많음.<br>정규세션에<br>오면<br>이뿐만<br>아니라<br>대규모<br>데이터<br>처리를<br>하는<br>방식에<br>대해서도<br>많이<br>배우게<br>됨<br>(많관부)</footer>\n<header id='73' style='font-size:14px'>RECAP</header>\n<br><h1 id='74' style='font-size:20px'>DATA<br>ENGINEERING</h1>\n<h1 id='75' style='font-size:16px'>교육<br>세션내<br>배웠던<br>DE<br>개념을<br>단순화<br>시켜보겠습니다.<br><br></h1>\n<h1 id='76' style='font-size:18px'>Virtualization<br>(개발을<br>위해)<br>-<br>Python<br>&<br>개발환경<br>/<br>CS<br>기초<br>/<br>Docker<br>Version<br>control<br>(개발을<br>위해)<br>-<br>Git<br><br>Service<br>(서비스를<br>위해)<br>-<br>Web,<br>DB<br>Connection<br>(서비스를<br>위해)<br>-<br>Network,<br>AWS</h1>\n<p id='77' data-category='paragraph' style='font-size:16px'>이렇게<br>바라보면<br>각<br>주제를<br>왜<br>어떻게<br>다뤘는지<br>이해하기<br>쉬울<br>것<br>같고<br>앞으로<br>새로운<br>주제를<br>배울때<br>비슷한<br>틀로<br>사고할<br>수<br>있을<br>것이라고<br>생각합니다.</p>\n<h1 id='78' style='font-size:14px'>Docker<br>Again</h1>\n<h1 id='79' style='font-size:20px'>DOCKER<br>AGAIN</h1>\n<br><header id='80' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<h1 id='81' style='font-size:16px'>이미<br>많이<br>다룬거<br>같지만<br>그래도<br>도커<br>어게인..!</h1>\n<figure id='82'><img alt=\"\" data-coord=\"top-left:(826,598); bottom-right:(2199,1632)\" /></figure>\n<header id='83' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='84' style='font-size:20px'>DOCKER<br>AGAIN</h1>\n<h1 id='85' style='font-size:16px'>그래서<br>도커가<br>뭐야??</h1>\n<h1 id='86' style='font-size:16px'>“Docker<br>is<br>an<br>open<br>platform<br>for<br>developing,<br>shipping,<br>and<br>running<br>applications.<br></h1>\n<h1 id='87' style='font-size:16px'>Docker<br>enables<br>you<br>to<br>separate<br>your<br>applications<br>from<br>your<br>infrastructure<br>so<br>you<br>can<br>deliver<br>software<br>quickly.</h1>\n<p id='88' data-category='paragraph' style='font-size:16px'>Docker<br>provides<br>the<br>ability<br>to<br>package<br>and<br>run<br>an<br>application<br>in<br>a<br>loosely<br>isolated<br>environment<br>called<br>a<br>container.</p>\n<br><p id='89' data-category='paragraph' style='font-size:16px'>”</p>\n<p id='90' data-category='paragraph' style='font-size:16px'>뭐라는거지??<br>머리속에<br>남는<br>건<br>컨테이너에서<br>앱<br>실행을<br>한다는<br>것<br></p>\n<header id='91' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='92' style='font-size:20px'>WHY<br>DOCKER</h1>\n<figure id='93'><img alt=\"\" data-coord=\"top-left:(285,378); bottom-right:(2823,1306)\" /></figure>\n<p id='94' data-category='paragraph' style='font-size:16px'>과거에는<br>환경자체를<br>직접<br>설정하거나<br>거대한<br>환경<br>자체를<br>전부<br>공유해야했지만<br>이제는<br>컨테이너<br>단위로<br>현재<br>앱을<br>실행하기<br>위한<br>환경만<br>공유해도<br>된다.</p>\n<header id='95' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='96' style='font-size:18px'>DOCKER<br>ARCHITECTURE</h1>\n<figure id='97'><img alt=\"\" data-coord=\"top-left:(354,360); bottom-right:(2545,1519)\" /></figure>\n<header id='98' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='99' style='font-size:20px'>DOCKER<br>ARCHITECTURE</h1>\n<h1 id='100' style='font-size:16px'>Client<br>-<br>Server<br>Architecture<br><br><br><br><br><br><br><br>User<br>가<br>내리는<br>명령은<br>클라이언트<br>(docker)<br>를<br>통한<br>것이다.<br><br><br><br><br><br><br><br>User<br>가<br>내린<br>명령은<br>도커<br>daemon<br>(dockerd)를<br>통해<br>실행<br>된다.<br><br><br><br><br><br><br><br>이때<br>대표적<br>명령으로<br>docker<br>run,<br>build,<br>pull을<br>생각할<br>수<br>있다.<br><br><br><br><br><br><br><br>docker<br>pull을<br>하면<br>docker<br>hub내<br>registry에서<br>이미지를<br>daemon으로<br>전달해준다.</h1>\n<h1 id='101' style='font-size:16px'>Daemon</h1>\n<br><h1 id='102' style='font-size:16px'><br><br><br><br><br><br><br>Daemon은<br>원래<br>리눅스에서<br>사용하는<br>용어로<br>모든<br>명령을<br>듣는<br>백그라운드<br>프로세스이다<br><br><br><br><br><br><br><br>Docker에서도<br>daemon은<br>중앙<br>제어<br>역할의<br>서버로<br>유사한<br>역할을<br>한다.<br><br><br><br><br><br><br><br>이때<br>docker<br>daemon은<br>로컬내에<br>있을<br>수<br>도<br>있고<br>외부<br>서버내<br>존재할<br>수<br>도<br>있다.<br><br><br><br><br><br><br><br>핵심은<br>daemon이<br>클라이언트의<br>명령을<br>처리해준다는<br>것을<br>기억하면<br>된다.</h1>\n<h1 id='103' style='font-size:20px'>IS<br>DOCKER<br>ULTIMATE?</h1>\n<br><header id='104' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<figure id='105'><img alt=\"\" data-coord=\"top-left:(261,353); bottom-right:(1635,1099)\" /></figure>\n<br><h1 id='106' style='font-size:16px'>PODMAN</h1>\n<h1 id='107' style='font-size:16px'>Daemonless<br>(리소스<br>적게<br>사용)<br>Rootless<br>(일반<br>권한으로<br>실행<br>가능,<br>보안<br>이슈<br>적음)<br>Linux<br>에서만<br><br>(단점이자,<br>systemd를<br>직접<br>활용한다는<br>장점)</h1>\n<br><p id='108' data-category='paragraph' style='font-size:16px'><br></p>\n<figure id='109'><img alt=\"\" data-coord=\"top-left:(185,1147); bottom-right:(988,1600)\" /></figure>\n<br><p id='110' data-category='paragraph' style='font-size:16px'>Containerization</p>\n<p id='111' data-category='paragraph' style='font-size:16px'>HW<br>(apple<br>silicon)<br>수준<br>최적화<br>애플<br>생태계내<br>활용</p>\n<h1 id='112' style='font-size:18px'>DOCKER<br>OBJECT</h1>\n<br><header id='113' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<figure id='114'><img alt=\"\" data-coord=\"top-left:(258,555); bottom-right:(2733,1444)\" /></figure>\n<header id='115' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='116' style='font-size:20px'>DOCKER<br>OBJECT</h1>\n<h1 id='117' style='font-size:16px'>다시<br>돌아와서<br>도커<br>오브젝트에<br>대해서<br>이해를<br>해보자<br>이<br>파트는<br>우리가<br>앱을<br>실제로<br>컨테이너화하는<br>과정을<br>보여준다.</h1>\n<h1 id='118' style='font-size:16px'>Docker<br>File<br>:<br>앱<br>실행에<br>필요한<br>환경과<br>명령어<br>선언<br><br>Images<br>:<br>도커<br>파일을<br>읽어<br>컨테이너<br>생성을<br>위한<br>이미지의<br>형태로<br>만듦<br>Containers<br>:<br>이미지를<br>기반으로<br>컨테이너<br>즉<br>실제<br>실행<br>환경을<br>만듦</h1>\n<h1 id='119' style='font-size:16px'>아직<br>헷갈린다면</h1>\n<p id='120' data-category='paragraph' style='font-size:16px'>도커<br>파일을<br>“정의”<br>이미지를<br>“정의에<br>따라<br>빌드된<br>실행<br>환경”<br>컨테이너를<br>“이미지에<br>따라<br>실제<br>동작<br>중인<br>환경<br>(running<br>instance)”</p>\n<p id='121' data-category='paragraph' style='font-size:16px'>로<br>생각하면<br>좋을<br>것<br>같다.</p>\n<header id='122' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='123' style='font-size:20px'>DOCKER<br>OBJECT</h1>\n<h1 id='124' style='font-size:16px'>Building<br>Images</h1>\n<br><h1 id='125' style='font-size:16px'>이미지<br>레이어</h1>\n<br><h1 id='126' style='font-size:16px'><br><br><br><br><br><br><br><br><br><br>도커<br>이미지는<br>여러<br>레이어로<br>구성됨<br><br><br><br><br><br><br><br><br><br><br>각<br>명령어<br>(FROM,<br>COPY,<br>RUN)이<br>새로운<br>레이어<br>생성<br><br><br><br><br><br><br><br><br><br><br>캐시를<br>활용해<br>재<br>빌드<br>시<br>변경된<br>레이어만<br>수정함<br><br><br><br><br><br><br><br><br><br></h1>\n<h1 id='127' style='font-size:16px'>이미지<br>빌드,<br>태그,<br>배포</h1>\n<br><p id='128' data-category='paragraph' style='font-size:16px'><br><br><br><br><br><br><br><br><br><br>docker<br>build<br>-t<br><repository>/<image>:<tag><br>.<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>빌드<br>할때<br>-t<br><br>뒤에<br>도커<br>사용자<br>이름,<br>이미지<br>이름,<br>구분용<br>태그를<br>포함<br><br><br><br><br><br><br><br><br><br><br>docker<br>push<br><repository>/<image>:<tag><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>도커<br>허브에<br>푸쉬<br>해주기</p>\n<h1 id='129' style='font-size:18px'>DOCKER<br>OBJECT</h1>\n<br><header id='130' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<header id='131' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<br><h1 id='132' style='font-size:20px'>DOCKER<br>OBJECT</h1>\n<h1 id='133' style='font-size:16px'>Building<br>Images</h1>\n<br><h1 id='134' style='font-size:16px'>Dockerfile<br>작성<br>(주요<br>명령어)</h1>\n<p id='135' data-category='list' style='font-size:16px'><br><br><br><br><br><br><br><br><br><br>FROM<br>:<br>베이스<br>이미지<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>어떤<br>운영체제<br>혹은<br>런타임<br>환경을<br>기반으로<br>이미지를<br>만드는지<br><br><br><br><br><br><br><br><br><br><br>WORKDIR<br>:<br>작업<br>디렉토리<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>이후<br>명령어가<br>실행될<br>기본<br>작업<br>디렉토리<br><br><br><br><br><br><br><br><br><br><br>COPY<br>:<br>파일<br>복사<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>해당<br>파일을<br>컨테이너내에<br>포함해준다는<br>것<br><br><br><br><br><br><br><br><br><br><br>RUN<br>:<br>쉘<br>명령<br>실행<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>실제<br>터미널에서<br>실행될<br>명령어<br><br><br><br><br><br><br><br><br><br><br>CMD<br>/<br>ENTRYPOINT<br>:<br>컨테이너<br>실행시<br>기본<br>명령<br>설정<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>컨테이너<br>실행시<br>기본으로<br>수행되는<br>명령</p>\n<h1 id='136' style='font-size:20px'>DOCKER<br>OBJECT</h1>\n<br><header id='137' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<h1 id='138' style='font-size:16px'>Running<br>Containers</h1>\n<br><p id='139' data-category='list' style='font-size:16px'>포트<br>매핑<br><br><br><br><br><br><br><br><br><br><br>docker<br>run<br>-p<br>8080:80<br>myapp<br>환경변수<br>포함<br><br><br><br><br><br><br><br><br><br><br>docker<br>run<br>--env-file<br>.env<br>myapp<br><br><br><br><br><br><br><br><br><br><br>docker<br>run<br>-e<br><GLOBALVAR>=production<br>myapp<br>로컬<br>디렉토리<br>마운트하기<br><br><br><br><br><br><br><br><br><br><br>docker<br>run<br>-v<br><호스트경로>:<컨테이너경로><br>myapp</p>\n<h1 id='140' style='font-size:20px'>DOCKER<br>OBJECT</h1>\n<br><header id='141' style='font-size:14px'>DOCKER<br>AGAIN</header>\n<p id='142' data-category='paragraph' style='font-size:16px'>Rebuilding<br>Image</p>\n<br><p id='143' data-category='list' style='font-size:16px'>실행<br>중인<br>컨테이너<br>확인<br><br><br><br><br><br><br><br><br><br><br><br><br>docker<br>ps<br>컨테이너<br>정지<br>및<br>제거<br><br><br><br><br><br><br><br><br><br><br><br><br>docker<br>stop<br><CONTAINER_ID><br><br><br><br><br><br><br><br><br><br><br><br><br>docker<br>rm<br><CONTAINER_ID><br>이미지<br>다시<br>빌드하고<br>실행하기<br><br><br><br><br><br><br><br><br><br><br><br><br>docker<br>build<br>-t<br>myapp<br>.<br><br><br><br><br><br><br><br><br><br><br><br><br>docker<br>run<br>myapp</p>\n<br><h1 id='144' style='font-size:16px'>To<br>end<br>the<br>Container</h1>\n<br><p id='145' data-category='list' style='font-size:16px'>컨테이너<br>정지<br>및<br>제거<br><br><br><br><br><br><br><br><br><br><br><br>+<br>추가로<br>docker<br>ps<br>-a<br>는<br>멈춘<br>컨테이너도<br>확인해<br>이미지<br>목록<br>확인<br>및<br>제거<br><br><br><br><br><br><br><br><br><br><br><br>docker<br>images<br><br><br><br><br><br><br><br><br><br><br><br>docker<br>rmi<br><IMAGE_ID></p>\n<header id='146' style='font-size:14px'>DOCKER<br>HUB</header>\n<br><h1 id='147' style='font-size:20px'>DOCKER<br>HUB</h1>\n<figure id='148'><img alt=\"\" data-coord=\"top-left:(629,346); bottom-right:(2319,1437)\" /></figure>\n<p id='149' data-category='paragraph' style='font-size:16px'>깃헙<br>같은<br>도커<br>이미지<br>저장소<br>but<br>협업과<br>버전<br>관리의<br>도구는<br>아님</p>\n<h1 id='150' style='font-size:14px'>DOCKER<br>AGAIN</h1>\n<br><h1 id='151' style='font-size:20px'>DOCKER<br>DESKTOP</h1>\n<figure id='152'><img alt=\"\" data-coord=\"top-left:(545,337); bottom-right:(2336,1462)\" /></figure>\n<br><p id='153' data-category='paragraph' style='font-size:16px'>필수는<br>아니지만<br>사용하면<br>편한<br>GUI</p>\n<h1 id='154' style='font-size:14px'>Docker<br>Compose<br>/<br>MSA</h1>\n<h1 id='155' style='font-size:20px'>MSA</h1>\n<br><header id='156' style='font-size:14px'>DOCKER<br>COMPOSE<br><br>/<br>MSA</header>\n<figure id='157'><img alt=\"\" data-coord=\"top-left:(591,439); bottom-right:(2535,1350)\" /></figure>\n<br><p id='158' data-category='paragraph' style='font-size:16px'>기존<br>Monlithic<br>Architecture와<br>달리<br>Microservice<br>Architecture는<br>서비스를<br>기능별<br>분리하여<br>운영한다.<br>이에<br>따라<br>하나의<br>서비스에서<br>문제가<br>발생하여도<br>해당<br>기능을<br>제외한<br>다른<br>서비스는<br>사용이<br>가능하다.<br>즉<br>대규모<br>서비스에서<br>유지보수가<br>더<br>쉬워진다는<br>이점이<br>있다.</p>\n<header id='159' style='font-size:14px'>DOCKER<br>COMPOSE<br><br>/<br>MSA</header>\n<br><h1 id='160' style='font-size:18px'>DOCKER<br>COMPOSE</h1>\n<figure id='161'><img alt=\"\" data-coord=\"top-left:(456,450); bottom-right:(2585,1334)\" /></figure>\n<header id='162' style='font-size:14px'>DOCKER<br>COMPOSE<br><br>/<br>MSA</header>\n<br><h1 id='163' style='font-size:20px'>DOCKER<br>COMPOSE</h1>\n<h1 id='164' style='font-size:16px'>Docker<br>compose는<br>멀티<br>컨테이너로<br>구성된<br>앱을<br>구동할때<br>사용하는<br>도구이다.<br>이는<br>여러<br>docker<br>file<br>관리하기<br>위한<br>docker<br>file<br>의<br>변주라고<br>생각하면<br>이해하기<br>편하다.</h1>\n<p id='165' data-category='paragraph' style='font-size:16px'>우리는<br>docker<br>compose를<br>사용하기<br>위해<br>compose.yaml<br>를<br>작성한다.</p>\n<h1 id='166' style='font-size:16px'>도커<br>컴포즈<br>실행<br>방법</h1>\n<br><p id='167' data-category='paragraph' style='font-size:16px'><br><br><br><br><br><br><br><br><br><br>docker-compose<br>build<br><br><br><br><br><br><br><br><br><br><br>docker-compose<br>up<br><br><br><br><br><br><br><br><br><br><br>docker-compose<br>down</p>\n<header id='168' style='font-size:14px'>DOCKER<br>COMPOSE<br><br>/<br>MSA</header>\n<br><h1 id='169' style='font-size:18px'>DOCKER<br>COMPOSE</h1>\n<figure id='170'><img alt=\"\" data-coord=\"top-left:(597,435); bottom-right:(1245,1601)\" /></figure>\n<br><figure id='171'><img alt=\"\" data-coord=\"top-left:(1312,438); bottom-right:(2590,1595)\" /></figure>\n<h1 id='172' style='font-size:20px'>DOCKER<br>COMPOSE</h1>\n<br><h1 id='173' style='font-size:14px'>DOCKER<br>COMPOSE<br><br>/<br>MSA</h1>\n<h1 id='174' style='font-size:16px'>compose.yaml<br>내부<br>구성<br>(docker-compose.yaml<br>&<br>docker-compose.yml도<br>가능)</h1>\n<h1 id='175' style='font-size:16px'>++<br>주요<br>구성요소<br>services<br>:<br>실행할<br>컨테이너<br>정의<br>volumes<br>:<br>컨테이너가<br>꺼져도<br>로컬내<br>저장이<br>될<br>수<br>있도록<br>설정<br>networks<br>:<br>services<br>간<br>네트워크</h1>\n<h1 id='176' style='font-size:16px'>++<br>추가<br>구성요소</h1>\n<br><p id='177' data-category='paragraph' style='font-size:16px'>depends_on<br>:<br>서비스<br>간<br>실행<br>순서<br>정의<br>healthcheck<br>:<br>컨테이너가<br>정상<br>동작중인지<br>확인<br>restart<br>:<br>컨테이너가<br>죽었을<br>경우<br>자동<br>재시작<br>정책</p>\n<h1 id='178' style='font-size:20px'>KUBERNETES</h1>\n<br><header id='179' style='font-size:14px'>DOCKER<br>COMPOSE<br><br>/<br>MSA</header>\n<figure id='180'><img alt=\"\" data-coord=\"top-left:(491,339); bottom-right:(2374,1326)\" /></figure>\n<p id='181' data-category='paragraph' style='font-size:16px'>Docker<br>compose는<br>여러<br>container를<br>동시에<br>다룰<br>수<br>있지만,<br>결국<br>하나의<br>daemon(서버)<br>내에서<br>작동한다.<br><br>이에<br>반해<br>Kubernetes는<br>여러<br>서버에<br>분산된<br>컨테이너들을<br>통합적으로<br>관리한다.<br>컨테이너<br>상태를<br>지소적으로<br>모니터링하며,<br>필요에<br>따라<br>리소스<br>자동<br>재배치<br>및<br>다운된<br>컨테이너<br>복구<br>등의<br>기능이<br>있다.</p>\n<h1 id='182' style='font-size:14px'>실습</h1>\n<header id='183' style='font-size:20px'>실습</header>\n<br><header id='184' style='font-size:14px'>실습</header>\n<br><figure id='185'><img alt=\"\" data-coord=\"top-left:(845,175); bottom-right:(2253,1215)\" /><br><figcaption id='186' style='font-size:16px'>TODO<br>어플을<br>간단하게<br>구현하였습니다!</figcaption></figure>\n\n<p id='187' data-category='paragraph' style='font-size:16px'>서비스를<br>간단하게<br>구성한다는<br>아이디어로<br>시작을<br>하였고</p>\n<p id='188' data-category='paragraph' style='font-size:16px'>이<br>과정에서<br>도커<br>컴포즈를<br>얹었습니다.</p>\n<h1 id='189' style='font-size:20px'>실습</h1>\n<br><header id='190' style='font-size:14px'>실습</header>\n<h1 id='191' style='font-size:16px'>git<br>clone<br>https://github.com/sleepylee02/docker_session.git</h1>\n<h1 id='192' style='font-size:16px'>cd<br>docker_session</h1>\n<p id='193' data-category='paragraph' style='font-size:16px'>docker<br>compose<br>build<br>docker<br>compose<br>up</p>\n<h1 id='194' style='font-size:16px'>localhost:8080</h1>\n<p id='195' data-category='paragraph' style='font-size:16px'>docker<br>compose<br>down</p>\n<p id='196' data-category='paragraph' style='font-size:16px'>아<br>편리하다!!</p>\n<p id='197' data-category='paragraph' style='font-size:16px'>docker<br>file과<br>docker-compose.yml<br>만<br>있으면<br>containerization<br>뚝딱!</p>\n<h1 id='198' style='font-size:18px'>실습</h1>\n<br><header id='199' style='font-size:14px'>실습</header>\n<figure id='200'><img alt=\"\" data-coord=\"top-left:(593,397); bottom-right:(1244,1563)\" /></figure>\n<br><figure id='201'><img alt=\"\" data-coord=\"top-left:(1316,396); bottom-right:(2591,1553)\" /></figure>\n<header id='202' style='font-size:14px'>실습</header>\n<br><h1 id='203' style='font-size:18px'>실습</h1>\n<h1 id='204' style='font-size:14px'>감사합니다</h1>",
    "1CPqhd-rQNjAMenzWjB0mPN5YIlcpmpvx": "<h1 id='0' style='font-size:22px'>[7회차] LLM 과제</h1>\n<h1 id='1' style='font-size:18px'>발제자: 손재훈</h1>\n<h1 id='2' style='font-size:20px'>기간</h1>\n<br><p id='3' data-category='paragraph' style='font-size:18px'>마감: 8월 4일 월요일 23시 59분<br>지각 제출: 8월 5일 화요일 23시 59분</p>\n<h1 id='4' style='font-size:20px'>Intro</h1>\n<br><p id='5' data-category='paragraph' style='font-size:16px'>안녕하세요! 이번 과제는 개별로 수행해주시면 됩니다.</p>\n<p id='6' data-category='paragraph' style='font-size:16px'>이번 과제에서는 LLM의 발전 과정에서 큰 전환점을 만들어낸 두 가지 기법을 직접 실험해봅니다:</p>\n<br><p id='7' data-category='list' style='font-size:16px'> In Context Learning</p>\n<br><p id='8' data-category='list' style='font-size:16px'> Chain of Thought prompting</p>\n<p id='9' data-category='paragraph' style='font-size:14px'>논문 참고</p>\n<br><p id='10' data-category='list' style='font-size:16px'>Language Models are Few-Shot Learners: https://arxiv.org/pdf/2005.14165</p>\n<br><p id='11' data-category='list' style='font-size:16px'>Chain-of-Thought Prompting Elicits Reasoning in Large Language Models:<br>https://arxiv.org/pdf/2201.11903</p>\n<p id='12' data-category='paragraph' style='font-size:14px'>프롬프트 엔지니어링 가이드</p>\n<br><p id='13' data-category='paragraph' style='font-size:16px'>https://www.promptingguide.ai/</p>\n<h1 id='14' style='font-size:20px'>명세</h1>\n<h1 id='15' style='font-size:20px'>Groq API로 Llama3-8B 사용하기</h1>\n<p id='16' data-category='paragraph' style='font-size:16px'>일단은 언어모델이 있어야겠죠? 저희는 Llama38B8192 를 사용할 예정입니다.</p>\n<p id='17' data-category='paragraph' style='font-size:16px'>https://groq.com/</p>\n<footer id='18' style='font-size:14px'>[7회차] LLM 과제</footer>\n<br><footer id='19' style='font-size:14px'>1</footer>\n<figure id='20'><img alt=\"\" data-coord=\"top-left:(151,141); bottom-right:(1098,672)\" /><br><figcaption id='21' style='font-size:20px'>Developers 칸에서 Free API key 를 찾아줍시다! (회원가입은 해줘야 하겠죠)</figcaption></figure>\n\n<figure id='22'><img alt=\"\" data-coord=\"top-left:(148,779); bottom-right:(1091,1148)\" /></figure>\n<p id='23' data-category='paragraph' style='font-size:20px'>여기에서 Create API Key 를 클릭해주고, 원하는 이름을 적어줍시다.</p>\n<footer id='24' style='font-size:16px'>[7회차] LLM 과제</footer>\n<br><footer id='25' style='font-size:14px'>2</footer>\n<figure id='26'><img alt=\"\" data-coord=\"top-left:(148,148); bottom-right:(1090,577)\" /></figure>\n<p id='27' data-category='paragraph' style='font-size:18px'>API 키를 복사한 후, .env 파일을 생성하여 넣어주어야 해요. 어떻게 넣어야 하는지는 제공된 파일<br>.env.example 을 참고해주시면 됩니다!</p>\n<h1 id='28' style='font-size:20px'>이렇게 말이죠!</h1>\n<table id='29' style='font-size:16px'><thead></thead><tbody><tr><td>항목</td><td>값</td><td></td></tr><tr><td>RPM</td><td>30</td><td>Request Per Minute – 분당 최대 30개의 요청 가능</td></tr><tr><td>RPD</td><td>14,400</td><td>Request Per Day – 일일 최대 14,400개의 요청 가능</td></tr><tr><td>TPM</td><td>6,000</td><td>Token Per Minute – 분당 최대 6,000개의 토큰 사용 가능</td></tr><tr><td>TPD</td><td>500,000</td><td>Token Per Day – 일일 최대 500,000개의 토큰 사용 가능</td></tr></tbody></table>\n<br><h1 id='30' style='font-size:18px'>무료 사용량 제한 기준입니다!</h1>\n<br><p id='31' data-category='paragraph' style='font-size:18px'>(사용량 제한 자체가 꽤 널널하기는 할건데, 마지막에 부랴부랴 하다가 제한에 걸려서 과제를 제대로<br>수행하지 못하게 되면 안되겠죠? 미리미리 합시다 ㅎㅎ)</p>\n<p id='32' data-category='paragraph' style='font-size:22px'>Llama3-8B로 벤치마크 테스트하고, 성능 올리기</p>\n<br><p id='33' data-category='paragraph' style='font-size:18px'>벤치마크를 활용하면 모델의 성능을 객관적으로 판단할 수 있습니다.</p>\n<br><p id='34' data-category='paragraph' style='font-size:18px'>이번에는 간단한 초등학교 수준 수학 문제인 GSM8K 데이터셋을 이용해서 Llama38B의 성능을 확<br>인하고, 추가적으로 성능을 올리는 방안에 대해서 살펴보고자 합니다.</p>\n<br><p id='35' data-category='paragraph' style='font-size:18px'> Direct prompting with few-shot example</p>\n<br><p id='36' data-category='paragraph' style='font-size:18px'>Few shot만을 이용해서 성능 변화를 확인해봅시다.</p>\n<footer id='37' style='font-size:14px'>[7회차] LLM 과제</footer>\n<br><footer id='38' style='font-size:14px'>3</footer>\n<p id='39' data-category='paragraph' style='font-size:18px'>기본적인 함수들은 전부 구현이 되어 있습니다! construct_direct_prompt 함수에 0, 3, 5를 넣고 나서</p>\n<br><p id='40' data-category='paragraph' style='font-size:16px'>run_benchmark_test 을 한 후, 명세에 맞게 파일 이름을 지정한 후 save_final_result 함수를 실행하면<br>됩니다.</p>\n<br><h1 id='41' style='font-size:18px'> CoT prompting with few-shot example</h1>\n<br><p id='42' data-category='paragraph' style='font-size:16px'>construct_CoT_prompt 함수의 #TODO 만 구현하면, 1번의 과정과 같습니다. .ipynb 에 적힌 명세를<br>따라주세요!</p>\n<br><p id='43' data-category='paragraph' style='font-size:18px'> My new prompting with few-shot example</p>\n<br><p id='44' data-category='paragraph' style='font-size:20px'>더더욱 성능을 올려봅시다! 언어모델 선택을 제외한 모든 것이 자유입니다. 오로지 성능만 올리면<br>됩니다!</p>\n<p id='45' data-category='paragraph' style='font-size:16px'> 간단한 .md 보고서 작성</p>\n<br><p id='46' data-category='paragraph' style='font-size:20px'>반드시 해당 내용들을 포함해주세요!</p>\n<p id='47' data-category='list' style='font-size:18px'>1. Direct Prompting, CoT Prompting, My Prompting을<br>0 shot, 3 shot, 5 shot 정답률을 표로 보여주세요!</p>\n<p id='48' data-category='list' style='font-size:20px'>2. CoT Prompting이 Direct Prompting에 비해<br>왜 좋을 수 있는지에 대해서 서술해주세요!</p>\n<p id='49' data-category='list' style='font-size:18px'>3. 본인이 작성한 프롬프트 기법이 CoT에 비해서<br>왜 더 좋을 수 있는지에 대해서 설명해주세요!</p>\n<p id='50' data-category='paragraph' style='font-size:18px'>보고서는 PROMPTING.md 에 작성해주세요. 알아볼 수만 있다면 형식은 전부 자유입니다.</p>\n<h1 id='51' style='font-size:22px'>제출 방법</h1>\n<p id='52' data-category='paragraph' style='font-size:18px'>YBIGTA_newbie_assignment</p>\n<br><p id='53' data-category='paragraph' style='font-size:18px'>├── 71LLM</p>\n<br><p id='54' data-category='paragraph' style='font-size:18px'>│ ├── prompting.ipynb # 작성할 파일</p>\n<br><p id='55' data-category='paragraph' style='font-size:18px'>│ ├── PROMPTING.md # 작성할 보고서</p>\n<p id='56' data-category='paragraph' style='font-size:18px'>...# 다른 폴더들</p>\n<footer id='57' style='font-size:14px'>[7회차] LLM 과제</footer>\n<br><footer id='58' style='font-size:14px'>4</footer>\n<br><p id='59' data-category='paragraph' style='font-size:18px'>│ ├── example.txt</p>\n<br><p id='60' data-category='paragraph' style='font-size:18px'># 필요시 제출</p>\n<br><p id='61' data-category='paragraph' style='font-size:18px'>│ ├── .env.example # 필요시 제출</p>\n<br><h1 id='62' style='font-size:20px'>│ ├── 결과물 txt들</h1>\n<br><p id='63' data-category='paragraph' style='font-size:20px'># (총 9개)</p>\n<br><h1 id='64' style='font-size:18px'>│ ├── ...</h1>\n<br><p id='65' data-category='paragraph' style='font-size:18px'>│</p>\n<br><p id='66' data-category='paragraph' style='font-size:18px'>└ ──</p>\n<p id='67' data-category='paragraph' style='font-size:16px'>Tip 우선 빠르게 Direct prompting과 CoT prompting을 테스트해주고, 결과물을 저장해주면 직접<br>프롬프트를 만들고 테스트하는 과정에서 API Limit에 걸리지 않겠죠?</p>\n<h1 id='68' style='font-size:22px'>채점 기준</h1>\n<h1 id='69' style='font-size:20px'>과제 미제출:</h1>\n<p id='70' data-category='list' style='font-size:16px'>총 9개의 .txt 파일이 존재하지 않는 경우<br>PROMPTING.md 에 아무것도 써져있지 않은 경우<br>그 외 아예 잘못된 방법으로 한 경우 (test 데이터로 few shot 만들기 등)</p>\n<h1 id='71' style='font-size:20px'>과제 미흡:</h1>\n<br><p id='72' data-category='paragraph' style='font-size:16px'>본인이 만든 프롬프트가 Direct prompting, CoT prompting에 비해서 성능이 낮은 경우</p>\n<h1 id='73' style='font-size:20px'>과제 제출:</h1>\n<br><p id='74' data-category='paragraph' style='font-size:16px'>본인이 만든 프롬프트가 Direct prompting, CoT prompting에 비해서 성능이 높은 경우</p>\n<h1 id='75' style='font-size:20px'>멋져요!:</h1>\n<br><p id='76' data-category='list' style='font-size:16px'>본인이 만든 프롬프트가 Direct prompting, CoT prompting에 비해서 성능이 크게 높은 경<br>우</p>\n<br><p id='77' data-category='list' style='font-size:18px'>보고서 분석 내용 우수 (둘 중 하나!)</p>\n<footer id='78' style='font-size:14px'>[7회차] LLM 과제</footer>\n<br><footer id='79' style='font-size:14px'>5</footer>",
    "1bPMh0EmqnhIZj57NIt5bHUe9_-drUo4I": "<header id='0' style='font-size:14px'>2025-2<br>YBIGTA</header>\n<h1 id='1' style='font-size:20px'>교육세션 DS 4차시 :<br>Transformer 그 이후</h1>\n<footer id='2' style='font-size:16px'>DS<br>팀장<br>김형진</footer>\n<h1 id='3' style='font-size:20px'>목<br>차</h1>\n<p id='4' data-category='list' style='font-size:14px'>1. Transformer(recap)</p>\n<p id='5' data-category='list' style='font-size:16px'>2. BERT</p>\n<p id='6' data-category='list' style='font-size:16px'>3. GPT</p>\n<p id='7' data-category='list' style='font-size:16px'>4. LLM<br></p>\n<p id='8' data-category='list' style='font-size:16px'>5. 최신<br>동향(그냥<br><br>내가<br>하고<br>싶은거)</p>\n<h1 id='9' style='font-size:14px'>Transformer</h1>\n<header id='10' style='font-size:14px'>Transformer</header>\n<br><figure id='11'><img style='font-size:20px' alt=\"Transformer\" data-coord=\"top-left:(230,165); bottom-right:(1236,1552)\" /></figure>\n<br><h1 id='12' style='font-size:16px'>핵심은<br>self-attention을<br>이용한<br>병렬처리</h1>\n<h1 id='13' style='font-size:16px'>수식<br>기억해두면<br>좋다.</h1>\n<figure id='14'><img style='font-size:20px' alt=\"Transformer\" data-coord=\"top-left:(228,159); bottom-right:(1234,1551)\" /></figure>\n<br><header id='15' style='font-size:14px'>Transformer</header>\n<h1 id='16' style='font-size:16px'>Encoder<br>+<br>Decoder<br>구조<br>확실히<br>기계번역<br>같은<br>걸<br>할때는<br>좋아보인다.</h1>\n<h1 id='17' style='font-size:16px'>하지만<br>다른<br>NLP<br>task에서도<br><br>Encoder<br>+<br>Decoder<br>구조일<br>필요가<br>있을까?</h1>\n<p id='18' data-category='paragraph' style='font-size:20px'>Transformer</p>\n<br><header id='19' style='font-size:14px'>Transformer</header>\n<figure id='20'><img alt=\"\" data-coord=\"top-left:(267,324); bottom-right:(1241,1548)\" /></figure>\n<br><h1 id='21' style='font-size:20px'>문장<br>분류,<br>개체명<br>인식<br><br>→<br>입력만<br>이해하면<br>됨<br>(인코더만<br>필요)</h1>\n<p id='22' data-category='paragraph' style='font-size:16px'>https://how.dev/answers/text-classification-in-nlp</p>\n<h1 id='23' style='font-size:18px'>LLM<br>흐름<br></h1>\n<figure id='24'><img alt=\"\" data-coord=\"top-left:(60,657); bottom-right:(2948,1430)\" /></figure>\n<footer id='25' style='font-size:14px'>https://medium.com/@lmpo/a-brief-history-of-lmms-from-transformers-2017-to-deepseek-r1-2025-dae75dd3f59a</footer>\n<h1 id='26' style='font-size:14px'>GPT</h1>\n<br><h1 id='27' style='font-size:20px'>GPT<br></h1>\n<br><h1 id='28' style='font-size:16px'>Transformer<br>Decoder<br>Only</h1>\n<br><figure id='29'><img alt=\"\" data-coord=\"top-left:(534,32); bottom-right:(2649,1511)\" /></figure>\n<footer id='30' style='font-size:14px'>https://buly.kr/4xXoPFE</footer>\n<br><h1 id='31' style='font-size:20px'>GPT<br></h1>\n<br><h1 id='32' style='font-size:18px'>문제의식<br>1<br>:<br>라벨<br>데이터의<br>부족</h1>\n<h1 id='33' style='font-size:16px'>지금도<br>부족하다...</h1>\n<br><figure id='34'><img alt=\"\" data-coord=\"top-left:(852,473); bottom-right:(1022,643)\" /></figure>\n<figure id='35'><img alt=\"\" data-coord=\"top-left:(854,871); bottom-right:(944,968)\" /></figure>\n<p id='36' data-category='list'></p>\n<br><p id='37' data-category='paragraph' style='font-size:14px'>https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf</p>\n<br><figure id='38'><img alt=\"\" data-coord=\"top-left:(153,743); bottom-right:(279,874)\" /></figure>\n<br><figure id='39'><img alt=\"\" data-coord=\"top-left:(151,534); bottom-right:(280,664)\" /></figure>\n<figure id='40'><img alt=\"\" data-coord=\"top-left:(154,953); bottom-right:(276,1081)\" /></figure>\n<br><figure id='41'><img alt=\"\" data-coord=\"top-left:(151,327); bottom-right:(277,460)\" /></figure>\n<br><h1 id='42' style='font-size:20px'>GPT<br></h1>\n<br><h1 id='43' style='font-size:16px'>문제의식<br>2<br>:<br>효율적인<br>전이<br>학습<br>방법<br>정립<br>X</h1>\n<figure id='44'><img alt=\"\" data-coord=\"top-left:(338,873); bottom-right:(1030,1106)\" /></figure>\n<br><figure id='45'><img alt=\"\" data-coord=\"top-left:(1596,831); bottom-right:(2359,1492)\" /></figure>\n<p id='46' data-category='paragraph' style='font-size:14px'>https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf</p>\n<br><h1 id='47' style='font-size:20px'>GPT<br></h1>\n<br><h1 id='48' style='font-size:16px'>해결방안<br>:<br>Generative<br>Pre-Training</h1>\n<br><figure id='49'><img style='font-size:16px' alt=\"Labeling\n되지\n않은\n대규모의\n데이터\n를\npretrain단계에서\n최대한\n학습해서,\n\n지도학습에\n대한\n의존성을\n최대한\n약화\n시키자!!\" data-coord=\"top-left:(130,356); bottom-right:(2974,1604)\" /></figure>\n<br><p id='50' data-category='paragraph' style='font-size:14px'>https://buly.kr/4xXoPFE</p>\n<br><p id='51' data-category='list' style='font-size:18px'>GPT<br><br>해결방안<br>:<br>Generative<br>Pre-Training<br>Q:<br>근데<br>어떻게<br>Labeling<br>되지<br>않은<br>데이터로<br>학습할꺼야??</p>\n<p id='52' data-category='paragraph' style='font-size:14px'>https://arxiv.org/abs/1801.10198 https://buly.kr/4xXoPFE</p>\n<br><h1 id='53' style='font-size:20px'>GPT<br></h1>\n<br><h1 id='54' style='font-size:16px'>해결방안<br>:<br>Generative<br>Pre-Training</h1>\n<br><p id='55' data-category='list' style='font-size:18px'>Q:<br>근데<br>어떻게<br>Labeling<br>되지<br>않은<br>데이터로<br>학습할꺼야??</p>\n<br><p id='56' data-category='list' style='font-size:18px'>A:<br>ICLR<br>2018에<br>게제된<br>Transformer<br>변형<br>decoder<br>모델<br>사용하기<br>!!</p>\n<p id='57' data-category='equation'>$$L_{1}(U)=\\sum\\log P(u_{i}|u_{i-k},\\ldots,u_{i-1};\\Theta)$$</p>\n<p id='58' data-category='paragraph' style='font-size:14px'>https://arxiv.org/abs/1801.10198 https://buly.kr/4xXoPFE</p>\n<br><h1 id='59' style='font-size:20px'>GPT<br></h1>\n<br><h1 id='60' style='font-size:16px'>해결방안<br>:<br>Generative<br>Pre-Training</h1>\n<br><p id='61' data-category='list' style='font-size:18px'>Q:<br>근데<br>어떻게<br>Labeling<br>되지<br>않은<br>데이터로<br>학습할꺼야??</p>\n<br><p id='62' data-category='list' style='font-size:18px'>A:<br>ICLR<br>2018에<br>게제된<br>Transformer<br>변형<br>decoder<br>모델<br>사용하기<br>!!</p>\n<p id='63' data-category='equation'>$$L_{1}(U)=\\sum\\log P(u_{i}|u_{i-k},\\ldots,u_{i-1};\\Theta)$$</p>\n<br><p id='64' data-category='paragraph' style='font-size:22px'>=><br>P(<br>next<br>word∣given<br>words<br>)</p>\n<br><p id='65' data-category='paragraph' style='font-size:16px'>EX<br>:<br>“The<br>cat<br>sat<br>on<br>the<br>mat”라는<br>단어가<br>있을때,<br><br><br><br><br><br>P(<br>mat<br>|<br><br>The<br>cat<br>sat<br>on<br>the<br>)의<br>확률을<br>조정하는<br>방식으로<br>학습<br><br><br></p>\n<p id='66' data-category='paragraph' style='font-size:14px'>https://arxiv.org/abs/1801.10198 https://buly.kr/4xXoPFE</p>\n<h1 id='67' style='font-size:14px'>BERT</h1>\n<br><h1 id='68' style='font-size:20px'>BERT<br></h1>\n<br><h1 id='69' style='font-size:16px'>Transformer<br>Encoder<br>Only</h1>\n<br><figure id='70'><img alt=\"\" data-coord=\"top-left:(684,48); bottom-right:(2625,1675)\" /></figure>\n<br><p id='71' data-category='paragraph' style='font-size:14px'>https://buly.kr/4xXoPFE</p>\n<br><h1 id='72' style='font-size:20px'>BERT</h1>\n<br><h1 id='73' style='font-size:16px'>문제의식<br>:<br>기존<br>사전학습<br>모델은<br>모두<br>단방향성</h1>\n<figure id='74'><img alt=\"\" data-coord=\"top-left:(179,357); bottom-right:(1047,1153)\" /></figure>\n<br><figure id='75'><img alt=\"\" data-coord=\"top-left:(1080,358); bottom-right:(2800,1154)\" /></figure>\n<br><p id='76' data-category='paragraph' style='font-size:16px'>이로<br>인해<br>문맥을<br>온전히<br>양방향에서<br>이해하지<br>못해,<br><br>복잡한<br>문장<br>관계나<br>문맥<br>이해에서<br>제한적<br>표현력만<br>가짐.</p>\n<p id='77' data-category='paragraph' style='font-size:14px'>https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf</p>\n<br><h1 id='78' style='font-size:20px'>BERT</h1>\n<br><h1 id='79' style='font-size:16px'>해결방안<br>:<br>그러니<br>우린<br>양방향으로<br>간다.</h1>\n<figure id='80'><img alt=\"\" data-coord=\"top-left:(200,373); bottom-right:(2683,1459)\" /></figure>\n<p id='81' data-category='paragraph' style='font-size:14px'>https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf</p>\n<br><h1 id='82' style='font-size:20px'>BERT</h1>\n<br><p id='83' data-category='paragraph' style='font-size:16px'>학습방식<br>1<br>:<br>Masked<br>Language<br>Model<br>(MLM)<br>in<br>Pretraining</p>\n<figure id='84'><img alt=\"\" data-coord=\"top-left:(127,378); bottom-right:(2861,1464)\" /></figure>\n<p id='85' data-category='paragraph' style='font-size:14px'>https://buly.kr/4xXoPFE</p>\n<br><h1 id='86' style='font-size:20px'>BERT</h1>\n<br><p id='87' data-category='paragraph' style='font-size:16px'>학습방식<br>2<br>:<br>Next<br>Sentence<br>Prediction<br>(NSP)<br>in<br>Pretraining</p>\n<p id='88' data-category='paragraph' style='font-size:14px'>https://buly.kr/4xXoPFE</p>\n<br><figure id='89'><img alt=\"\" data-coord=\"top-left:(145,404); bottom-right:(2863,1113)\" /></figure>\n<br><h1 id='90' style='font-size:18px'>BERT<br>MLM&<br>NSP</h1>\n<figure id='91'><img alt=\"\" data-coord=\"top-left:(127,355); bottom-right:(2954,1451)\" /></figure>\n<p id='92' data-category='paragraph' style='font-size:14px'>https://buly.kr/4xXoPFE</p>\n<br><h1 id='93' style='font-size:20px'>BERT</h1>\n<br><h1 id='94' style='font-size:16px'>Segment<br>Embeddings</h1>\n<figure id='95'><img alt=\"\" data-coord=\"top-left:(82,423); bottom-right:(2915,1269)\" /></figure>\n<footer id='96' style='font-size:14px'>https://buly.kr/4xXoPFE</footer>\n<h1 id='97' style='font-size:14px'>LLM</h1>\n<h1 id='98' style='font-size:18px'>WBL(World<br>Best<br>LLM) 최근<br>한국에서<br>많이<br>이슈가<br>되는<br>그것...</h1>\n<footer id='99' style='font-size:14px'>https://byline.network/2025/07/708331/</footer>\n<h1 id='100' style='font-size:18px'>LLM<br>흐름<br></h1>\n<figure id='101'><img alt=\"\" data-coord=\"top-left:(122,689); bottom-right:(2934,1439)\" /></figure>\n<p id='102' data-category='paragraph' style='font-size:14px'>https://medium.com/@lmpo/a-brief-history-of-lmms-from-transformers-2017-to-deepseek-r1-2025-dae75dd3f59a</p>\n<br><h1 id='103' style='font-size:20px'>LLM<br></h1>\n<br><h1 id='104' style='font-size:16px'>Scaling<br>Law</h1>\n<figure id='105' data-category='chart'><img data-coord=\"top-left:(131,309); bottom-right:(2717,1503)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>10^-8</td><td>10^-6</td><td>10^-4</td><td>10^-2</td><td>10^0</td></tr></thead><tbody><tr><td>item_01</td><td>100</td><td>100</td><td>100</td><td>100</td><td>100</td></tr></tbody></table></figure>\n<p id='106' data-category='paragraph' style='font-size:14px'>https://buly.kr/4xXoPFE</p>\n<br><h1 id='107' style='font-size:20px'>Scaling<br>Law<br>GPT</h1>\n<figure id='108'><img alt=\"\" data-coord=\"top-left:(122,379); bottom-right:(1588,1468)\" /></figure>\n<br><h1 id='109' style='font-size:16px'>GPT의<br>모델크기는<br><br><br>110m<br>정도였다..</h1>\n<p id='110' data-category='paragraph' style='font-size:14px'>https://buly.kr/4xXoPFE</p>\n<br><header id='111' style='font-size:18px'>Scaling<br>Law<br>GPT<br>2<br></header>\n<p id='112' data-category='paragraph' style='font-size:14px'>GPT<br>2로<br>넘어오더니<br>모델<br>크기가<br>1.5b까지<br>증가하였다...<br></p>\n<br><p id='113' data-category='paragraph' style='font-size:18px'>Scaling<br>Law<br>GPT<br>3<br></p>\n<p id='114' data-category='paragraph' style='font-size:14px'>GPT<br>3로<br>넘어오더니<br>모델<br>크기가<br>175b까지<br>증가하였다...<br></p>\n<br><h1 id='115' style='font-size:20px'>Scaling<br>Law<br>Llama<br>4</h1>\n<p id='116' data-category='paragraph' style='font-size:16px'>최근<br>Meta는<br>2TB<br>모델도<br>출시<br>예정이라<br>밝혔다.</p>\n<br><p id='117' data-category='paragraph' style='font-size:14px'>(근데<br>아직도<br>안나온데다가<br>Llama<br>4<br>Maverick<br>평가가<br>매우<br>부정적인걸<br>보면...)<br>Scaling<br>Law도<br>끝인가<br>싶다.</p>\n<br><h1 id='118' style='font-size:18px'>In-context<br>Learning</h1>\n<p id='119' data-category='paragraph' style='font-size:14px'>모델의<br>크기가<br>커지면서<br>한가지<br>잘하게<br>된것이<br>있다면,<br>few-shot-task<br>transfer이다.</p>\n<br><h1 id='120' style='font-size:14px'>In-context<br>Learning</h1>\n<p id='121' data-category='list'></p>\n<p id='122' data-category='list'></p>\n<p id='123' data-category='list'></p>\n<br><figure id='124'><img alt=\"\" data-coord=\"top-left:(1699,432); bottom-right:(2784,1467)\" /></figure>\n<br><h1 id='125' style='font-size:18px'>In-context<br>Learning</h1>\n<br><figure id='126' data-category='chart'><img data-coord=\"top-left:(474,152); bottom-right:(2659,1567)\" /><figcaption><p>Chart Title: TriviaQA</p><p>X-Axis: Parameters in LM (Billions)</p><p>Y-Axis: Accuracy</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>0.B</td><td>0.4B</td><td>0.8B</td><td>1.3B</td><td>2.6B</td><td>6.7B</td><td>13B</td><td>175B</td></tr></thead><tbody><tr><td>item_01</td><td>6Billions</td><td>14Billions</td><td>21Billions</td><td>30Billions</td><td>38Billions</td><td>45Billions</td><td>55Billions</td><td>65Billions</td></tr></tbody></table></figure>\n<br><p id='127' data-category='paragraph' style='font-size:14px'>13B-><br>175B로<br>넘어오면서<br>성능이<br>꾸준히<br>상승하였다.</p>\n<h1 id='128' style='font-size:18px'>LLM<br>흐름<br></h1>\n<figure id='129'><img alt=\"\" data-coord=\"top-left:(122,689); bottom-right:(2931,1439)\" /></figure>\n<p id='130' data-category='paragraph' style='font-size:14px'>https://medium.com/@lmpo/a-brief-history-of-lmms-from-transformers-2017-to-deepseek-r1-2025-dae75dd3f59a</p>\n<br><h1 id='131' style='font-size:18px'>LLM<br>alignment<br>당시<br>LLM의<br>한계</h1>\n<br><figure id='132'><img style='font-size:14px' alt=\"Pretraining\n→\nFinetuning\n\nEX\n:문법은\n맞지만\n쓸모\n없는\n답변생성\n\n\n\n\n\n\n\n\n\n:사람이\n원하는\n방식과\n미묘하게\n다름\n\n\n\n\n\n\n\n\n\n:사실처럼\n보이지만\n잘못된\n정보\n생성\n미묘한\n답변성능\n\" data-coord=\"top-left:(107,310); bottom-right:(2995,1596)\" /></figure>\n<br><h1 id='133' style='font-size:18px'>LLM<br>alignment<br>RLHF(Open<br>AI<br>2022)</h1>\n<br><h1 id='134' style='font-size:14px'>RLHF를<br>통해<br>사람이<br>선호하는<br>답변이<br>생성하도록<br>함.</h1>\n<figure id='135'><img alt=\"\" data-coord=\"top-left:(486,625); bottom-right:(776,1449)\" /></figure>\n<br><figure id='136'><img alt=\"\" data-coord=\"top-left:(1198,623); bottom-right:(1502,1578)\" /></figure>\n<br><figure id='137'><img alt=\"\" data-coord=\"top-left:(1907,636); bottom-right:(2282,1576)\" /></figure>\n<br><h1 id='138' style='font-size:14px'>LLM<br>alignment<br>RLHF(Open<br>AI<br>2022)</h1>\n<br><figure id='139'><img alt=\"\" data-coord=\"top-left:(327,239); bottom-right:(2827,1595)\" /></figure>\n<br><h1 id='140' style='font-size:20px'>LLM<br>alignment</h1>\n<br><h1 id='141' style='font-size:16px'>RLHF</h1>\n<br><figure id='142'><img alt=\"\" data-coord=\"top-left:(366,194); bottom-right:(2838,1602)\" /></figure>\n<br><footer id='143' style='font-size:14px'>https://arxiv.org/abs/2203.02155</footer>\n<br><p id='144' data-category='paragraph' style='font-size:14px'>LLM<br>alignment<br>ChatGPT</p>\n<br><figure id='145'><img alt=\"\" data-coord=\"top-left:(696,188); bottom-right:(2796,1604)\" /></figure>\n<br><p id='146' data-category='paragraph' style='font-size:18px'>LLM<br>alignment<br>Example</p>\n<figure id='147'><img alt=\"\" data-coord=\"top-left:(224,479); bottom-right:(700,1093)\" /></figure>\n<br><figure id='148'><img alt=\"\" data-coord=\"top-left:(747,346); bottom-right:(2843,1297)\" /></figure>\n<p id='149' data-category='paragraph' style='font-size:14px'>https://blog.scatterlab.co.kr/luda-rlhf</p>\n<h1 id='150' style='font-size:18px'>LLM<br>흐름<br></h1>\n<figure id='151'><img alt=\"\" data-coord=\"top-left:(121,690); bottom-right:(2925,1451)\" /></figure>\n<p id='152' data-category='paragraph' style='font-size:14px'>https://medium.com/@lmpo/a-brief-history-of-lmms-from-transformers-2017-to-deepseek-r1-2025-dae75dd3f59a</p>\n<h1 id='153' style='font-size:18px'>LLM<br>reasoning<br></h1>\n<br><h1 id='154' style='font-size:14px'>GPT-4.5<br>와<br>o3의<br>차이는??<br><br></h1>\n<h1 id='155' style='font-size:18px'>LLM<br>reasoning<br></h1>\n<br><h1 id='156' style='font-size:14px'>GPT-4.5<br>와<br>o3의<br>차이는??<br><br></h1>\n<br><h1 id='157' style='font-size:14px'>바로<br>추론<br>모델여부!</h1>\n<figure id='158'><img alt=\"\" data-coord=\"top-left:(1668,544); bottom-right:(2626,1540)\" /></figure>\n<figure id='159'><img alt=\"\" data-coord=\"top-left:(2634,662); bottom-right:(2758,765)\" /></figure>\n<p id='160' data-category='paragraph' style='font-size:14px'>https://thedecisionlab.com/reference-guide/philosophy/system-1-and-system-2-<br>thinking</p>\n<br><p id='161' data-category='paragraph' style='font-size:18px'>LLM<br>reasoning<br><br>System<br>1<br>VS<br>System<br>2</p>\n<figure id='162'><img alt=\"\" data-coord=\"top-left:(575,741); bottom-right:(1008,1076)\" /></figure>\n<br><figure id='163' data-category='chart'><img data-coord=\"top-left:(1127,856); bottom-right:(1411,1123)\" /><figcaption><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>(52)</td></tr></thead><tbody></tbody></table></figure>\n<br><figure id='164'><img alt=\"\" data-coord=\"top-left:(2081,815); bottom-right:(2237,955)\" /></figure>\n<figure id='165'><img alt=\"\" data-coord=\"top-left:(2056,991); bottom-right:(2172,1092)\" /></figure>\n<br><figure id='166'><img alt=\"\" data-coord=\"top-left:(2685,986); bottom-right:(2794,1095)\" /></figure>\n<figure id='167'><img alt=\"\" data-coord=\"top-left:(2067,1152); bottom-right:(2173,1267)\" /></figure>\n<figure id='168'><img alt=\"\" data-coord=\"top-left:(2088,1307); bottom-right:(2172,1412)\" /></figure>\n<br><figure id='169'><img alt=\"\" data-coord=\"top-left:(2668,1295); bottom-right:(2762,1397)\" /></figure>\n<h1 id='170' style='font-size:20px'>LLM<br>reasoning<br></h1>\n<br><h1 id='171' style='font-size:16px'>System<br>1<br>VS<br>System<br>2</h1>\n<footer id='172' style='font-size:14px'>https://www.linkedin.com/pulse/ai-reasoning-vs-non-reasoning-models-key-<br>differences-explained-qzqmf/</footer>\n<br><h1 id='173' style='font-size:20px'>LLM<br>reasoning<br></h1>\n<br><h1 id='174' style='font-size:16px'>CoT<br>NeurIPS<br>2022</h1>\n<figure id='175'><img alt=\"\" data-coord=\"top-left:(474,512); bottom-right:(1536,1073)\" /></figure>\n<figure id='176'><img alt=\"\" data-coord=\"top-left:(467,1195); bottom-right:(1539,1544)\" /></figure>\n<footer id='177' style='font-size:14px'>https://arxiv.org/abs/2205.11916</footer>\n<br><h1 id='178' style='font-size:20px'>LLM<br>reasoning<br></h1>\n<br><h1 id='179' style='font-size:16px'>ToT<br>NeurIPS<br>2023</h1>\n<figure id='180'><img alt=\"\" data-coord=\"top-left:(481,440); bottom-right:(2774,1571)\" /></figure>\n<br><p id='181' data-category='paragraph' style='font-size:14px'>https://arxiv.org/abs/2305.10601</p>\n<h1 id='182' style='font-size:20px'>LLM<br>reasoning<br></h1>\n<br><h1 id='183' style='font-size:16px'>STaR(NeurIPS<br>2022)</h1>\n<figure id='184'><img alt=\"\" data-coord=\"top-left:(463,495); bottom-right:(2317,1468)\" /></figure>\n<footer id='185' style='font-size:14px'>https://arxiv.org/abs/2203.14465</footer>\n<h1 id='186' style='font-size:20px'>LLM<br>reasoning<br></h1>\n<br><h1 id='187' style='font-size:16px'>AdaSTaR(NeurlPS<br>2025)<br>preprint</h1>\n<figure id='188' data-category='chart'><img data-coord=\"top-left:(1726,562); bottom-right:(2915,1439)\" /><figcaption><p>X-Axis: Average Log PFLOPs (J)</p><p>Y-Axis: Average Test Set Accuracy (%)</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>AdaSTR (ours)</td><td>B-STR* (Zeng et al., 2025)</td><td>Rest EM (Singh et al., 2024)</td><td>STAR (Zelikman et al., 2022)</td><td>Base Model</td><td>Owen 2.5 3B</td><td>Llama</td></tr></thead><tbody><tr><td>item_01</td><td>85%</td><td>85%</td><td>85%</td><td>85%</td><td>85%</td><td>85%</td><td>3.2%</td></tr></tbody></table></figure>\n<footer id='189' style='font-size:14px'>https://arxiv.org/abs/2505.16322</footer>\n<h1 id='190' style='font-size:20px'>LLM<br>reasoning<br></h1>\n<br><h1 id='191' style='font-size:16px'>AdaSTaR(NeurlPS<br>2025)<br>preprint</h1>\n<footer id='192' style='font-size:14px'>https://arxiv.org/abs/2505.16322</footer>\n<br><h1 id='193' style='font-size:14px'>DeepSeek-R1<br>GRPO<br>+<br>RLVR</h1>\n<h1 id='194' style='font-size:18px'>R1<br>모델학습을<br>위해<br>GRPO와<br>RLVR<br>을<br>사용한<br>것으로<br>알려져<br>있음.</h1>\n<p id='195' data-category='paragraph' style='font-size:18px'>RLVR은<br>GPT-o1에도<br>사용된<br>것으로<br>알려져<br>있음.</p>\n<br><p id='196' data-category='paragraph' style='font-size:18px'>DeepSeek-R1<br>GRPO(DeepSeek-AI<br>2024)</p>\n<figure id='197'><img alt=\"\" data-coord=\"top-left:(129,355); bottom-right:(2853,1583)\" /></figure>\n<br><p id='198' data-category='paragraph' style='font-size:14px'>https://arxiv.org/pdf/2402.03300</p>\n<br><p id='199' data-category='paragraph' style='font-size:18px'>DeepSeek-R1<br>RLVR</p>\n<br><figure id='200'><img alt=\"\" data-coord=\"top-left:(1040,163); bottom-right:(2718,997)\" /></figure>\n<br><figure id='201'><img alt=\"\" data-coord=\"top-left:(1349,967); bottom-right:(1969,1516)\" /></figure>\n<p id='202' data-category='paragraph' style='font-size:14px'>https://wikidocs.net/278478</p>\n<p id='203' data-category='paragraph' style='font-size:14px'>최신<br>동향?<br>(그냥<br>내가<br>관심있는<br>topic)</p>\n<p id='204' data-category='paragraph' style='font-size:20px'>LLM<br>Meta<br></p>\n<br><header id='205' style='font-size:14px'>최신동향</header>\n<figure id='206' data-category='chart'><img data-coord=\"top-left:(745,753); bottom-right:(2879,1637)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>평균</td><td>2022.7.10</td><td>2025.3 2</td></tr></thead><tbody><tr><td>item_01</td><td>10%</td><td>25%</td><td>75%</td></tr><tr><td>item_02</td><td>10%</td><td>5%</td><td>30%</td></tr><tr><td>item_03</td><td>10%</td><td>20%</td><td>60%</td></tr><tr><td>item_04</td><td>10%</td><td>0%</td><td>30%</td></tr></tbody></table></figure>\n<p id='207' data-category='paragraph' style='font-size:18px'>RAG(Retrieval-Augmented<br>Generation)<br>등장배경<br>:<br>할루시네이션<br>문제<br>해결<br>필요성</p>\n<br><header id='208' style='font-size:14px'>최신동향</header>\n<p id='209' data-category='paragraph' style='font-size:20px'>RAG(Retrieval-Augmented<br>Generation)<br>등장배경<br>:<br>사용자<br>맞춤<br>답변의<br>필요성</p>\n<br><header id='210' style='font-size:14px'>최신동향</header>\n<figure id='211'><img alt=\"\" data-coord=\"top-left:(79,349); bottom-right:(2940,1528)\" /></figure>\n<p id='212' data-category='paragraph' style='font-size:16px'>https://buly.kr/ChpEcmn</p>\n<p id='213' data-category='paragraph' style='font-size:20px'>RAG(Retrieval-Augmented<br>Generation)<br>등장배경<br>:<br>최신<br>답변의<br>필요성</p>\n<br><header id='214' style='font-size:14px'>최신동향</header>\n<figure id='215'><img style='font-size:16px' alt=\"Fine\ntuning에는\n상당한\n시간과\n\nGPU\n연산비용이\n들어가기\n때문에,\n\n최신성\n유지에\n한계가\n있음.\" data-coord=\"top-left:(112,369); bottom-right:(2472,1610)\" /></figure>\n<p id='216' data-category='paragraph' style='font-size:18px'>RAG(Retrieval-Augmented<br>Generation)<br>파이프라인</p>\n<br><header id='217' style='font-size:14px'>최신동향</header>\n<figure id='218'><img alt=\"\" data-coord=\"top-left:(592,247); bottom-right:(2755,1551)\" /></figure>\n<br><p id='219' data-category='paragraph' style='font-size:14px'>https://ahha.ai/2024/07/24/rag/</p>\n<p id='220' data-category='paragraph' style='font-size:18px'>RAG(Retrieval-Augmented<br>Generation)</p>\n<br><header id='221' style='font-size:14px'>최신동향</header>\n<p id='222' data-category='paragraph' style='font-size:14px'>https://ko.shaip.com/blog/rag-vs-finetuning/</p>\n<p id='223' data-category='paragraph' style='font-size:18px'>RAG(Retrieval-Augmented<br>Generation)</p>\n<br><header id='224' style='font-size:14px'>최신동향</header>\n<p id='225' data-category='paragraph' style='font-size:14px'>https://blog-ko.allganize.ai/rag-leaderboard/</p>\n<p id='226' data-category='paragraph' style='font-size:20px'>LLM<br>Meta<br></p>\n<br><p id='227' data-category='paragraph' style='font-size:14px'>최신동향</p>\n<figure id='228' data-category='chart'><img data-coord=\"top-left:(722,763); bottom-right:(2999,1637)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>평균</td><td>2022.7.10</td><td>2025.3_2</td></tr></thead><tbody><tr><td>item_01</td><td>10</td><td>15</td><td>75</td></tr><tr><td>item_02</td><td>10</td><td>12</td><td>50</td></tr><tr><td>item_03</td><td>10</td><td>3</td><td>60</td></tr><tr><td>item_04</td><td>10</td><td>2</td><td>40</td></tr></tbody></table></figure>\n<p id='229' data-category='paragraph' style='font-size:18px'>LLM<br>agent<br>등장배경<br>:<br>수동적<br>시스템에서<br>능동적<br>시스템으로</p>\n<br><header id='230' style='font-size:14px'>최신동향</header>\n<figure id='231'><img alt=\"\" data-coord=\"top-left:(423,388); bottom-right:(2460,1562)\" /></figure>\n<br><p id='232' data-category='paragraph' style='font-size:14px'>https://developer.nvidia.com/blog/introduction-to-llm-agents/</p>\n<h1 id='233' style='font-size:20px'>LLM<br>agent<br>-<br>산업동향<br><br></h1>\n<br><header id='234' style='font-size:14px'>최신동향</header>\n<h1 id='235' style='font-size:16px'>복합기업:<br>siemens</h1>\n<br><figure id='236'><img alt=\"\" data-coord=\"top-left:(606,300); bottom-right:(2939,1566)\" /></figure>\n<br><p id='237' data-category='paragraph' style='font-size:14px'>https://www.siemens.com/global/en/products/automation/topic-areas/industrial-ai/industrial-copilot.html</p>\n<h1 id='238' style='font-size:20px'>LLM<br>agent<br>-<br>산업동향<br></h1>\n<br><h1 id='239' style='font-size:16px'>반도체<br>기업<br>:<br>Synopsys</h1>\n<br><header id='240' style='font-size:14px'>최신동향</header>\n<p id='241' data-category='paragraph' style='font-size:14px'>https://www.synopsys.com/blogs/chip-design/agentengineer-technology-transforming-engineering-workflows.html</p>\n<br><figure id='242'><img alt=\"\" data-coord=\"top-left:(921,608); bottom-right:(2683,1509)\" /></figure>\n<h1 id='243' style='font-size:20px'>LLM<br>agent-<br>Research<br></h1>\n<br><header id='244' style='font-size:14px'>최신동향</header>\n<h1 id='245' style='font-size:16px'>AI<br>co-scientist(google)</h1>\n<figure id='246'><img alt=\"\" data-coord=\"top-left:(273,537); bottom-right:(2807,1496)\" /></figure>\n<footer id='247' style='font-size:14px'>https://arxiv.org/abs/2502.18864</footer>\n<br><h1 id='248' style='font-size:18px'>LLM<br>agent-<br>Research<br><br>AI<br>co-scientist(google)</h1>\n<br><header id='249' style='font-size:14px'>최신동향</header>\n<figure id='250'><img alt=\"\" data-coord=\"top-left:(456,262); bottom-right:(2453,602)\" /></figure>\n<figure id='251'><img alt=\"\" data-coord=\"top-left:(1793,680); bottom-right:(2539,926)\" /></figure>\n<figure id='252'><img alt=\"\" data-coord=\"top-left:(491,1141); bottom-right:(2534,1456)\" /></figure>\n<footer id='253' style='font-size:14px'>https://arxiv.org/abs/2502.18864</footer>\n<br><p id='254' data-category='paragraph' style='font-size:18px'>LLM<br>agent-<br>Research<br><br>The<br>AI<br>Scientist-v2(Sakana-AI)</p>\n<br><header id='255' style='font-size:14px'>최신동향</header>\n<figure id='256'><img alt=\"\" data-coord=\"top-left:(241,404); bottom-right:(2878,1510)\" /></figure>\n<p id='257' data-category='paragraph' style='font-size:14px'>https://arxiv.org/abs/2504.08066</p>\n<header id='258' style='font-size:14px'>최신동향</header>\n<br><h1 id='259' style='font-size:18px'>LLM<br>agent-<br>Research<br><br>The<br>AI<br>Scientist-v2(Sakana-AI)</h1>\n<footer id='260' style='font-size:14px'>https://arxiv.org/abs/2504.08066</footer>\n<br><h1 id='261' style='font-size:20px'>LLM<br>agent-<br>Research<br></h1>\n<br><header id='262' style='font-size:14px'>최신동향</header>\n<br><h1 id='263' style='font-size:16px'>Can<br>LLMs<br>Generate<br>Novel<br>Research<br>Ideas?<br>(ICLR<br>2025)</h1>\n<figure id='264'><img style='font-size:14px' alt=\"https://arxiv.org/abs/2304.03442\" data-coord=\"top-left:(127,369); bottom-right:(2815,1651)\" /></figure>\n<br><h1 id='265' style='font-size:20px'>LLM<br>agent-<br>Multi<br>agent<br></h1>\n<br><header id='266' style='font-size:14px'>최신동향</header>\n<br><p id='267' data-category='paragraph' style='font-size:16px'>Generative<br>Agents:<br>Interactive<br>Simulacra<br>of<br>Human<br>Behavior</p>\n<figure id='268'><img alt=\"\" data-coord=\"top-left:(211,367); bottom-right:(2416,1507)\" /></figure>\n<footer id='269' style='font-size:14px'>https://arxiv.org/abs/2304.03442</footer>\n<h1 id='270' style='font-size:14px'>감사합니다!</h1>",
    "1-zp-jBpVDkY-gGzQsELcGDzA1eRfyfGT": "<h1 id='0' style='font-size:22px'>Overview of Computer Vision</h1>\n<h1 id='1' style='font-size:20px'>25기 정재빈</h1>\n<h1 id='2' style='font-size:16px'>YBIGTA DS Team</h1>\n<h1 id='3' style='font-size:18px'>July 25th 2025</h1>\n<h1 id='4' style='font-size:14px'>のac</h1>\n<br><table id='5' style='font-size:14px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>1/ 41</td></tr></tbody></table>\n<br><header id='6' style='font-size:22px'>Agenda</header>\n<h1 id='7' style='font-size:14px'>1</h1>\n<br><h1 id='8' style='font-size:20px'>Quick Recap of MLPs</h1>\n<h1 id='9' style='font-size:14px'>2</h1>\n<br><h1 id='10' style='font-size:18px'>CNNs</h1>\n<h1 id='11' style='font-size:16px'>3 ViT</h1>\n<h1 id='12' style='font-size:16px'>4</h1>\n<br><h1 id='13' style='font-size:20px'>Computer Vision!</h1>\n<h1 id='14' style='font-size:14px'>のac</h1>\n<br><table id='15' style='font-size:14px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>2/ 41</td></tr></tbody></table>\n<h1 id='16' style='font-size:20px'>1: Quick Recap of MLPs</h1>\n<h1 id='17' style='font-size:14px'>の90</h1>\n<br><table id='18' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>3/ 41</td></tr></tbody></table>\n<br><header id='19' style='font-size:20px'>Multi-Layer Perceptron</header>\n<figure id='20'><img style='font-size:14px' alt=\"��(up)\ny1 y2 y3 ... ... ... yk\nVg\nVos V12 Vas\nV12\n中 (uj \n1 Z1 Z2 Z3 ... ... ··· Zj\nWis\nWag\nWas\nWas\n1 x1\nx2 X3 ... ... ... xn\" data-coord=\"top-left:(149,131); bottom-right:(590,444)\" /></figure>\n<table id='21' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈</td><td>(YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>4 / 41</td></tr></tbody></table>\n<br><header id='22' style='font-size:20px'>MLP: Benefits, Downsides</header>\n<table id='23' style='font-size:18px'><thead><tr><td>Benefits</td><td>Downsides</td></tr></thead><tbody><tr><td>- Universal Function Approximators - Basic Deep Learning Architecture</td><td>- Complex Data Highly inefficient - No Particular Inductive Bias</td></tr></tbody></table>\n<h1 id='24' style='font-size:14px'>のac</h1>\n<br><table id='25' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>5 / 41</td></tr></tbody></table>\n<footer id='26' style='font-size:20px'>2: CNNs</footer>\n<h1 id='27' style='font-size:14px'> の90</h1>\n<br><table id='28' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>6/ 41</td></tr></tbody></table>\n<br><header id='29' style='font-size:22px'>Detour: Inductive Bias!</header>\n<h1 id='30' style='font-size:20px'>What is Inductive Bias?</h1>\n<p id='31' data-category='list' style='font-size:18px'>Set of assumptions that the learner uses to predict outputs of given unseen<br>inputs</p>\n<p id='32' data-category='list' style='font-size:18px'>Limits the hypothesis space</p>\n<br><p id='33' data-category='list' style='font-size:20px'>Example) Linear Regression Relationship between input and output is<br>linear</p>\n<figure id='34'><img style='font-size:14px' alt=\"Good optimum\ninductive\nbias\nTraining\ndata\nHypothesis space\" data-coord=\"top-left:(102,269); bottom-right:(346,521)\" /></figure>\n<br><figure id='35'><img style='font-size:14px' alt=\"inductive\nbias\nTraining\ndata\nGood optimum\nHypothesis space\" data-coord=\"top-left:(405,267); bottom-right:(658,521)\" /></figure>\n<br><h1 id='36' style='font-size:14px'>のac</h1>\n<br><table id='37' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>71 41</td></tr></tbody></table>\n<br><header id='38' style='font-size:22px'>Detour: Inductive Bias</header>\n<table id='39' style='font-size:20px'><thead><tr><td>Component</td><td>Entities</td><td>Relations</td><td>Rel. inductive bias</td><td>Invariance</td></tr></thead><tbody><tr><td>Fully connected</td><td>Units</td><td>All-to-all</td><td>Weak</td><td>-</td></tr><tr><td>Convolutional</td><td>Grid elements</td><td>Local</td><td>Locality</td><td>Spatial translation</td></tr><tr><td>Recurrent</td><td>Timesteps</td><td>Sequential</td><td>Sequentiality</td><td>Time translation</td></tr><tr><td>Graph network</td><td>Nodes</td><td>Edges</td><td>Arbitrary</td><td>Node, edge permutations</td></tr></tbody></table>\n<p id='40' data-category='paragraph' style='font-size:18px'>Table 1: Various relational inductive biases in standard deep learning components. See also Section 2.</p>\n<h1 id='41' style='font-size:14px'>のac</h1>\n<br><table id='42' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>8 / 41</td></tr></tbody></table>\n<br><h1 id='43' style='font-size:22px'>Convolutional Neural Network: Inductive Bias</h1>\n<h1 id='44' style='font-size:20px'>Convolutional Neural Network (CNN)</h1>\n<figure id='45'><img style='font-size:14px' alt=\"3 H2 H3 H H5\nFixed Window Weight (WI, W2, W3)\nXI V い X4 X5\" data-coord=\"top-left:(20,169); bottom-right:(375,384)\" /></figure>\n<br><h1 id='46' style='font-size:20px'>Multi-Layer Perceptron (MLP)</h1>\n<figure id='47'><img style='font-size:14px' alt=\"H1 H2 H3 H4 H5\nWij\nXI X2 X3 is\" data-coord=\"top-left:(469,163); bottom-right:(692,382)\" /></figure>\n<p id='48' data-category='list' style='font-size:16px'>Locally(Sparse) connected</p>\n<p id='49' data-category='list' style='font-size:18px'>Same weight for all inputs</p>\n<br><p id='50' data-category='list' style='font-size:16px'>✓ Fully(Dense) connected</p>\n<p id='51' data-category='list' style='font-size:16px'>✓ Different weight for all inputs</p>\n<h1 id='52' style='font-size:16px'>a a</h1>\n<br><table id='53' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>9 / 41</td></tr></tbody></table>\n<br><header id='54' style='font-size:20px'>Convolutional Neural Network</header>\n<h1 id='55' style='font-size:18px'>Convolution Neural Network (CNN)</h1>\n<br><figure id='56'><img style='font-size:14px' alt=\"Input\nOutput\nPooling Pooling Pooling\n0.2\nHorse\n0.7\nZebra\n0.1\nDog\nSoftMax\nActivation\nConvolution Convolution Convolution\nFunction\n+ + +\nKernel ReLU ReLU ReLU Flatten\nLayer\nFully\nConnected\nFeature Maps\nLayer\nProbabilistic\nFeature Extraction Classification\nDistribution\" data-coord=\"top-left:(28,166); bottom-right:(731,451)\" /></figure>\n<h1 id='57' style='font-size:14px'>クAC</h1>\n<br><table id='58' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>10 / 41</td></tr></tbody></table>\n<br><header id='59' style='font-size:22px'>CNN: Convolutional Layer</header>\n<figure id='60'><img style='font-size:14px' alt=\"1 0 1 0 1 0 1 0 1 1 2 3 31\n0 1 1 0 1 1 0 1 1 * 4 5 6\n1 0 1 0 1 0 1 0 1 7 8 9\n1 0 1 1 1 0 Image patch Kernel\n(Local receptive field) (filter)\n0 1 1 0 1 1 Output\n1 0 1 0 1 0\nInput\" data-coord=\"top-left:(103,135); bottom-right:(655,316)\" /></figure>\n<p id='61' data-category='list' style='font-size:18px'>Input: H x W x C : 6 x 6 x 1<br>Kernel: h x W : 3 x 3<br>Output: H' x W x KN : 4 x 4 x 1</p>\n<br><h1 id='62' style='font-size:20px'>KN: Kernel Number</h1>\n<p id='63' data-category='paragraph' style='font-size:16px'>のac</p>\n<br><table id='64' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>11/41</td></tr></tbody></table>\n<br><header id='65' style='font-size:20px'>CNN: Kernels</header>\n<h1 id='66' style='font-size:18px'>What are they? Feature Extractors</h1>\n<table id='67' style='font-size:18px'><thead><tr><td>Original</td><td>Gaussian Blur</td><td>Sharpen</td><td>Edge Detection</td></tr></thead><tbody><tr><td>0 0 0 0 1 0 0 0</td><td>1 2 1 1 2 4 2 16 1 2 1</td><td><figure><img alt=\"-1 0\n0\n1 5 -1\n0 -1 0\" data-coord=\"top-left:(389,213); bottom-right:(543,299)\" /></figure></td><td>- 1 -1 -1 1 8 -1 -1 -1 -1</td></tr><tr><td><figure><img alt=\"\" data-coord=\"top-left:(51,325); bottom-right:(171,445)\" /></figure></td><td><figure><img alt=\"\" data-coord=\"top-left:(227,325); bottom-right:(347,444)\" /></figure></td><td><figure><img alt=\"\" data-coord=\"top-left:(402,325); bottom-right:(523,445)\" /></figure></td><td><figure><img alt=\"\" data-coord=\"top-left:(579,325); bottom-right:(699,445)\" /></figure></td></tr></tbody></table>\n<h1 id='68' style='font-size:14px'>のac</h1>\n<br><table id='69' style='font-size:14px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>12/41</td></tr></tbody></table>\n<br><header id='70' style='font-size:22px'>CNN: Pooling Layer</header>\n<h1 id='71' style='font-size:18px'>Max Pooling</h1>\n<br><h1 id='72' style='font-size:18px'>Avg Pooling</h1>\n<br><figure id='73'><img style='font-size:16px' alt=\"4 9 2 5 4 9 2 5\n5 6 2 4 9 5 5 6 2 4 6.0 3.3\n2 4 5 4 6 8 2 4 5 4 4.3 5.3\n5 6 8 4 5 6 8 4\" data-coord=\"top-left:(25,162); bottom-right:(726,349)\" /></figure>\n<p id='74' data-category='list' style='font-size:20px'>Max/Mean/Min/. Pooling<br>Main Purpose: Downsampling</p>\n<h1 id='75' style='font-size:14px'>の90</h1>\n<br><table id='76' style='font-size:14px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>13 / 41</td></tr></tbody></table>\n<br><header id='77' style='font-size:20px'>CNN: Stride + Padding</header>\n<h1 id='78' style='font-size:18px'>Stride</h1>\n<figure id='79' data-category='chart'><img data-coord=\"top-left:(75,118); bottom-right:(286,276)\" /><figcaption><p>Chart Title: Convolution with Stride=1</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Blue</td><td>Red</td></tr></thead><tbody><tr><td>item_01</td><td>1Not specified</td><td>1Not specified</td></tr></tbody></table></figure>\n<figure id='80' data-category='chart'><img data-coord=\"top-left:(73,294); bottom-right:(310,463)\" /><figcaption><p>Chart Title: Convolution with Stride=2</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Blue</td><td>Red</td></tr></thead><tbody><tr><td>item_01</td><td>2Not specified</td><td>4Not specified</td></tr></tbody></table></figure>\n<br><h1 id='81' style='font-size:22px'>Padding</h1>\n<h1 id='82' style='font-size:16px'>image</h1>\n<br><figure id='83' data-category='chart'><img data-coord=\"top-left:(466,139); bottom-right:(660,349)\" /><figcaption><p>Chart Title: image</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td><td>10</td><td>11</td><td>12</td></tr></thead><tbody><tr><td>item_01</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr></tbody></table></figure>\n<p id='84' data-category='list' style='font-size:20px'>Regulate Downsampling<br>Zero( Most<br>common)/Mean/Max/....<br>Padding</p>\n<br><h1 id='85' style='font-size:20px'>Increase downsampling</h1>\n<br><p id='86' data-category='paragraph' style='font-size:14px'>のac</p>\n<br><table id='87' style='font-size:14px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>14 / 41</td></tr></tbody></table>\n<br><header id='88' style='font-size:18px'>Convolutional Layer Form ula</header>\n<p id='89' data-category='equation'>$$n_{o u t}=\\left\\lfloor{\\frac{n_{i n}+2p-k}{s}}\\right\\rfloor+1$$</p>\n<p id='90' data-category='paragraph' style='font-size:22px'>nin: number of input features<br>nout: number of output features<br>k: convolution kernel size<br>p: convolution padding size<br>S: convolution stride size</p>\n<p id='91' data-category='paragraph' style='font-size:14px'>- のac</p>\n<br><table id='92' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>15/41</td></tr></tbody></table>\n<br><header id='93' style='font-size:22px'>CNN: Fully-Connected Layer</header>\n<h1 id='94' style='font-size:20px'>It's just a MLP!</h1>\n<figure id='95'><img style='font-size:14px' alt=\"Dense (fully connected) layer\nDense Unit\nLayer\nLayer\nPrevious\nNext\" data-coord=\"top-left:(23,128); bottom-right:(736,496)\" /></figure>\n<h1 id='96' style='font-size:16px'>クAC</h1>\n<br><table id='97' style='font-size:18px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>16/ 41</td></tr></tbody></table>\n<br><h1 id='98' style='font-size:22px'>CNN: Progression in its architecture</h1>\n<figure id='99'><img style='font-size:14px' alt=\"mite container ship motor scooter leopard\nmite container ship motor scooter leopard\nblack widow lifeboat go-kart jaguar\ncockroach amphibian moped cheetah\ntick fireboat bumper car snow leopard\nstarfish drilling platform golfcart Egyptian cat\ngrille mus hroom cherry Madagascar cat\ncon vertible agaric dalmatian squirrel monkey\ngrille mushroom grape spider monkey\npickup jelly fungus elderberry titi\nbeach wagon gill fungus ffordshire bullterrier indri\nfire engine dead-man's-fingers currant howler monkey\" data-coord=\"top-left:(21,120); bottom-right:(730,392)\" /></figure>\n<h1 id='100' style='font-size:20px'>ImageNet Large Scale Visual Recognition Challenge (ILSVRC)</h1>\n<br><h1 id='101' style='font-size:18px'>Dataset: ImageNet-1000 1000 classes</h1>\n<h1 id='102' style='font-size:14px'>の90</h1>\n<br><table id='103' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>17/41</td></tr></tbody></table>\n<br><header id='104' style='font-size:20px'>ImageNet Challenge!</header>\n<figure id='105' data-category='chart'><img data-coord=\"top-left:(28,81); bottom-right:(735,435)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>2010</td><td>2011</td><td>2012</td><td>2013</td><td>2014 (Zeiler & Fergus)</td><td>2014 (Simonyan & Zisserman)</td><td>2014 (VGG)</td><td>2015</td><td>2016</td><td>2017</td><td>Human</td></tr></thead><tbody><tr><td>item_01</td><td>28.2%</td><td>25.8%</td><td>16.4%</td><td>11.7%</td><td>7.3%</td><td>6.7%</td><td>3.6%</td><td>3%</td><td>2.3%</td><td>5.1%</td><td>5.1%</td></tr></tbody></table></figure>\n<p id='106' data-category='list' style='font-size:18px'>General Trend: Deeper, Larger CNN's Better performance!<br>But is that really the case?</p>\n<br><h1 id='107' style='font-size:14px'>クAC</h1>\n<br><table id='108' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>18 / 41</td></tr></tbody></table>\n<br><header id='109' style='font-size:22px'>ResNet Paper:</header>\n<p id='110' data-category='list' style='font-size:20px'>Is learning better networks<br>as easy as stacking more<br>layers?</p>\n<p id='111' data-category='list' style='font-size:20px'>Intuition:</p>\n<p id='112' data-category='paragraph' style='font-size:18px'>If there exists a<br>shallow and a deep<br>network, shouldn't the<br>deep network perform<br>just as well or better<br>than the shallow?</p>\n<br><p id='113' data-category='paragraph' style='font-size:18px'>How? → Copy the<br>shallow network,<br>the rest of the<br>layers perform<br>identity mapping</p>\n<br><figure id='114' data-category='chart'><img data-coord=\"top-left:(316,190); bottom-right:(724,328)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>iter. (le4)</td><td>20-layer</td><td>56-layer</td></tr></thead><tbody><tr><td>item_01</td><td>100%</td><td>20%</td><td>25%</td></tr></tbody></figure></table>\n<br><caption id='115' style='font-size:16px'>Figure 1. Training error (left) and test error (right) on CIFAR-10<br>with 20-layer and 56-layer \"plain\" networks. The deeper network<br>has higher training error, and thus test error. Similar phenomena<br>on ImageNet is presented in Fig. 4.</caption>\n<h1 id='116' style='font-size:14px'>の90</h1>\n<br><table id='117' style='font-size:14px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>19 / 41</td></tr></tbody></table>\n<br><header id='118' style='font-size:20px'>ResNet: Residual Connection</header>\n<figure id='119'><img style='font-size:22px' alt=\"x\n▼\nlayer\nF(. ) identity\nlayer\n+\nx + F(x)\" data-coord=\"top-left:(193,105); bottom-right:(583,379)\" /></figure>\n<p id='120' data-category='list' style='font-size:18px'>x f(x) + X<br>Previous: Learn how to map X to desired output y from scratch<br>Instead: Learn to adjust X to get desired output y</p>\n<br><h1 id='121' style='font-size:14px'>のac</h1>\n<br><table id='122' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>20 / 41</td></tr></tbody></table>\n<br><header id='123' style='font-size:20px'>ResNet: Intuitive Explanation</header>\n<figure id='124'><img alt=\"\" data-coord=\"top-left:(27,98); bottom-right:(727,391)\" /></figure>\n<p id='125' data-category='list' style='font-size:16px'>Before: One person to another<br>ResNet: 3rd person gets to hear the second person's interpretation as<br>well as the first</p>\n<br><p id='126' data-category='list' style='font-size:16px'>And then the 5th person gets to hear....<br>Less likely, for training signal to get lost as layers get deeper and deeper</p>\n<br><table id='127' style='font-size:14px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>21 / 41</td></tr></tbody></table>\n<footer id='128' style='font-size:20px'>3: ViT</footer>\n<h1 id='129' style='font-size:14px'>관 のac</h1>\n<br><table id='130' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>22 / 41</td></tr></tbody></table>\n<br><header id='131' style='font-size:22px'>Transformers</header>\n<h1 id='132' style='font-size:20px'>In 2017, this paper was released</h1>\n<h1 id='133' style='font-size:18px'>Attention Is All You Need</h1>\n<h1 id='134' style='font-size:16px'>Ashish Vaswani'</h1>\n<br><h1 id='135' style='font-size:14px'>Google Brain</h1>\n<br><h1 id='136' style='font-size:16px'>Noam Shazeer'</h1>\n<br><h1 id='137' style='font-size:16px'>Google Brain</h1>\n<br><h1 id='138' style='font-size:16px'>Niki Parmar'</h1>\n<br><h1 id='139' style='font-size:16px'>Google Research</h1>\n<br><h1 id='140' style='font-size:16px'>Jakob Uszkoreit'</h1>\n<br><h1 id='141' style='font-size:16px'>Google Research</h1>\n<br><h1 id='142' style='font-size:16px'>avaswani @google.com noam@google.com nikip@google.com uaz@google.com</h1>\n<h1 id='143' style='font-size:14px'>Llion Jones'</h1>\n<br><h1 id='144' style='font-size:14px'>Aidan N. Gomez*†</h1>\n<p id='145' data-category='paragraph' style='font-size:14px'>Illia Polosukhin'<br>illia.polosukhin@gmail.com</p>\n<h1 id='146' style='font-size:16px'>Abstract</h1>\n<p id='147' data-category='paragraph' style='font-size:14px'>The dominant sequence transduction models are based on complex recurrent or<br>convolutional neural networks in an encoder-decoder configuration. The best<br>performing models also connect the encoder and decoder through an attention<br>mechanism. We propose a new simple network architecture, the Transformer,<br>based solely on attention mechanisms, dispensing with recurrence and convolutions<br>entirely. Experiments on two machine translation tasks show these models to<br>be superior in quality while being more parallelizable and requiring significantly<br>less time to train. Our model achieves 28.4 BLEU on the WMT 2014 English-<br>to-German translation task, improving over the existing best results, including<br>ensembles by over 2 BLEU. On the WMT 2014 English-to-French translation task,<br>our model establishes a new single-model state-of-the-art BLEU score of 41.0 after<br>training for 3.5 days on eight GPUs, a small fraction of the training costs of the<br>best models from the literature. We show that the Transformer generalizes well to<br>other tasks by applying it successfully to English constituency parsing both with<br>large and limited training data.</p>\n<br><header id='148' style='font-size:20px'>2017<br>Jun<br>12<br>[cs.CL]<br>ivition</header>\n<br><footer id='149' style='font-size:18px'>25기 정재빈 (YBIGTA DS Team) Overview of Computer Vision</footer>\n<br><footer id='150' style='font-size:16px'>ac</footer>\n<br><h1 id='151' style='font-size:16px'>Google Research</h1>\n<br><h1 id='152' style='font-size:16px'>llion@google.com</h1>\n<br><h1 id='153' style='font-size:16px'>Lukasz Kalser*</h1>\n<br><h1 id='154' style='font-size:16px'>University of Toronto</h1>\n<br><p id='155' data-category='paragraph' style='font-size:14px'>aidan@cs . toronto.edu</p>\n<br><h1 id='156' style='font-size:16px'>Google Brain</h1>\n<br><p id='157' data-category='paragraph' style='font-size:16px'>lukaszkaiser@google.com</p>\n<p id='158' data-category='paragraph' style='font-size:18px'>July 25th 2025</p>\n<br><p id='159' data-category='paragraph' style='font-size:16px'>23 / 41</p>\n<br><header id='160' style='font-size:18px'>Detour: Transformers in Language</header>\n<h1 id='161' style='font-size:20px'>A Brief History of LLMs</h1>\n<figure id='162' data-category='chart'><img data-coord=\"top-left:(26,221); bottom-right:(739,419)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>2017</td><td>2018</td><td>2019</td><td>2020</td><td>2021</td><td>2022</td><td>2023</td><td>2024</td><td>2025</td></tr></thead><tbody><tr><td>item_01</td><td>0JUN</td><td>0JUN</td><td>0JUN</td><td>0JUN</td><td>0JUN</td><td>0JUN</td><td>0JUN</td><td>0JUN</td><td>0JUN</td></tr></tbody></table></figure>\n<h1 id='163' style='font-size:14px'>7AC</h1>\n<br><table id='164' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>24 / 41</td></tr></tbody></table>\n<br><header id='165' style='font-size:22px'>Transformers in Vision?</header>\n<h1 id='166' style='font-size:20px'>Applying Transformers to Vision?</h1>\n<p id='167' data-category='paragraph' style='font-size:16px'>Table 1: Maximum path lengths, per-layer complexity and minimum number of sequential operations<br>for different layer types. n is the sequence length, d is the representation dimension, k is the kernel<br>size of convolutions and T the size of the neighborhood in restricted self-attention.</p>\n<table id='168' style='font-size:16px'><thead><tr><td>Layer Type</td><td>Complexity per Layer</td><td>Sequential Operations</td><td>Maximum Path Length</td></tr></thead><tbody><tr><td>Self-Attention</td><td>O(n2 · d)</td><td>O(1)</td><td>O(1)</td></tr><tr><td>Recurrent</td><td>O(n · d2)</td><td>O(n)</td><td>O(n)</td></tr><tr><td>Convolutional</td><td>O(k · n · d2)</td><td>O(1)</td><td>O(logk (n</td></tr><tr><td>Self-Attention (restricted)</td><td>O(r · n · d)</td><td>O(1)</td><td>O(n/r)</td></tr></tbody></table>\n<p id='169' data-category='paragraph' style='font-size:18px'>\"Naive application of self-attention to images would require that each pixel<br>attends to every other pixel. With quadratic cost in the number of pixels,<br>this does not scale to realistic input sizes. =</p>\n<br><h1 id='170' style='font-size:18px'>Then, how?</h1>\n<h1 id='171' style='font-size:14px'>のac</h1>\n<br><table id='172' style='font-size:14px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>25 / 41</td></tr></tbody></table>\n<br><header id='173' style='font-size:22px'>Vision Transformers</header>\n<h1 id='174' style='font-size:20px'>In 2021, this paper was published.</h1>\n<h1 id='175' style='font-size:14px'>Published as a conference paper at ICLR 2021</h1>\n<p id='176' data-category='paragraph' style='font-size:20px'>AN IMAGE IS WORTH 16x16 WORDS:<br>TRANSFORMERS FOR IMAGE RECOGNITION AT SCALE</p>\n<header id='177' style='font-size:14px'>2021<br>Jun<br>3<br>[cs.CV]<br>2</header>\n<br><p id='178' data-category='paragraph' style='font-size:16px'>Alexey Dosovitskiy*1, Lucas Beyer', Alexander Kolesnikov', Dirk Weissenborn',<br>Xiaohua Zhai', Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer,<br>Georg Heigold, Sylvain Gelly, Jakob Uszkoreit, Neil Houlsby*.!<br>*equal technical contribution, †equal advising<br>Google Research, Brain Team<br>{adosovitskly, neilhoulsby}@google.com</p>\n<h1 id='179' style='font-size:18px'>ABSTRACT</h1>\n<p id='180' data-category='paragraph' style='font-size:14px'>While the Transformer architecture has become the de-facto standard for natural<br>language processing tasks, its applications to computer vision remain limited. In<br>vision, attention is either applied in conjunction with convolutional networks, or<br>used to replace certain components of convolutional networks while keeping their<br>overall structure in place. We show that this reliance on CNNs is not necessary<br>and a pure transformer applied directly to sequences of image patches can perform<br>very well on image classification tasks. When pre-trained on large amounts of<br>data and transferred to multiple mid-sized or small image recognition benchmarks<br>(ImageNet, CIFAR-100, VTAB, etc.), Vision Transformer (ViT) attains excellent<br>results compared to state-of-the-art convolutional networks while requiring sub-<br>stantially fewer computational resources to train </p>\n<h1 id='181' style='font-size:16px'>a a</h1>\n<br><table id='182' style='font-size:18px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>26 / 41</td></tr></tbody></table>\n<br><h1 id='183' style='font-size:20px'>Vision Transformer: Architecture</h1>\n<figure id='184'><img style='font-size:14px' alt=\"Vision Transformer (ViT) Transformer Encoder\nClass L X\n+\nBird MLP\nBall\nHead\nCar MLP\nNorm\nTransformer Encoder\n+\nPatch + Position Multi-Head\n▶ 0 �\nEmbedding\nAttention\n* Extra learnable\n[class] embedding Linear Projection of Flattened Patches\nNorm\nEmbedded\nPatches\" data-coord=\"top-left:(112,103); bottom-right:(644,379)\" /></figure>\n<caption id='185' style='font-size:18px'>Figure 1: Model overview. We split an image into fixed-size patches, linearly embed each of them,<br>add position embeddings, and feed the resulting sequence of vectors to a standard Transformer<br>encoder. In order to perform classification, we use the standard approach of adding an extra learnable<br>\"classification token\" to the sequence. The illustration of the Transformer encoder was inspired by<br>Vaswani et al. (2017)</caption>\n<h1 id='186' style='font-size:14px'>09 Q</h1>\n<br><table id='187' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>27 / 41</td></tr></tbody></table>\n<br><header id='188' style='font-size:20px'>ViT: Patchify the Image</header>\n<figure id='189'><img alt=\"\" data-coord=\"top-left:(9,141); bottom-right:(297,427)\" /></figure>\n<br><figure id='190'><img alt=\"\" data-coord=\"top-left:(461,145); bottom-right:(741,421)\" /></figure>\n<h1 id='191' style='font-size:14px'>큰 のac</h1>\n<br><table id='192' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>28/41</td></tr></tbody></table>\n<br><header id='193' style='font-size:22px'>ViT: Linear Projection</header>\n<figure id='194'><img style='font-size:18px' alt=\"Add positional\nembedding: learned D-\ndim vector per position + + + + + + + + +\nLinear projection to\nD-dimensional vector\nN input patches, each\nof shape 3x16x16\" data-coord=\"top-left:(24,149); bottom-right:(734,342)\" /></figure>\n<h1 id='195' style='font-size:20px'>\"standard learnable 1D position embeddings</h1>\n<h1 id='196' style='font-size:14px'>クAC</h1>\n<br><table id='197' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>29 / 41</td></tr></tbody></table>\n<br><header id='198' style='font-size:20px'>ViT: Transformer</header>\n<p id='199' data-category='paragraph' style='font-size:18px'>This component is the same as the NLP version, using just the<br>encoder to get the embeddings of each patch!</p>\n<figure id='200' data-category='chart'><img data-coord=\"top-left:(28,162); bottom-right:(742,552)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>transformer_encoder</td><td>CLS_token</td><td>CLS_to_predict_class</td></tr></thead><tbody><tr><td>item_01</td><td>4</td><td>2</td><td>1</td></tr></tbody></table></figure>\n<br><footer id='201' style='font-size:16px'>25기 정재빈 (YBIGTA DS Team)</footer>\n<br><h1 id='202' style='font-size:14px'>Overview of Computer Vision</h1>\n<br><p id='203' data-category='paragraph' style='font-size:14px'>July 25th 2025</p>\n<br><p id='204' data-category='paragraph' style='font-size:14px'>30 / 41</p>\n<br><header id='205' style='font-size:22px'>Detour: Inductive Bias</header>\n<table id='206' style='font-size:20px'><thead><tr><td>Component</td><td>Entities</td><td>Relations</td><td>Rel. inductive bias</td><td>Invariance</td></tr></thead><tbody><tr><td>Fully connected</td><td>Units</td><td>All-to-all</td><td>Weak</td><td>-</td></tr><tr><td>Convolutional</td><td>Grid elements</td><td>Local</td><td>Locality</td><td>Spatial translation</td></tr><tr><td>Recurrent</td><td>Timesteps</td><td>Sequential</td><td>Sequentiality</td><td>Time translation</td></tr><tr><td>Graph network</td><td>Nodes</td><td>Edges</td><td>Arbitrary</td><td>Node, edge permutations</td></tr></tbody></table>\n<p id='207' data-category='paragraph' style='font-size:18px'>Table 1: Various relational inductive biases in standard deep learning components. See also Section 2.</p>\n<h1 id='208' style='font-size:14px'>のac</h1>\n<br><table id='209' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>31 / 41</td></tr></tbody></table>\n<header id='210' style='font-size:22px'>ViT VS ResNet!</header>\n<figure id='211' data-category='chart'><img data-coord=\"top-left:(466,134); bottom-right:(735,319)\" /><figcaption><p>X-Axis: Pre-training dataset</p><p>Y-Axis: ImageNet Top Accuracy [%]</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>InsageNet</td><td>ImageNet-21k</td><td>VIT-B/16</td><td>VIT-L/32</td><td>VIT-L/16</td><td>VIT-H/14</td></tr></thead><tbody><tr><td>item_01</td><td>78%</td><td>82%</td><td>85%</td><td>80%</td><td>85%</td><td>85%</td></tr></tbody></table></figure>\n<br><p id='212' data-category='list' style='font-size:20px'>Pre-train on ImageNet (1.28M),<br>ImageNet-21K(14 M), JFT-300M<br>(300M)<br>Fine-tune for ImageNet<br>Larger Datasets Better performance<br>of larger ViT models!</p>\n<br><caption id='213' style='font-size:18px'>Figure 3: Transfer to ImageNet. While<br>large ViT models perform worse than BiT<br>ResNets (shaded area) when pre-trained on<br>small datasets, they shine when pre-trained on<br>larger datasets. Similarly, larger ViT variants<br>overtake smaller ones as the dataset grows.</caption>\n<h1 id='214' style='font-size:16px'>の90</h1>\n<br><table id='215' style='font-size:18px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>32 / 41</td></tr></tbody></table>\n<header id='216' style='font-size:20px'>ViT VS CNN?</header>\n<figure id='217'><img style='font-size:22px' alt=\"CNN\nViT\nYOU\" data-coord=\"top-left:(226,83); bottom-right:(529,544)\" /></figure>\n<br><footer id='218' style='font-size:18px'>25기 정재빈 (YBIGTA DS Team)</footer>\n<br><p id='219' data-category='paragraph' style='font-size:16px'>Overview of Computer Vision</p>\n<br><h1 id='220' style='font-size:14px'>DBC</h1>\n<br><p id='221' data-category='paragraph' style='font-size:14px'>July 25th 2025 33 / 41</p>\n<h1 id='222' style='font-size:22px'>When to use CNNs VS ViTs?</h1>\n<figure id='223'><img style='font-size:14px' alt=\"Are you training on 著 very\nlarge dataset (10M+\nimages?)\nYes No\nIs model efficiency\nimpertant to you? E.g. for\nVIT\na real-time or embedded\napplication.\nYes No\nIs there 총 model\ncheckpoint you can\nCNN imitialize from which 8\npretrained on 10M+\nimages?\nYes\nNo\nIs your target data very\ndifferent from the\npretraining data? (e.g., CNN\nmedical images)\nYes No\nStart with VIT; try CNN At deployment time, is data\n there is time drift Bkely?\nNo\nYes\nAre you in a hurry and\nwant to\nVIT\nget to a solution as quickly\nas possible?\nYes No\nStart with VIT; try CNN\nCNN\nir there is time\" data-coord=\"top-left:(180,71); bottom-right:(603,495)\" /></figure>\n<p id='224' data-category='paragraph' style='font-size:20px'>Diagram adapted from: Tobias van der Werff, 2024</p>\n<br><h1 id='225' style='font-size:16px'>Q</h1>\n<br><table id='226' style='font-size:18px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>34 / 41</td></tr></tbody></table>\n<h1 id='227' style='font-size:20px'>4: Computer Vision!</h1>\n<h1 id='228' style='font-size:14px'>言 の90</h1>\n<br><table id='229' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>35 / 41</td></tr></tbody></table>\n<br><header id='230' style='font-size:20px'>CV Models: Tasks</header>\n<figure id='231'><img style='font-size:18px' alt=\"Classification Instance Semantic\nObject\n+ Localization Detection Segmentation Segmentation\nGRASS, CAT,\nCAT DOG DOG, CAT DOG, DOG, CAT\nTREE, SKY\nSingle Object Multiple Object No objects, just pixels\" data-coord=\"top-left:(26,151); bottom-right:(730,436)\" /></figure>\n<h1 id='232' style='font-size:14px'>Q</h1>\n<br><table id='233' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>36 / 41</td></tr></tbody></table>\n<br><header id='234' style='font-size:22px'>CV: Multi-Modal</header>\n<h1 id='235' style='font-size:20px'>What is Multi-Modal?</h1>\n<br><h1 id='236' style='font-size:18px'>Modality: types of data an Ai system can process</h1>\n<br><figure id='237'><img style='font-size:16px' alt=\"Vision, Text, Audio,...\nUnimodal AI model\nAI model Limited output\nMultimodal AI model\nWider range of\nAI model\nresults\n25기 정재빈 (YBIGTA DS Team) Overview of Computer Vision July 25th 2025 37 /\" data-coord=\"top-left:(25,132); bottom-right:(735,593)\" /></figure>\n<br><p id='238' data-category='paragraph' style='font-size:14px'>41</p>\n<br><h1 id='239' style='font-size:20px'>CV: CLIP (Quick Rundown</h1>\n<figure id='240'><img style='font-size:14px' alt=\"(1) Contrastive pre-training (2) Create dataset classifier from label text\nplane\ncar\nPepper the\nText\nA photo of Text\naussie pup dog\nEncoder\n따 (object) - Encoder\n/\nTsi\nT1 T2 T3 +\nbird\n4 II·TI InT2 It·T3 - IrTN\n(3) Use for zero-shot prediction\n12 12·Tl 12·T2 IrT3 ·· 12·TN TI T2 T3 - TN\nImage by ly'Tl ly'T2 ly'Ty = ly'TN Image ht-T: I-T2 I1·Ty 11 Tsl\nEncoder In\nEncoder\n·· ··· · : : ···\nA photo of\nIN IN'TI IN T2 In T3 따 IN·TN\ndog.\" data-coord=\"top-left:(27,127); bottom-right:(728,379)\" /><figcaption id='241' style='font-size:16px'>Figure 1. Summary of our approach. While standard image models jointly train an image feature extractor and a linear classifier to predict<br>some label, CLIP jointly trains an image encoder and a text encoder to predict the correct pairings of a batch of (image, text) training<br>examples. At test time the learned text encoder synthesizes a zero-shot linear classifier by embedding the names or descriptions of the<br>target dataset's classes.</figcaption></figure>\n\n<table id='242' style='font-size:18px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>38 / 41</td></tr></tbody></table>\n<br><header id='243' style='font-size:22px'>CV: Multi-Modal</header>\n<figure id='244'><img style='font-size:16px' alt=\"Generate an image of a samoyed puppy holding a blue cap that says\n'Yonsei' in the middle\nImage created\nYONSEI\" data-coord=\"top-left:(13,117); bottom-right:(372,461)\" /></figure>\n<br><figure id='245'><img style='font-size:14px' alt=\"can you describe this image for me?\nThis image shows an adorable Golden Retriever puppy gently biting a person's arm in a playful manner.\nThe puppy has a flutty, light golden coat and appears to be very young. One of its front paws is resting on\nthe person's arm, adding to the cuteness. The scene takes place indoors with H blue wall and  baseboard\nvisible in the background. The expression on the puppy's face suggests it's relaxced and playful, not\naggressive. It's a very heartwarming and typical moment of puppy play behavior.\" data-coord=\"top-left:(383,175); bottom-right:(741,404)\" /></figure>\n<h1 id='246' style='font-size:18px'>の90</h1>\n<br><table id='247' style='font-size:20px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>39 / 41</td></tr></tbody></table>\n<br><header id='248' style='font-size:22px'>Video Generation</header>\n<h1 id='249' style='font-size:20px'>Weird Benchmark: \"Will Smith eating spaghetti\"</h1>\n<h1 id='250' style='font-size:18px'>Will Smith Eating Spaghetti test</h1>\n<br><p id='251' data-category='paragraph' style='font-size:14px'>文A 1 language V</p>\n<h1 id='252' style='font-size:16px'>Article Talk</h1>\n<br><h1 id='253' style='font-size:14px'>Read Edit View history Tools V</h1>\n<h1 id='254' style='font-size:16px'>From Wikipedia, the free encyclopedia</h1>\n<p id='255' data-category='paragraph' style='font-size:16px'>The Will Smith Eating Spaghetti test is an informal benchmark within the artificial intelligence<br>community, used to assess the capabilities of generative video models in rendering realistic<br>human actions and facial expressions. Originating from a widely shared AI generated video in<br>2023, which depicted an unnaturally animated render of actor Will Smith eating spaghetti, the<br>test has since been used as an informal reference point to demonstrate the capabilities and<br>limitations of Al-generated video content.[1]</p>\n<h1 id='256' style='font-size:18px'>Origin [ edit ]</h1>\n<p id='257' data-category='paragraph' style='font-size:16px'>On March 23, 2023, Reddit user \"chaindrop\" shared an Al-generated video titled \"Will Smith<br>eating spaghetti\" on the subreddit r/StableDiffusion, created using ModelScope's text-to-video<br>tool. The clip depicted a distorted and surreal version of actor Will Smith eating spaghetti,[2] The</p>\n<br><figure id='258'><img style='font-size:14px' alt=\"▶\n0:20\n直\" data-coord=\"top-left:(546,255); bottom-right:(724,439)\" /><br><figcaption id='259' style='font-size:14px'>Original AI generated clip posted<br>on Reddit</figcaption></figure>\n\n<table id='260' style='font-size:18px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>40 / 41</td></tr></tbody></table>\n<br><header id='261' style='font-size:20px'>Fin</header>\n<h1 id='262' style='font-size:18px'>Thank you!</h1>\n<p id='263' data-category='paragraph' style='font-size:14px'> の90</p>\n<br><table id='264' style='font-size:16px'><thead></thead><tbody><tr><td>25기 정재빈 (YBIGTA DS Team)</td><td>Overview of Computer Vision</td><td>July 25th 2025</td><td>41 / 41</td></tr></tbody></table>",
    "1Gyq5HqgqblSsslf_JPOWVpjaGd6R18RN": "<h1 id='0' style='font-size:22px'>[6회차] CV 과제</h1>\n<h1 id='1' style='font-size:16px'>발제자: 정재빈</h1>\n<h1 id='2' style='font-size:22px'>기간</h1>\n<br><p id='3' data-category='paragraph' style='font-size:18px'>마감: 7월 31일 목요일 23시 59분<br>지각 제출: 8월 1일 금요일 23시 59분</p>\n<h1 id='4' style='font-size:22px'>명세</h1>\n<h1 id='5' style='font-size:18px'>ResNet 구현하기</h1>\n<h1 id='6' style='font-size:14px'>https://arxiv.org/abs/1512.03385</h1>\n<h1 id='7' style='font-size:20px'>ResNet으로 cat/dog classification을 구현하기!</h1>\n<br><h1 id='8' style='font-size:16px'>구현 흐름은 다음과 같습니다.</h1>\n<p id='9' data-category='paragraph' style='font-size:20px'>💡</p>\n<br><p id='10' data-category='list' style='font-size:14px'> 데이터 불러오기<br> 데이터 전처리<br> ResNet 구현 (Model Definition)<br> Train/Test/Evaluation</p>\n<p id='11' data-category='paragraph' style='font-size:18px'>TODO!!!</p>\n<footer id='12' style='font-size:14px'>[6회차] CV 과제</footer>\n<br><footer id='13' style='font-size:14px'>1</footer>\n<h1 id='14' style='font-size:20px'>💡</h1>\n<br><p id='15' data-category='paragraph' style='font-size:16px'> 주어진 000_ResNet.ipynb 파일에 TODO 부분 채워넣기</p>\n<br><p id='16' data-category='paragraph' style='font-size:18px'> f1 score 0.5 이상 달성하기</p>\n<h1 id='17' style='font-size:16px'>자세한 튜토리얼은 000_ResNet.ipynb 에 서술되어 있습니다.</h1>\n<h1 id='18' style='font-size:22px'>제출 방법</h1>\n<br><p id='19' data-category='paragraph' style='font-size:20px'>최종적으로 과제 제출용 GitHub에 올라가는 파일 구조는 다음과 같습니다.</p>\n<p id='20' data-category='paragraph' style='font-size:18px'>000_ResNet.ipynb 본인의 이름을 넣어 제출해주세요. (정재빈_ResNet.ipynb)</p>\n<p id='21' data-category='paragraph' style='font-size:18px'>YBIGTA_newbie_assignment<br>└── 62CV<br>└── 000_ResNet.ipynb</p>\n<h1 id='22' style='font-size:22px'>채점 기준</h1>\n<p id='23' data-category='list' style='font-size:20px'>TODO 모두 채움 (모두 채워야 1번 조건 인정입니다)</p>\n<br><h1 id='24' style='font-size:18px'>F1 score 0.5 이상</h1>\n<p id='25' data-category='paragraph' style='font-size:20px'>⚠</p>\n<br><p id='26' data-category='paragraph' style='font-size:18px'>과제 제출: 두 조건 모두 충족 (2/2)<br>과제 미흡: 두 조건 중 하나만 충족 (1/2)<br>과제 미제출: 두 조건 모두 충족 못함 (0/2)</p>\n<footer id='27' style='font-size:14px'>[6회차] CV 과제</footer>\n<br><footer id='28' style='font-size:14px'>2</footer>",
    "1HN3eRo3-sbxwl5I4b3N8usbS9oTXNlFI": "<h1 id='0' style='font-size:22px'>[6회차] NLP 과제</h1>\n<h1 id='1' style='font-size:16px'>발제자 : 이준찬</h1>\n<h1 id='2' style='font-size:20px'>기간</h1>\n<br><h1 id='3' style='font-size:18px'>마감: 7월 31일 목요일 23시 59분<br>지각 제출: 8월 1일 금요일 23시 59분</h1>\n<h1 id='4' style='font-size:20px'>Intro</h1>\n<br><p id='5' data-category='paragraph' style='font-size:16px'>안녕하세요! 이번 과제는 개별로 수행해주시면 됩니다.</p>\n<p id='6' data-category='list' style='font-size:16px'>이번과제는 2단계로 구성됩니다!<br>1. Corpus 에서 Word2Vec을 학습해 단어 embedding 완성하기<br>2. 1에서 구한 embedding을 활용해 GRU를 구현하여 감정분석하기</p>\n<h1 id='7' style='font-size:20px'>명세</h1>\n<h1 id='8' style='font-size:20px'>제공되는 파일</h1>\n<p id='9' data-category='list' style='font-size:16px'>- config.py<br>- gru.py<br>- load_corpus.py<br>- model.py<br>- pyproject.toml<br>- requirements.txt<br>- test.py<br>- train_model.py<br>- train_word2vec.py<br>- word2vec.py</p>\n<footer id='10' style='font-size:14px'>[6회차] NLP 과제</footer>\n<br><footer id='11' style='font-size:14px'>1</footer>\n<h1 id='12' style='font-size:22px'>작성할 파일</h1>\n<p id='13' data-category='list' style='font-size:18px'>- config.py<br>- gru.py<br>- train_model.py<br>- load_corpus.py<br>- word2vec.py</p>\n<h1 id='14' style='font-size:18px'> 데이터셋 확인</h1>\n<br><p id='15' data-category='paragraph' style='font-size:18px'>dataset 링크</p>\n<br><h1 id='16' style='font-size:18px'> word2vec 구현 및 학습</h1>\n<p id='17' data-category='paragraph' style='font-size:18px'>word2vec.py 의 Word2Vec class를 구현하세요! 이때, 생성자의 method 에서 넣어<br>준 값에 따라 _train_cbow 나 _train_skipgram 을 호출해야합니다. 그래서 두가지 모두<br>구현해야합니다!</p>\n<br><p id='18' data-category='paragraph' style='font-size:20px'>(주의: Word2Vec을 훈련할 때는 padding token이 들어가지 않는 게 좋습니다!)</p>\n<p id='19' data-category='list' style='font-size:20px'>load_corpus.py 의 load_corpus 를 구현하세요! load_corpus는 말 그대로<br>word2vec을 학습시킬 corpus를 가져오는 함수입니다. corpus를 어디서 어떻게<br>가져오실지는 자유입니다! 단, 사용할 수 있는 라이브러리는 Python 기본 라이브러<br>리, torch, transformers, datasets로 제한됩니다. 또, 제출된 코드를 실행했을 때<br>접근 불가능한 파일로부터 가져오는 게 있으면 안 됩니다.<br>니다. (코드가 1. 인터넷에서 파일을 로컬로 저장하고 2. 그 파일을 로컬에서 불러오<br>는 과정을 가진다면 괜찮겠지만 그냥 로컬 파일을 불러오기만 한다면 안되겠죠?)</p>\n<p id='20' data-category='paragraph' style='font-size:18px'>train_word2vec.py 를 실행하시면 word2vec.pt 체크포인트 파일이 생성됩니다. 이 파일<br>은 우리의 GRU 모델을 학습시키는 데 사용됩니다.</p>\n<br><h1 id='21' style='font-size:18px'> GRU 구현하기</h1>\n<br><p id='22' data-category='paragraph' style='font-size:20px'>gru.py에 GRUCell 과 GRU 를 구현하세요! 힌트를 위해 input size를 드리겠습니<br>다!</p>\n<p id='23' data-category='paragraph' style='font-size:16px'>GRUCell.forward :</p>\n<br><p id='24' data-category='list' style='font-size:18px'>x : (batch_size, d_model)<br>h : (batch_size, d_model)</p>\n<p id='25' data-category='paragraph' style='font-size:16px'>GRU.forward</p>\n<br><p id='26' data-category='paragraph' style='font-size:18px'>:</p>\n<footer id='27' style='font-size:14px'>[6회차] NLP 과제</footer>\n<br><footer id='28' style='font-size:14px'>2</footer>\n<h1 id='29' style='font-size:18px'>inputs : (batch_size, sequence_length, d_model)</h1>\n<br><p id='30' data-category='paragraph' style='font-size:18px'>구현하신 GRU 는 model.py 의 MyGRULanguageModel 이 사용합니다. 이 모델이<br>sentiment analysis를 위해 train_model.py 에서 학습됩니다.</p>\n<p id='31' data-category='paragraph' style='font-size:18px'>train_model.py 를 실행하시면 checkpoint.pt 체크포인트 파일이 생성됩니다. 학습된<br>MyGRULanguageModel 의 체크포인트이며, test.py 에서 최종 test를 할 때 사용됩니<br>다.</p>\n<h1 id='32' style='font-size:20px'>제출 방법</h1>\n<figure id='33'><img style='font-size:18px' alt=\"YBIGTA_newbie_assignment\n│\n├ ── 61NLP\n│ ├── config.py\n│ ├── gru.py #작성할 파일\n│ ├── train_model.py\n│ ├── load_corpus.py #작성할 파일\n│ ├── word2vec.py #작성할 파일\n│ ├── # 이외 수정 금지\n│ ├──\n│ ├──\n│ ├──\n│ ├──\n│ └──...\n│\n└ ── ...# 다른 폴더들\" data-coord=\"top-left:(158,583); bottom-right:(1089,1225)\" /></figure>\n<h1 id='34' style='font-size:22px'>채점 기준</h1>\n<br><p id='35' data-category='paragraph' style='font-size:18px'>test macro 0.3 이상<br>mypy 통과</p>\n<footer id='36' style='font-size:16px'>[6회차] NLP 과제</footer>\n<br><footer id='37' style='font-size:14px'>3</footer>\n<h1 id='38' style='font-size:20px'>⚠</h1>\n<br><p id='39' data-category='paragraph' style='font-size:18px'>과제 제출: 두 조건 모두 충족 (2/2)<br>과제 미흡: 두 조건 중 하나만 충족 (1/2)<br>과제 미제출: 두 조건 모두 충족 못함 (0/2)</p>\n<footer id='40' style='font-size:16px'>[6회차] NLP 과제</footer>\n<br><footer id='41' style='font-size:14px'>4</footer>",
    "1OzDOYtWF1vXkoq57wfeyjFoZNxGB0RtK": "<header id='0' style='font-size:16px'>2025-2<br>YBIGTA</header>\n<h1 id='1' style='font-size:20px'>NLP</h1>\n<footer id='2' style='font-size:18px'>26기<br>이준찬</footer>\n<br><footer id='3' style='font-size:14px'>1</footer>\n<h1 id='4' style='font-size:20px'>목<br>차</h1>\n<p id='5' data-category='list' style='font-size:16px'>0. ML/DL<br>Recap<br>1. Classical<br>NLP<br>2. Embedding<br>-<br>Word2vec<br>3. Sequence<br>Modeling<br>&<br>Contextualization<br>-<br>RNN/LSTM<br>GRU<br>4. Attention<br>-<br>Seq2Seq<br>/<br>Transformer<br>5. Large<br>Language<br>Model</p>\n<br><footer id='6' style='font-size:14px'>2</footer>\n<h1 id='7' style='font-size:18px'>0.<br>Recap<br>/<br>NLP</h1>\n<footer id='8' style='font-size:14px'>3</footer>\n<header id='9' style='font-size:20px'>ML/DL</header>\n<br><header id='10' style='font-size:16px'>Recap</header>\n<figure id='11'><img alt=\"\" data-coord=\"top-left:(426,582); bottom-right:(2392,967)\" /></figure>\n<p id='12' data-category='paragraph' style='font-size:16px'>목적<br>:<br>목표<br>Data에<br>대해<br>원하는<br>Task<br>(예측,<br>분류<br>등)<br>을<br>성공적으로<br>수행할<br>수<br>있는<br>모델을<br>만드는<br>것</p>\n<footer id='13' style='font-size:14px'>4</footer>\n<header id='14' style='font-size:20px'>ML/DL</header>\n<br><header id='15' style='font-size:16px'>Recap</header>\n<figure id='16'><img style='font-size:16px' alt=\"모델\n학습\" data-coord=\"top-left:(832,396); bottom-right:(2051,985)\" /></figure>\n<br><h1 id='17' style='font-size:16px'>지도학습<br>(회귀<br>/<br>분류)</h1>\n<br><h1 id='18' style='font-size:16px'>비지도학습</h1>\n<figure id='19'><img alt=\"\" data-coord=\"top-left:(767,1149); bottom-right:(1018,1420)\" /></figure>\n<br><figure id='20'><img alt=\"\" data-coord=\"top-left:(1144,1161); bottom-right:(1403,1425)\" /></figure>\n<br><p id='21' data-category='paragraph' style='font-size:16px'>Regression</p>\n<br><p id='22' data-category='paragraph' style='font-size:16px'>SVM</p>\n<br><p id='23' data-category='paragraph' style='font-size:16px'>Tree</p>\n<br><p id='24' data-category='paragraph' style='font-size:16px'>DL</p>\n<br><p id='25' data-category='paragraph' style='font-size:16px'>Clustering</p>\n<br><figure id='26'><img alt=\"\" data-coord=\"top-left:(2235,1159); bottom-right:(2496,1419)\" /></figure>\n<footer id='27' style='font-size:14px'>5</footer>\n<h1 id='28' style='font-size:20px'>ML/DL</h1>\n<br><header id='29' style='font-size:16px'>Recap</header>\n<h1 id='30' style='font-size:16px'>ML/DL<br>적용<br>파이프라인</h1>\n<p id='31' data-category='list' style='font-size:18px'>1.<br>데이터<br>수집/추출<br>2.<br>EDA/FE/시각화<br>3.<br>분석<br>방법론(모델)<br>선정<br>4.<br>ML/DL<br>모델<br>학습<br>5.<br>ML/DL<br>모델<br>검증<br>및<br>튜닝<br>6.<br>결과해석/문제<br>적용</p>\n<br><figure id='32'><img alt=\"\" data-coord=\"top-left:(1258,456); bottom-right:(2895,1529)\" /></figure>\n<br><footer id='33' style='font-size:14px'>6</footer>\n<header id='34' style='font-size:22px'>ML/DL</header>\n<br><header id='35' style='font-size:18px'>Recap</header>\n<h1 id='36' style='font-size:14px'>ML/DL<br>로<br>테이블<br>데이터를<br>분석해서<br>값을<br>예측하고<br>결과를<br>해석할<br>수<br>있구나!<br></h1>\n<figure id='37'><img style='font-size:16px' alt=\"집값\n예측\n모델\n집값\n데이터..\n신용불량\n예측\n모델\n신용카드\n데이터.. 불량\n분류\n모델\n제조\n불량\n데이터.. 모델링 ...\" data-coord=\"top-left:(289,585); bottom-right:(1929,1443)\" /></figure>\n<br><h1 id='38' style='font-size:20px'>그럼<br>텍스트는?</h1>\n<figure id='39'><img alt=\"\" data-coord=\"top-left:(2312,895); bottom-right:(2726,1401)\" /><br><figcaption id='40' style='font-size:18px'>뭐야<br>나도<br>안아줘요</figcaption></figure>\n\n<br><footer id='41' style='font-size:14px'>7</footer>\n<h1 id='42' style='font-size:22px'>NLP<br>란?</h1>\n<br><header id='43' style='font-size:16px'>고전<br>NLP</header>\n<h1 id='44' style='font-size:20px'>도대체 사람말은 어떻게 이해시킬까</h1>\n<p id='45' data-category='list' style='font-size:18px'>Natural\u0001Language\u0001:\u0001한국어,\u0001영어\u0001등\u0001자연어</p>\n<p id='46' data-category='list' style='font-size:18px'>Natural\u0001Language\u0001Processing\u0001-\u0001자연어\u0001처리\u0001→\u0001사람의\u0001말을\u0001컴퓨터가\u0001이해하도록\u0001하겠다!</p>\n<h1 id='47' style='font-size:18px'>수치<br>데이터<br></h1>\n<h1 id='48' style='font-size:16px'>hungry = 100</h1>\n<br><h1 id='49' style='font-size:14px'>good</h1>\n<br><figure id='50'><img alt=\"\" data-coord=\"top-left:(2015,839); bottom-right:(2265,1120)\" /></figure>\n<p id='51' data-category='paragraph' style='font-size:20px'>사람<br>말</p>\n<p id='52' data-category='paragraph' style='font-size:16px'>배고파요</p>\n<br><h1 id='53' style='font-size:14px'>??Invalid syntax</h1>\n<br><figure id='54'><img alt=\"\" data-coord=\"top-left:(2386,1010); bottom-right:(2799,1348)\" /></figure>\n<br><figure id='55'><img alt=\"\" data-coord=\"top-left:(2063,1224); bottom-right:(2250,1490)\" /></figure>\n<br><footer id='56' style='font-size:14px'>8</footer>\n<h1 id='57' style='font-size:20px'>NLP<br>란?</h1>\n<br><header id='58' style='font-size:16px'>고전<br>NLP</header>\n<h1 id='59' style='font-size:16px'>Rule<br>base<br>/<br>nltk</h1>\n<br><h1 id='60' style='font-size:18px'>규칙\u0001NLP\u0001→\u0001통계\u0001/\u0001ML\u0001NLP\u0001→\u0001DL\u0001NLP\u0001→\u0001LLM</h1>\n<br><h1 id='61' style='font-size:16px'>TD-IDF,<br>Bow<br></h1>\n<br><h1 id='62' style='font-size:16px'>Co<br>occurrence<br>PMI/PPMI</h1>\n<h1 id='63' style='font-size:16px'>Word2vec</h1>\n<h1 id='64' style='font-size:16px'>RNN<br>/<br>LSTM<br>/<br>GRU</h1>\n<br><p id='65' data-category='paragraph' style='font-size:16px'>Seq2Seq</p>\n<p id='66' data-category='paragraph' style='font-size:16px'>Transformer</p>\n<br><figure id='67' data-category='chart'><img data-coord=\"top-left:(1407,652); bottom-right:(2557,1455)\" /><figcaption><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>Artificial intelligence</td><td>Machine learning</td><td>Language Processing</td><td>Deep learning</td></tr></thead><tbody><tr><td>item_01</td><td>25%</td><td>30%</td><td>15%</td><td>20%</td></tr></tbody></table></figure>\n<br><p id='68' data-category='paragraph' style='font-size:16px'>LLM</p>\n<br><footer id='69' style='font-size:14px'>9</footer>\n<h1 id='70' style='font-size:18px'>1.<br>Classical<br>NLP</h1>\n<footer id='71' style='font-size:14px'>10</footer>\n<h1 id='72' style='font-size:22px'>인간<br>중심<br>NLP</h1>\n<br><header id='73' style='font-size:18px'>고전<br>NLP</header>\n<h1 id='74' style='font-size:20px'>Rule\u0001Base\u0001-\u0001logical\u0001system</h1>\n<br><p id='75' data-category='paragraph' style='font-size:20px'>사전<br>기반<br>-<br>nltk,<br>wordnet</p>\n<h1 id='76' style='font-size:16px'>아이디어 : 사전에 만들어둔 규칙에 기반해 처리하자!</h1>\n<h1 id='77' style='font-size:16px'>정해진 규칙에 따라 사람 응답에 답변</h1>\n<figure id='78'><img alt=\"\" data-coord=\"top-left:(480,908); bottom-right:(1023,1517)\" /></figure>\n<br><h1 id='79' style='font-size:16px'>아이디어 : 유의어 사전을 만들어두고 시소러스 (유의어 사전) 기반</h1>\n<h1 id='80' style='font-size:16px'>유의어 사전에 기반해 단어의 의미를 간접적으로 인식</h1>\n<figure id='81'><img alt=\"\" data-coord=\"top-left:(1790,954); bottom-right:(2750,1415)\" /><br><figcaption id='82' style='font-size:16px'>오 잘 될까?</figcaption></figure>\n\n<br><footer id='83' style='font-size:14px'>11</footer>\n<h1 id='84' style='font-size:22px'>Rule<br>Base<br>NLP</h1>\n<h1 id='85' style='font-size:20px'>잘 안된다</h1>\n<br><header id='86' style='font-size:16px'>고전<br>NLP</header>\n<figure id='87'><img alt=\"\" data-coord=\"top-left:(226,551); bottom-right:(981,1333)\" /></figure>\n<br><figure id='88'><img alt=\"\" data-coord=\"top-left:(1102,553); bottom-right:(1861,1334)\" /></figure>\n<br><figure id='89'><img alt=\"\" data-coord=\"top-left:(1984,562); bottom-right:(2710,1333)\" /></figure>\n<p id='90' data-category='paragraph' style='font-size:18px'>자연어의\u0001형태,\u0001형식이\u0001너무\u0001다양해\u0001규칙\u0001기반으로는\u0001모든\u0001상황에\u0001대응이\u0001불가능하다</p>\n<br><footer id='91' style='font-size:14px'>12</footer>\n<h1 id='92' style='font-size:22px'>사전<br>기반<br>NLP</h1>\n<br><header id='93' style='font-size:16px'>고전<br>NLP</header>\n<h1 id='94' style='font-size:20px'>Word net : nltk</h1>\n<h1 id='95' style='font-size:18px'>사전\u0001기반은\u0001잘\u0001될까?</h1>\n<br><p id='96' data-category='list' style='font-size:18px'>토큰\u0001분리<br>형태소분석\u0001-\u0001“먹”-\u0001“었”\u0001-\u0001“다”<br>품사태깅\u0001(POS)\u0001-\u0001명사,\u0001동사..<br>문장구조\u0001분석<br>Wordnet\u0001어휘관계\u0001탐색<br>불용어\u0001제거\u0001후\u0001감정분석\u0001</p>\n<br><figure id='97'><img alt=\"\" data-coord=\"top-left:(1292,576); bottom-right:(2775,1330)\" /></figure>\n<p id='98' data-category='paragraph' style='font-size:14px'>형태소, 품사, 유의어 관계, 불용어 등이 모두 포함된 풍부한 사전을 바탕으로 여러 작업 수행 가능</p>\n<br><footer id='99' style='font-size:14px'>13</footer>\n<h1 id='100' style='font-size:22px'>인간<br>중심<br>NLP의<br>한계</h1>\n<br><header id='101' style='font-size:18px'>고전<br>NLP</header>\n<h1 id='102' style='font-size:20px'>결국 사람을 쓰는 방식들의 문제</h1>\n<br><table id='103' style='font-size:16px'><thead><tr><td>비싸다</td><td>정적이다</td><td>모든 상황 표현이 부족하다</td></tr></thead><tbody><tr><td>단어 개수 수십만개.. 관계를 사람이 모두 표현하기??</td><td>다시말해 자동 업데이트가 안된다</td><td>“챗지피티” 애매한 단어 관계 표현을 어떻게 해주지?</td></tr><tr><td><figure><img alt=\"제가요??\" data-coord=\"top-left:(309,848); bottom-right:(772,1278)\" /></figure></td><td>매 상황 새로운 단어가 등장한다 챗지피티 ?? 느좋카페 ?? 신규 단어에 대해 매번 새로 관계를 작성해주어야 한다</td><td>빈티지와 레트로는 유의어인가 동의어인가? 설사 사람이 매번, 모든 관계를 다 표현해도 모든 의미 표현을 하기에 턱없이 부족</td></tr></tbody></table>\n<footer id='104' style='font-size:18px'>“사람이 일일이 규칙과 언어 표현을 컴퓨터에게 먹여줄 수 없겠는데? 알아서 할 수 없나?”</footer>\n<br><footer id='105' style='font-size:14px'>14</footer>\n<h1 id='106' style='font-size:22px'>통계<br>기반<br>NLP</h1>\n<br><header id='107' style='font-size:16px'>고전<br>NLP</header>\n<h1 id='108' style='font-size:20px'>어떻게 단어의 의미를 “알아서” 추출하게 할까?</h1>\n<h1 id='109' style='font-size:18px'>실제 텍스트 기반</h1>\n<p id='110' data-category='paragraph' style='font-size:14px'>사람이\u0001실제로\u0001사용하는\u0001텍스트에<br>서\u0001자연어의\u0001규칙,\u0001관습,\u0001지식을\u0001추<br>출하겠다</p>\n<br><h1 id='111' style='font-size:16px'>단어의 벡터 표현 (embedding)</h1>\n<h1 id='112' style='font-size:14px'>이미지도\u0001RGB\u0001픽셀\u0001값을\u0001벡터로\u0001표<br>현하듯,\u0001단어도\u0001“단어의\u0001의미“가\u0001잘<br>담긴\u0001벡터로\u0001표현해보면\u0001어떨까?</h1>\n<figure id='113' data-category='chart'><img data-coord=\"top-left:(1275,1064); bottom-right:(1797,1503)\" /><figcaption><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>newspaper</td><td>magazine</td><td>biking</td></tr></thead><tbody><tr><td>item_01</td><td>0.08%</td><td>0.09%</td><td>0.25%</td></tr></tbody></table></figure>\n<br><p id='114' data-category='paragraph' style='font-size:18px'>단어의 의미 - 분포 가설</p>\n<h1 id='115' style='font-size:14px'>단어의\u0001의미는\u0001주변\u0001단어에\u0001의해\u0001형<br>성된다</h1>\n<p id='116' data-category='paragraph' style='font-size:14px'>단어\u0001자체가\u0001의미가\u0001있는게\u0001아니라,<br>그\u0001단어가\u0001등장하는\u0001맥락이\u0001의미를<br>형성한다!</p>\n<footer id='117' style='font-size:14px'>15</footer>\n<h1 id='118' style='font-size:22px'>통계<br>기반<br>NLP</h1>\n<br><header id='119' style='font-size:18px'>고전<br>NLP</header>\n<h1 id='120' style='font-size:20px'>Corpus(말뭉치)</h1>\n<p id='121' data-category='list' style='font-size:16px'>corpus\u0001(말뭉치)\u0001-\u0001다른게\u0001아니라\u0001그냥\u0001우리가\u0001일상에서\u0001보는,\u0001우리\u0001언어의\u0001규칙,\u0001관습,\u0001지식이\u0001함께\u0001녹아있는\u0001텍스트</p>\n<p id='122' data-category='list' style='font-size:16px'>앞서\u0001언급한\u0001“분포가설”\u0001로\u0001의미표현을\u0001하려면,\u0001corpus\u0001가\u0001크고\u0001잘\u0001정제되어\u0001있을수록\u0001좋다.</p>\n<p id='123' data-category='list' style='font-size:16px'>이후\u0001딥러닝\u0001기반\u0001방법론에서도\u0001동일한\u0001의미로\u0001사용</p>\n<p id='124' data-category='paragraph' style='font-size:16px'>좋은\u0001텍스트(논문,\u0001공식\u0001문서,\u0001문학작품\u0001등)\u0001의\u0001텍스트를\u0001가져오면\u0001유려한\u0001문법,\u0001맥락,\u0001지식\u0001등이\u0001텍스트에\u0001녹아\u0001있다</p>\n<footer id='125' style='font-size:16px'>...</footer>\n<br><footer id='126' style='font-size:14px'>16</footer>\n<h1 id='127' style='font-size:22px'>통계<br>기반<br>NLP</h1>\n<br><header id='128' style='font-size:16px'>고전<br>NLP</header>\n<h1 id='129' style='font-size:18px'>텍스트 → 벡터 표현 방식</h1>\n<h1 id='130' style='font-size:20px'>Bow</h1>\n<br><p id='131' data-category='list' style='font-size:14px'>Bag\u0001of\u0001words<br>Corpus에서\u0001문장\u0001내\u0001단어\u0001개수\u0001세기<br>문맥,\u0001단어간\u0001관계,\u0001순서\u0001→\u0001??</p>\n<br><h1 id='132' style='font-size:20px'>TD-IDF</h1>\n<br><p id='133' data-category='list' style='font-size:14px'>Term\u0001Frequency\u0001Inverse\u0001Document\u0001Frequency<br>The\u0001같은\u0001불용어\u0001(구체적\u0001의미\u0001x)\u0001발생\u0001수\u0001정규화</p>\n<figure id='134'><img alt=\"\" data-coord=\"top-left:(227,951); bottom-right:(1226,1380)\" /></figure>\n<br><p id='135' data-category='equation'>$$\\begin{array}{c}{{\\neq F({\\bf t},\\,{\\bf d})=\\frac{\\frac{14}{4}\\left.{\\frac{\\pi}{4}}\\right.\\left|{\\bf d}\\right|\\left|{\\bf\\cdot\\left|{\\frac{\\pi}{2}}\\right|\\Im\\right|{\\bf\\cdot\\left|{\\frac{\\pi}{6}}-{\\frac{\\pi}{4}}\\right|{\\bf\\cdot\\tilde{{\\bf G}}}\\right|{\\bf\\cdot\\tilde{{\\bf G}}}\\right|{\\bf\\cdot\\tilde{{\\bf G}}}\\right|{\\bf\\cdot}{\\bf\\cdot}}}}}}\\end{array}$$</p>\n<p id='136' data-category='equation'>$$\\mathrm{IDF}({\\bf t},\\,{\\bf D})=\\,\\mathrm{ION}\\,\\,(\\frac{\\frac{\\pi s}{\\Omega},\\,\\lambda]\\stackrel{\\rightharpoonup}{\\Omega}}{\\frac{\\Omega^{2}}{\\Omega}-\\frac{\\chi s}{\\Omega}\\,\\tilde{\\propto})\\,\\stackrel{\\rightharpoonup}{\\Omega}=\\frac{\\mid f_{-}^{\\frac{\\mid f_{-}}{\\mid f_{-}}}\\,)}{\\Omega})$$</p>\n<footer id='137' style='font-size:18px'>corpus에서 단어간 관계 반영 없이 바로 벡터화해서는 단어의 의미가 충분히 담기지 않는다</footer>\n<br><p id='138' data-category='paragraph' style='font-size:14px'>17</p>\n<header id='139' style='font-size:16px'>고전<br>NLP</header>\n<br><h1 id='140' style='font-size:22px'>통계<br>기반<br>NLP</h1>\n<h1 id='141' style='font-size:20px'>분포가설 벡터표현 & 단어 유사도</h1>\n<h1 id='142' style='font-size:18px'>분포가설\u0001-\u0001단어의\u0001의미는\u0001같이\u0001등장하는\u0001주변\u0001단어\u0001n개\u0001들에\u0001의해\u0001결정</h1>\n<h1 id='143' style='font-size:18px'>분포가설로\u0001벡터화하면\u0001유사한\u0001단어간\u0001유사한\u0001주변\u0001단어\u0001→\u0001유사한\u0001벡터</h1>\n<h1 id='144' style='font-size:18px'>벡터화\u0001한\u0001단어의\u0001유사도는\u0001Cosine\u0001Similarity\u0001로\u0001계산</h1>\n<p id='145' data-category='paragraph' style='font-size:18px'>ex)<br>She\u0001began\u0001to\u0001cry.\u0001<>\u0001She\u0001started\u0001to\u0001cry.<br>They\u0001purchased\u0001a\u0001car.\u0001<>\u0001They\u0001bought\u0001a\u0001car.<br>우리는\u0001결국\u0001문제를\u0001해결했다\u0001<>\u0001우리는\u0001마침내\u0001문제를\u0001해결했다</p>\n<footer id='146' style='font-size:14px'>18</footer>\n<br><figure id='147'><img alt=\"\" data-coord=\"top-left:(1947,804); bottom-right:(2743,1519)\" /></figure>\n<h1 id='148' style='font-size:22px'>통계<br>기반<br>NLP</h1>\n<br><header id='149' style='font-size:16px'>고전<br>NLP</header>\n<h1 id='150' style='font-size:18px'>Corpus → 분포가설 → 벡터표현</h1>\n<h1 id='151' style='font-size:20px'>Co\u0001occurence\u0001Matrix</h1>\n<br><h1 id='152' style='font-size:20px'>PMI\u0001&\u0001PPMI</h1>\n<p id='153' data-category='equation'>$$\\begin{array}{r}{{\\mathrm{PM}(^{\\circ}\\mathrm{the}^{\\circ},\\,\\circ}\\mathrm{car}^{\\circ})=\\mathrm{log}_{2}{\\frac{10\\cdot10000}{1000\\cdot20}}\\approx2.32}\\\\ {{}}&{{}}\\\\ {{\\mathrm{PM}(^{\\circ}\\mathrm{car}^{\\circ},\\,\\circ}\\mathrm{dive}^{\\circ})=\\mathrm{log}_{2}{\\frac{5\\cdot1000}{200\\cdot10}}\\approx7.97}\\end{array}$$</p>\n<p id='154' data-category='list' style='font-size:14px'>말뭉치의\u0001단어\u0001수가\u000110,000<br>\"the\"와\u0001\"car\"와\u0001\"drive\"가\u0001각\u00011,000번,\u000120번,\u000110번\u0001등장<br>\"the\"와\u0001\"car\"의\u0001동시발생\u0001수\u000110회<br>\"car\"와\u0001\"drive\"의\u0001동시발생\u0001수\u00015</p>\n<br><p id='155' data-category='paragraph' style='font-size:16px'>그냥\u0001동시발생\u0001횟수로\u0001관계\u0001표현</p>\n<br><p id='156' data-category='paragraph' style='font-size:14px'>PKI\u0001계산\u0001시\u0001The\u0001와\u0001car\u0001보다\u0001car과\u0001drive\u0001가\u0001더\u0001관계있다고\u0001함<br>!=\u0001동시발생\u0001행렬\u0001결과</p>\n<br><footer id='157' style='font-size:14px'>19</footer>\n<h1 id='158' style='font-size:22px'>통계<br>기반<br>방법의<br>한계</h1>\n<br><header id='159' style='font-size:16px'>고전<br>NLP</header>\n<h1 id='160' style='font-size:20px'>Corpus → 분포가설 → 벡터표현</h1>\n<h1 id='161' style='font-size:20px'>\u0001요약</h1>\n<p id='162' data-category='list' style='font-size:18px'>Corpus\u0001:\u0001텍스트에서\u0001단어의\u0001의미를\u0001추출하고자\u0001함</p>\n<p id='163' data-category='list' style='font-size:18px'>분포가설\u0001:\u0001단어의\u0001의미는\u0001주변\u0001단어가\u0001결정</p>\n<p id='164' data-category='list' style='font-size:18px'>Embedding\u0001:\u0001단어를\u0001의미가\u0001담긴\u0001벡터로\u0001표현</p>\n<p id='165' data-category='list' style='font-size:18px'>Cosine\u0001유사도\u0001:\u0001벡터(단어)간\u0001유사도\u0001수치화</p>\n<h1 id='166' style='font-size:18px'>통계\u0001기반\u0001벡터화\u0001방식\u0001:\u0001</h1>\n<br><p id='167' data-category='list' style='font-size:18px'>Corpus에서\u0001단어\u0001개수세기<br>Corpus\u0001에서\u0001단어\u0001동시\u0001발생\u0001개수세기</p>\n<br><p id='168' data-category='paragraph' style='font-size:20px'>너무\u0001고차원의\u0001단어\u0001벡터</p>\n<p id='169' data-category='list' style='font-size:18px'>Sparse\u0001Vector\u0001:\u0001Corpus\u0001내\u0001단어\u0001수가\u0001200개면<br>벡터가\u0001200차원\u0001-\u0001차원이\u0001너무\u0001크다..!<br>차원이\u0001너무\u0001커서\u0001의미\u0001표현이\u0001잘\u0001안된다.\u0001→\u0001차원축<br>소\u0001(SVD)</p>\n<p id='170' data-category='list' style='font-size:18px'>계산\u0001:\u0001200차원\u0001벡터\u0001-\u0001차원축소\u0001계산이\u0001너무\u0001많다</p>\n<p id='171' data-category='list' style='font-size:18px'>결국\u0001큰\u0001Corpus\u0001에서\u0001다양한\u0001단어들의\u0001의미를\u0001벡터<br>화해야\u0001하는데,\u0001corpus\u0001가\u0001커지면\u0001힘듦</p>\n<footer id='172' style='font-size:14px'>20</footer>\n<h1 id='173' style='font-size:18px'>2.<br>word2vec</h1>\n<footer id='174' style='font-size:14px'>21</footer>\n<h1 id='175' style='font-size:22px'>Word2vec</h1>\n<br><header id='176' style='font-size:18px'>Embedding</header>\n<h1 id='177' style='font-size:20px'>Neural\u0001Network\u0001를\u0001사용해\u0001단어를\u0001임베딩</h1>\n<h1 id='178' style='font-size:18px'>뭘\u0001하는\u0001모델이지?\u0001딥러닝아\u0001벡터화\u0001“해줘”</h1>\n<p id='179' data-category='list' style='font-size:16px'>주변\u0001단어들로\u0001단어를\u0001벡터화(임베딩)\u0001하는\u0001모델</p>\n<p id='180' data-category='list' style='font-size:16px'>주변\u0001단어를\u0001바탕으로\u0001원래\u0001단어를\u0001직접\u0001모델이\u0001“예<br>측”하며\u0001실제\u0001답을\u0001잘\u0001맞출\u0001수\u0001있도록\u0001가중치를\u0001학습함</p>\n<p id='181' data-category='list' style='font-size:16px'>학습된\u0001모델에\u0001대해\u0001입력\u0001단어의\u0001순전파\u0001은닉층\u0001벡터<br>값을\u0001단어의\u0001임베딩\u0001벡터로\u0001사용</p>\n<br><h1 id='182' style='font-size:18px'>Why\u0001신경망?</h1>\n<h1 id='183' style='font-size:16px'>큰\u0001Corpus\u0001계산문제를\u0001해결\u0001</h1>\n<br><p id='184' data-category='list' style='font-size:16px'>Mini\u0001batch\u0001-\u0001나누어\u0001학습<br>Negative\u0001sampling\u0001-\u0001모든\u0001어휘와\u0001비교\u0001x</p>\n<h1 id='185' style='font-size:16px'>지속\u0001업데이트가\u0001쉬움</h1>\n<h1 id='186' style='font-size:16px'>임베딩\u0001벡터\u0001크기\u0001=\u0001은닉층\u0001크기로\u0001고정</h1>\n<figure id='187'><img style='font-size:14px' alt=\"22\" data-coord=\"top-left:(1650,1280); bottom-right:(2863,1612)\" /></figure>\n<h1 id='188' style='font-size:22px'>Word2Vec</h1>\n<br><header id='189' style='font-size:18px'>Embedding</header>\n<h1 id='190' style='font-size:20px'>Cbow\u0001-\u0001그래서\u0001뭘\u0001학습해?</h1>\n<h1 id='191' style='font-size:14px'>Cbow\u0001(Continuous\u0001Bag\u0001of\u0001words)<br>Word2vec\u0001의\u0001하위\u0001학습방식\u0001:\u0001주위\u0001단어로\u0001가운데\u0001단어\u0001예측</h1>\n<figure id='192' data-category='chart'><img data-coord=\"top-left:(229,784); bottom-right:(691,1104)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>You say goodbye and I say hello</td></tr></thead><tbody><tr><td>item_01</td><td>0%</td></tr></tbody></table></figure>\n<br><figure id='193'><img alt=\"\" data-coord=\"top-left:(720,734); bottom-right:(1225,1111)\" /></figure>\n<figure id='194'><img alt=\"\" data-coord=\"top-left:(214,1184); bottom-right:(1327,1361)\" /></figure>\n<br><h1 id='195' style='font-size:20px'>단어\u0001예측\u0001확률분포\u0001출력</h1>\n<figure id='196'><img alt=\"\" data-coord=\"top-left:(1602,724); bottom-right:(2768,1096)\" /></figure>\n<p id='197' data-category='list' style='font-size:16px'>목적\u0001:\u0001Context로\u0001Target\u0001예측하기<br>예측\u0001시\u0001해당\u0001자리에\u0001올\u0001단어를\u0001“확률”\u0001로\u0001표현</p>\n<footer id='198' style='font-size:14px'>23</footer>\n<h1 id='199' style='font-size:22px'>Word2Vec</h1>\n<br><header id='200' style='font-size:18px'>Embedding</header>\n<h1 id='201' style='font-size:20px'>Cbow\u0001-\u0001그래서\u0001어떻게\u0001학습해?</h1>\n<h1 id='202' style='font-size:14px'>입력\u0001값\u0001:\u0001원래\u0001단어\u0001예측용\u0001주변\u0001문맥\u0001단어<br>문맥으로\u0001몇개를\u0001줄지는\u0001자유<br>One\u0001hot\u0001Vector\u0001로\u0001변환해\u0001입력</h1>\n<br><h1 id='203' style='font-size:16px'>3. 여러\u0001Context\u0001원핫벡터의\u0001은닉층\u0001값\u0001h1,<br>h2...\u0001평균내서\u0001출력층\u0001→\u0001softmax\u0001로\u0001전달</h1>\n<p id='204' data-category='paragraph' style='font-size:20px'>2.</p>\n<figure id='205'><img alt=\"\" data-coord=\"top-left:(214,841); bottom-right:(1024,1580)\" /></figure>\n<br><figure id='206'><img style='font-size:14px' alt=\"4. 출력층\u0001Soft\u0001max\u0001→\u0001실수\u0001전체\u0001출력\u0001→\u0001전체\n출력합\u00011이\u0001되도록\u0001하는\u0001확률값으로\u0001변환\n단어\u0001별로\u0001가중치\u0001순전파\u0001→\u0001h1,\u0001h2..\u0001생성\ngoodbye\n5. Loss\u0001function\u0001:\u0001Cross\u0001Entropy\n→\u0001분류\u0001문제\u0001\u0001확률을\u0001잘\u0001맞췄냐\u0001→\u0001올\u0001단어를\u0001잘\u0001맞췄냐\n24\" data-coord=\"top-left:(1140,652); bottom-right:(2911,1564)\" /></figure>\n<br><p id='207' data-category='paragraph' style='font-size:20px'>1.</p>\n<h1 id='208' style='font-size:22px'>Word2Vec</h1>\n<br><header id='209' style='font-size:18px'>Embedding</header>\n<h1 id='210' style='font-size:20px'>Cbow\u0001정리</h1>\n<p id='211' data-category='list' style='font-size:14px'>1. Context\u0001단어들을\u0001onehot\u0001vector로\u0001입력<br>2. in\u0001가중치\u0001계산으로\u0001은닉상태\u0001각각\u0001계산\u0001→\u0001평균<br>3. 평균낸\u0001은닉벡터\u0001→\u0001out\u0001계산\u0001후\u0001출력\u0001생성<br>4. 출력\u0001→\u0001softmax\u0001적용\u0001-\u0001전체\u0001단어\u0001중\u0001선택\u0001확률<br>5. 선택\u0001확률\u0001기반으로\u0001cross\u0001entropy\u0001계산\u0001<br>6. →\u0001역전파로\u0001weight\u0001업데이트</p>\n<h1 id='212' style='font-size:18px'>corpus\u0001내\u0001존재하는\u0001context\u0001-\u0001target\u0001쌍에\u0001대해서\u0001반복</h1>\n<h1 id='213' style='font-size:18px'>→\u0001학습된\u0001W\u0001in\u0001가중치\u0001:\u0001각\u0001단어들의\u0001hidden\u0001vector\u0001모음</h1>\n<p id='214' data-category='paragraph' style='font-size:18px'>→\u0001학습된\u0001W\u0001out\u0001가중치\u0001:\u0001평균된\u0001단어\u0001임베딩으로\u0001타깃\u0001예측\u0001출력</p>\n<br><figure id='215'><img style='font-size:14px' alt=\"1\n0\n0\n0\n. .\n0.3\n4.2\n3.3\n1.5\" data-coord=\"top-left:(1490,621); bottom-right:(2868,1503)\" /></figure>\n<br><p id='216' data-category='paragraph' style='font-size:16px'>...단어\u0001별\u0001벡터\u0001embedding\u0001생성!<br>25<br>이때\u0001당연히\u0001embedding\u0001vector\u0001크기는\u0001hidden\u0001size\u0001크기와\u0001같다</p>\n<h1 id='217' style='font-size:22px'>Word2Vec</h1>\n<h1 id='218' style='font-size:20px'>Skipgram</h1>\n<br><header id='219' style='font-size:16px'>Embedding</header>\n<p id='220' data-category='list' style='font-size:18px'>Cbow\u0001처럼\u0001Word2vec의\u0001하위\u0001학습\u0001방식<br>Cbow\u0001와\u0001반대로\u0001중간\u0001단어\u0001하나\u0001input<br>→\u0001주변\u0001n개\u0001context\u0001예측\u0001확률이\u0001Output</p>\n<figure id='221'><img alt=\"\" data-coord=\"top-left:(328,1014); bottom-right:(1219,1174)\" /></figure>\n<figure id='222'><img alt=\"\" data-coord=\"top-left:(243,1246); bottom-right:(1422,1433)\" /></figure>\n<br><figure id='223'><img alt=\"\" data-coord=\"top-left:(1555,469); bottom-right:(2764,1493)\" /></figure>\n<br><footer id='224' style='font-size:14px'>26</footer>\n<h1 id='225' style='font-size:22px'>Word2Vec</h1>\n<h1 id='226' style='font-size:20px'>그래서\u0001Word2vec\u0001의\u0001결과가\u0001뭐냐</h1>\n<br><header id='227' style='font-size:18px'>Embedding</header>\n<p id='228' data-category='list' style='font-size:16px'>Corpus\u0001가\u0001주어지면,\u0001Word2vec의\u0001Cbow나\u0001Skipgram\u0001\u0001방식을\u0001사용해,\u0001각\u0001단어별\u0001Embedding\u0001을\u0001구할\u0001수\u0001있다</p>\n<p id='229' data-category='list' style='font-size:16px'>학습된\u0001Word2vec\u0001모델로\u0001만든\u0001단어별\u0001임베딩은\u0001고차원\u0001공간에서\u0001단어의\u0001의미\u0001보존을\u0001기존\u0001방식보다\u0001더\u0001잘\u0001한다</p>\n<br><h1 id='230' style='font-size:14px'>(물론\u0001옛날\u0001기준이고\u0001현재\u0001대\u0001LLM\u0001시대엔\u0001더\u0001잘하는게\u0001많다)</h1>\n<br><h1 id='231' style='font-size:18px'>단어의\u0001효과적\u0001의미\u0001표현</h1>\n<br><h1 id='232' style='font-size:18px'>Cosine\u0001유사도\u0001-\u0001유사\u0001단어\u0001비교 벡터\u0001→\u0001추가적인\u0001ML\u0001Task\u0001적용\u0001가능</h1>\n<figure id='233' data-category='chart'><img data-coord=\"top-left:(232,976); bottom-right:(946,1508)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>Green</td><td>King</td></tr></thead><tbody><tr><td>item_01</td><td>70%</td><td>30%</td></tr></tbody></table></figure>\n<br><figure id='234'><img alt=\"\" data-coord=\"top-left:(1138,1036); bottom-right:(1858,1518)\" /></figure>\n<br><figure id='235'><img alt=\"\" data-coord=\"top-left:(2198,1014); bottom-right:(2669,1486)\" /></figure>\n<br><footer id='236' style='font-size:14px'>27</footer>\n<p id='237' data-category='paragraph' style='font-size:18px'>3.<br>RNN<br><br>\u0001LSTM\u0001GRU\u0001</p>\n<footer id='238' style='font-size:14px'>28</footer>\n<header id='239' style='font-size:16px'>Sequence<br>+<br>context</header>\n<br><h1 id='240' style='font-size:22px'>Language<br>Model<br>-<br>언어모델</h1>\n<h1 id='241' style='font-size:20px'>문맥파악하기\u0001→\u0001단어의\u0001등장\u0001순서\u0001파악하기!</h1>\n<p id='242' data-category='list' style='font-size:14px'>Word2vec은\u0001순서,\u0001장기\u0001문맥\u0001고려\u0001없이\u0001전후\u0001n개\u0001단어로\u0001단어를\u0001embedding\u0001하는\u0001모델</p>\n<p id='243' data-category='list' style='font-size:14px'>window\u0001size\u0001의\u0001한계\u0001+\u0001순서\u0001고려\u0001X로\u0001매끄러운\u0001문맥에\u0001맞는\u0001문장을\u0001판별하고\u0001예측하지\u0001못함<br>→\u0001즉,\u0001긴\u0001문장에서\u0001단어들의\u0001Sequence\u0001-\u0001나열을\u0001효과적으로\u0001예측하지\u0001못한다.</p>\n<h1 id='244' style='font-size:18px'>\"철수는\u0001학교에\u0001늦었지만,\u0001선생님께서\u0001그를\u0001________.\"</h1>\n<p id='245' data-category='paragraph' style='font-size:14px'>\u0001Word2vec\u0001의\u0001단순\u0001주위\u0001예측으로는\u0001“혼냈다”,\u0001“기다렸다”\u0001등을\u0001예상하기\u0001어렵다.\u0001</p>\n<p id='246' data-category='paragraph' style='font-size:14px'>결국\u0001철수/는\u0001→\u0001학교/에\u0001→\u0001늦/었/지만\u0001→\u0001선생님/께서\u0001→\u0001그/를\u0001→\u0001???</p>\n<p id='247' data-category='paragraph' style='font-size:14px'>이렇게\u0001문맥의\u0001자연스러움을\u0001평가하고,\u0001자연스러운\u0001다음\u0001단어를\u0001예측하는\u0001모델을\u0001언어\u0001모델\u0001이라고\u0001한다.!</p>\n<br><footer id='248' style='font-size:14px'>29</footer>\n<h1 id='249' style='font-size:22px'>RNN</h1>\n<br><header id='250' style='font-size:18px'>Sequence<br>+<br>context</header>\n<h1 id='251' style='font-size:20px'>Recursive\u0001Neural\u0001Network\u0001-\u0001재귀\u0001신경망이란?</h1>\n<h1 id='252' style='font-size:16px'>왜\u0001“Recurrent”\u0001신경망인가?\u0001→\u0001이전\u0001단어들\u0001입력에\u0001대해\u0001다음\u0001단어를\u0001예측해야\u0001함\u0001-\u0001순서를\u0001갖는\u0001시퀀스\u0001처리\u0001필요</h1>\n<h1 id='253' style='font-size:16px'>Feedforward\u0001신경망\u0001vs\u0001feedback\u0001loop\u0001신경망</h1>\n<br><figure id='254'><img alt=\"\" data-coord=\"top-left:(2180,535); bottom-right:(2810,769)\" /></figure>\n<br><h1 id='255' style='font-size:16px'>cbow\u0001:\u0001you\u0001say\u0001goodbye\u0001에서\u0001you\u0001원핫벡터는\u0001순서대로\u0001W\u0001in\u0001,\u0001hidden\u0001state,\u0001W\u0001out\u0001을\u0001통과\u0001(loop\u0001X)</h1>\n<h1 id='256' style='font-size:16px'>RNN\u0001:\u0001“철수는\u0001학교에\u0001늦었지만,\u0001선생님께서\u0001그를\u0001________”\u0001문장에서\u0001첫\u0001단어\u0001입력\u0001“철수는”\u0001이\u0001계속\u0001다음\u0001step\u0001“학교에”,\u0001“늦었<br>지만”\u0001을\u0001처리하는\u0001입력에서\u0001계속\u0001반영→\u0001계속\u0001반복해서\u0001다음\u0001단어\u0001hidden\u0001state\u0001계산에\u0001포함되어야\u0001함</h1>\n<figure id='257'><img alt=\"\" data-coord=\"top-left:(618,1061); bottom-right:(2293,1604)\" /></figure>\n<br><footer id='258' style='font-size:14px'>30</footer>\n<header id='259' style='font-size:18px'>Sequence<br>+<br>context</header>\n<br><h1 id='260' style='font-size:22px'>RNN</h1>\n<h1 id='261' style='font-size:20px'>RNN의\u0001task</h1>\n<h1 id='262' style='font-size:16px'>시퀀스\u0001-\u0001문맥을\u0001보는\u0001모델이\u0001할\u0001수\u0001있는건\u0001많다</h1>\n<figure id='263'><img alt=\"\" data-coord=\"top-left:(660,688); bottom-right:(2141,1304)\" /></figure>\n<br><p id='264' data-category='paragraph' style='font-size:16px'>One\u0001to\u0001many\u0001:\u0001첫\u0001단어\u0001입력에\u0001대해\u0001다음\u0001단어\u0001지속\u0001예측\u0001(문장생성)<br>many\u0001to\u0001one\u0001:\u0001문장\u0001전체\u0001입력에\u0001대해\u0001감정\u0001label\u0001예측\u0001(나\u0001지금\u0001너무\u0001신나~)\u0001→\u0001긍정<br>many\u0001to\u0001many\u0001:\u0001기계번역\u0001(I\u0001wanna\u0001go\u0001home\u0001→\u0001나\u0001집에\u0001갈래)</p>\n<br><footer id='265' style='font-size:14px'>31</footer>\n<header id='266' style='font-size:18px'>Sequence<br>+<br>context</header>\n<br><h1 id='267' style='font-size:22px'>RNN</h1>\n<h1 id='268' style='font-size:20px'>언어모델\u0001RNN의\u0001동작\u0001방식\u0001</h1>\n<br><h1 id='269' style='font-size:18px'>자연스러운\u0001문장\u0001생성법\u0001익히기</h1>\n<figure id='270'><img alt=\"\" data-coord=\"top-left:(667,661); bottom-right:(1934,1111)\" /></figure>\n<p id='271' data-category='paragraph' style='font-size:16px'>각\u0001X1,\u0001X2...\u0001매\u0001시점\u0001t\u0001별\u0001단어\u0001input\u0001은\u0001Word2vec\u0001등으로\u0001변환된\u0001임베딩\u0001된\u0001단어</p>\n<br><h1 id='272' style='font-size:18px'>One<br>to<br>Many!</h1>\n<br><h1 id='273' style='font-size:18px'>ex)<br>언어모델<br>(문장생성)</h1>\n<h1 id='274' style='font-size:14px'>“The”<br>input<br>→<br>“movie”<br>예측</h1>\n<h1 id='275' style='font-size:14px'>“The”<br>hidden<br>state<br>+<br>“movie”<br>input<br>→<br>“is”<br>예측</h1>\n<p id='276' data-category='paragraph' style='font-size:14px'>동일하게<br>Cross<br>entropy<br>loss<br>예측</p>\n<p id='277' data-category='paragraph' style='font-size:14px'>32</p>\n<header id='278' style='font-size:18px'>Sequence<br>+<br>context</header>\n<br><h1 id='279' style='font-size:22px'>RNN</h1>\n<h1 id='280' style='font-size:20px'>many\u0001to\u0001one\u0001감정분석\u0001RNN</h1>\n<br><h1 id='281' style='font-size:16px'>문장\u0001전체\u0001입력에\u0001대해\u0001하나의\u0001label\u0001출력\u0001→\u0001ex)\u0001긍정\u0001부정\u0001<br>→\u0001못맞추면\u0001cross\u0001entropy\u0001loss\u0001로\u0001역전파<br>ex)\u0001감정\u0001label\u0001예측\u0001(나\u0001지금\u0001너무\u0001신나~)\u0001→\u0001긍정</h1>\n<br><h1 id='282' style='font-size:18px'>Many<br>to<br>One!<br>ex)<br>Sentiment<br>Analysis</h1>\n<figure id='283'><img alt=\"\" data-coord=\"top-left:(427,740); bottom-right:(2226,1542)\" /><br><figcaption id='284' style='font-size:14px'>각\u0001X1,\u0001X2...\u0001는\u0001Word2vec\u0001등으로\u0001변환된\u0001임베딩\u0001된\u0001단어</figcaption></figure>\n\n<br><footer id='285' style='font-size:14px'>33</footer>\n<header id='286' style='font-size:16px'>Sequence<br>+<br>context</header>\n<br><h1 id='287' style='font-size:22px'>RNN</h1>\n<h1 id='288' style='font-size:20px'>RNN\u0001의\u0001문제\u0001-\u0001기울기\u0001소실\u0001/\u0001폭발</h1>\n<br><h1 id='289' style='font-size:14px'>시퀀스가\u0001너무\u0001길면,\u0001뒷쪽\u0001단어를\u0001예측해서\u0001나온\u0001오차가\u0001역전파가\u0001앞쪽\u0001“철수”에\u0001거의\u0001반영되지\u0001못한다.<br>→\u0001장기적\u0001정보\u0001저장에\u0001문제</h1>\n<br><h1 id='290' style='font-size:18px'>\"철수는\u0001학교에\u0001늦었고\u0001~~...\u0001~~\u0001선생님께서\u0001그를\u0001________.\"</h1>\n<figure id='291'><img alt=\"\" data-coord=\"top-left:(226,719); bottom-right:(2843,1556)\" /></figure>\n<br><footer id='292' style='font-size:14px'>34</footer>\n<header id='293' style='font-size:18px'>Sequence<br>+<br>context</header>\n<br><h1 id='294' style='font-size:22px'>LSTM/GRU</h1>\n<h1 id='295' style='font-size:20px'>Gate가\u0001추가된\u0001RNN\u0001-\u0001장기기억\u0001유지를\u0001위해</h1>\n<br><h1 id='296' style='font-size:16px'>장기\u0001정보를\u0001전달해주는\u0001여러\u0001Gate\u0001구조\u0001추가</h1>\n<h1 id='297' style='font-size:16px'>아키텍처\u0001그림\u0001-\u0001layer\u0001connection\u0001을\u0001여러\u0001구조로\u0001연결해\u0001먼\u0001과거의\u0001hidden\u0001state을\u0001미래에\u0001흘려주는\u0001구조<br>->\u0001구조만\u0001복잡</h1>\n<figure id='298'><img alt=\"\" data-coord=\"top-left:(292,853); bottom-right:(2674,1512)\" /></figure>\n<br><footer id='299' style='font-size:14px'>35</footer>\n<h1 id='300' style='font-size:20px'>4.<br>Transformer</h1>\n<br><h1 id='301' style='font-size:16px'>Seq2Seq</h1>\n<footer id='302' style='font-size:14px'>36</footer>\n<header id='303' style='font-size:18px'>Sequence<br>→<br>Sequence<br></header>\n<br><h1 id='304' style='font-size:22px'>Seq2Seq</h1>\n<h1 id='305' style='font-size:20px'>Sequence\u0001to\u0001Sequence\u0001→\u0001다대다\u0001아키텍처</h1>\n<h1 id='306' style='font-size:18px'>RNN<br>vs<br>Seq2Seq?</h1>\n<p id='307' data-category='list' style='font-size:16px'>seq2seq\u0001-\u0001셀이\u0001아닌\u0001아키텍처</p>\n<br><p id='308' data-category='list' style='font-size:16px'>RNN\u0001:\u0001문장을\u0001구성하는\u0001단어가\u0001입력되면</p>\n<br><h1 id='309' style='font-size:16px'>그때마다\u0001출력을\u0001내놓아서\u0001답변을\u0001만듦</h1>\n<br><p id='310' data-category='list' style='font-size:16px'>seq2seq\u0001:\u0001모든\u0001문장을\u0001끝까지\u0001들은\u0001후\u0001하<br>나의\u0001완전한\u0001문장\u0001생성</p>\n<p id='311' data-category='list' style='font-size:16px'>입력과\u0001출력\u0001시퀀스의\u0001길이가\u0001달라도\u0001처리\u0001가능!</p>\n<p id='312' data-category='list' style='font-size:16px'>긴\u0001문장\u0001구조의\u0001정렬\u0001문제\u0001해결</p>\n<br><h1 id='313' style='font-size:18px'>Many\u0001to\u0001Many\u0001구조의\u0001개선</h1>\n<figure id='314'><img alt=\"\" data-coord=\"top-left:(1530,638); bottom-right:(2522,1325)\" /></figure>\n<footer id='315' style='font-size:14px'>37</footer>\n<h1 id='316' style='font-size:22px'>Seq2Seq</h1>\n<br><header id='317' style='font-size:18px'>Sequence<br>→<br>Sequence<br></header>\n<h1 id='318' style='font-size:20px'>Sequence\u0001to\u0001Sequence\u0001→\u0001문장\u0001to\u0001문장</h1>\n<h1 id='319' style='font-size:16px'>기계번역,\u0001전문\u0001요약\u0001등</h1>\n<figure id='320'><img alt=\"\" data-coord=\"top-left:(837,779); bottom-right:(2330,1496)\" /></figure>\n<br><footer id='321' style='font-size:14px'>38</footer>\n<h1 id='322' style='font-size:20px'>Seq2Seq</h1>\n<br><header id='323' style='font-size:16px'>Sequence<br>→<br>Sequence<br></header>\n<h1 id='324' style='font-size:18px'>Sequence\u0001to\u0001Sequence\u0001문장번역</h1>\n<p id='325' data-category='list' style='font-size:16px'>RNN\u0001/\u0001LSTM\u0001/\u0001GRU\u0001등\u0001시퀀스\u0001아키텍처\u0001두\u0001개\u0001결합\u0001(인코더\u0001/\u0001디코더)</p>\n<p id='326' data-category='list' style='font-size:16px'>인코더에\u0001문장의\u0001단어\u0001차례대로\u0001입력\u0001→\u0001\u0001context\u0001vector를\u0001얻음<br>디코더에\u0001context\u0001vector와\u0001문장\u0001시작\u0001토큰\u0001임베딩\u0001<sos>\u0001입력\u0001<br>→\u0001반복\u0001예측\u0001하며\u0001종료\u0001토큰\u0001<eos>가\u0001나올\u0001때까지\u0001문장\u0001생성</p>\n<figure id='327'><img alt=\"\" data-coord=\"top-left:(337,915); bottom-right:(2693,1559)\" /></figure>\n<br><footer id='328' style='font-size:14px'>39</footer>\n<h1 id='329' style='font-size:22px'>Transformer</h1>\n<br><header id='330' style='font-size:18px'>Attention</header>\n<h1 id='331' style='font-size:20px'>Attention\u0001기반\u0001Transformer\u0001의\u0001등장</h1>\n<h1 id='332' style='font-size:18px'>Seq2Seq\u0001의\u0001문제</h1>\n<p id='333' data-category='list' style='font-size:16px'>단계적\u0001연산이\u0001너무\u0001느리다<br>긴\u0001시퀀스에서\u0001정보가\u0001충분히\u0001전달되지\u0001않는다</p>\n<br><h1 id='334' style='font-size:18px'>Transformer\u0001개선</h1>\n<p id='335' data-category='list' style='font-size:14px'>RNN\u0001계열\u0001셀\u0001배제\u0001→\u0001Transformer\u0001block\u0001을\u0001셀로\u0001구성</p>\n<p id='336' data-category='list' style='font-size:14px'>Positional\u0001encoding\u0001-\u0001시퀀스\u0001비순차적\u0001입력\u0001→\u0001\u0001병렬처리</p>\n<p id='337' data-category='list' style='font-size:14px'>Self\u0001Attention\u0001-\u0001긴\u0001문장의\u0001장기\u0001맥락</p>\n<p id='338' data-category='paragraph' style='font-size:18px'>본격적인\u0001Many\u0001to\u0001Many\u0001-\u0001문장\u0001to\u0001문장\u0001Task\u0001의\u0001발전</p>\n<br><p id='339' data-category='paragraph' style='font-size:18px'>→\u0001단어,\u0001문장\u0001임베딩,\u0001문장\u0001생성\u0001(인코딩/디코딩)\u0001모두\u0001Transformer\u0001아키텍처\u0001기반으로\u0001처리<br>(word2vec\u0001/\u0001RNN\u0001bye..)</p>\n<br><footer id='340' style='font-size:14px'>40</footer>\n<h1 id='341' style='font-size:20px'>Transformer</h1>\n<br><header id='342' style='font-size:16px'>Attention</header>\n<h1 id='343' style='font-size:18px'>Positional\u0001Encoding</h1>\n<figure id='344'><img alt=\"\" data-coord=\"top-left:(237,543); bottom-right:(2370,1280)\" /></figure>\n<p id='345' data-category='paragraph' style='font-size:16px'>문장<br>내<br>Position<br>에<br>대한<br>정보를<br>단어<br>Embedding<br>과<br>결합<br>→<br>의미와<br>위치정보를<br>모두<br>포함하는<br>벡터<br>생성</p>\n<footer id='346' style='font-size:14px'>41</footer>\n<p id='347' data-category='paragraph' style='font-size:22px'>Transformer</p>\n<br><header id='348' style='font-size:18px'>Attention</header>\n<p id='349' data-category='paragraph' style='font-size:20px'>Attention\u0001is\u0001all\u0001you\u0001need!</p>\n<figure id='350' data-category='chart'><img data-coord=\"top-left:(251,477); bottom-right:(1400,1565)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>The_animal_didn_</td><td>the_street_because</td><td>it_trans_to_tirement</td><td>was_too_tradecause</td></tr></thead><tbody><tr><td>item_01</td><td>1</td><td>2</td><td>3</td><td>4</td></tr></tbody></table></figure>\n<br><h1 id='351' style='font-size:18px'>seq2seq는\u0001input\u0001sequence가\u0001길어질\u0001수록\u0001성능이\u0001저하된다\u0001<br>→\u0001\u0001긴\u0001문맥을\u0001담기에\u0001context\u0001vector\u0001크기가\u0001부족하기\u0001때문!</h1>\n<br><h1 id='352' style='font-size:20px'>Attention!</h1>\n<h1 id='353' style='font-size:18px'>인코더의\u0001모든\u0001시점의\u0001문맥을\u0001반영하자,\u0001단\u0001주목할\u0001부분만!</h1>\n<h1 id='354' style='font-size:16px'>Query\u0001Key\u0001Value\u0001구조</h1>\n<p id='355' data-category='paragraph' style='font-size:16px'>\u0001-\u0001인코딩\u0001단계\u0001단어가\u0001문장\u0001내\u0001다른\u0001단어와\u0001관련이\u0001있는지\u0001(self\u0001attention)\u0001다른<br>단어의\u0001Key\u0001와\u0001비교\u0001→\u0001가중치로\u0001Value\u0001를\u0001반영</p>\n<footer id='356' style='font-size:14px'>42</footer>\n<h1 id='357' style='font-size:20px'>Transformer</h1>\n<br><header id='358' style='font-size:16px'>Attention</header>\n<h1 id='359' style='font-size:18px'>Attention\u0001기반\u0001Transformer</h1>\n<br><figure id='360'><img alt=\"\" data-coord=\"top-left:(266,386); bottom-right:(2681,1509)\" /></figure>\n<br><footer id='361' style='font-size:14px'>43</footer>\n<h1 id='362' style='font-size:20px'>Transformer</h1>\n<br><header id='363' style='font-size:16px'>Attention</header>\n<h1 id='364' style='font-size:18px'>Attention\u0001시각화</h1>\n<figure id='365' data-category='chart'><img data-coord=\"top-left:(554,551); bottom-right:(1401,1463)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>L</td><td>The agreement</td><td>on the</td><td>European Economic</td><td>Area</td><td>was</td><td>signed</td><td>in</td><td>August</td><td>1992</td><td>vend</td></tr></thead><tbody><tr><td>item_01</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr></tbody></table></figure>\n<br><figure id='366' data-category='chart'><img data-coord=\"top-left:(1479,567); bottom-right:(2348,1448)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>It should be</td><td>Notel</td><td>That</td><td>Marine</td><td>Environment</td><td>Le</td><td>KNOWN</td><td>[kW]</td></tr></thead><tbody></tbody></table></figure>\n<footer id='367' style='font-size:14px'>44</footer>\n<h1 id='368' style='font-size:18px'>5.<br>LLM</h1>\n<footer id='369' style='font-size:14px'>45</footer>\n<header id='370' style='font-size:22px'>LLM</header>\n<br><header id='371' style='font-size:18px'>Large<br>Language<br>Model</header>\n<h1 id='372' style='font-size:20px'>Large\u0001Language\u0001Model\u0001-\u0001Transformer\u0001인코더\u0001/\u0001디코더\u0001기반</h1>\n<h1 id='373' style='font-size:16px'>인코더\u0001-\u0001임베딩\u0001:\u0001전체\u0001문장을\u0001토대로\u0001언어표현\u0001생성<br>디코더\u0001-\u0001텍스트\u0001생성\u0001:\u0001자기회귀\u0001/\u0001AutoRegressive\u0001-\u0001자신이\u0001예측한\u0001단어로\u0001다음\u0001단어예측\u0001→\u0001언어\u0001표현\u0001및\u0001생성\u0001가능</h1>\n<figure id='374'><img alt=\"\" data-coord=\"top-left:(240,707); bottom-right:(2795,1588)\" /></figure>\n<br><footer id='375' style='font-size:14px'>46</footer>\n<h1 id='376' style='font-size:22px'>LLM</h1>\n<br><header id='377' style='font-size:18px'>Large<br>Language<br>Model</header>\n<h1 id='378' style='font-size:20px'>LLM\u0001기본\u0001구성</h1>\n<p id='379' data-category='list' style='font-size:16px'>Tokenizer\u0001:\u0001Corpus\u0001를\u0001임베딩을\u0001할\u0001“토큰”\u0001단위로\u0001분할</p>\n<p id='380' data-category='list' style='font-size:16px'>Transformer\u0001embedding\u0001:\u0001</p>\n<p id='381' data-category='list' style='font-size:16px'>Foundation\u0001Model\u0001:\u0001Bert,\u0001GPT,\u0001LLaMa</p>\n<p id='382' data-category='list' style='font-size:16px'>Sub\u0001task\u0001Fine\u0001Tuning\u0001:\u0001Roberta,\u0001finbert,\u0001kobert..</p>\n<br><figure id='383'><img alt=\"\" data-coord=\"top-left:(1394,555); bottom-right:(2850,1182)\" /></figure>\n<footer id='384' style='font-size:14px'>47</footer>\n<header id='385' style='font-size:20px'>LLM</header>\n<h1 id='386' style='font-size:18px'>LLM\u0001기본\u0001구성</h1>\n<br><header id='387' style='font-size:16px'>Large<br>Language<br>Model</header>\n<figure id='388'><img alt=\"\" data-coord=\"top-left:(234,804); bottom-right:(1466,1335)\" /></figure>\n<br><figure id='389' data-category='chart'><img data-coord=\"top-left:(1586,588); bottom-right:(2801,1393)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>입력</td><td>시퀀스</td><td>BERT</td><td>클래스포머 인코더</td><td>트랜스포머 인코더</td></tr></thead><tbody><tr><td>item_01</td><td>1</td><td>1</td><td>2</td><td>12</td><td>12</td></tr></tbody></table></figure>\n<footer id='390' style='font-size:14px'>48</footer>\n<header id='391' style='font-size:20px'>LLM</header>\n<br><header id='392' style='font-size:16px'>Large<br>Language<br>Model</header>\n<h1 id='393' style='font-size:18px'>PreTrain\u0001-\u0001FineTune</h1>\n<figure id='394'><img alt=\"\" data-coord=\"top-left:(1606,580); bottom-right:(2782,1385)\" /><br><figcaption id='396' style='font-size:16px'>Fine\u0001tuning\u0001adaptation</figcaption></figure>\n<br><p id='395' data-category='paragraph' style='font-size:16px'>Pre\u0001trained\u0001model</p>\n\n<footer id='397' style='font-size:14px'>49</footer>\n<br><figure id='398'><img alt=\"\" data-coord=\"top-left:(222,646); bottom-right:(543,775)\" /></figure>\n<figure id='399'><img alt=\"\" data-coord=\"top-left:(222,809); bottom-right:(305,891)\" /></figure>\n<figure id='400'><img alt=\"\" data-coord=\"top-left:(221,936); bottom-right:(331,1043)\" /></figure>\n<figure id='401'><img alt=\"\" data-coord=\"top-left:(219,1230); bottom-right:(565,1304)\" /></figure>\n<h1 id='402' style='font-size:18px'>Recap<br></h1>\n<footer id='403' style='font-size:14px'>50</footer>\n<header id='404' style='font-size:16px'>Sequence<br>+<br>context</header>\n<br><h1 id='405' style='font-size:20px'>NLP<br>Recap</h1>\n<h1 id='406' style='font-size:18px'>Large\u0001Language\u0001Model\u0001-\u0001거대\u0001언어모델이란?</h1>\n<table id='407' style='font-size:14px'><thead></thead><tbody><tr><td>Rule\u0001base\u0001/\u0001nltk <figure><img alt=\"\" data-coord=\"top-left:(430,572); bottom-right:(490,620)\" /></figure></td><td>규칙기반\u0001언어\u0001이해\u0001시도</td></tr><tr><td>통계\u0001기반</td><td>Corpus\u0001d라는\u0001단어\u0001묶음에서\u0001단어\u0001개수\u0001기반,\u0001동시\u0001발생\u0001기반\u0001벡터화\u0001시도</td></tr><tr><td></td><td></td></tr><tr><td>Word2vec <figure><img alt=\"\" data-coord=\"top-left:(420,879); bottom-right:(494,939)\" /></figure></td><td>신경망으로\u0001d\u0001구한,\u0001단어\u0001의미를\u0001담은\u0001단어의\u0001벡터표현(임베딩)!</td></tr><tr><td>RNN</td><td>문맥을\u0001학습한\u0001언어모델\u0001-\u0001문장생성,\u0001감정분석,\u0001기계\u0001번역\u0001등\u0001여러\u0001task\u0001수행</td></tr><tr><td><figure><img alt=\"\" data-coord=\"top-left:(427,1047); bottom-right:(491,1099)\" /></figure> LSTM\u0001/\u0001GRU <figure><img alt=\"\" data-coord=\"top-left:(428,1195); bottom-right:(487,1247)\" /></figure></td><td>RNN\u0001구조가\u0001장기기억에\u0001약하니\u0001긴\u0001문장\u0001학습을\u0001위해\u0001장기기억\u0001gate를\u0001만들어주자</td></tr><tr><td>Seq2Seq</td><td>문장단위의\u0001task\u0001처리를\u0001위해\u0001RNN\u0001셀을\u0001인코더\u0001디코더\u0001두\u0001단계로\u0001결합하자</td></tr><tr><td><figure><img alt=\"\" data-coord=\"top-left:(427,1340); bottom-right:(491,1396)\" /></figure> Transformer</td><td>\u0001Seq2Seq\u0001의\u0001단점인\u0001계산속도(병렬처리)와\u0001전체\u0001장기\u0001문맥\u0001고려\u0001(Attention!)를\u0001개선하자</td></tr><tr><td><figure><img alt=\"\" data-coord=\"top-left:(425,1487); bottom-right:(496,1545)\" /></figure></td><td>51</td></tr><tr><td>LLM</td><td>transformer\u0001인코더\u0001/\u0001디코더\u0001기반\u0001표현모델\u0001/\u0001생성모델\u0001(bert,\u0001gpt)\u0001\u0001발전\u0001ing</td></tr></tbody></table>\n<h1 id='408' style='font-size:18px'>과제<br>설명</h1>\n<footer id='409' style='font-size:14px'>52</footer>\n<h1 id='410' style='font-size:20px'>과제<br>설명</h1>\n<br><header id='411' style='font-size:16px'>Word2vec</header>\n<h1 id='412' style='font-size:18px'>과제\u0001Task\u0001-\u0001단어\u0001임베딩\u0001+\u0001감정분석</h1>\n<h1 id='413' style='font-size:16px'>시\u0001-\u0001감정\u0001labeled\u0001Data\u0001→\u0001문장\u0001별\u0001감정\u0001<br>(positive,\u0001no\u0001impact,\u0001negative)</h1>\n<figure id='414'><img alt=\"\" data-coord=\"top-left:(165,792); bottom-right:(1440,1400)\" /></figure>\n<br><h1 id='415' style='font-size:16px'>1.Corpus를\u0001구해\u0001Word2vec\u0001학습\u0001후\u0001임베딩구하기<br>2.구한\u0001임베딩으로\u0001GRU\u0001학습해\u0001감정분류하기</h1>\n<figure id='416'><img alt=\"\" data-coord=\"top-left:(1504,792); bottom-right:(2835,1395)\" /></figure>\n<footer id='417' style='font-size:14px'>53</footer>\n<h1 id='418' style='font-size:20px'>과제<br>설명</h1>\n<br><header id='419' style='font-size:16px'>Word2vec</header>\n<h1 id='420' style='font-size:18px'>1. Word2vec-\u0001구현</h1>\n<br><table id='421' style='font-size:14px'><thead></thead><tbody><tr><td>#\u0001Corpus\u0001준비</td></tr><tr><td>#\u0001Cbow\u0001/\u0001SkipGram\u0001구현</td></tr><tr><td>#\u0001Word2vec\u0001학습\u0001후\u0001임베딩 학습\u0001완료\u0001후\u0001단어\u0001별\u0001embedding\u0001이\u0001완성되면\u0001GRU\u0001학습 54</td></tr></tbody></table>\n<h1 id='422' style='font-size:22px'>과제<br>설명</h1>\n<br><header id='423' style='font-size:16px'>GRU</header>\n<h1 id='424' style='font-size:20px'>2.\u0001GRU\u0001-\u0001구현</h1>\n<h1 id='425' style='font-size:16px'>#\u0001입력\u0001텐서\u0001</h1>\n<br><h1 id='426' style='font-size:16px'>#\u0001현재\u0001시점\u0001입력<br>\u0001#\u0001직전\u0001시점\u0001은닉</h1>\n<h1 id='427' style='font-size:16px'>#\u0001가중치·편향\u0001(학습\u0001파라미터)</h1>\n<h1 id='428' style='font-size:18px'>\u0001#\u0001입력\u0001→\u0001게이트/후보<br>#\u0001은닉\u0001→\u0001게이트/후보<br>#\u0001각\u0001항목별\u0001bias</h1>\n<br><h1 id='429' style='font-size:14px'>GRU\u0001셀은\u0001한\u0001시점(\u0001t\u0001)\u0001에\u0001대해\u0001아래\u0001네\u0001식을\u0001순서대로\u0001수행하고\u0001나면\u0001그\u0001시점의\u0001은닉\u0001벡터\u0001h_t\u0001결정<br>아래\u00014개의\u0001수식\u0001=\u0001GRU\u0001셀\u00011\u0001사이클의\u0001모든\u0001계산</h1>\n<p id='430' data-category='equation'>$$\\begin{array}{l}{{z_{t}=\\sigma\\left(W_{z}\\cdot[h_{t-1},x_{t}]\\right)}}\\\\ {{r_{t}=\\sigma\\left(W_{r}\\cdot[h_{t-1},x_{t}]\\right)}}\\\\ {{\\hat{h}_{t}=\\operatorname{tanh}\\left(W\\cdot[r_{t}\\ast h_{t-1},x_{t}]\\right)}}\\\\ {{h_{t}=\\left(1-z_{t}\\right)\\ast h_{t-1}+z_{t}\\ast\\hat{h}_{t}}}\\end{array}$$</p>\n<footer id='431' style='font-size:14px'>55</footer>\n<h1 id='432' style='font-size:22px'>과제<br>설명</h1>\n<br><header id='433' style='font-size:18px'>GRU</header>\n<h1 id='434' style='font-size:20px'>2.\u0001GRU\u0001Cell\u0001-\u0001구현</h1>\n<br><h1 id='435' style='font-size:18px'>#\u0001Update\u0001Gate\u0001</h1>\n<br><h1 id='436' style='font-size:14px'>“이전\u0001은닉을\u0001얼마나\u0001보존할지”를\u00010\u0001~\u00011\u0001사이로\u0001정함<br>값이\u00011이면\u0001h_prev를\u0001거의\u0001그대로\u0001넘기고,\u00010이면\u0001새\u0001정보.</h1>\n<br><h1 id='437' style='font-size:18px'>#\u0001Reset\u0001Gate\u0001</h1>\n<h1 id='438' style='font-size:18px'>#\u0001Candidate\u0001hidden\u0001</h1>\n<br><h1 id='439' style='font-size:14px'>“과거\u0001정보를\u0001얼마나\u0001지울지”\u0001결정</h1>\n<br><h1 id='440' style='font-size:14px'>r_t=0\u0001이면\u0001h_prev를\u0001완전히\u0001끊고\u0001현재\u0001입력만\u0001봄\u0001.</h1>\n<p id='441' data-category='paragraph' style='font-size:14px'>“필터링된\u0001과거\u0001+\u0001현재\u0001입력”으로\u0001잠정\u0001은닉을\u0001생성.</p>\n<br><p id='442' data-category='paragraph' style='font-size:14px'>tanh는\u0001값\u0001범위를\u0001(‐1,\u00011)로\u0001제한해\u0001폭주를\u0001막음.</p>\n<br><figure id='443'><img alt=\"\" data-coord=\"top-left:(1982,660); bottom-right:(2923,1356)\" /></figure>\n<br><h1 id='444' style='font-size:18px'>#\u0001Final\u0001hidden\u0001</h1>\n<br><p id='445' data-category='paragraph' style='font-size:14px'>\u0001update\u0001gate를\u0001가중치로\u0001하여\u0001“예전\u0001vs.\u0001새\u0001후보”를\u0001선형\u0001혼합.</p>\n<br><footer id='446' style='font-size:16px'>56</footer>\n<h1 id='447' style='font-size:18px'>감사합니다!</h1>\n<footer id='448' style='font-size:14px'>57</footer>",
    "1Mp6WOaZHVuosU50Z6Ope8dYJ2THxszqJ": "<h1 id='0' style='font-size:22px'>5회차) DL 과제</h1>\n<h1 id='1' style='font-size:20px'>기간</h1>\n<br><h1 id='2' style='font-size:20px'>마감: 7월 29일 23:59까지<br>지각: 7월 30일 23:59까지</h1>\n<h1 id='3' style='font-size:20px'>intro</h1>\n<br><p id='4' data-category='paragraph' style='font-size:18px'>안녕하세요, 이번 과제는 MLP로 classification task를 해결하는 것입니다.</p>\n<br><p id='5' data-category='paragraph' style='font-size:16px'>pytorch를 사용하지 않고 numpy로 feed forward, gradient descent,<br>backpropagation<br>과정을 직접 구현해봄으로써 기초 지식을 단련하는 것이 목표입니다.</p>\n<h1 id='6' style='font-size:20px'>명세</h1>\n<br><p id='7' data-category='list' style='font-size:16px'> GPU가 없어도 되므로, 로컬 컴퓨터에서 진행해도 됩니다.<br> ### CODE HERE ### 혹은 #TODO 부분에 코드를 작성합니다.<br> 오류가 발생해서 뒷 코드를 실행하지 못하셨더라도 이해가 안가는 부분이나 본인의 코<br>드 내<br>용을 주석으로 남겨주시면 감안해서 채점하겠습니다.</p>\n<h1 id='8' style='font-size:20px'>제출방법</h1>\n<br><p id='9' data-category='paragraph' style='font-size:18px'> NN.ipynb와 작성하신 mlp.py를 본인의 repository에 올리시면 됩니다.</p>\n<p id='10' data-category='paragraph' style='font-size:16px'>YBIGTA_newbie_assignment/<br>└── 52DL/<br>├── NN.ipynb<br>└── mlp.py</p>\n<h1 id='11' style='font-size:20px'>채점 기준</h1>\n<br><p id='12' data-category='paragraph' style='font-size:16px'> 코드가 오류 없이 전부 돌아갔는지</p>\n<footer id='13' style='font-size:14px'>5회차) DL 과제</footer>\n<br><footer id='14' style='font-size:14px'>1</footer>\n<p id='15' data-category='list' style='font-size:20px'> 마지막 epoch에서 train loss가 30 이하인지</p>\n<br><p id='16' data-category='list' style='font-size:18px'> 코드를 실행시킨 시간이 제출기간 내인지(첫번째 cell에 코드 실행 시각을 적을 수 있게<br>해놨습니다.)</p>\n<br><p id='17' data-category='paragraph' style='font-size:20px'>위의 세 가지를 모두 만족하지 않으면 ‘미흡ʼ, ###TODO를 5개 이상 안 적을시 ‘미제출ʼ 처<br>리합니다.</p>\n<footer id='18' style='font-size:16px'>5회차) DL 과제</footer>\n<br><footer id='19' style='font-size:14px'>2</footer>",
    "1LUP0jTTC2k-mNaIkpX5IUTrDV8QpfoFX": "<header id='0' style='font-size:14px'>2025-2<br>YBIGTA</header>\n<h1 id='1' style='font-size:20px'>DL Basics</h1>\n<footer id='2' style='font-size:16px'>26기<br>박하늘</footer>\n<h1 id='3' style='font-size:18px'>목<br>차</h1>\n<br><p id='4' data-category='list' style='font-size:14px'>0. ML<br>1. MLP<br>2. Optimization<br>3. Generalization<br>&<br>Regularization<br>4. Beyond<br>percentron</p>\n<h1 id='5' style='font-size:14px'>0.<br>ML</h1>\n<h1 id='6' style='font-size:18px'>Machine<br>Learning</h1>\n<br><header id='7' style='font-size:14px'>ML</header>\n<figure id='8' data-category='chart'><img data-coord=\"top-left:(711,309); bottom-right:(2385,1400)\" /><figcaption><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>Artificial Intelligence</td><td>Machine Learning</td><td>Reinforcement Learning</td><td>Deep Learning</td><td>Deep Reinforcement Learning</td></tr></thead><tbody><tr><td>item_01</td><td>25%</td><td>25%</td><td>20%</td><td>15%</td><td>10%</td></tr></tbody></table></figure>\n<header id='9' style='font-size:14px'>ML</header>\n<br><h1 id='10' style='font-size:20px'>Machine<br>Learning</h1>\n<br><h1 id='11' style='font-size:16px'>What<br>is<br>Machine<br>Learning?</h1>\n<figure id='12'><img alt=\"\" data-coord=\"top-left:(512,820); bottom-right:(1076,1457)\" /></figure>\n<br><figure id='13'><img alt=\"\" data-coord=\"top-left:(1203,729); bottom-right:(2506,1457)\" /></figure>\n<header id='14' style='font-size:14px'>ML</header>\n<br><h1 id='15' style='font-size:20px'>Machine<br>Learning</h1>\n<br><h1 id='16' style='font-size:16px'>Supervised<br>Learning</h1>\n<figure id='17'><img alt=\"\" data-coord=\"top-left:(582,481); bottom-right:(2492,1288)\" /></figure>\n<h1 id='18' style='font-size:20px'>Machine<br>Learning</h1>\n<br><header id='19' style='font-size:14px'>ML</header>\n<h1 id='20' style='font-size:16px'>Unsupervised<br>Learning</h1>\n<figure id='21'><img alt=\"\" data-coord=\"top-left:(462,587); bottom-right:(2556,1141)\" /></figure>\n<h1 id='22' style='font-size:20px'>Machine<br>Learning</h1>\n<br><header id='23' style='font-size:14px'>ML</header>\n<h1 id='24' style='font-size:16px'>Reinforcement<br>Learning</h1>\n<figure id='25'><img alt=\"\" data-coord=\"top-left:(497,594); bottom-right:(976,1053)\" /></figure>\n<br><figure id='26' data-category='chart'><img data-coord=\"top-left:(985,602); bottom-right:(1439,1048)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>black_line</td><td>red_line</td></tr></thead><tbody><tr><td>item_01</td><td>3</td><td>4</td></tr></tbody></table></figure>\n<br><figure id='27'><img alt=\"\" data-coord=\"top-left:(1682,595); bottom-right:(2514,1042)\" /></figure>\n<header id='28' style='font-size:14px'>ML</header>\n<br><h1 id='29' style='font-size:18px'>Machine<br>Learning</h1>\n<figure id='30' data-category='chart'><img data-coord=\"top-left:(1456,418); bottom-right:(2333,1060)\" /><figcaption><p>Chart Title: a? b? c?</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>Red</td><td>Black</td><td>Blue</td></tr></thead><tbody><tr><td>item_01</td><td>2.5</td><td>1</td><td>2.1</td></tr></tbody></table></figure>\n<header id='31' style='font-size:14px'>ML</header>\n<br><h1 id='32' style='font-size:18px'>Machine<br>Learning</h1>\n<figure id='33' data-category='chart'><img data-coord=\"top-left:(596,410); bottom-right:(1524,1108)\" /><figcaption><p>Chart Title: a? b? c?</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>0</td></tr></thead><tbody><tr><td>item_01</td><td>2</td></tr></tbody></table></figure>\n<header id='34' style='font-size:14px'>ML</header>\n<br><h1 id='35' style='font-size:18px'>Machine<br>Learning</h1>\n<header id='36' style='font-size:14px'>ML</header>\n<br><h1 id='37' style='font-size:18px'>Machine<br>Learning</h1>\n<p id='38' data-category='equation'>$$C o s t(\\theta)=\\mathrm{~\\frac{~1}{~n~}}\\sum_{i=1}^{n}\\mathrm{~\\(y_{i}l o g~}h_{0}(x_{i})+(1-y_{i})\\mathrm{log}(1-h_{0}(x_{i}))$$</p>\n<p id='39' data-category='equation'>$$C o s t(\\theta)=-\\sum_{j=1}^{k}y_{j}\\,l o g(p_{j})$$</p>\n<header id='40' style='font-size:14px'>ML</header>\n<br><h1 id='41' style='font-size:18px'>Machine<br>Learning</h1>\n<p id='42' data-category='list'></p>\n<h1 id='43' style='font-size:14px'>1.<br>MLP</h1>\n<h1 id='44' style='font-size:18px'>Multi<br>Layer<br>Perceptron?</h1>\n<br><header id='45' style='font-size:14px'>MLP</header>\n<figure id='46'><img alt=\"\" data-coord=\"top-left:(865,455); bottom-right:(2036,1316)\" /></figure>\n<h1 id='47' style='font-size:18px'>Multi<br>Layer<br>Perceptron?</h1>\n<br><header id='48' style='font-size:14px'>MLP</header>\n<figure id='49'><img alt=\"\" data-coord=\"top-left:(684,400); bottom-right:(2317,1510)\" /></figure>\n<header id='50' style='font-size:14px'>MLP</header>\n<br><h1 id='51' style='font-size:18px'>Perceptron<br>&<br>MLP</h1>\n<figure id='52'><img alt=\"\" data-coord=\"top-left:(281,354); bottom-right:(2878,1528)\" /></figure>\n<header id='53' style='font-size:14px'>MLP</header>\n<br><h1 id='54' style='font-size:20px'>Perceptron<br>&<br>MLP</h1>\n<figure id='55'><img alt=\"\" data-coord=\"top-left:(196,390); bottom-right:(1057,923)\" /></figure>\n<p id='56' data-category='equation'>$$y=\\left\\{0\\begin{array}{c l}{{\\begin{array}{c l}{{\\begin{array}{c l}{{(w_{1}x_{1}+w_{2}x_{2}\\leq\\theta}{\\theta}})}\\\\ {{1}\\begin{array}{{(w_{1}x_{1}+w_{2}x_{2}>\\theta})}\\end{array}}}\\end{array}\\right.$$</p>\n<br><figure id='57'><img alt=\"\" data-coord=\"top-left:(1277,449); bottom-right:(2826,1011)\" /></figure>\n<p id='58' data-category='paragraph' style='font-size:16px'>Perceptron</p>\n<p id='59' data-category='paragraph' style='font-size:16px'>단일<br>뉴런<br>→<br>선형<br>경계만<br>판정</p>\n<br><p id='60' data-category='paragraph' style='font-size:16px'>Multi<br>Layer<br>Perceptron</p>\n<p id='61' data-category='paragraph' style='font-size:16px'>Hidden<br>Layer<br>+<br>Activation<br>function<br>→<br>비선형<br>문제도<br>해결</p>\n<header id='62' style='font-size:14px'>MLP</header>\n<br><h1 id='63' style='font-size:18px'>Why<br>MLP?</h1>\n<figure id='64'><img alt=\"\" data-coord=\"top-left:(78,403); bottom-right:(1943,1438)\" /></figure>\n<header id='65' style='font-size:14px'>MLP</header>\n<br><h1 id='66' style='font-size:18px'>신경망의<br>구조</h1>\n<figure id='67'><img alt=\"\" data-coord=\"top-left:(594,486); bottom-right:(1610,1493)\" /></figure>\n<header id='68' style='font-size:14px'>MLP</header>\n<br><h1 id='69' style='font-size:18px'>신경망의<br>구조</h1>\n<figure id='70'><img alt=\"\" data-coord=\"top-left:(516,527); bottom-right:(1616,1525)\" /></figure>\n<header id='71' style='font-size:14px'>MLP</header>\n<br><h1 id='72' style='font-size:18px'>신경망의<br>구조</h1>\n<figure id='73'><img alt=\"\" data-coord=\"top-left:(390,422); bottom-right:(1699,1411)\" /></figure>\n<h1 id='74' style='font-size:18px'>Activation<br>Function</h1>\n<br><header id='75' style='font-size:14px'>MLP</header>\n<figure id='76'><img alt=\"\" data-coord=\"top-left:(496,671); bottom-right:(1609,1245)\" /></figure>\n<h1 id='77' style='font-size:18px'>Activation<br>Function</h1>\n<br><header id='78' style='font-size:14px'>MLP</header>\n<figure id='79'><img alt=\"\" data-coord=\"top-left:(1621,1132); bottom-right:(2586,1459)\" /></figure>\n<header id='80' style='font-size:14px'>MLP</header>\n<br><h1 id='81' style='font-size:20px'>MLP의<br>확장</h1>\n<p id='82' data-category='list' style='font-size:16px'>MLP는<br>딥러닝에서<br>가장<br>기본적인<br>형태<br>현실에서는<br>MLP<br><<br>+)<br>더<br>깊은<br>층,<br>특수한<br>구조,<br>학습<br>테크닉,<br>큰<br>데이터,,,></p>\n<h1 id='83' style='font-size:14px'>2.<br>Optimization</h1>\n<header id='84' style='font-size:14px'>Optimization</header>\n<br><h1 id='85' style='font-size:18px'>Optimization<br>왜<br>필요하나요?</h1>\n<figure id='86'><img alt=\"\" data-coord=\"top-left:(632,390); bottom-right:(2443,1449)\" /></figure>\n<header id='87' style='font-size:14px'>Optimization</header>\n<br><h1 id='88' style='font-size:18px'>Optimization<br>왜<br>필요하나요?</h1>\n<p id='89' data-category='list' style='font-size:14px'>Loss<br>:<br>모델이<br>잘못<br>예측/분류한<br>정도만<br>계산<br>“그럼<br>어떤<br>방향으로/어떻게/얼마나<br>가야할까요?”는<br>어떻게<br>정해?</p>\n<p id='90' data-category='list' style='font-size:14px'>파라미터<br>개수:<br>수만~수십억~<br>수집한<br>데이터<br>&<br>컴퓨팅<br>자원을<br>가치있게<br>쓰려면...<br>일반화<br>성능은<br>최적화<br>품질에<br>달려있음</p>\n<br><figure id='91'><img alt=\"\" data-coord=\"top-left:(1614,570); bottom-right:(2917,1424)\" /></figure>\n<header id='92' style='font-size:14px'>Optimization</header>\n<br><h1 id='93' style='font-size:18px'>Loss<br>function</h1>\n<header id='94' style='font-size:14px'>Optimization</header>\n<br><h1 id='95' style='font-size:18px'>Cost<br>function</h1>\n\n<figure id='97' data-category='chart'><img data-coord=\"top-left:(894,703); bottom-right:(2128,1447)\" /><figcaption><p>Chart Title: Global Minimum (Best One)</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>initial_value</td><td>lowest_value</td><td>recent_value</td></tr></thead><tbody><tr><td>item_01</td><td>10Not explicitly stated</td><td>7Not explicitly stated</td><td>5Not explicitly stated</td></tr></tbody></figure><caption id='96' data-category='list'></caption></table>\n<header id='98' style='font-size:14px'>Optimization</header>\n<br><h1 id='99' style='font-size:18px'>Gradient<br>Descent</h1>\n<p id='100' data-category='list'></p>\n\n<figure id='102'><img alt=\"\" data-coord=\"top-left:(384,913); bottom-right:(2613,1456)\" /><figcaption id='101' data-category='list'></figcaption></figure>\n<header id='103' style='font-size:14px'>Optimization</header>\n<br><h1 id='104' style='font-size:18px'>Gradient<br>Descent</h1>\n<figure id='105' data-category='chart'><img data-coord=\"top-left:(718,548); bottom-right:(2211,1441)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>Cost</td><td>Learning step</td><td>Minimum</td><td>Random initial value</td></tr></thead><tbody><tr><td>item_01</td><td>50Not specified</td><td>25Not specified</td><td>10Not specified</td><td>15Not specified</td></tr></tbody></table></figure>\n<header id='106' style='font-size:14px'>Optimization</header>\n<br><h1 id='107' style='font-size:18px'>Backpropagation</h1>\n<figure id='108'><img alt=\"\" data-coord=\"top-left:(532,353); bottom-right:(2494,1490)\" /></figure>\n<header id='109' style='font-size:14px'>Optimization</header>\n<br><h1 id='110' style='font-size:18px'>Backpropagation</h1>\n<figure id='111'><img alt=\"\" data-coord=\"top-left:(757,363); bottom-right:(2239,1219)\" /></figure>\n<header id='112' style='font-size:14px'>Optimization</header>\n<br><h1 id='113' style='font-size:18px'>Backpropagation</h1>\n<p id='114' data-category='list'></p>\n<p id='115' data-category='equation'>$$z=(g\\circ f)(x)=g{\\bigl(}f(x){\\bigr)}$$</p>\n<header id='116' style='font-size:14px'>Optimization</header>\n<br><h1 id='117' style='font-size:18px'>Gradient<br>Descent</h1>\n<p id='118' data-category='list'></p>\n\n<figure id='120'><img alt=\"\" data-coord=\"top-left:(836,1091); bottom-right:(1371,1497)\" /><figcaption id='119' data-category='list'></figcaption></figure>\n<br><figure id='121'><img alt=\"\" data-coord=\"top-left:(1637,1102); bottom-right:(2201,1511)\" /></figure>\n<h1 id='122' style='font-size:18px'>Gradient<br>Descent<br>종류</h1>\n<br><header id='123' style='font-size:14px'>Optimization</header>\n<p id='124' data-category='list'></p>\n<p id='125' data-category='list'></p>\n<figure id='126' data-category='chart'><img data-coord=\"top-left:(239,1154); bottom-right:(905,1423)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>X</td></tr></thead><tbody><tr><td>item_01</td><td>34</td></tr></tbody></table></figure>\n<br><p id='127' data-category='list'></p>\n<p id='128' data-category='list'></p>\n<p id='129' data-category='list'></p>\n<br><p id='130' data-category='list'></p>\n<figure id='131'><img alt=\"\" data-coord=\"top-left:(1781,1140); bottom-right:(2133,1360)\" /></figure>\n<br><figure id='132' data-category='chart'><img data-coord=\"top-left:(2275,1145); bottom-right:(2780,1437)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>2.5</td><td>2.75</td><td>3.00</td><td>3.25</td><td>3.50</td><td>3.75</td><td>4.00</td><td>4.25</td><td>4.50</td></tr></thead><tbody><tr><td>Stockistic</td><td>2</td><td>2.4</td><td>2.55</td><td>2.71</td><td>3.12</td><td>3.11</td><td>3.38</td><td>3.75</td><td>3.83</td></tr><tr><td>Mini-batch</td><td>23</td><td>2.39</td><td>2.41</td><td>2.88</td><td>2.81</td><td>3.11</td><td>3.12</td><td>3.11</td><td>3.09</td></tr><tr><td>Batch</td><td>2</td><td>2.42</td><td>2.56</td><td>2.71</td><td>2.76</td><td>2.81</td><td>2.96</td><td>3.01</td><td>3</td></tr></tbody></table></figure>\n<br><p id='133' data-category='list'></p>\n<h1 id='134' style='font-size:20px'>Weight<br>Initializer</h1>\n<br><h1 id='135' style='font-size:14px'>Optimization</h1>\n<figure id='136'><img alt=\"\" data-coord=\"top-left:(908,376); bottom-right:(2086,1288)\" /></figure>\n<p id='137' data-category='paragraph' style='font-size:16px'>학습을<br>위한<br>초기<br>가중치는<br>어떻게<br>설정할<br>것인가?</p>\n<header id='138' style='font-size:14px'>Optimization</header>\n<br><h1 id='139' style='font-size:18px'>Weight<br>Initializer</h1>\n<figure id='140' data-category='chart'><img data-coord=\"top-left:(632,391); bottom-right:(2439,1449)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>X</td><td>W</td><td>W2</td><td>W3</td><td>W4</td><td>W5</td><td>W6</td><td>W7</td><td>W8</td><td>W9</td><td>W10</td><td>W11</td><td>W12</td><td>W13</td><td>W14</td><td>W15</td><td>W16</td><td>W17</td><td>W18</td><td>W19</td><td>W20</td><td>W21</td><td>W22</td><td>W23</td><td>W24</td><td>W25</td><td>W26</td><td>W27</td><td>W28</td><td>OUTPUT</td><td>LAYER</td><td>LAYERS</td></tr></thead><tbody><tr><td>item_01</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>3</td><td>4</td><td>4</td><td>5</td><td>6</td><td>3</td><td>3</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>2</td><td>1</td></tr></tbody></table></figure>\n<h1 id='141' style='font-size:20px'>Weight<br>Initializer</h1>\n<br><header id='142' style='font-size:14px'>Optimization</header>\n<h1 id='143' style='font-size:16px'>왜<br>하나요?</h1>\n<br><h1 id='144' style='font-size:16px'>레이어마다<br>분산이<br>비슷한<br>작은<br>random<br>number<br>를<br>뿌려<br>주면<br><br><br><br><br><br><br><br>순전파,<br>역전파<br>둘<br>다<br>폭주/소실<br>없이<br>적당한<br>크기로<br>흘러감</h1>\n<h1 id='145' style='font-size:16px'>어떻게<br>하나요?</h1>\n<br><h1 id='146' style='font-size:16px'>확률<br>분포<br>기반<br>초기화</h1>\n<br><h1 id='147' style='font-size:16px'>초기<br>신경망에서<br>활용</h1>\n<h1 id='148' style='font-size:16px'>분산<br>조정<br>기반<br>초기화</h1>\n<br><p id='149' data-category='list' style='font-size:16px'>현대<br>CNN,<br>Transformer에서<br>활용<br>fan-in<br>/<br>fan-out으로<br>분산을<br>자동<br>조정</p>\n<h1 id='150' style='font-size:20px'>Weight<br>Initializer</h1>\n<br><header id='151' style='font-size:14px'>Optimization</header>\n<p id='152' data-category='list' style='font-size:16px'>Xavier:<br>ReLU<br>activation<br>function을<br>사용할<br>때<br>비효율적<br>He:<br>해당<br>문제를<br>해결</p>\n<p id='153' data-category='equation'>$$W\\sim N(0,V a r(W))$$</p>\n<p id='154' data-category='equation'>$$V a r(W)={\\sqrt{\\frac{2}{n_{i n}+n_{o u t}}}}$$</p>\n<br><p id='155' data-category='equation'>$$W\\sim N(0,V a r(W))$$</p>\n<p id='156' data-category='equation'>$$V a r(W)={\\sqrt{\\frac{2}{n_{i n}}}}$$</p>\n<figure id='157'><img alt=\"\" data-coord=\"top-left:(372,1204); bottom-right:(1319,1381)\" /></figure>\n<br><p id='158' data-category='equation'>$$W\\sim U(-\\sqrt{\\frac{6}{n_{i n}}},\\;\\;+\\sqrt{\\frac{6}{n_{i n}}})$$</p>\n<header id='159' style='font-size:14px'>Optimization</header>\n<br><h1 id='160' style='font-size:20px'>GD<br>-<br>Optimizer</h1>\n<h1 id='161' style='font-size:16px'>Backpropagation에서<br>얻은<br>그래디언트를<br>이용해<br>Loss를<br>빠르고<br>안정적으로<br>낮추는<br>업데이트<br>전략은?</h1>\n<figure id='162' data-category='chart'><img data-coord=\"top-left:(193,643); bottom-right:(2924,1562)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>Local minima</td><td>Global maximum</td><td>Starting here</td><td>We want to get to here</td><td>Weights</td></tr></thead><tbody><tr><td>item_01</td><td>0</td><td>2</td><td>4</td><td>6</td><td>2</td></tr></tbody></table></figure>\n<header id='163' style='font-size:14px'>Optimization</header>\n<br><h1 id='164' style='font-size:20px'>GD<br>-<br>Optimizer</h1>\n<h1 id='165' style='font-size:16px'>Backpropagation에서<br>얻은<br>그래디언트를<br>이용해<br>Loss를<br>낮추기<br>위해<br>어느<br>방향으로<br>갈지?</h1>\n<figure id='166'><img alt=\"\" data-coord=\"top-left:(643,621); bottom-right:(2421,1502)\" /></figure>\n<header id='167' style='font-size:14px'>Optimization</header>\n<br><h1 id='168' style='font-size:20px'>GD<br>-<br>Optimizer</h1>\n<h1 id='169' style='font-size:16px'>Backpropagation에서<br>얻은<br>그래디언트를<br>이용해<br>Loss를<br>낮추기<br>위해<br>얼마나<br>멀리<br>갈지?</h1>\n<figure id='170'><img alt=\"\" data-coord=\"top-left:(136,668); bottom-right:(2828,1500)\" /></figure>\n<h1 id='171' style='font-size:14px'>3.<br>Generalization<br>&Regularization</h1>\n<h1 id='172' style='font-size:20px'>Generalization</h1>\n<br><header id='173' style='font-size:14px'>Generalization</header>\n<h1 id='174' style='font-size:16px'>딥러닝의<br>일반화<br>기법은<br>과적합을<br>방지하고,<br>훈련에<br>사용되지<br>않은<br>새로운<br>데이터에서도<br>일관된<br>성능을<br>낼<br>수<br>있도록<br>돕습니다.</h1>\n<h1 id='175' style='font-size:20px'>Generalization<br>vs<br>Overfitting</h1>\n<br><header id='176' style='font-size:14px'>Generalization</header>\n<figure id='177'><img alt=\"\" data-coord=\"top-left:(373,386); bottom-right:(1185,1198)\" /></figure>\n<br><figure id='178' data-category='chart'><img data-coord=\"top-left:(1598,386); bottom-right:(2730,1269)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>Underfitting zone</td><td>Overfitting zone</td><td>Voicefitting zone (UP)</td><td>Bias2</td><td>Offence</td><td>Total Error</td></tr></thead><tbody><tr><td>item_01</td><td>100</td><td>80</td><td>20</td><td>0</td><td>10</td><td>20</td></tr></tbody></table></figure>\n<p id='179' data-category='paragraph' style='font-size:16px'>Good<br>Generalization<br>=<br>Low<br>expected<br>risk</p>\n<header id='180' style='font-size:14px'>Generalization</header>\n<br><h1 id='181' style='font-size:20px'>가중치<br>기반<br>Regularization</h1>\n<p id='182' data-category='equation'>$$\\mathrm{{Gost}}~=~\\sum_{i=0}^{N}(y_{i}-\\sum_{j=0}^{M}x_{i j}W_{j})^{2}+\\lambda\\sum_{j=0}^{M}|W_{j}|$$</p>\n<figure id='183'><img alt=\"\" data-coord=\"top-left:(205,840); bottom-right:(1634,1445)\" /></figure>\n<br><figure id='184'><img alt=\"\" data-coord=\"top-left:(1737,673); bottom-right:(2841,1256)\" /></figure>\n<p id='185' data-category='paragraph' style='font-size:16px'>가중치에<br>대한<br>규제로<br>학습에서<br>안정적인<br>모델을<br>만드는<br>안전장치</p>\n<header id='186' style='font-size:14px'>Generalization</header>\n<br><h1 id='187' style='font-size:18px'>확률적<br>Dropout</h1>\n<figure id='188'><img alt=\"\" data-coord=\"top-left:(668,425); bottom-right:(2391,1328)\" /></figure>\n<header id='189' style='font-size:14px'>Generalization</header>\n<br><h1 id='190' style='font-size:20px'>Batch<br>Normalization</h1>\n<figure id='191'><img alt=\"\" data-coord=\"top-left:(291,451); bottom-right:(2733,1218)\" /></figure>\n<p id='192' data-category='list' style='font-size:16px'>미니배치<br>단위로<br>중간<br>활성값<br>정규화<br>다시<br>학습<br>가능한<br>스케일,<br>시프트<br>곱해주는<br>레이어</p>\n<header id='193' style='font-size:14px'>Generalization</header>\n<br><h1 id='194' style='font-size:18px'>데이터<br>기반<br>Regularization<br>:<br>CV</h1>\n<figure id='195'><img alt=\"\" data-coord=\"top-left:(556,421); bottom-right:(2496,1343)\" /></figure>\n<header id='196' style='font-size:14px'>Generalization</header>\n<br><h1 id='197' style='font-size:20px'>데이터<br>기반<br>Regularization<br>:<br>NLP</h1>\n<figure id='198'><img alt=\"\" data-coord=\"top-left:(606,362); bottom-right:(2114,1381)\" /></figure>\n<br><p id='199' data-category='list' style='font-size:16px'>BERT<br>:<br>양방향<br>Transformer<br>+<br>Masked<br>Language<br>Model<br>문맥<br>전체를<br>활용해<br>가려진<br>단어를<br>맞히도록<br>훈련</p>\n<header id='200' style='font-size:14px'>Generalization</header>\n<br><h1 id='201' style='font-size:20px'>Early<br>Stopping<br>:<br>학습<br>절차<br>기반</h1>\n<figure id='202' data-category='chart'><img data-coord=\"top-left:(633,328); bottom-right:(2159,1292)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>Error</td><td>Validation</td><td>Stop training</td><td>Training</td></tr></thead><tbody><tr><td>item_01</td><td>100Number of epochs</td><td>30Number of epochs</td><td>20Number of epochs</td><td>10Number of epochs</td></tr></tbody></table></figure>\n<br><p id='203' data-category='list' style='font-size:16px'>Patience:<br>n번<br>연속<br>개선<br>없으면<br>stop!<br>장점:<br>정규화,<br>훈련<br>시간<br>단축<br>단점:<br>validation<br>set<br>의존도</p>\n<header id='204' style='font-size:14px'>Generalization</header>\n<br><h1 id='205' style='font-size:20px'>K-fold<br>Cross-Validation:<br>모델<br>평가<br>&<br>선택</h1>\n<figure id='206'><img alt=\"\" data-coord=\"top-left:(371,472); bottom-right:(2699,1289)\" /></figure>\n<p id='207' data-category='paragraph' style='font-size:16px'>데이터<br>K<br>조각<br>→<br>k회<br>학습,<br>평가<br>→<br>평균<br>성능</p>\n<h1 id='208' style='font-size:14px'>4.<br>Beyond<br>Perceptron</h1>\n<h1 id='209' style='font-size:14px'>Beyond<br>Perceptron</h1>\n<br><h1 id='210' style='font-size:18px'>Parameter<br>Efficiency</h1>\n<br><figure id='211' data-category='chart'><img data-coord=\"top-left:(594,220); bottom-right:(2434,1583)\" /><figcaption><p>Chart Title: Efficiency</p><p>Y-Axis: Number of parameters</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>Al2</td><td>ELI0</td><td>Al8</td><td>Al9</td><td>Al10</td><td>Other</td><td>Spokane</td><td>Seawolf</td><td>GPT</td><td>Geogeale</td><td>BERT-Large</td><td>Grover-Mega</td><td>W</td><td>XLI</td><td>RoBERT</td><td>YKLA</td><td>Desbilbert</td><td>T-NLG</td><td>McKinney</td><td>Goward</td><td>Switch-C</td></tr></thead><tbody><tr><td>item_01</td><td>110</td><td>340</td><td>110</td><td>340</td><td>465</td><td>340</td><td>130</td><td>130</td><td>130</td><td>135</td><td>115</td><td>100</td><td>90</td><td>85</td><td>70</td><td>60</td><td>100</td><td>110</td><td>100</td><td>100</td><td>100</td></tr></tbody></table></figure>\n<header id='212' style='font-size:14px'>Beyond<br>Perceptron</header>\n<br><h1 id='213' style='font-size:18px'>Convolutional<br>Neural<br>Network</h1>\n<figure id='214'><img alt=\"\" data-coord=\"top-left:(523,439); bottom-right:(2458,1460)\" /></figure>\n<h1 id='215' style='font-size:18px'>Convolutional<br>Neural<br>Network</h1>\n<br><p id='216' data-category='paragraph' style='font-size:14px'>Beyond<br>Perceptron</p>\n<figure id='217'><img alt=\"\" data-coord=\"top-left:(283,506); bottom-right:(2728,1505)\" /></figure>\n<header id='218' style='font-size:14px'>Beyond<br>Perceptron</header>\n<br><h1 id='219' style='font-size:18px'>Recurrent<br>Neural<br>Network</h1>\n<figure id='220'><img alt=\"\" data-coord=\"top-left:(227,534); bottom-right:(2781,1178)\" /></figure>\n<h1 id='221' style='font-size:14px'>Beyond<br>Perceptron</h1>\n<br><h1 id='222' style='font-size:20px'>AE<br>&<br>VAE</h1>\n<figure id='223'><img alt=\"\" data-coord=\"top-left:(1,423); bottom-right:(1508,1264)\" /></figure>\n<br><figure id='224'><img alt=\"\" data-coord=\"top-left:(1668,300); bottom-right:(2816,1416)\" /></figure>\n<br><p id='225' data-category='paragraph' style='font-size:16px'>input<br>x를<br>reconstruct<br>하는<br>z<br>만들기<br>데이터<br>압축<br>&<br>복원</p>\n<br><p id='226' data-category='paragraph' style='font-size:16px'>input<br>x가<br>만들어지는<br>확률<br>분포를<br>찾기<br>새로운<br>데이터<br>생성</p>\n<header id='227' style='font-size:14px'>Beyond<br>Perceptron</header>\n<br><h1 id='228' style='font-size:20px'>AE<br>&<br>VAE</h1>\n<figure id='229' data-category='chart'><img data-coord=\"top-left:(377,511); bottom-right:(2576,1324)\" /><figcaption><p>Chart Title: Latent Distribution by Label for AE</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td><td>10</td></tr></thead><tbody><tr><td>item_01</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td><td>0%</td></tr></tbody></table></figure>\n<br><p id='230' data-category='paragraph' style='font-size:16px'>MNIST<br>데이터셋을<br>통해<br>만든<br>latent<br>space<br>PCA를<br>통해<br>2차원으로<br>축소<br>&<br>시각화</p>\n<h1 id='231' style='font-size:14px'>Beyond<br>Perceptron</h1>\n<br><h1 id='232' style='font-size:18px'>Generative<br>Adversarial<br>Network</h1>\n<figure id='233'><img alt=\"\" data-coord=\"top-left:(573,353); bottom-right:(2367,1203)\" /></figure>\n<h1 id='234' style='font-size:14px'>감사합니다!</h1>",
    "124rmH88m1AOhMFxz2uPrQU7uyl6qZJ32": "<header id='0' style='font-size:14px'>2025-Summer\u0001YBIGTA</header>\n<p id='1' data-category='paragraph' style='font-size:20px'>DMP</p>\n<br><h1 id='2' style='font-size:18px'>(Data Management Platform)</h1>\n<p id='3' data-category='paragraph' style='font-size:16px'>26기\u0001김현운</p>\n<h1 id='4' style='font-size:18px'>목\u0001차</h1>\n<p id='5' data-category='list' style='font-size:14px'>1. DMP란?\u0001Ops란?<br>2. MLOps\u0001DMP\u0001-\u0001Dataiku<br>3. 워크플로우\u0001자동화\u0001DMP\u0001-\u0001n8n<br>4. 시연</p>\n<br><figure id='6'><img alt=\"\" data-coord=\"top-left:(1637,490); bottom-right:(2881,1306)\" /></figure>\n<h1 id='7' style='font-size:14px'>DMP란?\u0001Ops란?</h1>\n<header id='8' style='font-size:14px'>DMP란?<br>Ops란?<br></header>\n<br><h1 id='9' style='font-size:20px'>Operations<br>in<br>Digital<br>Jobs<br></h1>\n<figure id='10'><img alt=\"\" data-coord=\"top-left:(250,458); bottom-right:(1294,1383)\" /></figure>\n<br><h1 id='11' style='font-size:16px'>오퍼레이션:<br>조직<br>내에서<br>사업이<br>전개되기<br>위해<br>필요한<br>일련의<br>행위들을<br>포괄</h1>\n<br><h1 id='12' style='font-size:16px'>흔히<br>접미사로<br>붙이는<br>Ops는<br>Operations의<br>줄임말!</h1>\n<br><h1 id='13' style='font-size:16px'>DevOps:<br>소프트웨어<br>개발과<br>운영을<br>CI/CD로<br>자동<br>화해<br>빠르고<br>안정적인<br>서비스<br>배포를<br>지원하는<br>운영<br>문<br>화</h1>\n<p id='14' data-category='paragraph' style='font-size:16px'>DataOps:<br>데이터<br>수집·처리·품질<br>관리<br>파이프라인<br>을<br>자동화해<br>신뢰성<br>높은<br>데이터<br>활용을<br>지원하는<br>운영<br>문화</p>\n<p id='15' data-category='paragraph' style='font-size:18px'>MLOps:<br>ML<br>모델의<br>학습부터<br>배포·모니터링까지<br>전<br>과정을<br>자동화·운영하는<br>ML<br>특화<br>DataOps</p>\n<h1 id='16' style='font-size:14px'>DMP란?\u0001Ops란?</h1>\n<br><h1 id='17' style='font-size:20px'>Data(ML)Ops\u0001Workflow</h1>\n<h1 id='18' style='font-size:18px'>데이터\u0001수집 데이터\u0001추출 데이터\u0001가공 모델링\u0001및\u0001적재 배포</h1>\n<h1 id='19' style='font-size:20px'>DevOps\u0001Workflow</h1>\n<br><h1 id='20' style='font-size:18px'>코드\u0001작성 시스템(앱)\u0001빌드 컨테이너\u0001빌드 프로덕션\u0001배포 모니터링</h1>\n<p id='21' data-category='paragraph' style='font-size:16px'>목적\u0001적합한\u0001기능/플로우를\u0001한\u0001데\u0001묶어\u0001Operation화\u0001해야\u0001한다는\u0001건\u0001알겠는데...<br>잘\u0001묶인\u0001파이프라인을\u0001만들고\u0001디버깅\u0001및\u0001자동화하여\u0001배포까지\u0001연결\u0001가능한\u0001통합\u0001플랫폼이\u0001없을까?</p>\n<h1 id='22' style='font-size:14px'>뭐가\u0001있을까... 뭐가\u0001있을까...</h1>\n<h1 id='23' style='font-size:20px'>DMP</h1>\n<br><h1 id='24' style='font-size:14px'>DMP란?\u0001Ops란?</h1>\n<h1 id='25' style='font-size:16px'>Dataiku(데이터이쿠)</h1>\n<h1 id='26' style='font-size:16px'>Snowflake(스노우플레이크)</h1>\n<h1 id='27' style='font-size:16px'>Databricks(데이터브릭스)</h1>\n<p id='28' data-category='paragraph' style='font-size:16px'>n8n</p>\n<p id='29' data-category='paragraph' style='font-size:16px'>.....</p>\n<header id='30' style='font-size:14px'>DMP란?\u0001Ops란?</header>\n<br><h1 id='31' style='font-size:20px'>DMP</h1>\n<h1 id='32' style='font-size:16px'>데이터\u0001수집·저장·처리·분석을\u0001통합\u0001관리하여,\u0001대규모\u0001데이터\u0001기반의\u0001의사결정\u0001및\u0001AI/ML\u0001활용을\u0001지원하는\u0001통합\u0001플랫폼</h1>\n<br><h1 id='33' style='font-size:16px'>데이터\u0001통합\u0001및\u0001관리\u0001(Data\u0001Integration)<br>다양한\u0001소스(API,\u0001DB,\u0001클라우드)에서\u0001데이터\u0001수집·통합</h1>\n<h1 id='34' style='font-size:16px'>데이터\u0001품질\u0001및\u0001거버넌스\u0001(Data\u0001Governance)<br>데이터\u0001정제,\u0001품질\u0001검증,\u0001권한\u0001관리</h1>\n<h1 id='35' style='font-size:16px'>데이터\u0001처리\u0001및\u0001분석\u0001(Processing\u0001&\u0001Analytics)</h1>\n<br><h1 id='36' style='font-size:16px'>SQL,\u0001Spark\u0001등으로\u0001대규모\u0001데이터\u0001처리\u0001및\u0001탐색적\u0001분석\u0001지원</h1>\n<p id='37' data-category='paragraph' style='font-size:16px'>머신러닝\u0001및\u0001AI\u0001활용\u0001(ML/AI\u0001Enablement)<br>모델\u0001학습,\u0001평가,\u0001배포(MLOps\u0001지원)</p>\n<p id='38' data-category='paragraph' style='font-size:16px'>자동화\u0001및\u0001협업\u0001(Automation\u0001&\u0001Collaboration)<br>워크플로우\u0001자동화,\u0001시각화,\u0001팀\u0001단위\u0001협업\u0001지원</p>\n<br><figure id='39'><img alt=\"\" data-coord=\"top-left:(1781,540); bottom-right:(3000,1474)\" /></figure>\n<h1 id='40' style='font-size:14px'>Dataiku</h1>\n<header id='41' style='font-size:14px'>Dataiku</header>\n<br><h1 id='42' style='font-size:20px'>Dataiku\u0001기능</h1>\n<figure id='43'><img alt=\"\" data-coord=\"top-left:(456,293); bottom-right:(2343,1020)\" /></figure>\n<br><p id='44' data-category='paragraph' style='font-size:16px'>Low-code\u0001아이템\u0001활용:\u0001전처리부터\u0001파이프라인\u0001제작까지</p>\n<br><p id='45' data-category='paragraph' style='font-size:16px'>분석/ML\u0001Workflow\u0001자동화</p>\n<p id='46' data-category='list' style='font-size:16px'>MLOps에\u0001자주\u0001쓰이는\u0001기능,\u0001Code를\u0001빌트인으로\u0001제공<br>빌트인\u0001아이템을\u0001사용하지\u0001않고,\u0001Custom\u0001Code로\u0001자<br>유자재\u0001구현\u0001가능(Pyspark,\u0001SQL,\u0001Python\u0001...)<br>AutoML,\u0001AutoVisualization\u0001등\u0001파이프라인\u0001제작\u0001단계<br>에서의\u0001자원\u0001소모를\u0001줄일\u0001수\u0001있도록\u0001지원</p>\n<br><p id='47' data-category='list' style='font-size:18px'>수집\u0001⟶\u0001추출\u0001⟶\u0001정제\u0001⟶\u0001모델링\u0001⟶\u0001재적재\u0001⟶\u0001대<br>시보드\u0001추출/\u0001배포<br>Extract:\u0001GCS,\u0001S3,\u0001BigQuery\u0001/\u0001Live\u0001Streaming<br>data...<br>Deploy:\u0001Tableau\u0001/\u0001계열사\u0001통합\u0001디지털\u0001Portal\u0001...</p>\n<h1 id='48' style='font-size:22px'>When<br>to<br>Use<br>Dataiku?</h1>\n<br><h1 id='49' style='font-size:14px'>Dataiku</h1>\n<h1 id='50' style='font-size:14px'>사내<br>체계적으로<br>축적되는<br>데이터를<br>활용해,<br>ETL/AI/ML<br>및<br>인사이트<br>추출을<br>위한<br>대시보드<br>산출<br>작업<br>진행<br>시<br>활용<br></h1>\n<h1 id='51' style='font-size:18px'>“특정<br>주기마다<br>자동적으로<br>돌아가야<br>하는”</h1>\n<br><h1 id='52' style='font-size:14px'>재무성과,<br>생산계획,<br>출하일정,<br>마케팅성과<br>등<br>주,<br>월단위<br>Updating<br>Batch<br>Process가<br>구동되어야..</h1>\n<h1 id='53' style='font-size:20px'>“트랜잭션<br>단위<br>몇십만<br>DP<br>이상<br>대용량<br>데이터가<br>추출<br>및<br>적재되어야<br>하는“</h1>\n<br><p id='54' data-category='list' style='font-size:16px'>Excel<br><<<br>SQL<br><<<<<br>Spark/Kafka<br>Ex1)<br>실시간<br>대규모<br>크롤링/고객<br>로그데이터<br>기반<br>Kafka<br>처리,<br>5분단위<br>구동<br>가능<br>Ex2)<br>송금<br>기록<br>4주간<br>누적<br>저장,<br>파티션<br>기반<br>Spark<br>처리,<br>4주<br>단위<br>구동<br>가능</p>\n<h1 id='55' style='font-size:18px'>“데이터의<br>출처가<br>다채로운“</h1>\n<br><p id='56' data-category='list' style='font-size:14px'>사내<br>KPI를<br>모니터링하는<br>대시보드를<br>만들고<br>싶은데,,<br>원천<br>데이터소스가<br>너무<br>많아!!<br>SAP<br>ERP,<br>Amazon<br>S3,<br>수기<br>업로드<br>엑셀파일…<br>등등<br>활용성<br>good<br></p>\n<p id='57' data-category='paragraph' style='font-size:18px'>전형적인<br>금융/제조업/유통/커머스<br>도메인<br>불문<br>“MLops”<br>소화<br>가능(보통은<br>제조업-<br>SCM/수율<br>등)</p>\n<h1 id='58' style='font-size:20px'>Dataiku<br>Usecases</h1>\n<p id='59' data-category='paragraph' style='font-size:16px'>LG화학-<br>https://www.youtube.com/watch?<br>v=htijVvGe5Ws</p>\n<p id='60' data-category='paragraph' style='font-size:16px'>SkHynix<br>-<br>https://www.youtube.com/watch?<br>v=sCb4wXuxmKQ<br></p>\n<br><h1 id='61' style='font-size:14px'>Dataiku</h1>\n<figure id='62'><img alt=\"\" data-coord=\"top-left:(1603,486); bottom-right:(2222,991)\" /></figure>\n<br><figure id='63'><img alt=\"\" data-coord=\"top-left:(2298,479); bottom-right:(2918,989)\" /></figure>\n<p id='64' data-category='paragraph' style='font-size:16px'>DX/AIX<br>프로젝트</p>\n<p id='65' data-category='list' style='font-size:16px'>사내<br>고성과자<br>트랙킹<br>및<br>인사관리<br>Agent(LLMOPs)<br>CRM<br>고객데이터를<br>활용한<br>KPI<br>관리<br>대시보드<br>제작<br>(DataOps)<br>생산/재고관리/판매<br>ERP<br>데이터를<br>활용한<br><br>All<br>in<br>one<br>KPI<br>Tracker<br>및<br>수요예측모델<br>제작(MLOps)</p>\n<br><figure id='66'><img alt=\"\" data-coord=\"top-left:(164,394); bottom-right:(1447,1060)\" /></figure>\n<h1 id='67' style='font-size:14px'>Dataiku</h1>\n<br><h1 id='68' style='font-size:20px'>파이프라인\u0001구축을\u0001위한\u0001\u0001Node\u0001&\u0001Edge</h1>\n<figure id='69'><img alt=\"\" data-coord=\"top-left:(164,327); bottom-right:(1599,1238)\" /></figure>\n<br><h1 id='70' style='font-size:16px'>Node(객체):\u0001행동\u0001주체/대상</h1>\n<br><h1 id='71' style='font-size:16px'>Dataset:\u0001활용할\u0001데이터</h1>\n<br><p id='72' data-category='list' style='font-size:16px'>S3\u0001연동\u0001parquet,\u0001Partition<br>Live\u0001Crawling\u0001데이터\u0001...</p>\n<br><h1 id='73' style='font-size:18px'>Recipe:\u0001Input\u0001Data\u0001⟶\u0001Output\u0001Data\u0001“함수”</h1>\n<br><p id='74' data-category='list' style='font-size:16px'>데이터\u0001가공:\u0001Python,\u0001Pyspark\u0001...\u0001활용\u0001객체<br>ML모델링:\u0001AutoML,\u0001Scikit-learn\u0001활용\u0001객체</p>\n<h1 id='75' style='font-size:16px'>Edge:\u0001행동\u0001주체들을\u0001연결하는\u0001방향성(화살표)</h1>\n<br><p id='76' data-category='list' style='font-size:16px'>A\u0001Node\u0001다음\u0001B\u0001Node를\u0001실행<br>A\u0001Node\u0001결과\u0001조건부\u0001분기하여\u0001B,C,D\u0001Node\u0001실행</p>\n<br><p id='77' data-category='paragraph' style='font-size:16px'>위\u0001사진에서,\u0001거시적으로\u0001보면\u0001현재\u0001보이는\u0001네모\u0001박스들이\u0001Node,<br>그들의\u0001관계를\u0001만드는\u0001화살표가\u0001Edge\u0001이지만,\u0001미시적으로\u0001보면<br>작은\u0001박스들\u0001안에\u0001그를\u0001이루는\u0001Node와\u0001Edge들이\u0001있을\u0001수\u0001있음.</p>\n<header id='78' style='font-size:14px'>Dataiku</header>\n<br><h1 id='79' style='font-size:20px'>그렇게\u0001열심히\u0001파이프라인을\u0001만들다\u0001보면...</h1>\n<figure id='80'><img alt=\"\" data-coord=\"top-left:(75,353); bottom-right:(2920,1125)\" /></figure>\n<p id='81' data-category='paragraph' style='font-size:16px'>파랑\u0001Node:\u0001데이터셋(S3연동/수기\u0001업로드/GCS\u0001연동)<br>노랑\u0001Node:\u0001Dataiku\u0001Built-in\u0001전처리(Recipe)\u0001아이템(Copy,\u0001Concat,\u0001Merge,\u0001Groupby,\u0001Sort\u0001등등)<br>주황\u0001Node:\u0001Custom\u0001전처리(Recipe)\u0001아이템(Python,\u0001Pyspark,\u0001SparkSQL\u0001등등\u0001MLOps\u0001필요\u0001언어\u0001지원)<br>초록\u0001Node:\u0001ML\u0001및\u0001모델링\u0001관련\u0001아이템</p>\n<header id='82' style='font-size:14px'>Dataiku</header>\n<br><h1 id='83' style='font-size:20px'>파이프라인\u0001만들긴\u0001했는데..\u0001어떻게\u0001돌려??</h1>\n<br><h1 id='84' style='font-size:18px'>Node와\u0001Edge를\u0001알맞게\u0001배치하여,\u0001목표\u0001Ops의\u0001목적적합한\u0001컴포넌트들을\u0001만든것\u0001뿐<br>아직\u0001자동화를\u0001시키거나\u0001구동하는\u0001작업은\u0001하지\u0001못하였다..\u0001DMP에서\u0001파이프라인을\u0001자동화하여\u0001Ops를\u0001완성하는\u0001방식은?</h1>\n<br><h1 id='85' style='font-size:18px'>참고:\u0001https://knowledge.dataiku.com/latest/automation/scenarios/concept-scenarios.html</h1>\n<br><h1 id='86' style='font-size:16px'>Dataiku\u0001Scenario</h1>\n<br><p id='87' data-category='list' style='font-size:16px'>해당\u0001Scenario를\u0001통해\u0001만들고자\u0001하는\u0001Output<br>Node(Dataset)\u0001지정,\u0001Build\u0001객체\u0001지정<br>Build\u0001하기로\u0001한\u0001Target\u0001Node를\u0001만드는\u0001데에\u0001필요한<br>모든\u0001Recipe\u0001Node(가공\u0001노드들)\u0001할당<br>파이프라인\u0001중간\u0001즈음의\u0001데이터셋\u0001Node까지만\u0001Build<br>할수도,\u0001최종\u0001Node를\u0001Build하여\u0001모든\u0001파이프라인을\u0001구<br>동할\u0001수도\u0001있음.</p>\n<br><h1 id='88' style='font-size:16px'>Scenario\u0001Trigger</h1>\n<br><p id='89' data-category='list' style='font-size:16px'>“이\u0001시나리오를\u0001언제,\u0001어떤\u0001조건에서\u0001돌릴건데?”<br>날짜/주기\u0001설정/\u0001특정\u0001코드\u0001변동\u0001감지\u0001가능<br>해당\u0001Scenario를\u0001구동할\u0001Trigger를\u0001지정했을\u0001때,\u0001지정<br>된\u0001Trigger의\u0001조건\u0001만족\u0001시\u0001Scenario\u0001구동되는\u0001시스템</p>\n<figure id='90'><img alt=\"\" data-coord=\"top-left:(725,1251); bottom-right:(1230,1577)\" /></figure>\n<br><figure id='91'><img alt=\"\" data-coord=\"top-left:(1478,1017); bottom-right:(2929,1589)\" /></figure>\n<h1 id='92' style='font-size:20px'>실컷\u0001자동화\u0001했는데,\u0001디버깅\u0001및\u0001모니터링\u0001必</h1>\n<br><header id='93' style='font-size:14px'>Dataiku</header>\n<figure id='94'><img alt=\"\" data-coord=\"top-left:(466,254); bottom-right:(2589,1157)\" /><br><figcaption id='95' style='font-size:16px'>대규모\u0001파이프라인의\u0001경우,\u00011주일\u0001전\u0001구동은\u0001성공했으나\u0001금주엔\u0001실패하는\u0001경우\u0001비일비재<br>원천\u0001DataSource의\u0001변동</figcaption></figure>\n\n<br><p id='96' data-category='list' style='font-size:16px'>Parquet,CSV\u0001등\u0001컬럼\u0001based\u0001데이터셋의\u0001컬럼\u0001형식\u0001변경<br>날짜,\u0001금액\u0001등\u0001데이터타입\u0001변경</p>\n<br><p id='97' data-category='list' style='font-size:16px'>API/\u0001서버\u0001경로\u0001및\u0001관리\u0001형식\u0001변경<br>처리\u0001및\u0001가공\u0001Node에서\u0001파라미터를\u0001동적으로\u0001관리하지\u0001않고\u0001하드코딩한\u0001경우</p>\n<p id='98' data-category='paragraph' style='font-size:14px'>간단한\u0001데이터이쿠\u0001핵심\u0001기능\u0001시연<br>(기업용\u0001플랫폼인지라\u0001매우\u0001비싸\u0001과제를\u0001못냈습니다..오히려좋아..?)</p>\n<h1 id='99' style='font-size:18px'>n8n</h1>\n<p id='100' data-category='paragraph' style='font-size:14px'>W.\u0001윤희찬</p>\n<header id='101' style='font-size:16px'>n8n</header>\n<br><h1 id='102' style='font-size:20px'>n8n이란?</h1>\n<figure id='103'><img alt=\"\" data-coord=\"top-left:(249,303); bottom-right:(2121,1092)\" /></figure>\n<br><p id='104' data-category='paragraph' style='font-size:18px'>MCP,\u0001API,\u0001LLM\u0001등\u0001다양한\u0001Item을\u0001활용\u0001및\u0001호출\u0001⟶\u0001\u0001워크플로우\u0001커스터마이징\u0001및\u0001자동화\u0001가능</p>\n<p id='105' data-category='list' style='font-size:14px'>\u0001Agent를\u0001만드는\u0001것은\u0001n8n뿐\u0001아니라\u0001Langchain,\u0001Langgraph\u0001등\u0001다양한\u0001채널이\u0001존재..\u0001\u0001그러나\u0001구글\u0001웹서치\u0001연동만\u0001하려\u0001해도\u0001접근성\u0001低<br>RAG,\u0001Routing을\u0001넘어\u0001Agent의\u0001핵심인\u0001Tool\u0001Use에\u0001있어\u0001유연함과\u0001다채로운\u0001활용성을\u0001가진\u0001플랫폼<br>Dataiku와\u0001마찬가지로\u0001Node와\u0001Edge로\u0001구성,\u0001그러나\u0001목적\u0001자체가\u0001다름<br>DMP이므로,\u0001파이프라인\u0001구축\u0001및\u0001분기,\u0001자동화\u0001구동\u0001지원<br>오픈소스로,\u0001Docker에서\u0001의존성\u0001문제\u0001없이\u0001말아올려\u0001구동\u0001가능(https://github.com/n8n-io/n8n)</p>\n<header id='106' style='font-size:14px'>n8n</header>\n<br><h1 id='107' style='font-size:20px'>Dataiku<br>vs<br>n8n</h1>\n<br><table id='108' style='font-size:16px'><thead><tr><td>차이점</td><td>Dataiku</td><td>n8n</td></tr></thead><tbody><tr><td>목적</td><td>데이터 사이언스·머신러닝 프로젝트 전체 수명 주기 관리(수집 → 전처리 → 모델링 → 배포)</td><td>업무<br>프로세스<br>&<br>서비스<br>자동화<br>중심<br>(API<br>연동, 챗봇,<br>간단한<br>데이터<br>파이프라인)</td></tr><tr><td>기반<br>Item<br></td><td>Dataset,<br>Recipe(전처리/모델링),<br>Flow(파이프라 인),<br>Notebooks(Jupyter-like<br>코드<br>환경), Scenario(파이프라인<br>실행<br>단위,<br>Trigger가능)</td><td>Node(단일<br>작업<br>단위),<br>Workflow(노드<br>연결), Trigger/Event(시작<br>조건)</td></tr><tr><td>확장성</td><td>빅데이터<br>연동(Hadoop,<br>Spark),<br>AutoML,<br>기 업용<br>대규모<br>분석<br>플랫폼에<br>강점</td><td>경량 오픈소스, API/웹훅 중심 확장, 1000+ 앱과 직접 연동 가능</td></tr><tr><td>Use<br>Cases</td><td>KPI<br>대시보드,<br>수요예측<br>모델,<br>머신러닝<br>파이프 라인<br>구축<br>및<br>자동화<br>구동<br>(DAE<br>스러운?)</td><td>슬랙 알림 자동화, 챗봇 및 Agent 구축, 타 SaaS간 워 크플로우 자동화 (PM 스러운?)</td></tr></tbody></table>\n<h1 id='109' style='font-size:18px'>n8n\u0001Use\u0001Cases</h1>\n<br><header id='110' style='font-size:14px'>n8n</header>\n<figure id='111'><img alt=\"\" data-coord=\"top-left:(43,443); bottom-right:(2921,1283)\" /></figure>\n<h1 id='112' style='font-size:18px'>n8n\u0001Use\u0001Cases</h1>\n<br><header id='113' style='font-size:14px'>n8n</header>\n<figure id='114'><img alt=\"\" data-coord=\"top-left:(276,359); bottom-right:(2664,1482)\" /></figure>\n<header id='115' style='font-size:14px'>n8n</header>\n<br><h1 id='116' style='font-size:20px'>와빅\u0001MCP\u0001만들어서\u0001n8n\u0001파이프라인에\u0001적용해보기</h1>\n<br><h1 id='117' style='font-size:18px'>MCP(Model\u0001Context\u0001Protocol)란?</h1>\n<br><h1 id='118' style='font-size:16px'>대형\u0001언어\u0001모델(LLM)과\u0001외부\u0001데이터\u0001소스,\u0001다양한\u0001도구를\u0001안전하고\u0001표준화된\u0001방식으로\u0001연결해주는\u0001개방형\u0001프로토콜<br>쉽게\u0001말하면..\u0001LLM이\u0001API나\u0001DB\u0001같은\u0001외부\u0001자원에\u0001안전하고\u0001일관되게\u0001접근하기\u0001위한\u0001통신\u0001규약<br>GPT/Gemini\u0001등\u0001LLM에게,\u0001우리\u0001회사\u0001고유의\u0001정보를\u0001쥐어주고\u0001Unique한\u0001업무를\u0001주고\u0001싶어!</h1>\n<h1 id='119' style='font-size:18px'>MCP의\u0001주요\u0001구성\u0001요소는?</h1>\n<br><h1 id='120' style='font-size:16px'>MCP\u0001호스트\u0001/\u0001MCP\u0001클라이언트\u0001/\u0001MCP\u0001서버</h1>\n<h1 id='121' style='font-size:18px'>MCP의\u0001작동\u0001방식은?</h1>\n<br><h1 id='122' style='font-size:16px'>1.사용자가\u0001AI(호스트)에\u0001질문\u0001입력<br>2.MCP\u0001클라이언트가\u0001이를\u0001MCP\u0001서버에\u0001요청<br>3.MCP\u0001서버가\u0001결과를\u0001반환<br>4.LLM이\u0001해당\u0001결과를\u0001바탕으로\u0001응답\u0001생성</h1>\n<br><figure id='123'><img alt=\"\" data-coord=\"top-left:(1471,690); bottom-right:(2812,1521)\" /></figure>\n<header id='124' style='font-size:14px'>n8n</header>\n<br><h1 id='125' style='font-size:22px'>와빅\u0001MCP\u0001만들어서\u0001n8n\u0001파이프라인에\u0001적용해보기</h1>\n<br><h1 id='126' style='font-size:20px'>@YBIGTA\u0001MCP(Tool)</h1>\n<br><h1 id='127' style='font-size:14px'>학회원들의\u0001성명,\u0001기수,\u0001전공,\u0001전화번호,\u0001메일을\u0001제공,\u0001LLM이\u0001표준화된\u0001json형식을\u0001인지\u0001및\u0001활용\u0001가능토록\u0001하는\u0001API</h1>\n<br><p id='128' data-category='list' style='font-size:16px'>LLM이\u0001외부\u0001DB와\u0001같이\u0001인식할\u0001수\u0001있는\u0001Tool의\u0001제공자\u0001역할<br>조건부\u0001활용:\u0001LLM이\u0001유저\u0001쿼리\u0001해석\u0001⟶\u0001본\u0001Tool\u0001Use\u0001필요한\u0001쿼리라면,\u0001조건부\u0001호출\u0001⟶\u0001Real\u0001학회원\u0001데이터\u0001기반\u0001답<br>변\u0001생성(Hallucination\u0001X)</p>\n<h1 id='129' style='font-size:14px'>어떤\u0001기능을\u0001제공하는\u0001API일까?\u0001(함수\u0001단위)</h1>\n<br><p id='130' data-category='list' style='font-size:14px'>멤버\u0001검색<br>기수별\u0001통계<br>이메일\u0001도메인\u0001필터링<br>전공별\u0001통계<br>개별\u0001멤버\u0001조회<br>“핵심\u0001개인정보\u0001보호\u0001필터링”</p>\n<p id='131' data-category='paragraph' style='font-size:14px'>n8n\u0001워크플로우에서\u0001Gemini는\u0001왜\u0001Ybigta\u0001MCP\u0001연동이\u0001가능한가?</p>\n<br><p id='132' data-category='list' style='font-size:18px'>MCP\u0001서버는\u0001조회\u0001권한\u0001및\u0001기능단위\u0001함수\u0001명세,\u0001코드\u0001제공<br>LLM이\u0001유저\u0001쿼리를\u0001보고\u0001“상황별\u0001호출\u0001함수”\u0001선정\u0001⟶\u0001mcp\u0001서버에서\u0001Tool\u0001실행\u0001⟶\u0001\u0001LLM이\u0001인식\u0001가능한\u0001json\u0001반환</p>\n<header id='133' style='font-size:14px'>n8n</header>\n<br><h1 id='134' style='font-size:20px'>Conclusion\u0001-\u0001업무\u0001자동화</h1>\n<br><h1 id='135' style='font-size:16px'>대\u0001Agent의\u0001시대.\u0001우리는\u0001어떤\u0001툴을\u0001활용하여\u0001Agent를\u0001쓸\u0001것인가?(by\u0001윤회장님\u0001고견)</h1>\n<h1 id='136' style='font-size:16px'>MCP\u0001생태계가\u0001구축되면서\u0001LLM의\u0001확장성이\u0001폭발적으로\u0001증가<br>→\u0001개인도\u0001얼마든지\u0001본인의\u0001필요에\u0001따라\u0001LLM에게\u0001내가\u0001원하는\u0001도구(MCP)를\u0001쥐어줄\u0001수\u0001있으며<br>이를\u0001바탕으로\u0001업무\u0001자동화\u0001/\u0001서비스\u0001제작\u0001등이\u0001가능한\u0001시대</h1>\n<h1 id='137' style='font-size:16px'>\u0001로우\u0001코드\u0001수준의\u0001간단한\u0001업무\u0001자동화를\u0001원한다면\u0001n8n</h1>\n<p id='138' data-category='paragraph' style='font-size:16px'>도구를\u0001쥐어준\u0001React\u0001agent를\u0001원한다면\u0001Langchain</p>\n<p id='139' data-category='paragraph' style='font-size:16px'>node\u0001간의\u0001복잡한\u0001분기\u0001등\u0001설계를\u0001원하면\u0001Langgraph</p>\n<header id='140' style='font-size:14px'>n8n</header>\n<h1 id='141' style='font-size:18px'>n8n\u0001시연</h1>\n<h1 id='142' style='font-size:14px'>감사합니다!</h1>",
    "1yZ7WeEm4mvORUnU5OlYii-51B9-T5wKp": "<header id='0' style='font-size:14px'>2025-1\u0001YBIGTA</header>\n<h1 id='1' style='font-size:20px'>EDA & FE</h1>\n<footer id='2' style='font-size:16px'>26기\u0001성우제</footer>\n<h1 id='3' style='font-size:20px'>목\u0001차</h1>\n<p id='4' data-category='list' style='font-size:14px'>1. Introduction</p>\n<p id='5' data-category='list' style='font-size:16px'>2. EDA\u0001&\u0001Preprocessing</p>\n<p id='6' data-category='list' style='font-size:16px'>3. FE</p>\n<h1 id='7' style='font-size:14px'>Introduction</h1>\n<header id='8' style='font-size:14px'>Introduction</header>\n<br><p id='9' data-category='paragraph' style='font-size:18px'>Introduction</p>\n<h1 id='10' style='font-size:14px'>“Garbage\u0001in,\u0001Garbage\u0001out”</h1>\n<br><p id='11' data-category='list' style='font-size:14px'>좋은\u0001입력\u0001데이터가\u0001좋은\u0001결과의\u0001기본!<br>아무리\u0001좋은\u0001모델이라도\u0001입력\u0001데이터가\u0001잘\u0001정제되어\u0001있어야\u0001한다.</p>\n<p id='12' data-category='list' style='font-size:14px'>따라서\u0001EDA,\u0001데이터\u0001전처리,\u0001Feature\u0001Engineering은\u0001모든\u0001프로젝트의<br>근간이다.<br>각\u0001데이터의\u0001특성을\u0001이해하고,\u0001그\u0001특성들에\u0001맞게\u0001정제해서\u0001모델이\u0001(혹은<br>사람이)\u0001잘\u0001학습할\u0001수\u0001있는\u0001데이터를\u0001준비하는\u0001작업.</p>\n<br><figure id='13'><img alt=\"\" data-coord=\"top-left:(2014,511); bottom-right:(2801,1246)\" /></figure>\n<header id='14' style='font-size:14px'>Introduction</header>\n<br><h1 id='15' style='font-size:18px'>Introduction</h1>\n<h1 id='16' style='font-size:14px'>EDA(Exploratory\u0001Data\u0001Analysis):\u0001이게\u0001무슨\u0001데이터고,\u0001어떻게\u0001써먹어야\u0001하나?</h1>\n<br><p id='17' data-category='list' style='font-size:14px'>주요\u0001작업:\u0001데이터\u0001구조\u0001파악,\u0001변수\u0001타입\u0001및\u0001분포\u0001확인,\u0001이상치\u0001탐색,\u0001etc...<br>EDA를\u0001통해서\u0001진행\u0001방향을\u0001결정</p>\n<h1 id='18' style='font-size:14px'>데이터\u0001전처리:\u0001실제로\u0001데이터를\u0001쓰기\u0001위해\u0001정제를\u0001해보자~</h1>\n<br><h1 id='19' style='font-size:14px'>주요\u0001작업:\u0001결측치\u0001처리,\u0001이상치\u0001제거,\u0001정규화,\u0001범주형\u0001데이터\u0001인코딩,\u0001etc...</h1>\n<p id='20' data-category='paragraph' style='font-size:14px'>FE(Feature\u0001Engineering):\u0001모델\u0001성능\u0001개선을\u0001위해\u0001데이터를\u0001변형하고\u0001새로운\u0001특성을\u0001만들어보자~<br>주요\u0001작업:\u0001특성\u0001생성,\u0001특성\u0001제거,\u0001데이터\u0001변형,\u0001etc...</p>\n<h1 id='21' style='font-size:20px'>데이터\u0001분석\u0001프로세스</h1>\n<br><header id='22' style='font-size:16px'>Introduction</header>\n<figure id='23'><img style='font-size:14px' alt=\"EDA\n데이터\u0001전처리\n문제\u0001정의 데이터\u0001수집 FE 분석/모델링\n결과/결론\n해결하고자\u0001하는\u0001문제\u0001선정 크롤링,\u0001API,\u0001공공데이터\u0001etc... 모델\u0001선정\n데이터\u0001분석의\u0001목표 학습\n하이퍼\u0001파라미터\u0001튜닝\" data-coord=\"top-left:(294,471); bottom-right:(2728,1199)\" /></figure>\n<h1 id='24' style='font-size:14px'>EDA\u0001&\u0001Preprocessing</h1>\n<h1 id='25' style='font-size:20px'>EDA<br>과정</h1>\n<h1 id='26' style='font-size:14px'>1.<br>데이터<br>형태<br>파악</h1>\n<br><p id='27' data-category='list' style='font-size:14px'>데이터의<br>크기<br>(행과<br>열),<br>변수<br>이름,<br>샘플데이터<br>확인<br>데이터<br>구조(데이터프레임,<br>배열<br>등)을<br>이해</p>\n<h1 id='28' style='font-size:14px'>2.<br>변수<br>타입<br>파악</h1>\n<br><p id='29' data-category='list' style='font-size:14px'>변수들이<br>숫자형,<br>범주형,<br>날짜형인지<br>확인<br>각<br>변수의<br>데이터<br>타입(int,<br>float,<br>object<br>등)<br>검토</p>\n<h1 id='30' style='font-size:14px'>3.<br>결측치,<br>이상치<br>확인</h1>\n<br><p id='31' data-category='list' style='font-size:14px'>결측치<br>비율<br>파악<br>및<br>처리<br>방안<br>계획<br>이상치<br>탐지<br>및<br>처리</p>\n<h1 id='32' style='font-size:14px'>4.<br>종속변수의<br>분포<br>확인</h1>\n<br><p id='33' data-category='list' style='font-size:14px'>예측<br>또는<br>분류<br>모델에서<br>목표로<br>하는<br>종속변수의<br>분포<br>분석<br>분포가<br>비대칭적일<br>경우<br>sampling<br>등으로<br>불균형<br>해소</p>\n<h1 id='34' style='font-size:14px'>5.<br>변수<br>간<br>분포<br>&<br>변수-종속변수<br>간<br>관계<br>파악</h1>\n<br><h1 id='35' style='font-size:14px'>각<br>변수<br>간<br>분포<br>및<br>상관관계를<br>탐색하여<br>데이터<br>패턴과<br>특성을<br>이해</h1>\n<br><h1 id='36' style='font-size:16px'>EDA&<br>Preprocessing</h1>\n<header id='37' style='font-size:14px'>출처:</header>\n<br><header id='38' style='font-size:14px'>EDA\u0001&\u0001Preprocessing</header>\n<header id='39' style='font-size:14px'>EDA\u0001&\u0001Preprocessing</header>\n<br><h1 id='40' style='font-size:18px'>1. 데이터\u0001형태\u0001파악</h1>\n<figure id='41'><img alt=\"\" data-coord=\"top-left:(568,372); bottom-right:(2465,690)\" /></figure>\n<figure id='42'><img alt=\"\" data-coord=\"top-left:(734,716); bottom-right:(2287,1656)\" /></figure>\n<h1 id='43' style='font-size:18px'>1. 데이터<br>형태<br>파악</h1>\n<h1 id='44' style='font-size:14px'>범주형<br>데이터<br>인코딩</h1>\n<br><h1 id='45' style='font-size:14px'>Label<br>Encoding</h1>\n<br><p id='46' data-category='list' style='font-size:14px'>0,1,2,3<br>할당<br>장점:<br>간단하다<br>단점:<br>자칫하면<br>모델이<br>잘못된<br>가중치를<br>줄<br>수도<br>있다<br>ex)<br>‘등급’과<br>같이<br>순서가<br>있는<br>범주형<br>데이터</p>\n<br><h1 id='47' style='font-size:14px'>One-hot<br>Encoding</h1>\n<br><p id='48' data-category='list' style='font-size:14px'>각<br>범주별로<br>하나의<br>column<br>할당<br>(0,1)<br>장점:<br>잘못된<br>가중치로부터<br>자유로움<br>단점:<br>차원이<br>급격하게<br>커짐<br>ex)<br>‘색상’처럼<br>순서<br>없는<br>범주형<br>데이터</p>\n<br><h1 id='49' style='font-size:14px'>Dummy<br>Encoding</h1>\n<br><p id='50' data-category='list' style='font-size:14px'>One-hot에서<br>column<br>하나<br>제거<br>장점:<br>다중공선성<br>해결<br>단점:<br>기준이<br>되는<br>범주가<br>생김(전부<br>0인<br>범주)</p>\n<br><h1 id='51' style='font-size:14px'>EDA<br>&<br>Preprocessing</h1>\n<h1 id='52' style='font-size:18px'>2.\u0001변수\u0001타입\u0001파악</h1>\n<br><p id='53' data-category='paragraph' style='font-size:14px'>EDA\u0001&\u0001Preprocessing</p>\n<h1 id='54' style='font-size:18px'>3.\u0001결측치\u0001확인</h1>\n<figure id='55'><img alt=\"\" data-coord=\"top-left:(258,428); bottom-right:(661,1342)\" /></figure>\n<br><h1 id='56' style='font-size:14px'>EDA\u0001&\u0001Preprocessing</h1>\n<figure id='57'><img alt=\"\" data-coord=\"top-left:(760,379); bottom-right:(1491,1385)\" /></figure>\n<br><h1 id='58' style='font-size:14px'>결측치\u0001대체\u0001(Imputation)</h1>\n<br><p id='59' data-category='list' style='font-size:14px'>제거<br>대표값으로\u0001대체<br>i.연속형:\u0001중앙값,\u0001평균값<br>ii.범주형:\u0001최빈값</p>\n<h1 id='60' style='font-size:14px'>도메인\u0001지식이\u0001필요<br>\u0001\u0001\u0001\u0001\u0001(ex:\u0001‘흡연여부’가\u00010이면\u0001‘흡연\u0001담배\u0001개수’도\u00010일\u0001것)</h1>\n<p id='61' data-category='paragraph' style='font-size:14px'>상관관계가\u0001높은\u0001변수들을\u0001사용해서\u0001대체<br>\u0001\u0001\u0001\u0001\u0001(ex:\u0001‘기온’은\u0001‘시간’이\u0001비슷한\u0001애들의\u0001구간평균\u0001사용)</p>\n<h1 id='62' style='font-size:20px'>4.\u0001이상치\u0001확인</h1>\n<br><h1 id='63' style='font-size:16px'>EDA\u0001&\u0001Preprocessing</h1>\n<h1 id='64' style='font-size:14px'>[탐지\u0001방법]</h1>\n<br><h1 id='65' style='font-size:14px'>1.Standard\u0001Deviation\u0001(3시그마\u0001규칙)</h1>\n<h1 id='66' style='font-size:14px'>평균으로부터\u0001표준편차의\u00013배\u0001이상\u0001떨어진\u0001데이터는\u0001이상치</h1>\n<h1 id='67' style='font-size:14px'>비대칭적\u0001분포,\u0001치우친\u0001분포\u0001모양\u0001쉽게\u0001발견</h1>\n<br><figure id='68'><img style='font-size:14px' alt=\"데이터가\u0001정규분포와\u0001흡사할\u0001때\n2.Boxplot으로\u0001IQR\u0001확인\n중앙값\u0001기준으로\u0001데이터\u0001흩어진\u0001정도\u0001파악\n3.클러스터링(KNN,\u0001DBSCAN)\n4.AutoEncoder\n[이상치\u0001처리]\n제거\n변환\n로그\u0001변환,\u0001제곱근\u0001변환,\u0001etc.\n대체\n평균,\u0001최빈값,\u0001etc.\n그대로\u0001활용해도\u0001됨!\n사실\u0001이상치가\u0001아닌\u0001경우도\u0001있음\n혹은\u0001이상치가\u0001문제해결에\u0001필요할수도\" data-coord=\"top-left:(215,385); bottom-right:(2195,1366)\" /></figure>\n<br><p id='69' data-category='paragraph' style='font-size:14px'>\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001(ex:\u0001이상탐지\u0001모델\u0001개발)</p>\n<h1 id='70' style='font-size:20px'>4.<br>이상치<br>확인</h1>\n<br><h1 id='71' style='font-size:16px'>EDA<br>&<br>Preprocessing</h1>\n<figure id='72'><img alt=\"\" data-coord=\"top-left:(213,394); bottom-right:(1662,1359)\" /></figure>\n<br><h1 id='73' style='font-size:14px'>[탐지<br>방법]</h1>\n<br><h1 id='74' style='font-size:14px'>1.Standard<br>Deviation<br>(3시그마<br>규칙)</h1>\n<br><h1 id='75' style='font-size:14px'>데이터가<br>정규분포와<br>흡사할<br>때</h1>\n<br><h1 id='76' style='font-size:14px'>평균으로부터<br>표준편차의<br>3배<br>이상<br>떨어진<br>데이터는<br>이상치</h1>\n<br><h1 id='77' style='font-size:14px'>2.Boxplot으로<br>IQR<br>확인</h1>\n<br><h1 id='78' style='font-size:14px'>중앙값<br>기준으로<br>데이터<br>흩어진<br>정도<br>파악</h1>\n<br><h1 id='79' style='font-size:14px'>비대칭적<br>분포,<br>치우친<br>분포<br>모양<br>쉽게<br>발견</h1>\n<br><h1 id='80' style='font-size:14px'>3.클러스터링(KNN,<br>DBSCAN)</h1>\n<br><h1 id='81' style='font-size:14px'>4.AutoEncoder</h1>\n<br><h1 id='82' style='font-size:16px'>!!주의!!</h1>\n<h1 id='83' style='font-size:14px'>[이상치<br>처리]</h1>\n<br><p id='84' data-category='paragraph' style='font-size:14px'>제거</p>\n<br><h1 id='85' style='font-size:16px'>이상치<br>제거는<br>학습할<br>때에만<br>사용</h1>\n<br><p id='86' data-category='paragraph' style='font-size:14px'>변환</p>\n<br><h1 id='87' style='font-size:14px'>로그<br>변환,<br>제곱근<br>변환,<br>etc.</h1>\n<br><p id='88' data-category='paragraph' style='font-size:14px'>대체</p>\n<br><h1 id='89' style='font-size:14px'>평균,<br>최빈값,<br>etc.</h1>\n<br><h1 id='90' style='font-size:14px'>그대로<br>활용해도<br>됨!</h1>\n<br><h1 id='91' style='font-size:14px'>사실<br>이상치가<br>아닌<br>경우도<br>있음</h1>\n<br><p id='92' data-category='paragraph' style='font-size:14px'>혹은<br>이상치가<br>문제해결에<br>필요할수도</p>\n<br><p id='93' data-category='paragraph' style='font-size:14px'><br><br><br><br><br><br><br><br><br><br><br>(ex:<br>이상탐지<br>모델<br>개발)</p>\n<header id='94' style='font-size:14px'>EDA\u0001&\u0001Preprocessing</header>\n<br><h1 id='95' style='font-size:18px'>5.\u0001종속변수의\u0001분포\u0001확인</h1>\n<figure id='96'><img alt=\"\" data-coord=\"top-left:(248,401); bottom-right:(879,734)\" /></figure>\n<br><h1 id='97' style='font-size:14px'>[불균형\u0001데이터]</h1>\n<figure id='98' data-category='chart'><img data-coord=\"top-left:(262,743); bottom-right:(876,1406)\" /><figcaption><p>Chart Title: MVP 분포</p><p>X-Axis: MVP 여부</p><p>Y-Axis: 선수 수</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>False</td><td>True</td></tr></thead><tbody><tr><td>item_01</td><td>140</td><td>10</td></tr></tbody></table></figure>\n<br><p id='99' data-category='list' style='font-size:14px'>분류\u0001문제의\u0001출력변수\u0001class에\u0001불균형\u0001존재<br>전처리를\u0001잘\u0001거쳐도\u0001성능이\u0001좋지\u0001않은\u0001원인<br>\u0001\u0001\u0001\u0001\u0001(ex:\u0001False가\u0001많으니\u0001전부\u0001False로\u0001예측해도\u0001모델\u0001성능은\u0001좋아보임)<br>따라서\u0001sampling을\u0001통한\u0001조절\u0001필요</p>\n<figure id='100'><img alt=\"\" data-coord=\"top-left:(971,819); bottom-right:(2816,1398)\" /></figure>\n<header id='101' style='font-size:16px'>EDA<br>&<br>Preprocessing</header>\n<br><h1 id='102' style='font-size:20px'>5.<br>종속변수의<br>분포<br>확인</h1>\n<figure id='103' data-category='chart'><img data-coord=\"top-left:(262,743); bottom-right:(875,1406)\" /><figcaption><p>Chart Title: MVP 분포</p><p>X-Axis: MVP 여부</p><p>Y-Axis: 선수 수</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>False</td><td>True</td></tr></thead><tbody><tr><td>item_01</td><td>140</td><td>10</td></tr></tbody></table></figure>\n<br><table id='104' style='font-size:14px'><thead></thead><tbody><tr><td>[불균형<br>데이터] [Under<br>Sampling] 분류<br>문제의<br>출력변수<br>class에<br>불균형<br>존재 다수<br>class를<br>줄이기 전처리를<br>잘<br>거쳐도<br>성능이<br>좋지<br>않은<br>원인 ex:<br>Random,<br>TomekLinks,<br>etc. <br><br><br><br><br>(ex:<br>False가<br>많으니<br>전부<br>False로<br>예측해도<br>모델<br>성능은<br>좋아보임) 정보<br>손실<br>및<br>데이터<br>수<br>부족으로<br>인한<br>과소적합<br>우려 따라서<br>sampling을<br>통한<br>조절<br>필요</td><td>[Over<br>Sampling] 소수<br>class를<br>늘리기 Random,<br>SMOTE,<br>ADASYN,<br>etc. 데이터<br>왜곡<br>및<br>과적합<br>우려</td></tr></tbody></table>\n<figure id='105' data-category='chart'><img data-coord=\"top-left:(967,821); bottom-right:(2820,1398)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Oversampling</td><td>Samples of majority class</td><td>Original dataset</td></tr></thead><tbody><tr><td>item_01</td><td>1</td><td>1</td><td>1</td></tr></tbody></table></figure>\n<header id='106' style='font-size:20px'>EDA<br>&<br>Preprocessing</header>\n<br><h1 id='107' style='font-size:22px'>5.<br>종속변수의<br>분포<br>확인</h1>\n<h1 id='108' style='font-size:20px'>[불균형<br>데이터]</h1>\n<br><h1 id='109' style='font-size:16px'>[Focal<br>Loss]</h1>\n<br><h1 id='110' style='font-size:18px'>분류<br>문제의<br>출력변수<br>class에<br>불균형<br>존재<br>소수<br>class에<br>대한<br>loss를<br>가중치를<br>더욱<br>부여</h1>\n<br><h1 id='111' style='font-size:20px'>전처리를<br>잘<br>거쳐도<br>성능이<br>좋지<br>않은<br>원인</h1>\n<br><h1 id='112' style='font-size:16px'>[Minority-aware<br>fine<br>tuning]</h1>\n<br><h1 id='113' style='font-size:20px'><br><br><br><br><br>(ex:<br>False가<br>많으니<br>전부<br>False로<br>예측해도<br>모델<br>성능은<br>좋아보임)</h1>\n<br><h1 id='114' style='font-size:16px'>전체<br>데이터로<br>모델<br>학습<br>후,<br>소수<br>클래스<br>중심으로<br>학습하기</h1>\n<br><h1 id='115' style='font-size:20px'>따라서<br>sampling을<br>통한<br>조절<br>필요</h1>\n<figure id='116' data-category='chart'><img data-coord=\"top-left:(969,819); bottom-right:(2811,1400)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Undersampling</td><td>Oversampling</td><td>Samples of majority class</td><td>Original dataset</td><td>Copies of the minority class</td></tr></thead><tbody><tr><td>item_01</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr></tbody></table></figure>\n<br><figure id='117' data-category='chart'><img data-coord=\"top-left:(262,744); bottom-right:(876,1406)\" /><figcaption><p>Chart Title: MVP 분포</p><p>X-Axis: MVP 여부</p><p>Y-Axis: 선수 수</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>False</td><td>True</td></tr></thead><tbody><tr><td>item_01</td><td>140</td><td>10</td></tr></tbody></table></figure>\n<p id='118' data-category='paragraph' style='font-size:14px'>Lin et al., 2017, Focal Loss for Dense Object Detection<br>Buda et al., 2018, A systematic study of the class imbalance problem in convolutional neural networks</p>\n<header id='119' style='font-size:14px'>EDA\u0001&\u0001Preprocessing</header>\n<br><h1 id='120' style='font-size:18px'>6.\u0001변수\u0001분포\u0001&\u0001변수-종속변수\u0001간\u0001관계\u0001파악</h1>\n<h1 id='121' style='font-size:14px'>각\u0001변수\u0001간의\u0001분포\u0001및\u0001상관관계를\u0001탐색하여\u0001데이터의\u0001패턴과\u0001특성\u0001이해</h1>\n<br><p id='122' data-category='list' style='font-size:14px'>변수와\u0001종속변수\u0001간\u0001관계를\u0001확인하여\u0001중요한\u0001변수(Feature)\u0001식별<br>다중공선성\u0001해결</p>\n<figure id='123'><img alt=\"\" data-coord=\"top-left:(297,721); bottom-right:(1311,1337)\" /><br><figcaption id='124' style='font-size:14px'>[변수들\u0001분포]</figcaption></figure>\n\n<br><figure id='125' data-category='chart'><img data-coord=\"top-left:(1571,630); bottom-right:(2450,1364)\" /><figcaption><p>Chart Title: 상관관계 얘트릭스</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>player_id</td><td>year</td><td>pa</td><td>kpercent</td><td>bb_percent</td><td>woba</td><td>xwoba</td><td>sweet_spol_percent</td><td>barrel_batted_rate</td><td>hard_hit_percent</td><td>avg_best_speed</td><td>avg_hyper_speed</td><td>whift_percent</td><td>swing_percent</td></tr></thead><tbody><tr><td>item_01</td><td>-0.04Percent</td><td>-0.02Percent</td><td>-0.04Percent</td><td>-0.02Percent</td><td>0.04Percent</td><td>0.0Percent</td><td>0.02Percent</td><td>-0.04Percent</td><td>-0.02Percent</td><td>0.04Percent</td><td>0.04Percent</td><td>0.04Percent</td><td>0.04Percent</td><td>0.04Percent</td></tr></tbody></figure><br><caption id='126' style='font-size:14px'>[다중공선성]</caption></table>\n\n<h1 id='127' style='font-size:22px'>6.<br>변수<br>분포<br>&<br>변수-종속변수<br>간<br>관계<br>파악</h1>\n<br><h1 id='128' style='font-size:20px'>EDA<br>&<br>Preprocessing</h1>\n<h1 id='129' style='font-size:20px'>다중공선성,<br>VIF</h1>\n<p id='130' data-category='list' style='font-size:18px'>Idempotent<br>matrix!<br>고유값은<br>오로지<br>0<br>또는<br>1만<br>가진다!</p>\n<p id='131' data-category='equation'>$$R_{i}^{2}={\\frac{\\alpha_{i}^{\\top}P_{(-i)}\\alpha_{i}}{\\alpha_{i}^{\\top}\\alpha_{i}}}$$</p>\n<br><h1 id='132' style='font-size:14px'>VIF가<br>크다는<br>것은<br>R 2 이<br>1에<br>가깝다는<br>것!<br>R 2 이<br>1에<br>가깝다는<br>것이<br>무슨<br>의미일까???</h1>\n<p id='133' data-category='paragraph' style='font-size:16px'>R 2 이<br>1에<br>가깝다는<br>것은<br>X에서<br>제거한<br>i번째<br>벡터가<br>다른<br>열들의<br>선형<br>합,<br>즉<br>고유벡터의<br>선형<br>합으로<br>근사된다는<br>이야기!<br>다시<br>말하면,<br>특정<br>변수가<br>다른<br>변수들과<br>상관성이<br>높다는<br>이야기이다~</p>\n<h1 id='134' style='font-size:14px'>EDA\u0001&\u0001Preprocessing</h1>\n<br><h1 id='135' style='font-size:18px'>6.\u0001변수\u0001분포\u0001&\u0001변수-종속변수\u0001간\u0001관계\u0001파악</h1>\n<br><h1 id='136' style='font-size:14px'>정규화\u0001(Scaling)</h1>\n<br><p id='137' data-category='list' style='font-size:14px'>각\u0001특성들을\u0001일정한\u0001범위로\u0001통일하는\u0001것<br>특성마다\u0001값의\u0001범위가\u0001크게\u0001다르면\u0001모델이\u0001큰\u0001범위의\u0001특성을<br>지나치게\u0001중요시\u0001할\u0001수도<br>각\u0001방법마다\u0001이상치에\u0001강건할수도,\u0001취약할수도\u0001있음</p>\n<h1 id='138' style='font-size:14px'>1.\u0001Standard\u0001Scaling\u0001(Z-score\u0001Normalization)</h1>\n<br><p id='139' data-category='list' style='font-size:14px'>표본평균과\u0001표본\u0001표준편차로\u0001스케일링<br>스케일\u0001없이\u0001단순히\u0001서로간의\u0001거리만\u0001남게\u0001됨<br>이상치에\u0001취약</p>\n<br><h1 id='140' style='font-size:14px'>2.Min-Max\u0001Scaling</h1>\n<br><p id='141' data-category='list' style='font-size:14px'>최대,\u0001최소를\u0001활용해\u0001모든\u0001데이터가\u0001[0,\u00011]\u0001범위에\u0001존재<br>이상치에\u0001강건</p>\n<br><h1 id='142' style='font-size:14px'>3.Robust\u0001Scaling</h1>\n<br><p id='143' data-category='list' style='font-size:14px'>중앙값과\u0001IQR값으로\u0001정규화<br>이상치가\u0001많을\u0001때에\u0001유용</p>\n<br><figure id='144'><img alt=\"\" data-coord=\"top-left:(1659,808); bottom-right:(2791,1023)\" /></figure>\n<figure id='145'><img alt=\"\" data-coord=\"top-left:(1663,1088); bottom-right:(2181,1309)\" /></figure>\n<figure id='146'><img alt=\"\" data-coord=\"top-left:(1659,1368); bottom-right:(2157,1560)\" /></figure>\n<h1 id='147' style='font-size:14px'>EDA\u0001&\u0001Preprocessing</h1>\n<br><h1 id='148' style='font-size:18px'>6.\u0001변수\u0001분포\u0001&\u0001변수-종속변수\u0001간\u0001관계\u0001파악</h1>\n<br><h1 id='149' style='font-size:14px'>정규화\u0001(Scaling)</h1>\n<br><p id='150' data-category='list' style='font-size:14px'>KNN,\u0001SVM,\u0001PCA,\u0001ANN\u0001등에서\u0001반드시\u0001해야하는\u0001작업<br>거리,\u0001분산\u0001등에\u0001기반하는\u0001알고리즘에서\u0001매우\u0001중요(Scale에\u0001민감)<br>반면\u0001Decision\u0001Tree,\u0001로지스틱\u0001회귀,\u0001Bagging/Boosting\u0001등에서는\u0001성능의\u0001변화\u0001없음</p>\n<h1 id='151' style='font-size:18px'>Merge,\u0001Grouping</h1>\n<br><h1 id='152' style='font-size:14px'>Data\u0001Merge\u0001-\u0001pd.merge()</h1>\n<br><h1 id='153' style='font-size:14px'>EDA\u0001&\u0001Preprocessing</h1>\n<figure id='154'><img alt=\"\" data-coord=\"top-left:(241,430); bottom-right:(1256,1140)\" /></figure>\n<br><h1 id='155' style='font-size:14px'>Data\u0001Grouping\u0001-\u0001pd.groupby()</h1>\n<figure id='156'><img alt=\"\" data-coord=\"top-left:(1427,423); bottom-right:(2497,1133)\" /></figure>\n<h1 id='157' style='font-size:14px'>Feature\u0001Engineering</h1>\n<header id='158' style='font-size:16px'>FE</header>\n<br><h1 id='159' style='font-size:20px'>FE(Feature\u0001Engineering)</h1>\n<figure id='160'><img alt=\"\" data-coord=\"top-left:(782,457); bottom-right:(2214,1380)\" /></figure>\n<br><p id='161' data-category='paragraph' style='font-size:14px'>출처:\u0001https://medium.com/shortcutnlp/02-feature-engineering-principles-for-choosing-\u0001right-features-2503c9bd857\u0001</p>\n<header id='162' style='font-size:14px'>FE</header>\n<br><h1 id='163' style='font-size:18px'>FE(Feature\u0001Engineering)</h1>\n<figure id='164' data-category='chart'><img data-coord=\"top-left:(691,501); bottom-right:(1496,1158)\" /><figcaption><p>Chart Title: WHAT DATA SCIENTISTS SPEND THE MOST TIME DOING</p><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>Bleaching and organizing data</td><td>Collecting data sets</td><td>Mining data for patterns</td><td>Other</td><td>Refining algorithms</td><td>Building training sets</td></tr></thead><tbody><tr><td>item_01</td><td>60%</td><td>19%</td><td>9%</td><td>5%</td><td>4%</td><td>3%</td></tr></tbody></table></figure>\n<br><figure id='165'><img alt=\"\" data-coord=\"top-left:(1569,743); bottom-right:(2282,1365)\" /></figure>\n<header id='166' style='font-size:14px'>FE</header>\n<br><h1 id='167' style='font-size:18px'>FE(Feature\u0001Engineering)</h1>\n<h1 id='168' style='font-size:14px'>FE의\u0001목적</h1>\n<br><h1 id='169' style='font-size:14px'>[Problem]\u0001차원의\u0001저주\u0001(Curse\u0001of\u0001Dimensionality)</h1>\n<br><p id='170' data-category='list' style='font-size:14px'>데이터보다\u0001입력변수가\u0001많아\u0001모델이\u0001복잡할\u0001때\u0001발생<br>학습\u0001느려지고\u0001과적합\u0001발생<br>다중공선성\u0001발생으로\u0001인해\u0001모델이\u0001불안정해짐</p>\n<h1 id='171' style='font-size:14px'>[Solving]\u0001차원\u0001축소\u0001(Dimensionality\u0001Reduction)\u0001:\u0001모델의\u0001복잡도(차원)을\u0001낮춰\u0001모델\u0001성능을\u0001개선</h1>\n<h1 id='172' style='font-size:14px'>[How\u0001to]</h1>\n<br><p id='173' data-category='list' style='font-size:14px'>Feature\u0001Selection\u0001(특징\u0001선택)\u0001:\u0001중요한\u0001변수를\u0001선택<br>Feature\u0001Extraction\u0001(특징\u0001추출)\u0001:\u0001기존\u0001변수들을\u0001조합하여\u0001새로운\u0001특성(잠재변수)\u0001생성</p>\n<h1 id='174' style='font-size:18px'>Feature\u0001Extraction\u0001-\u0001파생변수\u0001생성</h1>\n<br><header id='175' style='font-size:14px'>FE</header>\n<h1 id='176' style='font-size:14px'>변수의\u0001경향성이\u0001더\u0001뚜렷해지도록\u0001재범주화\u0001하는\u0001과정</h1>\n<h1 id='177' style='font-size:14px'>[지표\u0001변수]\u0001:\u0001지표가\u0001되는\u0001feature를\u0001새로\u0001생성</h1>\n<br><h1 id='178' style='font-size:14px'>ex)\u0001‘나이’를\u0001범주화\u0001하여\u0001‘young’,\u0001‘middle-aged’,\u0001‘old’로\u0001구분<br>\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001‘시간’을\u0001범주화\u0001하여\u0001‘오전’,\u0001‘오후’로\u0001구분</h1>\n<h1 id='179' style='font-size:14px'>[Feature\u0001Split]\u0001:\u0001column\u0001값들을\u0001더\u0001세분화하여\u0001분리</h1>\n<br><h1 id='180' style='font-size:14px'>ex)\u0001‘이름’에서\u0001‘성’을\u0001분리<br>\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001‘date’를\u0001‘year’,\u0001‘month’,\u0001‘day’로\u0001분리</h1>\n<p id='181' data-category='paragraph' style='font-size:14px'>FE</p>\n<br><h1 id='182' style='font-size:18px'>Feature<br>Extraction<br>-<br>mRMR,<br>PCR</h1>\n<br><h1 id='183' style='font-size:14px'>mRMR<br>(minimum<br>Redundancy<br>Maximum<br>Relevance<br>Algorithm)<br>:<br>중복성은<br>최소화,<br>출력변수와의<br>연관성은<br><br>최대화</h1>\n<br><p id='184' data-category='list' style='font-size:14px'>독립변수와<br>종속변수의<br>관련성(상관관계)이<br>높은<br>변수<br>선택<br>선택된<br>변수간의<br>‘상호정보량’<br>(변수<br>간<br>정보의<br>중복성)을<br>최소화</p>\n<h1 id='185' style='font-size:14px'>PCR<br>(Principal<br>Component<br>Analysis,<br>주성분<br>분석)<br>:<br>고차원의<br>데이터를<br>저차원으로<br>축소</h1>\n<br><p id='186' data-category='list' style='font-size:14px'>데이터의<br>분산을<br>최대한<br>보존<br>분산<br>=<br>Y에<br>영향이<br>높을<br>가능성이<br>있다</p>\n<figure id='187' data-category='chart'><img data-coord=\"top-left:(197,851); bottom-right:(929,1274)\" /><figcaption><p>Chart Title: Principal Component Analysis (PCA)</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>black_line</td><td>red_line</td></tr></thead><tbody><tr><td>item_01</td><td>2.8Not explicitly stated</td><td>0.8Not explicitly stated</td></tr></tbody></table></figure>\n<header id='188' style='font-size:14px'>FE</header>\n<br><h1 id='189' style='font-size:18px'>데이터\u0001형식에\u0001따른\u0001전처리</h1>\n<br><h1 id='190' style='font-size:14px'>텍스트\u0001데이터</h1>\n<br><h1 id='191' style='font-size:14px'>Tokenization:\u0001텍스트를\u0001모델에게\u0001input으로\u0001줄\u0001단위(token)로\u0001분리<br>\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001(ex:\u0001[“텍스트”,\u0001“데이터”,\u0001“를”,\u0001“전”,\u0001“처리”,\u0001“합니다”])</h1>\n<h1 id='192' style='font-size:14px'>Vectorization:\u0001텍스트를\u0001모델이\u0001이해할\u0001수\u0001있게\u0001벡터화</h1>\n<br><h1 id='193' style='font-size:14px'>\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u00011)\u0001BoW,\u0001TF-IDF:\u0001단어의\u0001발생\u0001빈도를\u0001기반으로\u0001벡터화\u0001(문맥\u0001정보\u0001고려X)<br>\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u00012)\u0001Embedding:\u0001문맥\u0001정보를\u0001고려하여\u0001단어를\u0001벡터화\u0001(ex:\u0001BERT)</h1>\n<h1 id='194' style='font-size:14px'>이미지\u0001데이터</h1>\n<br><h1 id='195' style='font-size:14px'>Data\u0001Augmentation\u0001-\u0001Resize,\u0001Crop,\u0001Blur,\u0001Sharpening,\u0001etc.</h1>\n<br><p id='196' data-category='list' style='font-size:14px'>\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001-\u0001데이터\u0001부족\u0001문제\u0001해결<br>\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001-\u0001모델\u0001일반화\u0001성능\u0001향상</p>\n<figure id='197'><img alt=\"\" data-coord=\"top-left:(162,1213); bottom-right:(1483,1629)\" /></figure>\n<h1 id='198' style='font-size:18px'>Wrap-up</h1>\n<br><header id='199' style='font-size:14px'>끝!</header>\n<p id='200' data-category='list' style='font-size:14px'>EDA의\u0001목적:\u0001데이터를\u0001이해하고,\u0001분석\u0001계획을\u0001수립하기\u0001위한\u0001과정<br>Preprocessing의\u0001목적:\u0001모델\u0001학습이나\u0001분석의\u0001성과를\u0001높이기\u0001위한\u0001정제\u0001작업<br>FE의\u0001목적:\u0001변수들\u0001사이에\u0001숨어있는\u0001정보들을\u0001뽑아내서\u0001모델\u0001학습이나\u0001분석의\u0001성과를\u0001높이기\u0001위한\u0001작업</p>\n<h1 id='201' style='font-size:14px'>적용\u0001순서</h1>\n<br><h1 id='202' style='font-size:14px'>1.\u0001EDA\u0001(데이터\u0001탐색\u0001및\u0001시각화)</h1>\n<br><h1 id='203' style='font-size:14px'>2.데이터\u0001정제<br>3.Feature\u0001Split<br>4.Feature\u0001Selection/Extraction</h1>\n<h1 id='204' style='font-size:14px'>감사합니다!</h1>",
    "1H7q8v87KpeJqvkzUctPR3OSd5cx6CqoD": "<h1 id='0' style='font-size:22px'>[4회차] Git 과제</h1>\n<h1 id='1' style='font-size:18px'>발제자: 손재훈</h1>\n<h1 id='2' style='font-size:20px'>기간</h1>\n<br><h1 id='3' style='font-size:20px'>마감: 7월 24일 목요일 23시 59분<br>지각 제출: 7월 25일 금요일 23시 59분</h1>\n<h1 id='4' style='font-size:20px'>intro</h1>\n<br><p id='5' data-category='paragraph' style='font-size:16px'>이번 과제는 깃헙과제입니다! Web과제를 함께 하면서 팀원과의 화합을 다졌다면, 이제는 규칙을 세우<br>면서 과제를 해볼 차례입니다.</p>\n<h1 id='6' style='font-size:20px'>명세</h1>\n<br><p id='7' data-category='list' style='font-size:16px'> 팀장님은 github branch protection rule(main 또는 master 브랜치에 push되는 것을 막음)을<br>추가해주세요.</p>\n<br><p id='8' data-category='list' style='font-size:16px'>repository > settings > branches > add classic branch protection rules > branch<br>name pattern 작성(main) > Require a pull request before merging, Do not allow<br>bypassing the above settings 선택 > create</p>\n<br><h1 id='9' style='font-size:16px'>버튼 선택 후 화면을 캡쳐해주세요!</h1>\n<br><h1 id='10' style='font-size:16px'>branch_protection.png</h1>\n<footer id='11' style='font-size:14px'>[4회차] Git 과제</footer>\n<br><footer id='12' style='font-size:14px'>1</footer>\n<p id='13' data-category='paragraph' style='font-size:18px'>이렇게 설정한 뒤 main에 push 하려고 하면 아래와 같이 뜰 것입니다.</p>\n<br><h1 id='14' style='font-size:22px'>캡처해주세요!</h1>\n<br><h1 id='15' style='font-size:18px'>push_rejected.png</h1>\n<figure id='16'><img alt=\"\" data-coord=\"top-left:(247,306); bottom-right:(993,587)\" /></figure>\n<p id='17' data-category='paragraph' style='font-size:20px'>Pull request를 통해서만 main에 merge가 가능해요. 무분별한 main push를 막을 수 있습니다. 이<br>상태로 아래를 진행해주세요! 🙂</p>\n<br><h1 id='18' style='font-size:18px'> cache 파일 제거하기</h1>\n<p id='19' data-category='paragraph' style='font-size:18px'>,</p>\n<br><p id='20' data-category='paragraph' style='font-size:16px'>미리 .gitignore 을 작성하셨다면 그럴 필요가 없겠죠~ 혹시라도 cache 파일들(ex: __pycache__<br>.DS_Store )을 제거해줍시다!</p>\n<br><p id='21' data-category='paragraph' style='font-size:18px'> main push가 막혔다면 브랜치를 파서, pull request를 통해서 merge를 할 수 있겠죠? 또, 협업<br>이니 누군가가 리뷰를 해야 할 것 같아요. 따라서 PR을 만든 분은 description을 작성해주고<br>reviewer을 등록해줍시다. 또 reviewer는 리뷰를 꼭 남겨주도록 합시다!</p>\n<br><p id='22' data-category='paragraph' style='font-size:22px'>캡처해주세요!</p>\n<br><p id='23' data-category='paragraph' style='font-size:18px'>review_and_merged.png</p>\n<figure id='24'><img alt=\"\" data-coord=\"top-left:(335,1054); bottom-right:(946,1544)\" /></figure>\n<footer id='25' style='font-size:14px'>[4회차] Git 과제</footer>\n<br><footer id='26' style='font-size:14px'>2</footer>\n<p id='27' data-category='paragraph' style='font-size:18px'>(꼭 화면이 동일할 필요는 없어요! 다만, 위에서 언급한 PR, description, review가 잘 들어가 있<br>어야 합니다!)</p>\n<br><p id='28' data-category='paragraph' style='font-size:18px'> README 적기</p>\n<p id='29' data-category='list' style='font-size:18px'>팀소개 및 팀원 자기소개를 README.md 에 작성해주세요! 양식은 상관 없습니다.</p>\n<p id='30' data-category='list' style='font-size:16px'>README.md 에 위에서 캡처한 사진들을 넣어주세요.</p>\n<p id='31' data-category='list' style='font-size:16px'>Web, 크롤링, EDA/FE 과제에서 만든 코드들을 실행하는 방법에 관한 내용을 작성해주세요!<br>README의 ### 코드 실행 방법 아래에 적어주세요~</p>\n<p id='32' data-category='paragraph' style='font-size:18px'>### 코드 실행 방법</p>\n<h1 id='33' style='font-size:20px'>제출 방법</h1>\n<h1 id='34' style='font-size:18px'>YBIGTA_newbie_team_project</h1>\n<br><p id='35' data-category='paragraph' style='font-size:18px'>|<br>├ ── github<br>│ ├── branch_protection.png # 브랜치 보호 rule 적용 이미지<br>│ ├── push_rejected.png # 푸시 거부 상황 이미지<br>│ ├── review_and_merged.png # 팀원별 병합 이미지<br>├── .gitignore<br>├── README.md<br>├── requirements.txt<br>└── ... # 다른 폴더들</p>\n<h1 id='36' style='font-size:22px'>채점 기준</h1>\n<p id='37' data-category='paragraph' style='font-size:18px'>README를 위에 언급한 대로 잘 작성하고, 폴더 구조에 맞게 파일 업로드 후, 레포에 cache파일들을<br>.gitignore 을 통해 없앴다면 통과! 아니면 실패!!</p>\n<footer id='38' style='font-size:14px'>[4회차] Git 과제</footer>\n<br><footer id='39' style='font-size:14px'>3</footer>",
    "1Ho3ViMjhJxv7iuNfHB2OGfnwLb9T_esK": "<h1 id='0' style='font-size:22px'>[4회차] EDA&FE, 시각화 과제</h1>\n<h1 id='1' style='font-size:18px'>발제자: 정민지</h1>\n<h1 id='2' style='font-size:22px'>기간</h1>\n<br><p id='3' data-category='paragraph' style='font-size:18px'>마감: 7월 24일 목요일 23시 59분<br>지각 제출: 7월 25일 금요일 23시 59분</p>\n<h1 id='4' style='font-size:22px'>Intro</h1>\n<br><p id='5' data-category='paragraph' style='font-size:16px'>이번 과제는 3회차 크롤링 과제를 마치신 후에 이어서 해주셔야 합니다!<br>크롤링한 사이트별로 각각 개별 분석을 진행한 뒤, 사이트간 비교분석을 수행해 볼 건데요,<br>명세에 있는 내용은 필수로 포함되어야하는 내용이며, 추가하고 싶은 게 있다면 자유롭게 구현해주세요~</p>\n<h1 id='6' style='font-size:22px'>명세</h1>\n<br><p id='7' data-category='paragraph' style='font-size:14px'>먼저, 구글드라이브에 올려둔 zip 파일의 preprocessing 폴더를 review_analysis 폴더 안에 넣어주세요!</p>\n<br><h1 id='8' style='font-size:20px'>1. 개별 분석</h1>\n<h1 id='9' style='font-size:18px'>EDA</h1>\n<br><h1 id='10' style='font-size:16px'>분포 파악</h1>\n<br><p id='11' data-category='paragraph' style='font-size:16px'>별점, 텍스트 길이, 날짜 분포 파악</p>\n<br><h1 id='12' style='font-size:16px'>이상치 파악</h1>\n<br><p id='13' data-category='paragraph' style='font-size:16px'>별점 범위를 벗어난 값, 비정상적으로 길거나 짧은 리뷰, 기간(너무 먼 과거, 미래) 이상치 파악</p>\n<br><p id='14' data-category='paragraph' style='font-size:20px'>전처리/FE</p>\n<br><p id='15' data-category='paragraph' style='font-size:14px'>크롤링한 데이터에 대한 전처리/FE를 base_processor.py 의 BaseDataProcessor 클래스를 상속받아 구현해 봅<br>시다! ( example_processor.py 는 예시입니다)</p>\n<footer id='16' style='font-size:14px'>[4회차] EDA&FE, 시각화 과제</footer>\n<br><footer id='17' style='font-size:14px'>1</footer>\n<p id='18' data-category='paragraph' style='font-size:18px'>이때, 아래를 포함하여 구현해주세요! 아래 내용에 추가적으로 더 좋은 방법들을 적용해도 좋고, 어떻게 비<br>교분석할건지 팀원들과 잘 협의해보시고 데이터 전처리와 FE를 수행해주세요.</p>\n<p id='19' data-category='list' style='font-size:18px'>텍스트 데이터 전처리<br>eX. 비정상적으로 길거나 짧은 리뷰 제거, 특수문자 제거, 불용어 제거 등등..</p>\n<br><p id='20' data-category='list' style='font-size:16px'>파생 변수 1가지 이상 생성<br>ex. 시간대, 요일별 리뷰 개수에 대한 변수 생성</p>\n<br><p id='21' data-category='list' style='font-size:16px'>텍스트 벡터화</p>\n<p id='22' data-category='paragraph' style='font-size:16px'>BOW, TFIDF, Word2Vec, 혹은 BERT 임베딩 등등..</p>\n<h1 id='23' style='font-size:20px'>결과 저장</h1>\n<br><p id='24' data-category='paragraph' style='font-size:16px'>전처리/FE 결과는 database 폴더 속에 preprocessed_reviews_{사이트이름}.csv 로 저장해주세요.</p>\n<h1 id='25' style='font-size:22px'>2. 비교분석</h1>\n<br><p id='26' data-category='paragraph' style='font-size:16px'>위에서 만든, preprocessed_reviews_{사이트이름}.csv 를 기반으로 텍스트의 비교 분석과 시계열 분석을 자유롭게<br>진행해주세요. 분석을 위해 구현한 코드를 제출할 필요 없습니다.</p>\n<br><p id='27' data-category='paragraph' style='font-size:20px'>텍스트 비교 분석 예시: 키워드/단어 빈도 비교, 토픽 모델링, 감정 분석 등등..</p>\n<br><p id='28' data-category='paragraph' style='font-size:18px'>시계열 분석 예시: 시간대별 리뷰 개수 추이 비교 등등..</p>\n<h1 id='29' style='font-size:22px'>3. 시각화</h1>\n<br><p id='30' data-category='paragraph' style='font-size:18px'>데이터의 특성에 맞게 적절한 그래프로 시각화하세요! 시각화툴은 여러분들이 가장 편한걸로, 자유롭게 사<br>용하세요!</p>\n<br><p id='31' data-category='paragraph' style='font-size:18px'>개별 분석-EDA 결과를 시각화한 그래프</p>\n<br><p id='32' data-category='paragraph' style='font-size:18px'>boxplot, histogram, piechart 등등..</p>\n<br><p id='33' data-category='paragraph' style='font-size:16px'>비교 분석-텍스트, 시계열 비교 분석한 그래프</p>\n<br><p id='34' data-category='list' style='font-size:18px'>ex. 키워드 빈도 막대 그래프, 토픽 모델링 결과에 대한 파이차트..</p>\n<br><p id='35' data-category='list' style='font-size:16px'>사이트별로 라인 그래프를 겹쳐서 비교</p>\n<p id='36' data-category='paragraph' style='font-size:16px'>시각화한 그래프의 이미지들은 review_analysis/plots 폴더를 생성하여 저장해주세요. README.md 에서 이 경<br>로에 있는 이미지 파일들을 보여주셔야 합니다.</p>\n<footer id='37' style='font-size:14px'>[4회차] EDA&FE, 시각화 과제</footer>\n<br><p id='38' data-category='list' style='font-size:18px'>결측치 처리<br>ex. 별점, 리뷰, 날짜에 대해 nulI값 제거 또는 대체</p>\n<br><p id='39' data-category='list' style='font-size:16px'>이상치 처리<br>ex. 별점 범위 아닌 경우 제거 or 수정</p>\n<footer id='40' style='font-size:14px'>2</footer>\n<h1 id='41' style='font-size:22px'>4. README 작성</h1>\n<br><h1 id='42' style='font-size:20px'>아래 3가지 모두 작성해주세요!</h1>\n<br><p id='43' data-category='paragraph' style='font-size:18px'>EDA 개별 사이트에 대한 시각화 그래프 & 설명</p>\n<br><p id='44' data-category='paragraph' style='font-size:18px'>어떤 특성과 이상치가 존재하는지에 설명하는 내용이면 됩니다.</p>\n<br><p id='45' data-category='paragraph' style='font-size:18px'>전처리/FE 각 크롤링 csv파일에 대해 진행한 결과 설명</p>\n<br><p id='46' data-category='paragraph' style='font-size:20px'>결측치, 이상치, 텍스트데이터전처리, 파생변수, 텍스트 벡터화에 대한 설명을 모두 포함해주세<br>요!</p>\n<br><p id='47' data-category='paragraph' style='font-size:18px'>비교분석: 결과에 대한 시각화 그래프 & 설명</p>\n<br><p id='48' data-category='paragraph' style='font-size:18px'>사이트별 텍스트 비교 시 어떤 키워드, 토픽이 자주 등장했는지 등등..</p>\n<h1 id='49' style='font-size:22px'>주의사항</h1>\n<p id='50' data-category='list' style='font-size:16px'>review_analysis/preprocessing/main.py 의 line 11의 PREPROCESS_CLASSES 를 여러분들의 파일명에 맞춰서<br>작성해 주세요.</p>\n<br><p id='51' data-category='list' style='font-size:18px'>또한 여러분들이 구현한 preprocessor 클래스가 실행될 수 있도록 구현해주세요!</p>\n<br><h1 id='52' style='font-size:22px'>제출 방법</h1>\n<br><figure id='53'><img style='font-size:18px' alt=\"YBIGTA_newbie_team_project\n│\n├ ── database/\n│ ├── __init__.py\n│ ├── preprocessed_reviews_{사이트이름}.csv\n│ └── ...\n│\n├ ── review_analysis/\n│ ├── plots/\n│ │ └── ...\n│ ├── preprocessing/\n│ │ ├── base_preprocessor.py\n│ │ ├── main.py\n│ │ └── ...\n│ └── ...\n│\n├ ── README.md\n└── ...# 다른 폴더들\" data-coord=\"top-left:(151,845); bottom-right:(1123,1494)\" /></figure>\n<footer id='54' style='font-size:14px'>[4회차] EDA&FE, 시각화 과제</footer>\n<br><footer id='55' style='font-size:14px'>3</footer>\n<h1 id='56' style='font-size:22px'>채점 기준</h1>\n<br><p id='57' data-category='paragraph' style='font-size:20px'>database 폴더 속 csv파일(즉, 각 사이트별로 크롤링한 리뷰 데이터)에 대해 아래 조건을 만족해야 합니<br>다!</p>\n<h1 id='58' style='font-size:20px'>EDA/FE</h1>\n<h1 id='59' style='font-size:16px'>review_analysis/preprocessing/main.py 구현 기준:</h1>\n<p id='60' data-category='paragraph' style='font-size:16px'>python main.py --output_dir {결과 저장할 디렉토리} --all 를 실행했을때, 크롤링한 리뷰 데이터가 전처리를 거쳐<br>database 폴더 내에 preprocessed_reviews_{사이트 이름}.csv 파일들로 각각 잘 저장됨</p>\n<br><h1 id='61' style='font-size:20px'>데이터 시각화</h1>\n<p id='62' data-category='paragraph' style='font-size:16px'>README.md 에 아래 내용들이 포함됨</p>\n<br><p id='63' data-category='list' style='font-size:18px'>각 크롤링한 csv파일에 대한 EDA 그래프와 설명<br>각 크롤링한 csv파일에 대해 전처리/FE 결과에 대한 설명<br>사이트간 비교분석 결과에 대한 그래프와 설명</p>\n<br><h1 id='64' style='font-size:20px'>공통</h1>\n<br><h1 id='65' style='font-size:20px'>'제출 방법'에 언급한 대로 레포 구조 구성</h1>\n<br><p id='66' data-category='paragraph' style='font-size:18px'>지키지 않았다고 판단할 경우:<br>시각화한 그래프 이미지들이 plots 안에 있지 않음.<br>csv파일들이 database 안에 없음.. 등등 명세에서 언급한 폴더에 넣어달라고 했는데 아닐 경우<br>명세에서 언급한 파일 이름을 명세에 맞지 않게 설정한 경우</p>\n<h1 id='67' style='font-size:20px'>전부 만족하시면 통과!</h1>\n<br><p id='68' data-category='paragraph' style='font-size:20px'>EDA/FE와 데이터 시각화 둘 중에 하나만 만족하면 미흡, 둘 다 만족 못하면 실패..</p>\n<footer id='69' style='font-size:14px'>[4회차] EDA&FE, 시각화 과제</footer>\n<br><footer id='70' style='font-size:14px'>4</footer>",
    "14DBbplWWCoOHVZlDMqpRdYYp5-YW4s0N": "<header id='0' style='font-size:14px'>2025-2\u0001YBIGTA</header>\n<h1 id='1' style='font-size:20px'>데이터 시각화</h1>\n<footer id='2' style='font-size:16px'>26기\u0001임재민</footer>\n<h1 id='3' style='font-size:20px'>목\u0001차</h1>\n<p id='4' data-category='list' style='font-size:14px'>1. Intro</p>\n<p id='5' data-category='list' style='font-size:16px'>2. 방법</p>\n<p id='6' data-category='list' style='font-size:16px'>3. 실습\u0001및\u0001사례</p>\n<p id='7' data-category='list' style='font-size:16px'>4. 정리\u0001및\u0001결론</p>\n<h1 id='8' style='font-size:14px'>Intro</h1>\n<h1 id='9' style='font-size:22px'>데이터<br>분석이란?</h1>\n<br><header id='10' style='font-size:18px'>Intro</header>\n<figure id='11' data-category='chart'><img data-coord=\"top-left:(175,507); bottom-right:(1361,1304)\" /><figcaption><p>Chart Title: Relationship of Data, Information, and Intelligence</p><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>Operational Environment</td><td>Data</td><td>Information</td><td>Intelligence</td><td>Collection</td><td>Processing and Exploitation</td><td>Analysis and Production</td></tr></thead><tbody><tr><td>item_01</td><td>0%</td><td>25%</td><td>25%</td><td>15%</td><td>10%</td><td>20%</td><td>10%</td></tr></tbody></table></figure>\n<br><h1 id='12' style='font-size:20px'>Data≠Information</h1>\n<br><h1 id='13' style='font-size:18px'>수집한<br>데이터에서<br>정보를<br>얻고<br>싶다!</h1>\n<br><h1 id='14' style='font-size:16px'>⇒<br>데이터가<br>의미있는<br>정보가<br>되기<br>위해서는<br>데이터<br>분석<br>과정이<br>필요</h1>\n<h1 id='15' style='font-size:20px'>데이터<br>분석(Data<br>Analytics)이란?</h1>\n<p id='16' data-category='paragraph' style='font-size:14px'>Raw<br>data를<br>이해하는<br>과정<br>이를<br>기반으로<br>우리가<br>찾고자하는<br>정보를<br>얻거나,<br>합리적<br>근거를<br>통해<br>의사결정을<br>내리는데<br>사용</p>\n<p id='17' data-category='paragraph' style='font-size:14px'>⇒<br>이<br>과정에서<br>시각화는<br>데이터를<br>빠르고<br>효과적으로<br>이해하도록<br>도움</p>\n<h1 id='18' style='font-size:22px'>시각화란?</h1>\n<br><header id='19' style='font-size:20px'>Intro</header>\n<h1 id='20' style='font-size:18px'>시각화 by\u0001Wikipedia<br>무언가를\u0001시각적으로\u0001나타내는\u0001것</h1>\n<br><figure id='21'><img alt=\"\" data-coord=\"top-left:(1277,601); bottom-right:(1692,1331)\" /></figure>\n<br><h1 id='22' style='font-size:16px'>임재민\u0001(26기\u0001DA)</h1>\n<h1 id='23' style='font-size:16px'>경영학과\u000119학번\u0001(00년생)</h1>\n<h1 id='24' style='font-size:16px'>ESFJ\u0001(뭐든\u0001재밌게,\u0001억텐장인)</h1>\n<p id='25' data-category='paragraph' style='font-size:14px'>데이터\u0001마케팅\u0001회사에서\u0001인턴\u0001중<br>미드\u0001프렌즈,\u0001스파이더맨\u0001덕후 +조석희\u0001덕후<br>루시\u0001좋아함</p>\n<br><figure id='26'><img alt=\"\" data-coord=\"top-left:(2472,842); bottom-right:(2674,1196)\" /></figure>\n<header id='27' style='font-size:16px'>Intro</header>\n<br><h1 id='28' style='font-size:22px'>시각화란?</h1>\n<h1 id='29' style='font-size:14px'>시각화 by<br>Wikipedia</h1>\n<br><h1 id='30' style='font-size:18px'>무언가를<br>시각적으로<br>나타내는<br>것</h1>\n<h1 id='31' style='font-size:20px'>데이터<br>시각화</h1>\n<br><h1 id='32' style='font-size:18px'>데이터를<br>쉽게<br>이해할<br>수<br>있도록<br>시각적으로<br>표현하고<br>전달하는<br>과정</h1>\n<p id='33' data-category='paragraph' style='font-size:14px'>☑ 데이터를<br>차트,<br>그래프,<br>맵과<br>같은<br>시각적<br>요소를<br>이용해<br>명확하고<br>효과적으로<br>전달하는<br>것</p>\n<br><figure id='34'><img alt=\"\" data-coord=\"top-left:(1507,611); bottom-right:(2719,1323)\" /></figure>\n<header id='35' style='font-size:18px'>Intro</header>\n<br><h1 id='36' style='font-size:22px'>데이터<br>시각화의<br>이점</h1>\n<figure id='37'><img alt=\"\" data-coord=\"top-left:(163,487); bottom-right:(656,862)\" /></figure>\n<br><h1 id='38' style='font-size:14px'>2024년<br>1월부터<br>6월까지의<br>각<br>월별<br>웹사이트<br>방문자<br>수는<br>다<br>음과<br>같습니다.<br>1월에는<br>12,453명이었고,<br>2월에는<br>13,892명으<br>로<br>증가했습니다.<br>3월에는<br>15,105명,<br>4월에는<br>14,875명으로<br>소폭<br>감소했습니다.<br>5월에는<br>다시<br>증가하여<br>16,201명을<br>기록<br>했으며,<br>6월에는<br>17,900명으로<br>최고치를<br>기록했습니다.<br>평균<br>방문자<br>수는<br>약<br>15,071명이며,<br>증가율은<br>1월<br>대비<br>6월에<br>약<br>43.7%<br>상승했습니다.<br>....</h1>\n<figure id='39'><img alt=\"\" data-coord=\"top-left:(163,1036); bottom-right:(657,1406)\" /></figure>\n\n<figure id='41' data-category='chart'><img data-coord=\"top-left:(706,1053); bottom-right:(1487,1459)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>1월</td><td>2월</td><td>3월</td><td>4월</td><td>5월</td><td>6월</td></tr></thead><tbody><tr><td>item_01</td><td>12500</td><td>14000</td><td>16500</td><td>15000</td><td>16500</td><td>18000</td></tr></tbody></figure><br><caption id='40' style='font-size:16px'>월별<br>웹사이트<br>방문자<br>수</caption></table>\n<br><h1 id='42' style='font-size:18px'>데이터<br>시각화의<br>이점</h1>\n<br><h1 id='43' style='font-size:20px'>☑<br>직관적인<br>데이터<br>이해<br>☑<br>대용량<br>데이터의<br>특성을<br>짧고<br>빠르게<br>전달<br>☑<br>데이터<br>기반<br>의사결정<br>및<br>스토리텔링<br>가능<br>☑<br>비계량,<br>비정형<br>데이터를<br>도식화하여<br>이해<br></h1>\n<header id='44' style='font-size:16px'>Intro</header>\n<br><h1 id='45' style='font-size:20px'>시각화<br>활용<br>단계</h1>\n<h1 id='46' style='font-size:16px'><데이터<br>분석<br>STEP></h1>\n<table id='47' style='font-size:14px'><thead><tr><td colspan=\"2\">문제<br>정의 데이터<br>수집 데이터<br>가공 데이터<br>분석 결과<br>도출</td></tr></thead><tbody><tr><td>Ref<br>1.<br>A<br>식품회사<br>데이터<br>이상치<br>탐지</td><td>Ref<br>2.<br>B<br>커머스<br>매출<br>분석</td></tr><tr><td><figure><img alt=\"\" data-coord=\"top-left:(528,1043); bottom-right:(1147,1499)\" /></figure></td><td><figure><img alt=\"\" data-coord=\"top-left:(2031,985); bottom-right:(2433,1525)\" /></figure></td></tr></tbody></table>\n<header id='48' style='font-size:20px'>Intro</header>\n<br><table id='49' style='font-size:18px'><thead><tr><td>시각화<br>활용<br>단계 Ref<br>1.<br>A<br>식품회사<br>수집<br>데이터<br>이상치<br>탐지</td><td>Ref<br>2.<br>B<br>커머스<br>매출<br>분석</td></tr></thead><tbody><tr><td>유저의<br>유입경로를<br>판단하기<br>위하여<br>“root_path”<br>라는<br>객체<br>존재 root의<br>수집값은<br>4가지로<br>정해져있는<br>상황 <데이터<br>분석<br>STEP> QA<br>시에는<br>문제없이<br>수집됨을<br>확인 데이터<br>수집 데이터<br>가공 의문의<br>데이터가<br>수집되고<br>있음 을<br>확인하였고,<br>개발<br>상<br>조치 <figcaption><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>A</td><td>B</td><td>C</td><td>D</td><td>??</td></tr></thead><tbody><tr><td>item_01</td><td>32.5%</td><td>28.5%</td><td>23.6%</td><td>14.6%</td><td>0.8%</td></tr></tbody></table> →<br>확인하지<br>못했다면<br> 금전적<br>손실<br>발생</td><td><figure><img alt=\"데이터\n분석 대시보드를\n통하여\n매출\n성과\n파악 결과\n도출\n멤버등급별\n매출\n트렌드\n프로모션\n성과\n분석\n쿠폰\n성과\n분석\n등\" data-coord=\"top-left:(1519,238); bottom-right:(2850,1320)\" /></figure></td></tr></tbody></table>\n<br><p id='50' data-category='paragraph' style='font-size:22px'>시각화는<br>데이터<br>가공부터<br>결과도출까지<br>분석의<br>전<br>과정에서<br>사용됨<br>분석의<br>근거를<br>강화하는<br>매우<br>강력한<br>툴<br></p>\n<h1 id='51' style='font-size:18px'>DA만\u0001쓰는\u0001거\u0001아닌가요?\u0001;;</h1>\n<br><header id='52' style='font-size:14px'>Intro</header>\n<figure id='53'><img alt=\"\" data-coord=\"top-left:(196,448); bottom-right:(1078,1380)\" /></figure>\n<br><figure id='54' data-category='chart'><img data-coord=\"top-left:(1434,533); bottom-right:(1871,830)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>200</td><td>400</td><td>600</td><td>800</td></tr></thead><tbody><tr><td>BERT BASE (Masked LM)</td><td>80.8Thousands</td><td>82.6Thousands</td><td>84.2Thousands</td><td>84.2Thousands</td></tr><tr><td>BERT BASE (Left-to-Right)</td><td>78.2Thousands</td><td>82.5Thousands</td><td>84.6Thousands</td><td>84.6Thousands</td></tr></tbody></table></figure>\n<br><figure id='55' data-category='chart'><img data-coord=\"top-left:(2069,527); bottom-right:(2785,828)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>10^-</td></tr></thead><tbody><tr><td>item_01</td><td>95%</td></tr></tbody></table></figure>\n<figure id='56'><img alt=\"\" data-coord=\"top-left:(1378,1004); bottom-right:(1906,1410)\" /></figure>\n<br><figure id='57'><img alt=\"\" data-coord=\"top-left:(2050,1058); bottom-right:(2767,1361)\" /></figure>\n<h1 id='58' style='font-size:14px'>방법</h1>\n<h1 id='59' style='font-size:18px'>시각화\u0001차트\u0001종류</h1>\n<br><header id='60' style='font-size:14px'>방법</header>\n<figure id='61'><img style='font-size:14px' alt=\"허거더거덩스\" data-coord=\"top-left:(168,366); bottom-right:(2709,1441)\" /></figure>\n<h1 id='62' style='font-size:22px'>시각화\u0001방법\u0001개요</h1>\n<br><header id='63' style='font-size:20px'>방법</header>\n<figure id='64'><img alt=\"\" data-coord=\"top-left:(263,395); bottom-right:(931,1049)\" /></figure>\n<br><figure id='65'><img alt=\"\" data-coord=\"top-left:(1067,400); bottom-right:(1892,1037)\" /></figure>\n<h1 id='66' style='font-size:20px'>목적을\u0001이해하기</h1>\n<br><figure id='67'><img alt=\"\" data-coord=\"top-left:(2033,411); bottom-right:(2800,1051)\" /></figure>\n<p id='68' data-category='paragraph' style='font-size:16px'>데이터로부터\u0001확인하고\u0001싶은\u0001목표\u0001설정<br>ex)\u0001연령/성별\u0001분석을\u0001통한\u0001페르소나\u0001정의</p>\n<p id='69' data-category='paragraph' style='font-size:14px'>분석\u0001목표에\u0001따른\u0001가설\u0001혹은\u0001질문\u0001설정<br>ex)\u0001여성이\u0001남성보다\u0001프로모션에<br>민감하게\u0001반응할\u0001것이다</p>\n<br><p id='70' data-category='paragraph' style='font-size:20px'>데이터\u0001파악하기</p>\n<br><p id='71' data-category='paragraph' style='font-size:14px'>데이터\u0001변수\u0001및\u0001특성\u0001파악<br>ex)\u0001성별은\u0001남/녀의\u00012가지\u0001경우의\u0001수<br>이\u0001때\u0001남자\u0001모수가\u0001여자보다\u0001적음<br>연령대는\u0001데이터가\u0001생년월일로\u0001수집되고\u0001있는\u0001상황</p>\n<br><p id='72' data-category='paragraph' style='font-size:20px'>시각화\u0001설계하기</p>\n<br><p id='73' data-category='paragraph' style='font-size:14px'>데이터간의\u0001관계,\u0001변수\u0001특성에\u0001따른\u0001차트\u0001선택<br>ex)\u0001전체\u0001유저에\u0001대한\u0001분석이므로\u0001시계열보다는\u0001합산\u0001차트<br>남/녀\u0001대구분이\u0001존재하니\u0001바차트<br>연령대는\u0001버킷화하여\u0001세부바로\u0001나타내기</p>\n<br><p id='74' data-category='paragraph' style='font-size:18px'>타인을\u0001생각하기.\u0001이살이죽</p>\n<figure id='75'><img style='font-size:14px' alt=\"방법\n시각화\u0001방법\u0001개요\n목적을\u0001이해하기 데이터\u0001파악하기 시각화\u0001설계하기\n데이터로부터\u0001확인하고\u0001싶은\u0001목표\u0001설정 데이터\u0001변수\u0001및\u0001특성\u0001파악 데이터간의\u0001관계,\u0001변수\u0001특성에\u0001따른\u0001차트\u0001선택\nex)\u0001연령/성별\u0001분석을\u0001통한\u0001페르소나\u0001정의 ex)\u0001성별은\u0001남/녀의\u00012가지\u0001경우의\u0001수 ex)\u0001전체\u0001유저에\u0001대한\u0001분석이므로\u0001시계열보다는\u0001합산\u0001차트\n이\u0001때\u0001남자\u0001모수가\u0001여자보다\u0001적음 남/녀\u0001대구분이\u0001존재하니\u0001바차트\n연령대는\u0001데이터가\u0001생년월일로\u0001수집되고\u0001있는\u0001상황 연령대는\u0001버킷화하여\u0001세부바로\u0001나타내기\n분석\u0001목표에\u0001따른\u0001가설\u0001혹은\u0001질문\u0001설정\nex)\u0001여성이\u0001남성보다\u0001프로모션에 타인을\u0001생각하기.\u0001이살이죽\n민감하게\u0001반응할\u0001것이다\" data-coord=\"top-left:(249,108); bottom-right:(2804,1588)\" /></figure>\n<header id='76' style='font-size:14px'>방법</header>\n<br><p id='77' data-category='paragraph' style='font-size:20px'>Matplotlib<br>요소</p>\n<figure id='78'><img alt=\"\" data-coord=\"top-left:(304,396); bottom-right:(1424,1520)\" /></figure>\n<br><h1 id='79' style='font-size:14px'>플롯<br>틀<br>잡기<br>팁</h1>\n<p id='80' data-category='list' style='font-size:16px'>✔<br>배경은<br>지양<br>✔<br>그리드는<br>최소화<br>✔<br>카테고리가<br>하나면<br>범례는<br>굳이...?<br>✔<br>범례<br>대신<br>직접<br>라벨링도<br>고려<br>✔<br>이중축은<br>정말<br>명확한<br>관계성이<br>있을<br>때만<br>✔<br>불필요한<br>그래픽효과(like<br>그림자)<br>지양</p>\n<header id='81' style='font-size:14px'>방법</header>\n<br><h1 id='82' style='font-size:20px'>시각화<br>종류</h1>\n<h1 id='83' style='font-size:14px'>[Amounts]</h1>\n<h1 id='84' style='font-size:14px'>수량의<br>시각화<br>팁</h1>\n<p id='85' data-category='list' style='font-size:16px'>✔<br>명목형<br>-<br>데이터<br>크기대로<br>그래프<br>정렬<br>✔<br>순서형<br>-<br>순서<br>그대로<br>그래프<br>정렬<br>✔<br>라벨이<br>길면<br>horizontal<br>bar<br>plot<br>✔<br>그룹핑<br>vs<br>plot<br>분리<br>✔<br>스태킹은<br>total이<br>중요할때만<br>✔<br>dot<br>plot과<br>heatmap도<br>고려</p>\n<br><figure id='86' data-category='chart'><img data-coord=\"top-left:(192,1245); bottom-right:(447,1496)\" /><figcaption><p>Chart Title: Heatmap</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Dark Gray</td><td>Light Blue</td><td>Dark Blue</td><td>Light Gray</td></tr></thead><tbody><tr><td>item_01</td><td>1Not specified</td><td>1Not specified</td><td>1Not specified</td><td>1Not specified</td></tr></tbody></table></figure>\n<br><figure id='87'><img alt=\"\" data-coord=\"top-left:(532,551); bottom-right:(769,831)\" /></figure>\n<figure id='88' data-category='chart'><img data-coord=\"top-left:(841,898); bottom-right:(1104,1166)\" /><figcaption><p>Chart Title: Stacked Bars</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Green</td><td>Yellow</td><td>Blue</td><td>Brown</td><td>Red</td></tr></thead><tbody><tr><td>item_01</td><td>3Not explicitly visible</td><td>4Not explicitly visible</td><td>1Not explicitly visible</td><td>0.2Not explicitly visible</td><td>0.0Not explicitly visible</td></tr></tbody></table></figure>\n<br><figure id='89'><img alt=\"\" data-coord=\"top-left:(535,961); bottom-right:(770,1162)\" /></figure>\n<br><figure id='90'><img alt=\"\" data-coord=\"top-left:(840,550); bottom-right:(1117,836)\" /></figure>\n<br><figure id='91' data-category='chart'><img data-coord=\"top-left:(188,568); bottom-right:(447,824)\" /><figcaption><p>Chart Title: Bars</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Green</td><td>Cyan</td><td>Dark Gray</td></tr></thead><tbody><tr><td>item_01</td><td>8Not explicitly visible</td><td>4Not explicitly visible</td><td>2Not explicitly visible</td></tr></tbody></table></figure>\n<figure id='92' data-category='chart'><img data-coord=\"top-left:(1171,891); bottom-right:(1436,1175)\" /><figcaption><p>Chart Title: Stacked Bars</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Green</td><td>Blue</td><td>Yellow</td><td>Red</td></tr></thead><tbody><tr><td>item_01</td><td>3Not explicitly visible</td><td>10Not explicitly visible</td><td>7Not explicitly visible</td><td>4Not explicitly visible</td></tr></tbody></table></figure>\n<br><figure id='93' data-category='chart'><img data-coord=\"top-left:(185,909); bottom-right:(436,1162)\" /><figcaption><p>Chart Title: Grouped Bars</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Black</td><td>White</td><td>Light Gray</td><td>Dark Gray</td></tr></thead><tbody><tr><td>item_01</td><td>4Not explicitly visible</td><td>3Not explicitly visible</td><td>3Not explicitly visible</td><td>1Not explicitly visible</td></tr></tbody></table></figure>\n<header id='94' style='font-size:14px'>방법</header>\n<br><h1 id='95' style='font-size:20px'>시각화<br>종류</h1>\n<h1 id='96' style='font-size:14px'>[Distribution]</h1>\n<figure id='97'><img alt=\"\" data-coord=\"top-left:(161,541); bottom-right:(1477,1515)\" /></figure>\n<br><h1 id='98' style='font-size:14px'>분포의<br>시각화<br>팁</h1>\n<p id='99' data-category='list' style='font-size:16px'>✔<br>Smoothing은<br>데이터<br>수가<br>충분할<br>때만<br>✔<br>히스토그램,<br>밀도<br>도표는<br>적절한<br>width를<br>✔<br>데이터<br>왜곡이<br>싫으면<br>ECDF<br>활용<br>✔<br>데이터가<br>Highly<br>Skewed면<br>로그변환<br>고려<br>✔<br>한번에<br>여러개<br>분포를<br>나타내야<br>하면<br>boxplot,<br>violin<br>plot<br>등등</p>\n<header id='100' style='font-size:14px'>방법</header>\n<br><h1 id='101' style='font-size:20px'>시각화<br>종류</h1>\n<h1 id='102' style='font-size:14px'>[Proportions]</h1>\n<h1 id='103' style='font-size:14px'>비율의<br>시각화<br>팁</h1>\n<h1 id='104' style='font-size:16px'>✔<br>Pie<br>Chart는<br>직관적<br>비율을<br>나타낼<br>때<br>효과적<br>✔<br>카테고리가<br>너무<br>많거나<br>각<br>카테고리가<br>비슷한<br>비율을<br>가지면<br>Pie<br>Chart는<br>지양<br>✔<br>시간에<br>따라<br>분포<br>변화는<br>side-by-side<br>bars<br>✔<br>범주가<br>겹치는<br>경우<br>(ex.<br>중복응답)는<br>Mosaic<br>Plot이나<br>Treemap</h1>\n<figure id='105'><img alt=\"\" data-coord=\"top-left:(871,1277); bottom-right:(1109,1495)\" /></figure>\n<br><figure id='106'><img alt=\"\" data-coord=\"top-left:(204,1004); bottom-right:(444,1094)\" /></figure>\n<br><figure id='107'><img alt=\"\" data-coord=\"top-left:(1186,893); bottom-right:(1449,1168)\" /></figure>\n<br><figure id='108'><img alt=\"\" data-coord=\"top-left:(858,933); bottom-right:(1110,1156)\" /></figure>\n<figure id='109'><img alt=\"\" data-coord=\"top-left:(540,1279); bottom-right:(776,1495)\" /></figure>\n<br><figure id='110' data-category='chart'><img data-coord=\"top-left:(1184,552); bottom-right:(1457,845)\" /><figcaption><p>Chart Title: Stacked Bars</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Green</td><td>Blue</td><td>Yellow</td><td>Gray</td></tr></thead><tbody><tr><td>item_01</td><td>4Not explicitly visible</td><td>2Not explicitly visible</td><td>3Not explicitly visible</td><td>2Not explicitly visible</td></tr></tbody></table></figure>\n<br><figure id='111'><img alt=\"\" data-coord=\"top-left:(865,559); bottom-right:(1125,838)\" /></figure>\n<br><figure id='112'><img alt=\"\" data-coord=\"top-left:(233,627); bottom-right:(415,805)\" /></figure>\n<figure id='113'><img alt=\"\" data-coord=\"top-left:(526,917); bottom-right:(760,1159)\" /></figure>\n<figure id='114' data-category='chart'><img data-coord=\"top-left:(196,1228); bottom-right:(449,1497)\" /><figcaption><p>Chart Title: Mosaic Plot</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Blue</td><td>Green</td><td>Red</td><td>Yellow</td></tr></thead><tbody><tr><td>item_01</td><td>1Not explicitly visible</td><td>1Not explicitly visible</td><td>0Not explicitly visible</td><td>0Not explicitly visible</td></tr></tbody></table></figure>\n<br><figure id='115' data-category='chart'><img data-coord=\"top-left:(523,583); bottom-right:(776,826)\" /><figcaption><p>Chart Title: Data</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Dark Gray</td><td>Gray</td><td>Light Gray</td></tr></thead><tbody><tr><td>item_01</td><td>1.0Not specified</td><td>0.8Not specified</td><td>0.4Not specified</td></tr></tbody></table></figure>\n<header id='116' style='font-size:14px'>방법</header>\n<br><h1 id='117' style='font-size:20px'>시각화<br>종류</h1>\n<h1 id='118' style='font-size:14px'>[x-y<br>Relationships]</h1>\n<figure id='119'><img alt=\"\" data-coord=\"top-left:(164,540); bottom-right:(1478,1525)\" /></figure>\n<br><h1 id='120' style='font-size:14px'>x-y<br>관계의<br>시각화<br>팁</h1>\n<p id='121' data-category='list' style='font-size:16px'>✔<br>변수가<br>3개<br>이상이면<br>버블차트,<br>다른<br>색<br>활용<br>✔<br>데이터셋이<br>너무<br>고차원이면<br>차원축소<br>✔<br>차원축소는<br>PCA,<br>t-SNE,<br>UMAP<br>모두<br>고려<br>✔<br>시계열은<br>Line<br>graph<br>✔<br>추세를<br>파악하려면<br>smoothing<br>✔<br>장기적인<br>추세<br>제거에는<br>detrending</p>\n<header id='122' style='font-size:14px'>방법</header>\n<br><h1 id='123' style='font-size:18px'>시각화<br>종류</h1>\n<h1 id='124' style='font-size:14px'>[x-y<br>Relationships]</h1>\n<h1 id='125' style='font-size:14px'>**<br>참고할만한<br>사이트</h1>\n<p id='126' data-category='paragraph' style='font-size:14px'>더<br>많은<br>팁들<br>→<br>Fundamentals<br>of<br>Data<br>Visualization</p>\n<p id='127' data-category='paragraph' style='font-size:14px'>목적에<br>따른<br>차트<br>선택</p>\n<br><p id='128' data-category='paragraph' style='font-size:14px'>→<br>https://datavizcatalogue.com/search.html</p>\n<br><h1 id='129' style='font-size:14px'>[Uncertainty]</h1>\n<figure id='130'><img alt=\"\" data-coord=\"top-left:(1614,1183); bottom-right:(1851,1435)\" /></figure>\n<br><figure id='131'><img alt=\"\" data-coord=\"top-left:(865,596); bottom-right:(1068,796)\" /></figure>\n<br><figure id='132'><img alt=\"\" data-coord=\"top-left:(535,563); bottom-right:(746,797)\" /></figure>\n<br><figure id='133'><img alt=\"\" data-coord=\"top-left:(1180,597); bottom-right:(1393,807)\" /></figure>\n<br><figure id='134'><img alt=\"\" data-coord=\"top-left:(1601,544); bottom-right:(1866,812)\" /></figure>\n<figure id='135'><img alt=\"\" data-coord=\"top-left:(1920,1185); bottom-right:(2187,1434)\" /></figure>\n<br><figure id='136'><img alt=\"\" data-coord=\"top-left:(212,550); bottom-right:(431,797)\" /></figure>\n<br><figure id='137'><img alt=\"\" data-coord=\"top-left:(2238,543); bottom-right:(2488,805)\" /></figure>\n<figure id='138'><img alt=\"\" data-coord=\"top-left:(2573,1019); bottom-right:(2799,1118)\" /></figure>\n<br><figure id='139'><img alt=\"\" data-coord=\"top-left:(2258,917); bottom-right:(2486,1116)\" /></figure>\n<br><figure id='140' data-category='chart'><img data-coord=\"top-left:(1927,548); bottom-right:(2159,799)\" /><figcaption><p>Chart Title: Error Bars</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Black</td><td>Blue</td><td>Green</td><td>Gray</td></tr></thead><tbody><tr><td>item_01</td><td>4</td><td>8</td><td>11</td><td>3</td></tr></tbody></table></figure>\n<figure id='141'><img alt=\"\" data-coord=\"top-left:(1941,926); bottom-right:(2169,1115)\" /></figure>\n<br><figure id='142'><img alt=\"\" data-coord=\"top-left:(2569,608); bottom-right:(2803,804)\" /></figure>\n<figure id='143' data-category='chart'><img data-coord=\"top-left:(2237,1171); bottom-right:(2498,1437)\" /><figcaption><p>Chart Title: Fitted Draws</p><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>black_line</td><td>gray_line</td></tr></thead><tbody><tr><td>item_01</td><td>3Not explicitly visible</td><td>1Not explicitly visible</td></tr></tbody></table></figure>\n<h1 id='144' style='font-size:18px'>Color\u0001Scales</h1>\n<br><header id='145' style='font-size:14px'>방법</header>\n<h1 id='146' style='font-size:14px'>이산/범주형\u0001-\u0001정성형\u0001배합</h1>\n<figure id='147' data-category='chart'><img data-coord=\"top-left:(158,486); bottom-right:(982,832)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Okabe lto Accent</td><td>Grays with accents</td><td>ColorBrewer Accent</td></tr></thead><tbody><tr><td>item_01</td><td>100</td><td>100</td><td>100</td></tr></tbody></table></figure>\n<br><h1 id='148' style='font-size:14px'>연속형\u0001-\u0001순차형\u0001배합</h1>\n<figure id='149' data-category='chart'><img data-coord=\"top-left:(1104,504); bottom-right:(1906,826)\" /><figcaption><p>Chart Title: ColorBrewer Blues</p><p>Y-Axis: Heat</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>VIRIs</td><td>Heat</td></tr></thead><tbody><tr><td>item_01</td><td>4</td><td>5</td></tr></tbody></table></figure>\n<br><h1 id='150' style='font-size:14px'>대칭/대립형\u0001-\u0001양방향\u0001배합</h1>\n<figure id='151' data-category='chart'><img data-coord=\"top-left:(2035,493); bottom-right:(2841,826)\" /><figcaption><p>Chart Title: ColorBrewer Blues</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Heat</td><td>Viridis</td></tr></thead><tbody><tr><td>item_01</td><td>1Not specified</td><td>1Not specified</td></tr></tbody></table></figure>\n<figure id='152' data-category='chart'><img data-coord=\"top-left:(272,1012); bottom-right:(864,1479)\" /><figcaption><p>Chart Type: pie</p></figcaption><table><thead><tr><td></td><td>Bell Peppers</td><td>Pepperoni</td><td>Mushrooms</td><td>Onions</td><td>Olives</td></tr></thead><tbody><tr><td>item_01</td><td>25.0%</td><td>30.0%</td><td>20.0%</td><td>15.0%</td><td>10.0%</td></tr></tbody></table></figure>\n<br><figure id='153' data-category='chart'><img data-coord=\"top-left:(1150,931); bottom-right:(1867,1529)\" /><figcaption><p>Chart Title: Monthly Average Temperature</p><p>X-Axis: Month</p><p>Y-Axis: Average Temperature (°F)</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>January</td><td>February</td><td>March</td><td>April</td><td>May</td><td>June</td><td>July</td><td>August</td><td>September</td><td>October</td><td>November</td><td>December</td></tr></thead><tbody><tr><td>item_01</td><td>38°F</td><td>40°F</td><td>42°F</td><td>50°F</td><td>60°F</td><td>70°F</td><td>80°F</td><td>80°F</td><td>75°F</td><td>65°F</td><td>50°F</td><td>45°F</td></tr></tbody></table></figure>\n<br><figure id='154' data-category='chart'><img data-coord=\"top-left:(2080,929); bottom-right:(2792,1523)\" /><figcaption><p>Chart Title: Monthly Average Temperature</p><p>X-Axis: Month</p><p>Y-Axis: Average Temperature (°F)</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>January</td><td>February</td><td>March</td><td>April</td><td>May</td><td>June</td><td>July</td><td>August</td><td>September</td><td>October</td><td>November</td><td>December</td></tr></thead><tbody><tr><td>item_01</td><td>35°F</td><td>35°F</td><td>45°F</td><td>60°F</td><td>70°F</td><td>80°F</td><td>80°F</td><td>80°F</td><td>75°F</td><td>65°F</td><td>50°F</td><td>45°F</td></tr></tbody></table></figure>\n<header id='155' style='font-size:14px'>방법</header>\n<br><h1 id='156' style='font-size:18px'>시각화\u0001툴\u0001-\u0001파이썬\u0001라이브러리</h1>\n<header id='157' style='font-size:14px'>방법</header>\n<br><h1 id='158' style='font-size:18px'>시각화\u0001툴\u0001-\u0001시각화\u0001소프트웨어</h1>\n<figure id='159'><img alt=\"\" data-coord=\"top-left:(937,1279); bottom-right:(1102,1432)\" /></figure>\n<br><figure id='160'><img alt=\"\" data-coord=\"top-left:(890,1111); bottom-right:(1501,1248)\" /></figure>\n<br><figure id='161'><img alt=\"\" data-coord=\"top-left:(907,736); bottom-right:(1465,877)\" /></figure>\n<figure id='162'><img alt=\"\" data-coord=\"top-left:(871,935); bottom-right:(1538,1050)\" /></figure>\n<h1 id='163' style='font-size:20px'>체크리스트</h1>\n<br><header id='164' style='font-size:16px'>방법</header>\n<h1 id='165' style='font-size:16px'>ex)<br>Data<br>Visualization<br>Checklist<br>by<br>UCB</h1>\n<h1 id='166' style='font-size:14px'>Content</h1>\n<br><p id='167' data-category='list' style='font-size:14px'>☐<br>Data<br>Visual<br>is<br>clear<br>and<br>concise<br>☐<br>Data<br>Visual<br>is<br>audience-centric.<br>☐<br>Tells<br>the<br>story<br>☐<br>Data<br>selected<br>carefully.<br>☐<br>Graphs<br>and<br>charts<br>used<br>for<br>big<br>data,<br>not<br>little<br>data.<br>☐<br>The<br>type<br>of<br>graph<br>is<br>appropriate<br>for<br>data<br>&<br>level<br>of<br>precision.<br>☐<br>Sufficient<br>documentation<br>provided.</p>\n<h1 id='168' style='font-size:14px'>Arrangement</h1>\n<br><p id='169' data-category='list' style='font-size:14px'>☐<br>Spatial<br>flow<br>is<br>intuitive<br>to<br>the<br>reader.<br>☐<br>Proportions<br>are<br>accurate.<br>☐<br>Display<br>is<br>free<br>from<br>distractions.</p>\n<br><h1 id='170' style='font-size:14px'>Color</h1>\n<br><p id='171' data-category='list' style='font-size:14px'>☐<br>Intentional<br>color<br>scheme,<br>not<br>random<br>☐<br>Color<br>is<br>used<br>to<br>highlight<br>key<br>patterns.</p>\n<h1 id='172' style='font-size:14px'>Labels<br>&<br>Lines</h1>\n<br><p id='173' data-category='list' style='font-size:14px'>☐<br>Graphs<br>don't<br>contain<br>much<br>text,<br>so<br>existing<br>text<br>encapsulates<br>your<br>message<br>and<br>packs<br>a<br>punch.<br>☐<br>Descriptive<br>title<br>is<br>left-justified<br>in<br>upper<br>left<br>corner.<br>☐<br>Text<br>is<br>scannable.<br>☐<br>Labels<br>are<br>clear<br>and<br>used<br>sparingly.</p>\n<p id='174' data-category='paragraph' style='font-size:16px'>시각화가<br>완료되면<br>결과를<br>다시<br>점검해보자!<br>다른<br>사람들의<br>의견도<br>들어보고<br>피드백을<br>받아보자!</p>\n<h1 id='175' style='font-size:14px'>실습\u0001및\u0001사례</h1>\n<h1 id='176' style='font-size:22px'>Plotly<br>실습<br>모두<br>다<br>아는<br>Matplotlib<br>말고<br>새로운<br>걸<br>배워봅시다</h1>\n<br><header id='177' style='font-size:18px'>실습<br>및<br>사례</header>\n<h1 id='178' style='font-size:18px'>Plotly란?</h1>\n<br><p id='179' data-category='list' style='font-size:20px'>☑<br><br>인터렉티브한<br>시각화가<br>가능한<br>파이썬<br>그래픽<br>라이브러리<br>☑<br><br>40개<br>이상의<br>차트<br>타입을<br>제공하는<br>오픈소스<br>☑<br><br>인터렉티브한<br>대시보드를<br>위해<br>Dash<br>또는<br>Chart<br>Studio와<br>같은<br>라이브러리와</p>\n<br><h1 id='180' style='font-size:14px'>통합<br>및<br>확장이<br>가능</h1>\n<h1 id='181' style='font-size:18px'>Plotly<br>기본구조</h1>\n<p id='182' data-category='paragraph' style='font-size:16px'>Figure<br>:<br>작업의<br>기본<br>단위,<br>data와<br>layout을<br>입력받고<br>그래프를<br>그림</p>\n<br><p id='183' data-category='paragraph' style='font-size:16px'>Data:<br>Figure가<br>표현할<br>데이터,<br>Trace들의<br>리스트라고<br>보면<br>됨<br>Trace:<br>데이터의<br>개별<br>계층,<br>하나의<br>그래프<br>항목(선,<br>막대<br>등)<br>의미</p>\n<br><p id='184' data-category='paragraph' style='font-size:16px'>Layout:<br>그래의<br>레이아웃과<br>스타일을<br>정의</p>\n<h1 id='185' style='font-size:20px'>시나리오</h1>\n<br><header id='186' style='font-size:16px'>실습\u0001및\u0001사례</header>\n<h1 id='187' style='font-size:14px'>“7월\u0001동안\u0001데이터\u0001이관의\u0001이슈로,\u0001데이터\u0001분석이\u0001불가능\u0001했던\u0001M사.\u00018월\u00011일이\u0001되어서야\u0001지난\u00017월의\u0001매출\u0001실적을\u0001보게\u0001되었는데...”</h1>\n<figure id='188'><img alt=\"\" data-coord=\"top-left:(486,537); bottom-right:(1243,1314)\" /></figure>\n<p id='189' data-category='paragraph' style='font-size:14px'>“홀리몰리.\u0001전월\u0001대비\u0001매출\u0001300%\u0001증가\"</p>\n<br><figure id='190'><img style='font-size:16px' alt=\"M사\u0001데이터분석가,\u0001개구리씨\" data-coord=\"top-left:(1490,634); bottom-right:(2800,1701)\" /></figure>\n<h1 id='191' style='font-size:20px'>데이터셋<br>설명</h1>\n<br><header id='192' style='font-size:16px'>실습<br>및<br>사례</header>\n<h1 id='193' style='font-size:16px'>M<br>패션<br>이커머스사의<br>7월<br>고객<br>행동<br>로그데이터</h1>\n<h1 id='194' style='font-size:16px'>ecommerce_log.csv</h1>\n<br><figure id='195'><img alt=\"\" data-coord=\"top-left:(1739,571); bottom-right:(1884,701)\" /></figure>\n<table id='196' style='font-size:14px'><thead><tr><td>date</td><td>로그<br>데이터가<br>기록된<br>날짜</td></tr></thead><tbody><tr><td>user_Id</td><td>유저가<br>가지는<br>고유한<br>ID</td></tr><tr><td>product_Id</td><td>제품별<br>고유<br>ID</td></tr><tr><td>gender</td><td>성별</td></tr><tr><td>age_group</td><td>연령대</td></tr><tr><td>traffic_source</td><td>고객의<br>페이지<br>유입<br>경로<br>(organic<br>-<br>자발적,<br>paid<br>-<br>광고매체,<br>social,<br>referral,<br>email<br>등)</td></tr><tr><td>event_flag</td><td>해당<br>제품의<br>이벤트<br>진행<br>여부<br>(0,<br>1)</td></tr><tr><td>purchased</td><td>해당<br>제품<br>구매<br>여부<br>(0,<br>1)</td></tr></tbody></table>\n<header id='197' style='font-size:14px'>실습\u0001및\u0001사례</header>\n<br><h1 id='198' style='font-size:18px'>1.\u0001일별\u0001사이트\u0001방문수/방문자\u0001수</h1>\n<figure id='199' data-category='chart'><img data-coord=\"top-left:(828,424); bottom-right:(2293,1132)\" /><figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>Jun 30</td><td>Jul 7</td><td>Jul 14</td><td>Jul 21</td><td>Jul 28</td></tr></thead><tbody><tr><td>총 방문수</td><td>800</td><td>1100</td><td>5500</td><td>1000</td><td>800</td></tr><tr><td>이유 방문자수</td><td>600</td><td>2400</td><td>3800</td><td>2400</td><td>2800</td></tr><tr><td>Jul 12, 2024</td><td>800</td><td>1400</td><td>4500</td><td>1100</td><td>600</td></tr></tbody></table></figure>\n<p id='200' data-category='paragraph' style='font-size:14px'>으아닛!\u00017월\u000111일부터\u0001갑자기\u0001방문\u0001수가\u0001폭등하네?<br>저\u0001때\u0001무슨\u0001일이\u0001있었던거야...<br>제품\u0001판매량을\u0001봐야겠어.</p>\n<header id='201' style='font-size:14px'>실습\u0001및\u0001사례</header>\n<br><h1 id='202' style='font-size:18px'>2.\u0001일별\u0001판매\u0001Top3\u0001제품</h1>\n<figure id='203' data-category='chart'><img data-coord=\"top-left:(850,398); bottom-right:(2146,1188)\" /><figcaption><p>Chart Title: 콘텐츠 타임 세요 션</p><p>X-Axis: 날짜</p><p>Y-Axis: 판매수량</p><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Jul 7</td><td>Jul 14</td><td>Jul 21</td><td>Jul 28</td></tr></thead><tbody><tr><td>제품 31</td><td>30년</td><td>450년</td><td>10년</td><td>10년</td></tr><tr><td>제품 15</td><td>10년</td><td>10년</td><td>10년</td><td>10년</td></tr><tr><td>체험 15</td><td>10년</td><td>200년</td><td>10년</td><td>10년</td></tr></tbody></table></figure>\n<p id='204' data-category='paragraph' style='font-size:14px'>어?\u0001딱\u0001방문자\u0001수가\u0001증가한\u00014일동안,\u0001제품\u000126번의\u0001판매량이\u0001급증했어<br>갑자기\u0001제품\u000126번의\u0001수요가\u0001높아진건데...\u0001무슨\u0001일이지?</p>\n<br><p id='205' data-category='paragraph' style='font-size:14px'>26번\u0001제품만\u0001한\u0001번\u0001더\u0001봐야겠다.</p>\n<p id='206' data-category='paragraph' style='font-size:18px'>3.\u0001ID\u000126번\u0001제품\u0001일별\u0001조회\u0001수/판매량</p>\n<br><header id='207' style='font-size:14px'>실습\u0001및\u0001사례</header>\n<figure id='208' data-category='chart'><img alt=\"\" data-coord=\"top-left:(85,482); bottom-right:(1445,1122)\" /></figure>\n<br><figure id='209' data-category='chart'><img data-coord=\"top-left:(1466,473); bottom-right:(2800,1136)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>204-07-07</td><td>2024-07-14</td><td>2024-07-21</td><td>2024-07-28</td></tr></thead><tbody><tr><td>item_01</td><td>223Count</td><td>422Count</td><td>217Count</td><td>3Count</td></tr></tbody></table></figure>\n<p id='210' data-category='paragraph' style='font-size:14px'>아아\u000111일부터\u0001엄청\u0001팔리다가\u000114일날\u0001재고가\u0001떨어지면서\u0001품절됐구나<br>아니\u0001근데\u0001그럼\u0001우리가\u0001이\u0001제품을\u0001광고를\u0001엄청했었나?</p>\n<br><p id='211' data-category='paragraph' style='font-size:14px'>광고\u0001효과인가?</p>\n<header id='212' style='font-size:14px'>실습\u0001및\u0001사례</header>\n<br><h1 id='213' style='font-size:18px'>4.\u0001Traffic\u0001Source별\u0001유입비율</h1>\n<figure id='214' data-category='chart'><img data-coord=\"top-left:(591,436); bottom-right:(2402,1189)\" /><figcaption><p>Chart Type: bar</p></figcaption><table><thead><tr><td></td><td>Jul 7 2024</td><td>Jul 14</td><td>Jul 21</td><td>Jul 28</td></tr></thead><tbody><tr><td>item_01</td><td>100%</td><td>100%</td><td>100%</td><td>100%</td></tr></tbody></table></figure>\n<p id='215' data-category='paragraph' style='font-size:14px'>에?????\u0001광고(paid)가\u0001아니라\u0001대부분\u0001직접검색(organic)으로\u0001들어온거야?<br>말도\u0001안\u0001돼.\u0001이게\u0001머선\u0001일이냐고\u0001ㅜㅜ</p>\n<h1 id='216' style='font-size:20px'>5.\u0001정성\u0001조사\u0001결과</h1>\n<br><header id='217' style='font-size:18px'>실습\u0001및\u0001사례</header>\n<h1 id='218' style='font-size:16px'>[연예]\u0001탑스타\u0001T씨,\u0001M사\u0001신발\u0001애용하는\u0001것으로\u0001알려져...</h1>\n<br><h1 id='219' style='font-size:14px'>날짜\u0001:\u00012025.07.11</h1>\n<figure id='220'><img alt=\"\" data-coord=\"top-left:(1026,592); bottom-right:(1918,1522)\" /></figure>\n<h1 id='221' style='font-size:20px'>시나리오<br>정리</h1>\n<br><header id='222' style='font-size:16px'>실습<br>및<br>사례</header>\n<h1 id='223' style='font-size:16px'><분석<br>STEP></h1>\n<h1 id='224' style='font-size:14px'>방문자<br>수</h1>\n<br><h1 id='225' style='font-size:14px'>판매<br>Top3</h1>\n<br><h1 id='226' style='font-size:14px'>26번<br>제품<br>판매</h1>\n<br><h1 id='227' style='font-size:14px'>유입<br>경로</h1>\n<br><h1 id='228' style='font-size:14px'>정성조사</h1>\n<p id='229' data-category='paragraph' style='font-size:16px'>시각화의<br>흐름이<br>존재</p>\n<h1 id='230' style='font-size:22px'>시각화<br>역량</h1>\n<br><header id='231' style='font-size:18px'>실습<br>및<br>사례</header>\n<h1 id='232' style='font-size:20px'>“너.<br>시각화<br>좀<br>치는구나?”</h1>\n<h1 id='233' style='font-size:14px'>시각화<br>코드를<br>빠르게<br>작성하는가?<br>→<br>X</h1>\n<br><h1 id='234' style='font-size:14px'>데이터에<br>대한<br>높은<br>이해를<br>기반으로<br>스토리<br>있는<br>대시보드를<br>생성하는가?<br>-<br>O</h1>\n<h1 id='235' style='font-size:18px'>데이터<br>하이라키</h1>\n<figure id='236'><img style='font-size:16px' alt=\"매출\n☑\n\n데이터\n간의\n계층\n구조\n☑\n\n탑\n다운\nor\n바텀\n업\n방식으로의\n데이터\n분석\n및\n시각화\n제품 프로모션\n☑\n\n대시보드가\n스토리를\n가지게\n되고\n이는\n대시보드를\n보는\n사람이\n부가설명\n없이도\n시각화\n결과를\n이해하게\n됨\n광고 가격 퀄리티\" data-coord=\"top-left:(161,1043); bottom-right:(2847,1472)\" /></figure>\n<h1 id='237' style='font-size:14px'>정리\u0001및\u0001결론</h1>\n<header id='238' style='font-size:16px'>정리<br>및<br>결론</header>\n<br><h1 id='239' style='font-size:20px'>정리<br>및<br>결론</h1>\n<h1 id='240' style='font-size:16px'>시각화의<br>의의</h1>\n<br><p id='241' data-category='list' style='font-size:14px'>결국<br>데이터의<br>분석<br>결과를<br>제3자에게<br>가장<br>효과적으로<br>나타낼<br>수<br>있는<br>방법<br>→<br>이해<br>못<br>시키면<br>시각화할<br>이유가<br>없다!<br>데이터로부터<br>이끌어낸<br>인사이트와,<br>이를<br>기반으로<br>하는<br>의사결정을<br>뒷받침하기<br>위한<br>근거로<br>작용</p>\n<h1 id='242' style='font-size:16px'>시각화<br>과정</h1>\n<br><p id='243' data-category='list' style='font-size:14px'>시각화를<br>통해<br>보고자<br>하는<br>것이<br>무엇인가<br>(목적과<br>의도)<br>그것을<br>확인하기<br>위해<br>필요한<br>데이터는<br>무엇인가<br>어떻게<br>표현해<br>전달할<br>것인가<br>(라이브러리,<br>툴<br>선택<br>및<br>차트<br>선정)<br>시각화의<br>스토리를<br>어떻게<br>구성할<br>것인가</p>\n<h1 id='244' style='font-size:20px'>정리<br>및<br>결론</h1>\n<br><header id='245' style='font-size:16px'>정리<br>및<br>결론</header>\n<h1 id='246' style='font-size:16px'>전해드리고<br>싶은<br>말</h1>\n<h1 id='247' style='font-size:14px'>시각화는<br>어렵다!<br></h1>\n<br><p id='248' data-category='list' style='font-size:14px'>시각화는<br>몇<br>개의<br>그림을<br>나열하여서<br>분석의<br>목적,<br>결과를<br>모두<br>보여주어야<br>하는<br>과정<br>설득력을<br>높이기<br>위해서<br>디자인적인<br>요소는<br>반드시<br>고려되어야<br>합니다.<br>(ex.<br>고객사의<br>톤앤매너<br>맞추기)<br>코드를<br>잘<br>짜는<br>것이<br>시각화의<br>역량은<br>아니라고<br>생각합니다.<br>시각화<br>할<br>때는<br>AI<br>적극<br>사용하자!</p>\n<h1 id='249' style='font-size:14px'>시각화는<br>정답이<br>없습니다.<br>많-이<br>생각하고<br>많-이<br>그리면서<br>데이터에<br>맞는<br>시각화<br>방식을<br>찾는<br>것이<br>중요합니다.</h1>\n<p id='250' data-category='paragraph' style='font-size:14px'>데이터<br>시각화를<br>통해<br>모든<br>결과를<br>확인하고,<br>모든<br>문제의<br>원인을<br>파악할<br>수는<br>없습니다.</p>\n<br><p id='251' data-category='list' style='font-size:14px'>시나리오처럼<br>결국에는<br>내부<br>요인이<br>아닌<br>외부<br>요인에<br>의한,<br>즉<br>시각화로는<br>알<br>수<br>없는<br>요인이<br>변수가<br>될<br>수도<br>있음<br>시각화<br>+<br>정성적<br>조사(도메인<br>지식<br>등)을<br>결합한다면<br>더욱<br>분석결과를<br>합리적이고<br>효과적으로<br>나타낼<br>수<br>있지<br>않나합니다!</p>\n<h1 id='252' style='font-size:14px'>감사합니다!</h1>",
    "1kgqdoMdHHk-VwyvPcA2T9Fb_-vaNPP9l": "<h1 id='0' style='font-size:22px'>[3회차] 크롤링 과제</h1>\n<h1 id='1' style='font-size:18px'>발제자: 김이지</h1>\n<h1 id='2' style='font-size:22px'>기간</h1>\n<br><p id='3' data-category='paragraph' style='font-size:20px'>마감: 7월 24일 23시 59분<br>지각 제출: 7월 25일 23시 59분<br>EDA/FE, 시각화 과제와 기한이 같습니다)</p>\n<h1 id='4' style='font-size:22px'>Intro</h1>\n<br><h1 id='5' style='font-size:16px'>안녕하세요 😊</h1>\n<br><p id='6' data-category='paragraph' style='font-size:16px'>이번에도 팀플 과제를 들고 왔습니다.<br>오늘은 리뷰 데이터 크롤링을 해봅시다!<br>앞으로 시각화까지의 과제는 각 조별로 한 장소나 영화 등에 대해 서로 다른 사이트에서 리뷰를 수집하<br>여 EDA, FE를 수행한 뒤 시각화를 통해 비교분석을 할 예정입니다.</p>\n<br><h1 id='7' style='font-size:16px'>이번 과제는 리뷰를 수집하는 것이 목적입니다!</h1>\n<h1 id='8' style='font-size:22px'>명세</h1>\n<br><p id='9' data-category='paragraph' style='font-size:16px'>제공한 zip 파일을 풀어서 utils 와 review_analysis 디렉토리를 YBIGTA_newbie_team_project 안에<br>넣어주세요.</p>\n<p id='10' data-category='paragraph' style='font-size:16px'> 팀끼리 의논해서 어떤 리뷰 데이터를 분석할 것인지를 정하세요!<br>ex) 바다회사랑 리뷰 분석하기, 하얼빈 리뷰 분석하기</p>\n<p id='11' data-category='paragraph' style='font-size:18px'> 그 다음, 정한 한 가지 장소/영화 등에 대해 1인당 한 개씩 서로 다른 사이트를 정하세요!<br>ex. 바다회사랑 리뷰 분석: (팀원 A 카카오맵, 팀원 B 네이버지도, 팀원 C 구글지도)</p>\n<br><p id='12' data-category='paragraph' style='font-size:20px'>[최소 조건]</p>\n<br><p id='13' data-category='list' style='font-size:18px'>크롤링할 최소 리뷰 개수: 한 곳당 500개<br>별점, 날짜, 리뷰는 반드시 포함.</p>\n<footer id='14' style='font-size:14px'>[3회차] 크롤링 과제</footer>\n<br><footer id='15' style='font-size:14px'>1</footer>\n<h1 id='16' style='font-size:18px'> 이제 BeautifulSoup과 Selenium을 활용해서 리뷰데이터를 크롤링해봅시다.</h1>\n<br><p id='17' data-category='paragraph' style='font-size:16px'>review_analysis/crawling/base_crawler.py 의 추상 클래스가 존재하는데, 이를 상속받아 각자의 crawler<br>를 구현해주세요! utils/logger.py 도 활용해보세요.(Docstring도 잊지 마세요!).</p>\n<br><p id='18' data-category='paragraph' style='font-size:16px'>크롤러를 돌리다보면 예기치 못한 오류가 발생하는 경우가 많습니다. 필수는 아니지만 중간 저장<br>및 자동 재실행 기능 그리고 로그 저장 기능도 구현해보시는 걸 추천드립니다.</p>\n<br><p id='19' data-category='paragraph' style='font-size:20px'>example_crawler.py는 말 그대로 예시이니, 지워주세요.</p>\n<p id='20' data-category='paragraph' style='font-size:16px'> review_analysis/crawling/main.py 에서 각자 구현한 Crawler를 실행하세요. 이때, 해당 파일의 윗부분<br>에 # 모든 크롤링 클래스를 예시 형식으로 적어주세요. 라고 적힌 부분에 여러분들이 구현한 class이름을 예시 형<br>식대로 작성해주세요. 크롤링한 데이터는 database 폴더 안에 reviews_{사이트 이름}.csv 로 저장해주세<br>요.</p>\n<h1 id='21' style='font-size:16px'> README.md 에 다음과 같은 정보를 포함해서 작성해주세요.</h1>\n<br><p id='22' data-category='list' style='font-size:18px'>데이터 소개(크롤링한 사이트의 링크, 데이터 형식, 개수)<br>실행방법</p>\n<h1 id='23' style='font-size:20px'>##수정금지## 라고 적혀있는 곳은 절대로 수정하지 마세요!</h1>\n<h1 id='24' style='font-size:22px'>제출 방법</h1>\n<br><p id='25' data-category='paragraph' style='font-size:18px'>git을 통해 제출</p>\n<p id='26' data-category='paragraph' style='font-size:16px'>YBIGTA_newbie_team_project</p>\n<br><p id='27' data-category='paragraph' style='font-size:16px'>├── README.md</p>\n<br><p id='28' data-category='paragraph' style='font-size:16px'>│</p>\n<br><h1 id='29' style='font-size:16px'>├── database/ # 임시 DB</h1>\n<br><h1 id='30' style='font-size:18px'>│ ├── reviews_{사이트 이름}.csv</h1>\n<br><p id='31' data-category='paragraph' style='font-size:16px'>│ └── ...</p>\n<p id='32' data-category='paragraph' style='font-size:16px'>review_analysis/</p>\n<p id='33' data-category='paragraph' style='font-size:16px'>// 나머지 파일들</p>\n<footer id='34' style='font-size:14px'>[3회차] 크롤링 과제</footer>\n<br><footer id='35' style='font-size:14px'>2</footer>\n<br><p id='36' data-category='paragraph' style='font-size:16px'>│</p>\n<br><p id='37' data-category='paragraph' style='font-size:16px'>├──</p>\n<br><p id='38' data-category='paragraph' style='font-size:16px'>│ ├── crawling/</p>\n<br><p id='39' data-category='paragraph' style='font-size:16px'>│ │ ├── base_crawler.py</p>\n<br><h1 id='40' style='font-size:16px'>│ │ ├── main.py</h1>\n<br><p id='41' data-category='paragraph' style='font-size:16px'>│ │ └── ...</p>\n<br><p id='42' data-category='paragraph' style='font-size:16px'>│ └── ...</p>\n<br><p id='43' data-category='paragraph' style='font-size:18px'>└──...</p>\n<h1 id='44' style='font-size:22px'>채점 기준</h1>\n<br><p id='45' data-category='paragraph' style='font-size:20px'>README를 올바르게 작성</p>\n<p id='46' data-category='paragraph' style='font-size:16px'>제가 여러분들의 파일에서 python main.py -o {output_path} --all 을 실행했을때 , 리뷰가 해당<br>output_path에 저장됨</p>\n<br><p id='47' data-category='paragraph' style='font-size:20px'>mypy test 통과<br>모든 팀원의 csv파일들이 존재하며, 각 파일이 위에서 언급한 [최소조건]을 만족<br>위의 항목들을 모두 만족시키면 제출입니다!</p>\n<p id='48' data-category='paragraph' style='font-size:18px'>제출한 과제가 위의 조건을 만족시키지 못한다면, 모든 팀원의 과제가 미흡처리되니 팀원끼리 꼼꼼히<br>확인해서 읽어주세요.</p>\n<h1 id='49' style='font-size:20px'>[참고자료] 협업 팁</h1>\n<br><p id='50' data-category='paragraph' style='font-size:18px'>https://www.notion.so/four-cats/2300efedebcb80e8b64dfa9e7e133f76?<br>source=copy_link</p>\n<footer id='51' style='font-size:14px'>[3회차] 크롤링 과제</footer>\n<br><footer id='52' style='font-size:14px'>3</footer>",
    "1LqRnj3ML641dlNFLz3-j9la9Hes7ZCHA": "<h1 id='0' style='font-size:22px'>[참고자료] 협업 팁</h1>\n<h1 id='1' style='font-size:18px'>발제자: 김이지</h1>\n<p id='2' data-category='paragraph' style='font-size:16px'>안녕하세요!<br>앞으로 다양한 팀 활동과 프로젝트를 함께해나갈 여러분을 위해,<br>제가 YBIGTA에서의 협업 경험을 바탕으로 정리한 작은 팁들을 공유드리고자 합니다.<br>물론 저 역시 아직 배워가는 입장이지만,<br>그동안 함께 일하며 실제로 도움이 되었던 실천 방법들을 담아봤습니다.<br>이 팁들이 앞으로 여러분의 협업에 조금이나마 도움이 되기를 바랍니다 😊</p>\n<h1 id='3' style='font-size:20px'>기본 매너</h1>\n<br><h1 id='4' style='font-size:16px'>협업의 시작은 태도에서!</h1>\n<p id='5' data-category='list' style='font-size:16px'>⏰ 지각 금지 – 5분 이상 늦을 땐 사전 공유 필수</p>\n<br><p id='6' data-category='list' style='font-size:16px'>🤝 상호 존중 – 역할, 시간, 역량 모두 존중하는 태도</p>\n<br><p id='7' data-category='list' style='font-size:16px'>성실한 참여 – 맡은 일은 끝까지 책임감 있게 수행</p>\n<h1 id='8' style='font-size:20px'>소통법</h1>\n<br><h1 id='9' style='font-size:16px'>소통도 능력! 팀의 리듬을 지키는 커뮤니케이션 방식</h1>\n<p id='10' data-category='paragraph' style='font-size:16px'>📌 공지/업데이트 공유 공간 확보</p>\n<br><p id='11' data-category='list' style='font-size:16px'>노션: 공지란 + TODO 트래커<br>카톡: 공지방과 잡담방 분리</p>\n<br><p id='12' data-category='paragraph' style='font-size:16px'>빠르고 정확한 커뮤니케이션 → 회의 피로도↓ / 업무 효율↑</p>\n<br><p id='13' data-category='paragraph' style='font-size:16px'>회의 전 할 말은 정리해오기</p>\n<br><p id='14' data-category='paragraph' style='font-size:16px'>건의사항은 소모임 NO!  팀장에게 공식 전달</p>\n<br><h1 id='15' style='font-size:20px'>“칭찬도 협업의 일부다!ˮ</h1>\n<br><p id='16' data-category='paragraph' style='font-size:16px'>잘한 일은 꼭 드러내고 팀 분위기 살리기!</p>\n<br><p id='17' data-category='paragraph' style='font-size:16px'>익명 피드백 도구(Joey 등)도 적극 활용</p>\n<footer id='18' style='font-size:14px'>[참고자료] 협업 팁</footer>\n<br><footer id='19' style='font-size:14px'>1</footer>\n<h1 id='20' style='font-size:20px'>git commit messages<br>commit 메세지의 7가지 규칙</h1>\n<br><p id='21' data-category='list' style='font-size:18px'> 제목과 본문을 빈 행으로 구분한다.<br> 제목은 50글자 이내로 제한한다.<br> 제목의 첫 글자는 대문자로 작성한다.<br> 제목 끝에는 마침표를 넣지 않는다.<br> 제목은 명령문으로 사용하며 과거형을 사용하지 않는다.<br> 본문의 각 행은 72글자 내로 제한한다.<br> 어떻게 보다는 무엇과 왜를 설명한다.</p>\n<footer id='22' style='font-size:16px'>[참고자료] 협업 팁</footer>\n<br><footer id='23' style='font-size:14px'>2</footer>\n<h1 id='24' style='font-size:22px'>commit 메시지 구조</h1>\n<p id='25' data-category='paragraph' style='font-size:20px'>// Header, Body, Footer는 빈 행으로 구분한다.<br>타입(스코프): 주제(제목) // Header(헤더)</p>\n<p id='26' data-category='paragraph' style='font-size:18px'>본문 // Body(바디)</p>\n<p id='27' data-category='paragraph' style='font-size:16px'>바닥글 // Footer</p>\n<h1 id='28' style='font-size:20px'>Header는 필수이며 스코프는 생략 가능하다.</h1>\n<p id='29' data-category='paragraph' style='font-size:16px'>타입은 해당 커밋의 성격을 나타내며 아래 중 하나여야 한다.</p>\n<br><table id='30' style='font-size:16px'><thead></thead><tbody><tr><td>타입 이름</td><td>내용</td></tr><tr><td>feat</td><td>새로운 기능에 대한 커밋</td></tr><tr><td>fix</td><td>버그 수정에 대한 커밋</td></tr><tr><td>build</td><td>빌드 관련 파일 수정 / 모듈 설치 또는 삭제에 대한 커밋</td></tr><tr><td>chore</td><td>그 외 자잘한 수정에 대한 커밋</td></tr><tr><td>ci</td><td>ci 관련 설정 수정에 대한 커밋</td></tr><tr><td>docs</td><td>문서 수정에 대한 커밋</td></tr><tr><td>style</td><td>코드 스타일 혹은 포맷 등에 관한 커밋</td></tr><tr><td>refactor</td><td>코드 리팩토링에 대한 커밋</td></tr><tr><td>test</td><td>테스트 코드 수정에 대한 커밋</td></tr><tr><td>perf</td><td>성능 개선에 대한 커밋</td></tr></tbody></table>\n<p id='31' data-category='paragraph' style='font-size:20px'>Body는 Header에서 표현할 수 없는 상세한 내용을 적는다.(생략 가능)</p>\n<br><p id='32' data-category='paragraph' style='font-size:18px'>Footer는 바닥글로 어떤 이슈에서 왔는지 같은 참조 정보들을 추가하는 용도로 사용한다.(생략<br>가능)</p>\n<br><p id='33' data-category='paragraph' style='font-size:16px'>✔ Footer에는 resolves: #1137 식으로 이슈 연동도 가능</p>\n<h1 id='34' style='font-size:22px'>작성 예시</h1>\n<p id='35' data-category='paragraph' style='font-size:16px'>git commit -m \"fix: Safari에서 모달을 띄웠을 때 스크롤 이슈 수정</p>\n<p id='36' data-category='paragraph' style='font-size:16px'>모바일 사파리에서 Carousel 모달을 띄웠을 때,<br>모달 밖의 상하 스크롤이 움직이는 이슈 수정.</p>\n<footer id='37' style='font-size:14px'>[참고자료] 협업 팁</footer>\n<br><footer id='38' style='font-size:14px'>3</footer>\n<p id='39' data-category='paragraph' style='font-size:16px'>resolves: #1137\"</p>\n<p id='40' data-category='paragraph' style='font-size:16px'>출처 : https://velog.io/@chojs28/Git-%EC%BB%A4%EB%B0%8B<br>%EB%A9%94%EC%8B%9C%EC%A7%80%EA%B7%9C%EC%B9%99</p>\n<h1 id='41' style='font-size:22px'>역할</h1>\n<p id='42' data-category='paragraph' style='font-size:18px'>함께 공부하고 과제를 해결하는 교육 세션에는 크게 적용이 필요 없을 수 있지<br>만,</p>\n<br><h1 id='43' style='font-size:18px'>수 주~수개월 동안 진행되는 프로젝트에서는 팀워크의 ‘구조화ʼ가 성패를 가릅<br>니다.</h1>\n<br><h1 id='44' style='font-size:20px'>팀장이라면:</h1>\n<br><h1 id='45' style='font-size:16px'>1. 전체 진행 구조와 타임라인을 설계</h1>\n<br><p id='46' data-category='list' style='font-size:16px'>프로젝트 시작 시 rough한 일정표를 잡고<br>중간 점검 시기 및 마감 목표를 팀원과 공유</p>\n<p id='47' data-category='paragraph' style='font-size:16px'>2. 역할(R&R) 분배 + 데드라인 설정</p>\n<br><p id='48' data-category='list' style='font-size:16px'>누구의 몫인지 애매하지 않게<br>역할마다 중간 점검 시기까지 함께 지정</p>\n<p id='49' data-category='paragraph' style='font-size:16px'>3. 진행 상황 트래킹 + 회의 이후 Follow-up</p>\n<br><p id='50' data-category='list' style='font-size:16px'>Notion, Excel, Discord 등 도구를 통해<br>모든 태스크의 현재 상태를 볼 수 있도록 시각화<br>회의 참여 못한 팀원 / 뒤처진 팀원에게 정보 전달 책임</p>\n<h1 id='51' style='font-size:16px'>4. 회의록은 꼭 남기기</h1>\n<br><p id='52' data-category='list' style='font-size:16px'>회의 내용은 텍스트로 기록되고 남아야 함<br>결정 사항·다음 행동 아이템 위주로 작성<br>회의 시작 전 노션에 미리 agenda 항목 공유</p>\n<br><p id='53' data-category='paragraph' style='font-size:20px'>팀원이라면:</p>\n<footer id='54' style='font-size:14px'>[참고자료] 협업 팁</footer>\n<br><footer id='55' style='font-size:14px'>4</footer>\n<h1 id='56' style='font-size:18px'>1. 팀장·팀원에 대한 기본적인 존중</h1>\n<h1 id='57' style='font-size:16px'>2. 자신의 의견을 적극 제시하기</h1>\n<p id='58' data-category='paragraph' style='font-size:16px'>건설적인 피드백과 대안 제시</p>\n<br><p id='59' data-category='list' style='font-size:16px'>회의 전 발언할 안건 미리 정리해오기 + 노션에 기록</p>\n<h1 id='60' style='font-size:16px'>3. 자신의 진행 상황을 숨기지 말고 공유</h1>\n<br><p id='61' data-category='list' style='font-size:16px'>문제 생겼다면 빨리 말하고,<br>조금씩이라도 진행 중이라면 티 내기! → 피드백을 일찍 받을수록 수정 부담 ↓</p>\n<h1 id='62' style='font-size:16px'>4. 문제 발생 시 빠르게 알리기</h1>\n<br><p id='63' data-category='list' style='font-size:16px'>미루면 손해는 팀 전체에 돌아온다<br>“~이런 문제가 있는데 이렇게 해결해보려고 합니다ˮ 형식으로 알리기</p>\n<h1 id='64' style='font-size:22px'>노션 사용법</h1>\n<br><h1 id='65' style='font-size:16px'>협업 툴은 잘 쓰는 사람이 유능하다</h1>\n<p id='66' data-category='list' style='font-size:16px'>목차 & 하이라이트 & 토글 활용 – 시각적 정리 중요</p>\n<br><p id='67' data-category='list' style='font-size:18px'>데이터베이스 뷰 – 트래커, 캘린더, 갤러리 등</p>\n<br><p id='68' data-category='list' style='font-size:16px'>캘린더 기능 – 일정 관리에도 유용</p>\n<br><p id='69' data-category='list' style='font-size:16px'>템플릿 적극 활용 – 문서의 질 & 속도 ↑</p>\n<br><p id='70' data-category='list' style='font-size:16px'>기록 습관 + 댓글 소통 – 과거 회의/논의 맥락 저장</p>\n<br><p id='71' data-category='list' style='font-size:20px'>“보는 사람ˮ 기준 자료 정리</p>\n<br><p id='72' data-category='list' style='font-size:18px'>노션 페이지 제목 → 명확하게 ([회의록] 0712 논의 내용 등)<br>내용 순서: 핵심 → 근거 → 부가정보 (역피라미드 구조)<br>불확실한 내용은 질문 표시(❓)나 코멘트 남기기</p>\n<br><p id='73' data-category='paragraph' style='font-size:16px'>회의 없는 날도 로그 남기기 - 서로 흐름 공유 가능</p>\n<footer id='74' style='font-size:14px'>[참고자료] 협업 팁</footer>\n<br><footer id='75' style='font-size:14px'>5</footer>\n<br><p id='76' data-category='paragraph' style='font-size:18px'>상대방의 시간, 스타일, 리듬을 배려하는 태도</p>\n<p id='77' data-category='paragraph' style='font-size:16px'>예스맨이 되기보다는</p>\n<h1 id='78' style='font-size:18px'>자신에게 맞는 정리 방식은 직접 해보며 익히는 것</h1>\n<br><p id='79' data-category='paragraph' style='font-size:18px'>→ 템플릿도 좋지만, 계속 쓰다 보면 본인만의 루틴이 생긴다</p>\n<p id='80' data-category='paragraph' style='font-size:18px'>예시 format</p>\n<p id='81' data-category='paragraph' style='font-size:18px'>기록은 시간이 드는 일이지만, 안 하면 더 오래 걸림</p>\n<br><p id='82' data-category='paragraph' style='font-size:18px'>→ 기억에 의존하지 않고, 모든 게 문서에 있다면 팀 전체가 빨라진다</p>\n<h1 id='83' style='font-size:20px'>협업하면서 이런 건 꼭 공유하고 싶었어요</h1>\n<footer id='84' style='font-size:16px'>[참고자료] 협업 팁</footer>\n<br><footer id='85' style='font-size:14px'>6</footer>\n<br><p id='86' data-category='paragraph' style='font-size:18px'>📜</p>\n<h1 id='87' style='font-size:20px'>📣</h1>\n<p id='88' data-category='list'></p>\n<p id='89' data-category='list'></p>\n<p id='90' data-category='list'></p>",
    "1Rf_b56y5k2b65Xw0JTAQ5mNTGwqrvO-j": "<header id='0' style='font-size:14px'>2025-1 YBIGTA</header>\n<h1 id='1' style='font-size:20px'>크롤링</h1>\n<footer id='2' style='font-size:16px'>26기 김이지</footer>\n<h1 id='3' style='font-size:22px'>목 차</h1>\n<p id='4' data-category='list' style='font-size:16px'>1. 크롤링 기본</p>\n<p id='5' data-category='list' style='font-size:20px'>2. 파이썬 크롤링 라이브러리</p>\n<p id='6' data-category='list' style='font-size:14px'>3. 실습</p>\n<p id='7' data-category='list' style='font-size:18px'>4. 과제 안내</p>\n<h1 id='8' style='font-size:14px'>크롤링 기본</h1>\n<h1 id='9' style='font-size:22px'>크롤링이란?</h1>\n<br><header id='10' style='font-size:14px'>크롤링이란</header>\n<h1 id='11' style='font-size:14px'>크롤링<br>= Crawling<br>= 기어다닌다</h1>\n<h1 id='12' style='font-size:16px'>어디를? 웹(Web) 상을!<br>= 웹상을 기어다니며 데이터를 긁어 모은다</h1>\n<h1 id='13' style='font-size:20px'>왜 필요한가?</h1>\n<p id='14' data-category='paragraph' style='font-size:18px'>✓ 데이터 분석 시작하면 늘 부딪히는 문제 : 원하는 데이터가 없다</p>\n<p id='15' data-category='paragraph' style='font-size:18px'>→ 그에 대한 해결 방법? 크롤링!</p>\n<header id='16' style='font-size:18px'>크롤링이란</header>\n<br><h1 id='17' style='font-size:22px'>웹 크롤링와 웹 스크래핑</h1>\n<h1 id='18' style='font-size:20px'>웹 크롤링(Web Crawling)이란?</h1>\n<p id='19' data-category='list' style='font-size:14px'>● 웹상의 정보들을 탐색하고 수집하는 작업<br>● 작동 방식:</p>\n<br><p id='20' data-category='list' style='font-size:14px'>○ 웹 크롤러(Crawler) 또는 봇(Bot)이 규칙에 따라 자동으로 여러 웹사이트를 방문합니다.<br>○ 페이지의 내용과 링크 구조를 분석하고, 필요에 따라 복사하거나 요약합니다.<br>○ 검색 엔진에서는 이 데이터를 기반으로 검색 색인(index)을 생성하여 사용자에게 유용한 정보를<br>제공하도록 구성합니다.</p>\n<br><h1 id='21' style='font-size:18px'>웹 스크래핑(Web Scraping)이란?</h1>\n<p id='22' data-category='list' style='font-size:16px'>● 특정 웹 사이트나 페이지에서 필요한 데이터를 자동으로 추출해 내는 작업<br>● 작동 방식:</p>\n<br><p id='23' data-category='list' style='font-size:14px'>○ 스크래퍼(Scraper) 봇이 HTTP 요청(GET)을 통해 웹페이지를 요청합니다.<br>○ 응답으로 받은 HTML 문서를 분석하여 특정 태그, 속성, 패턴을 가진 데이터만 추출합니다.<br>○ 추출된 데이터는 CSV, 엑셀, 데이터베이스 등 원하는 형태로 저장하여 활용할 수 있습니다.</p>\n<h1 id='24' style='font-size:20px'>웹 크롤링 VS 웹 스크래핑</h1>\n<br><header id='25' style='font-size:16px'>크롤링이란</header>\n<table id='26' style='font-size:14px'><thead><tr><td>항목</td><td>웹 크롤링</td><td>웹 스크래핑</td></tr></thead><tbody><tr><td>목적/용도</td><td>특정 키워드에 대한 심층 분석 및 실시간 정보 제공에 유용</td><td>정확한 정보를 요구할 때, 장기적 비용 절약 가능</td></tr><tr><td>작동 방식</td><td>웹 페이지 및 링크를 따라가며 콘텐츠를 자동 수집 (웹 기반으로 작동)</td><td>웹 포함 다양한 소스에서 필요한 정보만 추출 (반드시 웹은 아님)</td></tr><tr><td>중복 제어</td><td>동일한 콘텐츠가 여러 페이지에 있을 수 있어 중복 제거 필수</td><td>특정 정보만 추출하므로 중복 제거는 필수 아님</td></tr><tr><td>리소스/확장성</td><td>많은 데이터를 수집 가능하지만 서버 부하 큼, 리소스 많이 듬</td><td>적은 리소스로 원하는 정보 수집 가능하나 범위 제한 있음</td></tr><tr><td>활용 예시</td><td>검색포털 - 외부 링크 포함하여 본문 요약 제공</td><td>기업 재무정보 자동 수집, 전자상거래 상품 정보 수집 등</td></tr></tbody></table>\n<p id='27' data-category='paragraph' style='font-size:18px'>✓ 실무에서는 용어 혼용, 하지만 원리 차이는 알아야 함</p>\n<h1 id='28' style='font-size:22px'>HTML</h1>\n<br><header id='29' style='font-size:16px'>크롤링기본</header>\n<h1 id='30' style='font-size:20px'>HyperTextMarkupLanguage</h1>\n<p id='31' data-category='paragraph' style='font-size:14px'>- HyperText (웹 페이지에서 다른 페이지로 이동할 수 있도록 하는 것) 기능을 가진 문서를<br>만드는 언어, 웹 페이지를 위한 마크업 언어</p>\n<h1 id='32' style='font-size:16px'>쉽게 말하면 그냥 웹 페이지의 뼈대를 구성하는 언어</h1>\n<p id='33' data-category='list' style='font-size:14px'>- 마크업 언어 : 마크업 태그로 문서를 표현하는 언어 (=태그(tag)로 둘러싸였다고 이해)<br>- 마크업 태그 : 문서의 구조를 표현하는 역할을 하는 표식</p>\n<br><p id='34' data-category='list' style='font-size:16px'>-웹 브라우저는 HTML로 정의된 콘텐츠를 시각적으로 렌더링하는 역할</p>\n<p id='35' data-category='paragraph' style='font-size:20px'>태그(Tags)</p>\n<br><p id='36' data-category='paragraph' style='font-size:16px'>속성(Attributes)</p>\n<br><p id='37' data-category='paragraph' style='font-size:18px'>엘리먼트(Elements)</p>\n<h1 id='38' style='font-size:22px'>태그(Tags)</h1>\n<br><header id='39' style='font-size:16px'>크롤링 기본</header>\n<h1 id='40' style='font-size:14px'>: HTML 엘리먼트의 시작과 끝을 지정하기 위한 표현</h1>\n<h1 id='41' style='font-size:18px'>구성</h1>\n<p id='42' data-category='paragraph' style='font-size:14px'>- 시작 태그 : 각 괄호 안 태그 이름 <태그이름><br>- 종료 태그 : 각 괄호 안 슬래시로 시작하는 태그 이름 </태그이름></p>\n<figure id='43'><img style='font-size:20px' alt=\"시작태그 내용 종료태그\n<tagname> 환영합니다27기 </tagname>\" data-coord=\"top-left:(787,946); bottom-right:(2210,1409)\" /></figure>\n<h1 id='44' style='font-size:22px'>속성(Attributes)</h1>\n<br><header id='45' style='font-size:18px'>크롤링기본</header>\n<h1 id='46' style='font-size:14px'>: HTML 문서에서 엘리먼트에 추가적인 정보를 넣을 때 사용되는 요소</h1>\n<h1 id='47' style='font-size:18px'>표현 방식: <속성이름=\"속성값\"></h1>\n<h1 id='48' style='font-size:14px'>속성이름</h1>\n<br><h1 id='49' style='font-size:16px'>속성값</h1>\n<p id='50' data-category='paragraph' style='font-size:20px'><tagname attr= \"value\"> 환영합니다27기 </tagname></p>\n<h1 id='51' style='font-size:22px'>엘리먼트 (Elements)</h1>\n<br><header id='52' style='font-size:16px'>크롤링기본</header>\n<h1 id='53' style='font-size:14px'>: HTML을 구성하는 객체, 스타트 태그부터 끝마침 태그까지를 모두 포함하는 것<br>= HTML은 엘리먼트들의 집합임</h1>\n<h1 id='54' style='font-size:20px'>구성</h1>\n<br><p id='55' data-category='list' style='font-size:14px'>1. 시작태그 (Start tag) (2. 속성이름 3. 속성값)<br>4. 내용 (Content)<br>5. 종료 태그</p>\n<figure id='56'><img style='font-size:18px' alt=\"시작태그 내용 종료태그\n<p attr= 'value'>와빅최고짱짱</p>\n속성이름 속성값\" data-coord=\"top-left:(740,1016); bottom-right:(2219,1665)\" /></figure>\n<h1 id='57' style='font-size:22px'>HTML 문서의 예</h1>\n<br><header id='58' style='font-size:18px'>크롤링기본</header>\n<figure id='59'><img style='font-size:14px' alt=\"<!DOCTYPE html>\n<html>\n<body>\n<h1> Welcome to ybigta</h1>\n<p>Crawling is useful <\\p>\n</body>\n</html>\" data-coord=\"top-left:(276,516); bottom-right:(1534,1377)\" /></figure>\n<br><h1 id='60' style='font-size:14px'>!DOCTYPE는 문서 종류의 정의<br>-html 타입의 문서이다</h1>\n<br><h1 id='61' style='font-size:14px'><html>과 </html> 사이에</h1>\n<br><h1 id='62' style='font-size:16px'>웹페이지 전체 내용이 들어감</h1>\n<br><h1 id='63' style='font-size:20px'><body>와 </body> 사이에는</h1>\n<br><p id='64' data-category='paragraph' style='font-size:14px'>그 중 보이는 내용이 들어감</p>\n<br><p id='65' data-category='paragraph' style='font-size:14px'>✓ <h1>와 </h1> 사이에는 제목 작성</p>\n<br><p id='66' data-category='paragraph' style='font-size:18px'><p>와 </p> 사이에는 문단 작성</p>\n<header id='67' style='font-size:16px'>크롤링기본</header>\n<br><h1 id='68' style='font-size:22px'>CSS</h1>\n<h1 id='69' style='font-size:20px'>Cascading Style Sheets</h1>\n<br><p id='70' data-category='paragraph' style='font-size:16px'>: 사용자에게 문서를 표시하는 방법을 지정하는 언어<br>쉽게 말하면 HTML 엘리먼트들이 브라우저에 그려지는 스타일 및 레이아웃을 지정</p>\n<h1 id='71' style='font-size:18px'>문법 (CSS는 규칙 기반의 언어이기 때문에 문법이 존재함)</h1>\n<h1 id='72' style='font-size:14px'>- 셀렉터(Selectors) : 스타일을 지정할 엘리먼트를 선택하기 위한 방법</h1>\n<br><h1 id='73' style='font-size:16px'>(태그 종류, id, class로 선택할 수 있음)</h1>\n<br><h1 id='74' style='font-size:16px'>- 내용 정의(Declarations)</h1>\n<p id='75' data-category='paragraph' style='font-size:20px'>p { color:red; text-align:center;}</p>\n<figure id='76'><img style='font-size:14px' alt=\"셀렉터 내용 정의\" data-coord=\"top-left:(815,1496); bottom-right:(2163,1671)\" /></figure>\n<h1 id='77' style='font-size:22px'>태그 셀렉터</h1>\n<br><header id='78' style='font-size:14px'>크롤링 기 본</header>\n<p id='79' data-category='list' style='font-size:16px'>- 같은 종류의 엘리먼트를 모두 선택<br>一 태그 이름만 쓰면 됨</p>\n<br><h1 id='80' style='font-size:20px'>예시</h1>\n<br><h1 id='81' style='font-size:18px'>p 태그 엘리먼트들을 모두 선택하여<br>해당 엘리먼트들의 텍스트를 중앙에 배치하고 색상은 빨강으로 설정</h1>\n<p id='82' data-category='paragraph' style='font-size:14px'>CSS</p>\n<p id='83' data-category='paragraph' style='font-size:16px'>p {</p>\n<br><p id='84' data-category='paragraph' style='font-size:16px'>text-align: center;<br>color : red;</p>\n<br><p id='85' data-category='paragraph' style='font-size:16px'>}</p>\n<br><p id='86' data-category='paragraph' style='font-size:14px'>html</p>\n<p id='87' data-category='paragraph' style='font-size:20px'><p>Hello, </p><br><p> Ybigta 27th! </p></p>\n<h1 id='88' style='font-size:22px'>id 셀렉터</h1>\n<br><header id='89' style='font-size:18px'>크롤링기본</header>\n<p id='90' data-category='list' style='font-size:18px'>- 특정 아이디를 가진 하나의 엘리먼트를 선택<br>-\"#\" 다음 아이디를 사용하여 표현</p>\n<br><h1 id='91' style='font-size:20px'>예시</h1>\n<br><h1 id='92' style='font-size:20px'>Id=\"heading1\"인 엘리먼트를 선택하여<br>해당 엘리먼트의 텍스트를 중앙에 배치하고 색상은 빨강으로 설정</h1>\n<p id='93' data-category='paragraph' style='font-size:14px'>CSS</p>\n<br><p id='94' data-category='paragraph' style='font-size:14px'>html</p>\n<p id='95' data-category='paragraph' style='font-size:16px'>#heading1 {<br>text-align: center;<br>color : red;</p>\n<br><p id='96' data-category='paragraph' style='font-size:16px'><h1 id=\"heading1\">Hello, </h1><br><h1 id=\"heading2\">Ybigta 27 th! </h1></p>\n<br><p id='97' data-category='paragraph' style='font-size:18px'>}</p>\n<h1 id='98' style='font-size:22px'>클래스 셀렉터</h1>\n<br><header id='99' style='font-size:18px'>크롤링기본</header>\n<p id='100' data-category='list' style='font-size:18px'>- 특정 클래스를 가진 여러개의 엘리먼트들을 선택<br>\" 다음 클래스 이름을 사용하여 표현</p>\n<br><h1 id='101' style='font-size:20px'>예시</h1>\n<br><h1 id='102' style='font-size:20px'>class=\"main\"인 엘리먼트들을 모두 선택하여<br>해당 엘리먼트들의 텍스트를 중앙에 배치하고 색상은 빨강으로 설정</h1>\n<p id='103' data-category='paragraph' style='font-size:14px'>CSS</p>\n<br><p id='104' data-category='paragraph' style='font-size:14px'>html</p>\n<p id='105' data-category='paragraph' style='font-size:16px'>main {<br>text-align:center;<br>color : red;<br>}</p>\n<br><figure id='106'><img style='font-size:16px' alt=\"<h1 id='heading1' class-'main'>Hello, </h1>\n<h1 id='heading2' class-'main'>Ybigta 27th! </h1>\n<p class='banner'>today session is. </p>\" data-coord=\"top-left:(1143,1077); bottom-right:(2546,1536)\" /></figure>\n<header id='107' style='font-size:20px'>크롤링기본</header>\n<br><h1 id='108' style='font-size:22px'>REQUESTS</h1>\n<h1 id='109' style='font-size:16px'>✓ 클라이언트 ↔ 서버 통신 원리</h1>\n<h1 id='110' style='font-size:20px'>GET 요청</h1>\n<p id='111' data-category='list' style='font-size:16px'>● 페이지 열람, 검색 등 읽기 작업<br>● 크롤링의 핵심</p>\n<h1 id='112' style='font-size:14px'>import requests</h1>\n<p id='113' data-category='paragraph' style='font-size:14px'>res = requests · get <\"https://example.com\"><br>print (res.text)</p>\n<br><h1 id='114' style='font-size:20px'>POST 요청</h1>\n<p id='115' data-category='list' style='font-size:16px'>● 로그인, 데이터 제출 등 쓰기 작업<br>● Selenium으로 주로 대응</p>\n<p id='116' data-category='paragraph' style='font-size:18px'>✓ 응답코드<br>200: 정상, 403/404: 차단 ·오류 체크 중요</p>\n<h1 id='117' style='font-size:14px'>파이썬 크롤링 라이브러리</h1>\n<h1 id='118' style='font-size:20px'>Beautifulloup</h1>\n<br><header id='119' style='font-size:18px'>파이썬 크롤링 라이브러리</header>\n<h1 id='120' style='font-size:16px'>Html과 xml 문서를 parsing하기 위한 패키지로<br>html에서 데이터를 추출하는 데 유용한 분석 트리를 생성하는 기능을 제공</h1>\n<h1 id='121' style='font-size:14px'>- 파이썬 내장 모듈인 requests나 urllib을 이용해 HTML을 다운 받고,<br>beautifulsoup 으로 데이터를 추출함</h1>\n<p id='122' data-category='paragraph' style='font-size:16px'>간단한 코드, 빠른 속도</p>\n<p id='123' data-category='paragraph' style='font-size:18px'>동적 페이지에서의 크롤링이 까다로움</p>\n<h1 id='124' style='font-size:20px'>Se Selenium</h1>\n<br><p id='125' data-category='paragraph' style='font-size:18px'>파이썬 크롤링 라이브러리</p>\n<h1 id='126' style='font-size:16px'>웹 브라우저를 이용하여 웹 사이트에서의 자동 제어 기능을 제공</h1>\n<h1 id='127' style='font-size:14px'>- Chrome 브라우저를 사용하며<br>실제 페이지에서 키보드와 마우스로 수행하는 동작을 자동화함</h1>\n<h1 id='128' style='font-size:16px'>버튼 클릭, 스크롤 조작 등등이 가능함</h1>\n<figure id='129'><img alt=\"\" data-coord=\"top-left:(1200,1242); bottom-right:(1265,1311)\" /></figure>\n<br><p id='130' data-category='paragraph' style='font-size:18px'>복잡한 코드, 느린 속도</p>\n<header id='131' style='font-size:14px'>파이썬 크롤링 라이브러리</header>\n<br><h1 id='132' style='font-size:20px'>BeautifulSoup VS Selenium</h1>\n<table id='133' style='font-size:16px'><thead><tr><td>Beautifulloup</td><td>Se Selenium</td></tr></thead><tbody><tr><td>soup.select_one()</td><td>driverfind_element(ByCSS_SELECTOR)</td></tr><tr><td>soup.select()</td><td>driverfind_elements(By/CSS_SELECTOR)</td></tr><tr><td>Tag</td><td>WebElement</td></tr><tr><td>tag.select()</td><td>web_elementind_elelementsiByCSS_SELECTOR)</td></tr><tr><td>tag.get_text()</td><td>web_element.text</td></tr><tr><td>tag.strings</td><td></td></tr><tr><td>tag.stripped_strings</td><td></td></tr><tr><td>tag['attr']</td><td>web_element.get_attribute('attr')</td></tr></tbody></table>\n<h1 id='134' style='font-size:14px'>크롤링 윤리</h1>\n<header id='135' style='font-size:18px'>크롤링 윤리</header>\n<br><h1 id='136' style='font-size:22px'>크롤링 윤리 법적 고려</h1>\n<h1 id='137' style='font-size:18px'>robots.txt 확인 필수</h1>\n<br><p id='138' data-category='list' style='font-size:14px'>● 사이트가 크롤링을 허용하는지 여부를 명시해 놓은 파일<br>● 주소 뒤에 /robots.txt 붙여 확인 가능 (예: https://www.naver.com/robots.tkd)</p>\n<h1 id='139' style='font-size:18px'>사이트 부하 방지</h1>\n<p id='140' data-category='list' style='font-size:14px'>● 요청 간 시간 간격 주기: time.sleep(1~3초) 권장<br>● 너무 많은 페이지를 짧은 시간에 긁지 않기<br>● User-Agent 설정도 필요 시 고려</p>\n<p id='141' data-category='paragraph' style='font-size:20px'>법적 이슈 주의</p>\n<br><p id='142' data-category='list' style='font-size:14px'>● 개인정보, 유료 서비스 크롤링 금지<br>● 학습·비영리 목적으로 제한적 사용 권장</p>\n<p id='143' data-category='paragraph' style='font-size:16px'>\"개인적인 과제라고 해도... 캡차(CAPTCHA) 같은 보안 기능이 있는 사이트를 고르면 정말 고생합니다!<br>자동화 탐지, 아이피 차단, 리디렉션 등 예상치 못한 장애물이 많아요!</p>\n<h1 id='144' style='font-size:14px'>실습</h1>\n<header id='145' style='font-size:18px'>크롤링 실습</header>\n<br><h1 id='146' style='font-size:22px'>BeautifulSoup 실습</h1>\n<br><h1 id='147' style='font-size:20px'>네이버 금융 주요뉴스 헤드라인 크롤링</h1>\n<p id='148' data-category='paragraph' style='font-size:14px'>� finance. naver com</p>\n<br><p id='149' data-category='paragraph' style='font-size:14px'>새로운 Chrome 사용 가능</p>\n<h1 id='150' style='font-size:18px'>개발자창을 열어서 엘리먼트 탐색<br>F12 / Command+option+l</h1>\n<br><table id='151' style='font-size:14px'><thead></thead><tbody><tr><td>品 C 쿠팡! S G마켓 □ 모든 북마크</td></tr><tr><td>ⓘ DevTools is now available in Korean! N pay 증권 종목명·지수명 입력 language Switch DevTools to □ Elements Console Sources Network > > 1 x</td></tr><tr><td>Always match Chrome's Korean x Don't show again 주기 � 구비즈시 헤이주시 시작지표 리너치 뉴스 MY <div id=\"u_skip\">ⓦ </div></td></tr><tr><td>a 354x 22 Color #333333 <div id=\"header\"> </div> Font 14px \"Apple SD Gothic Neo , 돋움, Dot... 최근조회종목이 없습니다. <div id=\"wrap\"> ACCESSIBILITY <hr> <div id=\"start\" class=\"blind\"> </div> Name 2차전지 올해도 우울... 실적·목표가 줄하락 <dl class=\"blind\">ⓦ </dl> Role link <div class=\"home_spot view_off\"> ··· </div> Keyboard-focusable ▶ 더보기 오늘의증시 실시간 202 <div id=\"container\" class=\" home\"> <div id=\"content\"> 2차전지 올해도 우울 실적·목표가 줄하락 ▼ <div class=\"article\"> 코스피 2,489.56 26.22 1 <div class=\"section\"> 개인 \"반등 ( 시키 ��� 기관 \"더 오른다\" ▼ <div class=\" news_area replaceNewsLink\"> 코스피지수 상세보기 <div class=\"section_strategy\"> 고려아연 집중투표제' 도입 놓고 국내외 의결권 자문사도 '온도··· <h2 class=\"h_strategy\"> </h2> '속 빈 강정 될라... 주주 울리는 유상증자 급증 <figcaption><p>Chart Type: line</p></figcaption><table><thead><tr><td></td><td>black_line</td><td>gray_line</td></tr></thead><tbody><tr><td>item_01</td><td>50Not specified</td><td>50Not specified</td></tr></tbody></table> <ul> 탄핵정국 속 임기 끝나가는 자본시장 큰손··· 차기CIO에 촉각 <span> 잘 나가는 미국의 고민[투자의 창] <a hof-Wings://w.wee.ca.com/res/easertife-014,06094. 955\" onclick=\"clickcr(this, 'tdn. list , 014_0005294955 , 10:00 12:00 14:00 I 0 , event) ;\" target=\" _blank\">2차전지 올해도 우울... 실적·목표가 줄하 개인 +7,486 외국인 -8,717 기관 +26( html Styles Computed Layout Event Listeners DOM Breakpoints Properties TOP종목 ▶ 더보기 ↑ 2 ▲ 262 42 ▼ 640 ▽ Filter :hov .cls 부 거래상위 상승 I 하락 I 시가총액 상위 ··· Console AI assistance 入 What's new x x 코스닥 708.21 9.68 Highlights from the Chrome 131 update 삼성 인버스 2X WTI원··· 80 ▼ 6 -6.98% コ � #L300 330 31 34</td></tr></tbody></table>\n<header id='152' style='font-size:20px'>크롤링 실습</header>\n<br><h1 id='153' style='font-size:22px'>BeautifulSoup + Selenium 실습</h1>\n<br><h1 id='154' style='font-size:20px'>네이버 토요일 웹툰 제목, 작가, 별점 크롤링</h1>\n<p id='155' data-category='paragraph' style='font-size:16px'>� comic.naver.com/webroon?tab=sat</p>\n<br><p id='156' data-category='paragraph' style='font-size:16px'>새로운 Chrome 사용 가능</p>\n<br><p id='157' data-category='paragraph' style='font-size:16px'>品 쿠팡! G마켓</p>\n<br><p id='158' data-category='paragraph' style='font-size:14px'>모든 북마크</p>\n<p id='159' data-category='paragraph' style='font-size:18px'>전체 토요웹툰</p>\n<br><table id='160' style='font-size:16px'><thead></thead><tbody><tr><td><figure><img alt=\"개꿈\" data-coord=\"top-left:(204,684); bottom-right:(504,967)\" /></figure></td><td><figure><img alt=\"신작\n자기 사\" data-coord=\"top-left:(520,686); bottom-right:(823,1071)\" /></figure></td><td><figure><img alt=\"낢이 사는\n�\n이야기 �\nn n\" data-coord=\"top-left:(833,684); bottom-right:(1139,1079)\" /></figure></td><td><figure><img alt=\"하루\" data-coord=\"top-left:(1140,680); bottom-right:(1452,1080)\" /></figure></td><td><figure><img alt=\"마도전쟁\" data-coord=\"top-left:(1466,686); bottom-right:(1762,969)\" /></figure></td></tr><tr><td><figure><img alt=\"\" data-coord=\"top-left:(201,981); bottom-right:(504,1073)\" /></figure></td><td></td><td></td><td></td><td><figure><img alt=\"\" data-coord=\"top-left:(1461,982); bottom-right:(1763,1074)\" /></figure></td></tr><tr><td></td><td>자기 자? 혜룡</td><td>닮이 사는 이야기 - 계속...</td><td></td><td></td></tr><tr><td>개꿈 신송림 ★9.93</td><td>/ 영영 ★ 9.92</td><td>서나래 9.96</td><td>아수라 류기운 / 문정후 ★ 9.94</td><td>마도전생기 포스스튜디오 / codezero ★9.90</td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td><figure><img alt=\"�배드로\" data-coord=\"top-left:(197,1252); bottom-right:(505,1634)\" /></figure></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td><figure><img alt=\"시든 꽃에\n눈물을\" data-coord=\"top-left:(519,1248); bottom-right:(817,1630)\" /></figure></td><td><figure><img alt=\"쌉초의난\" data-coord=\"top-left:(830,1245); bottom-right:(1136,1633)\" /></figure></td><td><figure><img alt=\"군림\" data-coord=\"top-left:(1146,1243); bottom-right:(1453,1633)\" /></figure></td><td><figure><img alt=\"99\n강화\n나무\n몽둥이\" data-coord=\"top-left:(1463,1243); bottom-right:(1764,1629)\" /></figure></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td>킬러 배드로</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td>시든 꽃에 눈물을</td><td>쌉초의 난</td><td>절대군림</td><td>99강화나무몽둥이</td></tr></tbody></table>\n<br><h1 id='161' style='font-size:18px'>실시간 인기웹툰</h1>\n<br><p id='162' data-category='paragraph' style='font-size:14px'>전체 · 여성 · 남성</p>\n<figure id='163'><img style='font-size:14px' alt=\"신화교\n귀속아이템을\n손에 넣었다.\" data-coord=\"top-left:(1852,705); bottom-right:(1967,863)\" /></figure>\n<figure id='164'><img style='font-size:14px' alt=\"외모지상주의\" data-coord=\"top-left:(1853,879); bottom-right:(1967,1027)\" /></figure>\n<br><figure id='165'><img style='font-size:16px' alt=\"참교육\" data-coord=\"top-left:(1853,1050); bottom-right:(1966,1193)\" /></figure>\n<br><p id='166' data-category='paragraph' style='font-size:16px'>채용택 / 한가람</p>\n<br><h1 id='167' style='font-size:20px'>개발자창을 열어서 엘리먼트 탐색<br>UP F12  Command+option+l</h1>\n<figure id='168'><img style='font-size:16px' alt=\"별난직담\n전국투어\" data-coord=\"top-left:(1853,1215); bottom-right:(1967,1362)\" /></figure>\n<br><figure id='169'><img style='font-size:14px' alt=\"퀘스트\n지상주의\" data-coord=\"top-left:(1854,1380); bottom-right:(1968,1530)\" /></figure>\n<br><p id='170' data-category='paragraph' style='font-size:16px'>퀘스트지상주의<br>박만사, 유누니 / 박만사, 태완</p>\n<h1 id='171' style='font-size:18px'>실시간 신작랭킹</h1>\n<br><p id='172' data-category='paragraph' style='font-size:14px'>인기순 · 업데이트순 · 조회순 · 별점순</p>\n<p id='173' data-category='paragraph' style='font-size:16px'>1</p>\n<br><p id='174' data-category='paragraph' style='font-size:16px'>UP 신화급 귀속 아이템을 손에 ...<br>정선율 / 헤스</p>\n<h1 id='175' style='font-size:16px'>외모지상주의</h1>\n<br><p id='176' data-category='paragraph' style='font-size:16px'>2</p>\n<br><p id='177' data-category='paragraph' style='font-size:16px'>박태준</p>\n<p id='178' data-category='paragraph' style='font-size:16px'>3</p>\n<p id='179' data-category='paragraph' style='font-size:18px'>4</p>\n<br><p id='180' data-category='paragraph' style='font-size:14px'>UP 별난식당<br>HO9</p>\n<p id='181' data-category='paragraph' style='font-size:16px'>5</p>\n<br><p id='182' data-category='paragraph' style='font-size:14px'>1</p>\n<p id='183' data-category='paragraph' style='font-size:14px'>전체 · 여성 · 남성</p>\n<h1 id='184' style='font-size:14px'>과제 안내</h1>\n<h1 id='185' style='font-size:22px'>협업팁</h1>\n<p id='186' data-category='paragraph' style='font-size:16px'>연락은 제때제때!<br>단순하지만 가장 기본이 되는 약속<br>지연 없는 소통으로 팀 전체 흐름 유지</p>\n<h1 id='187' style='font-size:20px'>소통의 기본, \"한번에 명확하게\"</h1>\n<br><p id='188' data-category='list' style='font-size:14px'>● 같은 내용 여러 번 공지하지 않도록 정확한 커뮤니케이션<br>· 건의사항은 소모임 아닌 팀장에게 공식적으로 전달</p>\n<br><p id='189' data-category='paragraph' style='font-size:20px'>이지</p>\n<br><p id='190' data-category='paragraph' style='font-size:14px'>시간 = 모두의 자산입니다</p>\n<p id='191' data-category='list' style='font-size:14px'>● 약속한 시간은 꼭 지키기!<br>· → 1명이 10분 늦으면, 4명이면 총 40분 낭비<br>● 벌칙 설정 ex) 늦으면 커피 인원수대로</p>\n<p id='192' data-category='paragraph' style='font-size:22px'>우제</p>\n<br><p id='193' data-category='paragraph' style='font-size:16px'>역할 분담 & 회의 준비 철저히<br>확실한 R&R과 진행 상황의 투명한 공유<br>회의 전에 논의할 주제 사전 정리 → 회의 효율 ↑</p>\n<br><p id='194' data-category='paragraph' style='font-size:16px'>노션 데이터베이스 기능 잘 쓰기<br>속성 필터링으로 정리된 정보 구조화<br>페이지 갤러리 등 다양한 시각적 표현 활용</p>\n<p id='195' data-category='paragraph' style='font-size:16px'>노션으로 회의력 높이기 + 생산적 소통!<br>회의 전 agenda 설정, 회의록 필수<br>노션 템플릿 적극 활용, 익명 피드백도 고려<br>시각 자료(그림, 도표)를 통한 소통 → 이해도 상승<br>\"핑프는 NO! 반복 질문 시 직설적 표현도 필요\"</p>\n<br><h1 id='196' style='font-size:20px'>서영</h1>\n<br><h1 id='197' style='font-size:20px'>팀장이 할 일</h1>\n<br><p id='198' data-category='paragraph' style='font-size:16px'>전체 타임라인 rough하게 제시<br>회의 참여 못한 인원 follow-up 관리</p>\n<h1 id='199' style='font-size:20px'>태도와 주도성</h1>\n<br><p id='200' data-category='paragraph' style='font-size:18px'>[팀장]</p>\n<p id='201' data-category='paragraph' style='font-size:20px'>민지</p>\n<br><p id='202' data-category='list' style='font-size:14px'>· 과제 나오자마자 전체 윤곽 → 역할 분배<br>· 데드라인 설정 + 주기적 트래킹<br>● 직설적으로 말하되 존중을 잃지 않기</p>\n<br><p id='203' data-category='paragraph' style='font-size:18px'>[팀원]</p>\n<br><p id='204' data-category='list' style='font-size:14px'>● 진행상황 투명하게 공유, 단순한 예스맨은 NO<br>· 주도적으로 참여, 필요한 일은 제안해서 맡기</p>\n<br><header id='205' style='font-size:22px'>참고자료</header>\n<h1 id='206' style='font-size:18px'>정기 대면 회의 시간 고정하기<br>벼락치기 NO! 미리미리 준비해야 퀄리티가 나온다<br>회의 리듬을 정기적으로 유지하자</h1>\n<br><h1 id='207' style='font-size:22px'>현운</h1>\n<br><h1 id='208' style='font-size:22px'>재민</h1>\n<h1 id='209' style='font-size:20px'>태연</h1>\n<h1 id='210' style='font-size:14px'>감사합니다!</h1>",
    "1vo2fpRp76hpvLnEsBQleXUoh5OnPFV_o": "<h1 id='0' style='font-size:22px'>[2회차] WEB 과제</h1>\n<h1 id='1' style='font-size:18px'>발제자: 김정인</h1>\n<h1 id='2' style='font-size:22px'>기간</h1>\n<br><p id='3' data-category='paragraph' style='font-size:18px'>과제 마감: 7월 17일 23시 59분<br>지각 제출: 7월 18일 23시 59분</p>\n<h1 id='4' style='font-size:22px'>Intro</h1>\n<br><h1 id='5' style='font-size:18px'>이번 과제는 협업 과제입니다.</h1>\n<p id='6' data-category='paragraph' style='font-size:14px'>FastAPI 와 MVC 패턴을 기반으로 사용자 로그인 기능 을 구현합니다.</p>\n<figure id='7'><img alt=\"\" data-coord=\"top-left:(170,715); bottom-right:(1121,920)\" /></figure>\n<h1 id='8' style='font-size:20px'>💡</h1>\n<br><h1 id='9' style='font-size:20px'>MVC 패턴 요약</h1>\n<br><table id='10' style='font-size:16px'><thead></thead><tbody><tr><td>구성요소</td><td>설명</td></tr><tr><td>Model</td><td>DB와 상호작용, 데이터를 저장 및 처리</td></tr><tr><td>View</td><td>사용자에게 보여지는 화면 (HTML 등)</td></tr><tr><td>Controller</td><td>요청을 받아 Model과 View를 연결하고 가공함</td></tr></tbody></table>\n<h1 id='11' style='font-size:20px'>Spring 기준</h1>\n<p id='12' data-category='list' style='font-size:16px'>Controller  Service  Repository 구조</p>\n<p id='13' data-category='list' style='font-size:18px'>DTO : 계층 간 데이터 전달용 객체</p>\n<p id='14' data-category='paragraph' style='font-size:20px'>FastAPI에서는</p>\n<p id='15' data-category='paragraph' style='font-size:16px'>Controller : user_router.py</p>\n<footer id='16' style='font-size:14px'>[2회차] WEB 과제</footer>\n<br><footer id='17' style='font-size:14px'>1</footer>\n<p id='18' data-category='list' style='font-size:18px'>Service : user_service.py</p>\n<p id='19' data-category='list' style='font-size:18px'>Repository : user_repository.py</p>\n<p id='20' data-category='list' style='font-size:18px'>DTO : user_schema.py , base_response.py</p>\n<h1 id='21' style='font-size:22px'>명세</h1>\n<br><h1 id='22' style='font-size:18px'>다음 3가지 항목을 구현해야 합니다.</h1>\n<p id='23' data-category='list' style='font-size:18px'> index.html 꾸미기 (시각적 요소 추가)</p>\n<p id='24' data-category='list' style='font-size:16px'> user_service.py 작성</p>\n<p id='25' data-category='list' style='font-size:16px'> user_router.py 작성</p>\n<p id='26' data-category='paragraph' style='font-size:20px'>app 폴더 내의 ##TODO 와 index.html 외에는 수정 금지</p>\n<p id='27' data-category='paragraph' style='font-size:20px'>tests/ 폴더 수정 금지</p>\n<h1 id='28' style='font-size:22px'>API 명세</h1>\n<h1 id='29' style='font-size:16px'>Base URL: http://localhost:8000/api/user</h1>\n<h1 id='30' style='font-size:20px'>1. Login User</h1>\n<h1 id='31' style='font-size:16px'>Endpoint  POST /login</h1>\n<h1 id='32' style='font-size:20px'>Request Body</h1>\n<p id='33' data-category='paragraph' style='font-size:18px'>{<br>\"email\": \"user@example.com\",<br>\"password\": \"password123\"</p>\n<h1 id='34' style='font-size:18px'>Response: 200 OK</h1>\n<p id='35' data-category='paragraph' style='font-size:18px'>{<br>\"status\": \"success\",<br>\"data\": {<br>\"email\": \"user@example.com\",</p>\n<footer id='36' style='font-size:14px'>[2회차] WEB 과제</footer>\n<br><footer id='37' style='font-size:14px'>2</footer>\n<br><p id='38' data-category='paragraph' style='font-size:20px'>✨</p>\n<br><p id='39' data-category='paragraph' style='font-size:20px'>🧪</p>\n<p id='40' data-category='paragraph' style='font-size:18px'>}</p>\n<p id='41' data-category='paragraph' style='font-size:18px'>\"password\": \"password123\",<br>\"username\": \"User123\"</p>\n<br><h1 id='42' style='font-size:18px'>},<br>\"message\": \"Login Success.\"</h1>\n<br><h1 id='43' style='font-size:18px'>}</h1>\n<h1 id='44' style='font-size:22px'>Errors</h1>\n<table id='45' style='font-size:16px'><thead><tr><td>Status</td><td>메시지</td></tr></thead><tbody><tr><td>400 이메일을 찾지 못한 경우</td><td>\"detail\": \"User not Found.\"</td></tr><tr><td>400 비밀번호가 틀릴 경우</td><td>\"detail\": \"Invalid PW\"</td></tr></tbody></table>\n<h1 id='46' style='font-size:22px'>2. Register User</h1>\n<p id='47' data-category='paragraph' style='font-size:18px'>Endpoint  POST /register</p>\n<h1 id='48' style='font-size:22px'>Request Body</h1>\n<p id='49' data-category='paragraph' style='font-size:18px'>{</p>\n<br><p id='50' data-category='paragraph' style='font-size:18px'>\"email\": \"newuser@example.com\",<br>\"password\": \"password123\",<br>\"username\": \"NewUser\"<br>}</p>\n<h1 id='51' style='font-size:20px'>Response: 201 Created</h1>\n<p id='52' data-category='paragraph' style='font-size:18px'>{<br>\"status\": \"success\",<br>\"data\": {<br>\"email\": \"newuser@example.com\",<br>\"password\": \"password123\",<br>\"username\": \"NewUser\"<br>},<br>\"message\": \"User registeration success.\"<br>}</p>\n<p id='53' data-category='paragraph' style='font-size:22px'>Errors</p>\n<footer id='54' style='font-size:14px'>[2회차] WEB 과제</footer>\n<br><footer id='55' style='font-size:14px'>3</footer>\n<table id='56' style='font-size:16px'><thead><tr><td>Status</td><td>메시지</td></tr></thead><tbody><tr><td>400 이메일이 이미 존재할 경우</td><td>\"detail\": \"User already Exists.\"</td></tr></tbody></table>\n<h1 id='57' style='font-size:22px'>3. Delete User</h1>\n<p id='58' data-category='paragraph' style='font-size:18px'>Endpoint  DELETE /delete</p>\n<h1 id='59' style='font-size:22px'>Request Body</h1>\n<p id='60' data-category='paragraph' style='font-size:18px'>{<br>\"email\": \"user@example.com\"</p>\n<br><p id='61' data-category='paragraph' style='font-size:18px'>}</p>\n<h1 id='62' style='font-size:20px'>Response: 200 OK</h1>\n<p id='63' data-category='paragraph' style='font-size:18px'>{</p>\n<br><p id='64' data-category='paragraph' style='font-size:18px'>\"status\": \"success\",<br>\"data\": {<br>\"email\": \"user@example.com\",<br>\"password\": \"password123\",<br>\"username\": \"User123\"<br>},<br>\"message\": \"User Deletion Success.\"</p>\n<br><p id='65' data-category='paragraph' style='font-size:18px'>}</p>\n<h1 id='66' style='font-size:22px'>Errors</h1>\n<table id='67' style='font-size:16px'><thead><tr><td>Status</td><td>메시지</td></tr></thead><tbody><tr><td>404 이메일을 찾을 수 없는 경우</td><td>\"detail\": \"User not Found.\"</td></tr></tbody></table>\n<h1 id='68' style='font-size:22px'>4. Update Password</h1>\n<p id='69' data-category='paragraph' style='font-size:18px'>Endpoint  PUT /update-password</p>\n<h1 id='70' style='font-size:22px'>Request Body</h1>\n<p id='71' data-category='paragraph' style='font-size:18px'>{</p>\n<br><p id='72' data-category='paragraph' style='font-size:18px'>\"email\": \"user@example.com\",</p>\n<footer id='73' style='font-size:14px'>[2회차] WEB 과제</footer>\n<br><footer id='74' style='font-size:14px'>4</footer>\n<p id='75' data-category='paragraph' style='font-size:18px'>\"new_password\": \"newpassword123\"</p>\n<br><p id='76' data-category='paragraph' style='font-size:18px'>}</p>\n<h1 id='77' style='font-size:20px'>Response: 200 OK</h1>\n<p id='78' data-category='paragraph' style='font-size:18px'>json<br>복사편집</p>\n<br><p id='79' data-category='paragraph' style='font-size:18px'>{<br>\"status\": \"success\",<br>\"data\": {<br>\"email\": \"user@example.com\",<br>\"password\": \"newpassword123\",<br>\"username\": \"User123\"<br>},<br>\"message\": \"User password update success.\"</p>\n<br><p id='80' data-category='paragraph' style='font-size:18px'>}</p>\n<h1 id='81' style='font-size:20px'>Errors</h1>\n<table id='82' style='font-size:16px'><thead><tr><td>Status</td><td>메시지</td></tr></thead><tbody><tr><td>404 이메일을 찾을 수 없는 경우</td><td>\"detail\": \"User not Found\"</td></tr></tbody></table>\n<br><h1 id='83' style='font-size:22px'>참고</h1>\n<br><p id='84' data-category='paragraph' style='font-size:18px'>구현한 함수에 Docstring 작성</p>\n<br><p id='85' data-category='paragraph' style='font-size:18px'>Typing Annotation 필수</p>\n<br><p id='86' data-category='paragraph' style='font-size:16px'>에러는 Service Layer 에서 발생시켜야 함 !</p>\n<h1 id='87' style='font-size:22px'>제출 방법</h1>\n<h1 id='88' style='font-size:20px'>제출 구조:</h1>\n<p id='89' data-category='paragraph' style='font-size:18px'>YBIGTA_newbie_team_project/<br>├── requirements.txt<br>├── app/<br>│ ├── __init__.py</p>\n<footer id='90' style='font-size:14px'>[2회차] WEB 과제</footer>\n<br><footer id='91' style='font-size:14px'>5</footer>\n<h1 id='92' style='font-size:22px'>채점 기준</h1>\n<p id='93' data-category='paragraph' style='font-size:16px'>tests/test_user_service.py , tests/test_user_router.py</p>\n<p id='94' data-category='paragraph' style='font-size:18px'>pytest , mypy 테스트 모두 통과해야 제출 인정</p>\n<p id='95' data-category='paragraph' style='font-size:18px'>index.html 을 조금이라도 꾸몄다면 제출</p>\n<br><p id='96' data-category='paragraph' style='font-size:20px'>테스트 코드를 제공해드렸기 때문에 모두 통과해야 제출로 인정<br>통과하지 못하면 미흡 !<br>제출하지 않으면 미제출입니다</p>\n<footer id='97' style='font-size:14px'>[2회차] WEB 과제</footer>\n<br><footer id='98' style='font-size:14px'>6</footer>\n<br><table id='99' style='font-size:20px'><thead></thead><tbody><tr><td>│ ├── main.py │ ├── config.py │ ├── dependencies.py │ ├── static/ │ │ └── index.html ← 꾸미기 │ ├── responses/ │ │ ├── __init__.py │ │ └── base_response.py │ ├── user/ │ │ ├── __init__.py │ │ ├── user_repository.py │ │ ├── user_router.py ← 구현 │ │ ├── user_schema.py │ │ └── user_service.py ← 구현 ├── database/ │ ├── __init__.py │ └── users.json ├── tests/ │ ├── __init__.py │ ├── test_user_router.py │ └── test_user_service.py | ├ ── . . .</td></tr></tbody></table>",
    "1Z9mg1I_30cZICDAAQgafDDw4bjk7_JkD": "https://github.com/junho\n\nbaek/WebSession\n\nhttps://m.sports.naver.com/wfootball/article/311/0001815065\n\nhttps://raw.githubusercontent.com/YBIGTA/.github/master/profile/logo.png",
    "1OdhqhTYqPuVYmZktl1-vSWznXV1B6aN2": "<header id='0' style='font-size:14px'>2025-2 YBIGTA</header>\n<h1 id='1' style='font-size:20px'>WEB</h1>\n<footer id='2' style='font-size:16px'>김정인</footer>\n<h1 id='3' style='font-size:20px'>목차</h1>\n<p id='4' data-category='list' style='font-size:14px'>1. Network</p>\n<p id='5' data-category='list' style='font-size:16px'>2. Web Frontend</p>\n<p id='6' data-category='list' style='font-size:16px'>3. Web Backend</p>\n<h1 id='7' style='font-size:14px'>Network</h1>\n<h1 id='8' style='font-size:20px'>Client&Server</h1>\n<br><header id='9' style='font-size:14px'>Network</header>\n<figure id='10'><img style='font-size:16px' alt=\"Server Client\nRequest\n→\nResponse\" data-coord=\"top-left:(208,479); bottom-right:(1094,1455)\" /></figure>\n<br><h1 id='11' style='font-size:18px'>Client: 서비스를 요청하는 주체<br>(웹 브라우저, 모바일 앱)</h1>\n<h1 id='12' style='font-size:18px'>Server: 요청을 처리하고 데이터를 제공하는<br>주체<br>(웹 서버, 데이터베이스 서버, 모델 서버)</h1>\n<p id='13' data-category='paragraph' style='font-size:16px'>컴퓨터 두 대(서버와 클라이언트 간)의 요청과<br>응답 구조<br>-> 네트워크!</p>\n<h1 id='14' style='font-size:20px'>Protocol</h1>\n<br><header id='15' style='font-size:14px'>Network</header>\n<br><figure id='16'><img style='font-size:22px' alt=\"RULES\" data-coord=\"top-left:(224,421); bottom-right:(1192,1181)\" /></figure>\n<br><h1 id='17' style='font-size:18px'>프로토콜: 데이터 통신 규약</h1>\n<p id='18' data-category='paragraph' style='font-size:16px'>HTTP<br>HTTPS<br>WebSocket<br>Git protocol<br>etc...</p>\n<h1 id='19' style='font-size:20px'>IP & Port</h1>\n<br><header id='20' style='font-size:14px'>Network</header>\n<p id='21' data-category='paragraph' style='font-size:18px'>고유</p>\n<br><figure id='22'><img style='font-size:16px' alt=\"● IP 주소: 네트워크에서 장치를 식별하는\n주소\nYBIGTA\nHOMECOMMING DAY 예:\n192.168.1.1\n● Port: 한 장치 내에서 여러 서비스(프로그램)\nDS 25기 를 식별하는 번호\n예:\n김준호 HTTP 80\nHTTPS 443\n#DS #통계 #대학원 #27 #운동\" data-coord=\"top-left:(318,346); bottom-right:(2464,1442)\" /></figure>\n<h1 id='23' style='font-size:20px'>그러니까 웹은</h1>\n<br><header id='24' style='font-size:14px'>Network</header>\n<p id='25' data-category='paragraph' style='font-size:16px'>클라이언트(예 192.168.1.2 라는 컴퓨터가) 특정 포트에서 통신 규약(Protocol.. 예 Http)에 따라 요청(Request)을 보내고,<br>서버(예 192.168.1.1 라는 컴퓨터가) 특정 포트(80 등)에서 통신 규약에 맞춰 응답(Response) 하는 일련의 과정</p>\n<figure id='26'><img style='font-size:16px' alt=\"Server Client\nRequest\nResponse\" data-coord=\"top-left:(1139,709); bottom-right:(1914,1570)\" /></figure>\n<h1 id='27' style='font-size:14px'>Web Frontend</h1>\n<header id='28' style='font-size:20px'>Web Frontend</header>\n<br><h1 id='29' style='font-size:22px'>Request!!</h1>\n<h1 id='30' style='font-size:18px'>?보내는 방법이 너무 많다.. HTML, JS & HTTP 요청만 다뤄보자면!</h1>\n<p id='31' data-category='list' style='font-size:14px'>● Browser 이용<br>○ 브라우저 주소창에 URL 입력(Get)<br>● HTML Form 을 이용하는 방법(post)<br>○ 실습 참고<br>● JavaScript를 통한 요청(get, post)<br>○ 실습 참고<br>● 그 외</p>\n<br><p id='32' data-category='list' style='font-size:16px'>○ cURL : 터미널 명령어로 http request 를 보낼 수 있다. get, post 다 가능<br>○ python : requests 라이브러리로 요청 가능<br>○ Postman : api 요청을 시험해볼 수 있는 서비스</p>\n<header id='33' style='font-size:14px'>Web Frontend</header>\n<br><h1 id='34' style='font-size:20px'>HTML</h1>\n<figure id='35'><img alt=\"\" data-coord=\"top-left:(278,375); bottom-right:(1283,1322)\" /></figure>\n<br><h1 id='36' style='font-size:16px'>● HTML (HyperText Markup Language)</h1>\n<br><p id='37' data-category='list' style='font-size:18px'>○ 웹 페이지의 구조를 정의<br>○ 요소(Element): 태그로 정의된 html<br>의 기본 단위</p>\n<h1 id='38' style='font-size:16px'>Web Frontend</h1>\n<br><h1 id='39' style='font-size:22px'>CSS</h1>\n<figure id='40'><img style='font-size:14px' alt=\"[*][*][*][*]\" data-coord=\"top-left:(362,360); bottom-right:(1067,1411)\" /></figure>\n<br><h1 id='41' style='font-size:18px'>● CSS(Cascading Style Sheets)</h1>\n<br><p id='42' data-category='list' style='font-size:20px'>○ HTML의 디자인과 레이아웃을 정의<br>○ 스타일 지정</p>\n<header id='43' style='font-size:16px'>Web Frontend</header>\n<br><h1 id='44' style='font-size:20px'>JavaScript</h1>\n<figure id='45'><img alt=\"\" data-coord=\"top-left:(305,375); bottom-right:(1230,1240)\" /></figure>\n<br><h1 id='46' style='font-size:14px'>● JavaScript</h1>\n<br><p id='47' data-category='list' style='font-size:18px'>○ 웹 페이지를 동적으로 제어하기 위한<br>프로그래밍 언어<br>○ 이벤트 처리(클릭, 입력)<br>○ HTML 요소 조작<br>○ 서버와 통신(AJAX, Fetch)<br>○ 애니메이션 효과 추가</p>\n<h1 id='48' style='font-size:20px'>그 외 개념</h1>\n<br><p id='49' data-category='paragraph' style='font-size:14px'>Web Frontend</p>\n<p id='50' data-category='list' style='font-size:16px'>● SPA(Single Page Application)<br>○ 한 페이지에서 모든 것을 동적으로 로드<br>○ React, Vue 기반 웹 앱<br>● MPA (Multi Page Application)<br>○ 각 요청마다 새로운 페이지를 로드<br>○ 검색 엔진 최적화에 유리(SEO)<br>o 전통적 웹, NextJS<br>● CSR(Client Side Rendering)<br>○ 클라이언트가 JavaScript를 실행해 화면 렌더링<br>● SSR(Server Side Rendering)<br>○ 서버에서 응답으로 HTML을 클라이언트에 전송하는 방식</p>\n<header id='51' style='font-size:14px'>Network</header>\n<br><h1 id='52' style='font-size:20px'>그러니까 웹 프론트엔드는</h1>\n<p id='53' data-category='paragraph' style='font-size:16px'>사용자가 브라우저를 통해 웹 사이트와 상호작용하고, 이벤트를 처리하며 서버와 통신하여 동적인 사용자 경험을 제공하는<br>기술의 총체</p>\n<header id='54' style='font-size:14px'>Web Frontend</header>\n<br><h1 id='55' style='font-size:20px'>실습</h1>\n<h1 id='56' style='font-size:18px'>실습을 통해 알아봅시다!</h1>\n<h1 id='57' style='font-size:16px'>1. 웹 페이지 뜯어보기<br>2.HTML 로 웹페이지 만들어보기<br>3. CSS 로 웹페이지 꾸미기<br>4.JavaScript로 Request 보내기</h1>\n<h1 id='58' style='font-size:14px'>Web Backend</h1>\n<header id='59' style='font-size:16px'>Web Backend</header>\n<br><h1 id='60' style='font-size:22px'>Response!!</h1>\n<p id='61' data-category='paragraph' style='font-size:14px'>● 구성</p>\n<br><h1 id='62' style='font-size:20px'>○ Status Line(상태 줄): 요청 처리 결과를 나타냄</h1>\n<br><h1 id='63' style='font-size:18px'>200 OK, 404 Not Found</h1>\n<br><p id='64' data-category='list' style='font-size:18px'>○ Header: 응답에 대한 간단 메타 데이터<br>○ Body</p>\n<br><p id='65' data-category='list' style='font-size:14px'>USON<br>■ HTML<br>■ 텍스트</p>\n<h1 id='66' style='font-size:20px'>Endpoint</h1>\n<br><header id='67' style='font-size:16px'>Web Backend</header>\n<figure id='68'><img alt=\"\" data-coord=\"top-left:(140,406); bottom-right:(1172,1405)\" /></figure>\n<br><h1 id='69' style='font-size:14px'>● 엔드포인트</h1>\n<br><p id='70' data-category='list' style='font-size:18px'>○ 클라이언트가 서버의 특정 기능에 접근하기 위한 URL<br>○ https://apilexample.com/vi/users.</p>\n<br><p id='71' data-category='paragraph' style='font-size:14px'>● 구조</p>\n<br><p id='72' data-category='list' style='font-size:16px'>○ Base URL: https://api.example.com<br>○ Path: /v1/users<br>Query Parameters: ?page=1&size=10</p>\n<header id='73' style='font-size:16px'>Web Backend</header>\n<br><h1 id='74' style='font-size:20px'>Router</h1>\n<br><h1 id='75' style='font-size:22px'>f(x)</h1>\n<br><p id='76' data-category='paragraph' style='font-size:14px'>● 라우터</p>\n<br><p id='77' data-category='list' style='font-size:18px'>○ 서버에서 요청을 적절한 처리 함수로 연결하는 역할<br>○ 엔드포인트와 HTTP 메서드 기반<br>○ 예) 특정 엔드포인트에 get 하면 fn1 함수 실행</p>\n<figure id='78'><img alt=\"\" data-coord=\"top-left:(24,753); bottom-right:(643,1389)\" /></figure>\n<header id='79' style='font-size:16px'>Web Backend</header>\n<br><h1 id='80' style='font-size:20px'>Restful 한 설계</h1>\n<h1 id='81' style='font-size:22px'>REST</h1>\n<br><h1 id='82' style='font-size:18px'>● URI: 자원을 명확히 식별</h1>\n<br><p id='83' data-category='list' style='font-size:14px'>○ · 예: /users, /users/{id}<br>● HTTP 메서드 활용<br>● Stateless<br>● 표현의 일관성</p>\n<header id='84' style='font-size:16px'>Web Backend</header>\n<br><h1 id='85' style='font-size:22px'>어떤 언어? 어떤 프레임워크?</h1>\n<h1 id='86' style='font-size:20px'>Most popular Backend<br>Frameworks (2024)</h1>\n<br><h1 id='87' style='font-size:14px'>● Python</h1>\n<h1 id='88' style='font-size:22px'>spring django</h1>\n<br><p id='89' data-category='paragraph' style='font-size:16px'>O</p>\n<br><h1 id='90' style='font-size:14px'>boot</h1>\n<p id='91' data-category='paragraph' style='font-size:20px'>de<br>express</p>\n<br><figure id='92'><img style='font-size:16px' alt=\"CakePHP\" data-coord=\"top-left:(689,734); bottom-right:(966,891)\" /></figure>\n<br><figure id='93'><img style='font-size:18px' alt=\"koa\nnewtgenand\" data-coord=\"top-left:(1009,728); bottom-right:(1354,885)\" /></figure>\n<br><figure id='94'><img style='font-size:16px' alt=\"Flask\" data-coord=\"top-left:(1425,711); bottom-right:(1584,899)\" /></figure>\n<h1 id='95' style='font-size:20px'>4 laravel</h1>\n<br><h1 id='96' style='font-size:22px'>N</h1>\n<br><h1 id='97' style='font-size:14px'>ASP.NET</h1>\n<br><figure id='98'><img style='font-size:20px' alt=\"RAILS\" data-coord=\"top-left:(955,943); bottom-right:(1263,1064)\" /></figure>\n<br><figure id='99'><img style='font-size:14px' alt=\"Phoenix\nFramework\" data-coord=\"top-left:(1311,918); bottom-right:(1613,1080)\" /></figure>\n<br><h1 id='100' style='font-size:18px'>○ Fiber, Gin: 성능, 간단문법</h1>\n<br><p id='101' data-category='list' style='font-size:18px'>○ Django: 대규모<br>○ FastAPI: 비동기, 유연, 높은 성능<br>● Node.js<br>○ Express.js: 가볍, 유연<br>● Java<br>○ Spring Boot: 대규모 프로젝트<br>● Go</p>\n<header id='102' style='font-size:14px'>Web Backend</header>\n<br><h1 id='103' style='font-size:22px'>아키텍처</h1>\n<h1 id='104' style='font-size:18px'>● 계층형 아키텍처 (Layered Architecture)</h1>\n<br><p id='105' data-category='list' style='font-size:18px'>○ 여러 계층으로 분리하여 설계<br>○ 각 계층이 독립적으로 동작, 유지보수 용이</p>\n<br><h1 id='106' style='font-size:16px'>● 이벤트 기반 아키텍처 (Event-Driven Architecture)</h1>\n<br><p id='107' data-category='list' style='font-size:20px'>○ 이벤트 발생 시 이를 처리하는 핸들러가 작동<br>○ 비동기 메시징을 통해 시스템 간 통신</p>\n<br><h1 id='108' style='font-size:14px'>● 마이크로서비스 아키텍처</h1>\n<br><h1 id='109' style='font-size:20px'>○ 독립적으로 배포 가능한 작은 서비스들로 애플리케이션을 구성</h1>\n<header id='110' style='font-size:14px'>Web Backend</header>\n<br><h1 id='111' style='font-size:20px'>그러니까 웹 벡엔드는</h1>\n<h1 id='112' style='font-size:16px'>엔드포인트와 라우터를 활용해 요청과 응답을 처리하며, 아키텍처<br>를 구현해서 핵심 기능을 제공하는 시스템</h1>\n<header id='113' style='font-size:14px'>Web Backend</header>\n<br><h1 id='114' style='font-size:20px'>실습</h1>\n<h1 id='115' style='font-size:16px'>실습을 통해 알아봅시다!<br>1. FastAPI<br>2.Swagger docs<br>3.요청 처리하기</h1>\n<h1 id='116' style='font-size:18px'>감사합니다!</h1>\n<h1 id='117' style='font-size:14px'>자료 제공 백준호<br>25기 DE 팀장님</h1>",
    "1CGkxduI7qwJJIRVEVITVKh7HBxZ90eyf": "<h1 id='0' style='font-size:22px'>[2회차] 네트워크 과제</h1>\n<h1 id='1' style='font-size:18px'>발제자: 김정인</h1>\n<h1 id='2' style='font-size:20px'>기간</h1>\n<br><h1 id='3' style='font-size:18px'>과제 마감: 2025.07.17 (목) 23:59분까지<br>지각 제출: 2025.07.18 (금) 23:59분까지</h1>\n<h1 id='4' style='font-size:20px'>Intro</h1>\n<br><p id='5' data-category='paragraph' style='font-size:20px'>안녕하세요!</p>\n<br><p id='6' data-category='paragraph' style='font-size:16px'>이번 과제는 네트워크 지식을 바탕으로 ssh 연결에 익숙해지고 기본적인 리눅스 사용법을 익히는 것에 초<br>점이 맞춰져 있습니다. 비밀번호 기반 ssh 연결 방식이긴 하지만 반복적인 ssh 실습과 함께 리눅스 운영<br>체제, CLI와 친해져봅시다 !! 온라인 방탈출이라고 생각하시면 됩니다. 과제는 8단계까지지만 더 풀어도<br>좋아요 !</p>\n<p id='7' data-category='paragraph' style='font-size:16px'>리눅스 명령어는 CS기초 pdf에 모두 나와있습니다. 막히면 직접 인터넷에 찾아보거나 llm을 사용해도 좋<br>지만 최소한 명령어가 어떠한 역할을 하는지 이해는 하면서 풀어봅시다 !</p>\n<h1 id='8' style='font-size:20px'>명세</h1>\n<br><p id='9' data-category='list' style='font-size:16px'>1. https://overthewire.org/wargames/bandit/ 접속<br>2. 터미널로 ssh 접속 host와 port 정보는 다음과 같음</p>\n<p id='10' data-category='paragraph' style='font-size:16px'>ssh -p 2220 bandit0@bandit.labs.overthewire.org #맨 처음 접속 단계</p>\n<p id='11' data-category='paragraph' style='font-size:16px'>3. 처음 username은 bandit0이며 이번 과제에서는 username bandit8까지 가는 게 목표임</p>\n<footer id='12' style='font-size:14px'>[2회차] 네트워크 과제</footer>\n<br><footer id='13' style='font-size:14px'>1</footer>\n<p id='14' data-category='list' style='font-size:20px'>4. bandit0으로 접속한 후 bandit1 비밀번호 찾기 → bandit1 으로 접속한 후 bandit2 비밀번호 찾기 →<br>… → bandit8 비밀번호까지 찾으면 됨</p>\n<br><p id='15' data-category='paragraph' style='font-size:20px'>5. 계정별 비밀번호는 result.json에 기록하고 마지막 bandit8에 접속한 것은 아래처럼 본인 이름을 입력<br>하고 스크린샷 필수</p>\n<p id='16' data-category='paragraph' style='font-size:20px'>result.json 형식은 꼭 아래 형식을 맞춰주시길 바랍니다</p>\n<p id='17' data-category='paragraph' style='font-size:20px'>{</p>\n<br><p id='18' data-category='paragraph' style='font-size:20px'>\"bandit1\": \"{password}\",<br>\"bandit2\": \"{password}\",<br>\"bandit3\": \"{password}\",<br>\"bandit4\": \"{password}\",<br>\"bandit5\": \"{password}\",<br>\"bandit6\": \"{password}\",<br>\"bandit7\": \"{password}\",</p>\n<footer id='19' style='font-size:16px'>[2회차] 네트워크 과제</footer>\n<br><footer id='20' style='font-size:14px'>2</footer>\n<br><figure id='21'><img alt=\"\" data-coord=\"top-left:(142,349); bottom-right:(1127,1052)\" /></figure>\n<h1 id='22' style='font-size:16px'>\"bandit8\": \"{password}\"<br>}</h1>\n<h1 id='23' style='font-size:22px'>제출 방법</h1>\n<br><p id='24' data-category='paragraph' style='font-size:18px'>과제 제출용 github에 push</p>\n<h1 id='25' style='font-size:20px'>제출 파일 구조</h1>\n<p id='26' data-category='paragraph' style='font-size:16px'>ybigta_newbie_assignment/<br>├── 11Python/<br>│ └── (해당 과제 내용)<br>├── 12CS_basics/<br>│ └── (해당 과제 내용)<br>└── 21Network/<br>├── result.json ← bandit1  bandit8 비밀번호<br>└── bandit8.png ← bandit8 스크린샷</p>\n<h1 id='27' style='font-size:22px'>채점 기준</h1>\n<br><p id='28' data-category='paragraph' style='font-size:18px'>총 8 계정 중 8개 통과, 3개 이상 7개 이하 미흡, 그 외 실패</p>\n<footer id='29' style='font-size:14px'>[2회차] 네트워크 과제</footer>\n<br><footer id='30' style='font-size:14px'>3</footer>",
    "1ZhXUTZo6EiSrXtTUTuFVlrr1ZfP4SRlJ": "<header id='0' style='font-size:16px'>2025-2 YBIGTA</header>\n<h1 id='1' style='font-size:20px'>네트워크</h1>\n<footer id='2' style='font-size:14px'>26기 김정인</footer>\n<h1 id='3' style='font-size:14px'>목 차</h1>\n<p id='4' data-category='list' style='font-size:20px'>1. 네트워크 기초<br></p>\n<p id='5' data-category='list' style='font-size:16px'>2. 네트워크 주소 체계<br></p>\n<p id='6' data-category='list' style='font-size:20px'>3. 통신 실습<br></p>\n<p id='7' data-category='list' style='font-size:20px'>4. 클라우드 네트워킹<br></p>\n<p id='8' data-category='list' style='font-size:14px'>5. 네트워크 보안</p>\n<h1 id='9' style='font-size:14px'>네트워크 기초</h1>\n<header id='10' style='font-size:14px'>네트워크 기초</header>\n<br><h1 id='11' style='font-size:20px'>컴퓨터 네트워크란</h1>\n<figure id='12'><img style='font-size:16px' alt=\"소통해요 ^^\" data-coord=\"top-left:(285,834); bottom-right:(1786,1853)\" /></figure>\n<br><h1 id='13' style='font-size:14px'>ex)<br>구글에 접속하기<br>데이터베이스에 접속해서 데이터를 쿼리<br>OpenAPI 호출하기<br>등등</h1>\n<p id='14' data-category='paragraph' style='font-size:18px'>https://www.ibm.com/kr-ko/topics/networking</p>\n<header id='15' style='font-size:14px'>네트워크 기초</header>\n<br><h1 id='16' style='font-size:20px'>OSI 7계층 & TCP/IP 4계층</h1>\n<h1 id='17' style='font-size:16px'>Whyisthenetworkdividedintolayers?<br>—>통신이일어나는과정을단계별로파악할수있기때문이다.</h1>\n<figure id='18'><img alt=\"\" data-coord=\"top-left:(840,1082); bottom-right:(3025,2090)\" /></figure>\n<header id='19' style='font-size:14px'>네트워크 기초</header>\n<br><h1 id='20' style='font-size:22px'>프로토콜</h1>\n<h1 id='21' style='font-size:20px'>“컴퓨터끼리데이터를주고받을때지켜야하는약속(규칙)“</h1>\n<h1 id='22' style='font-size:16px'>Ex)TCP,UDP,HTTP,IP,ARP,FTP,SSH,MQTT</h1>\n<h1 id='23' style='font-size:18px'>여보세요 ?</h1>\n<br><p id='24' data-category='paragraph' style='font-size:18px'>여보 아닌데요</p>\n<br><p id='25' data-category='paragraph' style='font-size:20px'>.</p>\n<header id='26' style='font-size:16px'>네트워크 기초</header>\n<br><h1 id='27' style='font-size:20px'>TCP 와 UDP</h1>\n<h1 id='28' style='font-size:18px'>TCP/IP의전송계층에서사용되는프로토콜</h1>\n<table id='29' style='font-size:14px'><thead><tr><td>항목</td><td>TCP</td><td>UDP</td></tr></thead><tbody><tr><td colspan=\"2\">연결방식 연결형(3-wayhandshake)</td><td>비연결형(fire-and-forget)</td></tr><tr><td colspan=\"3\">신뢰성 보장(재전송,순서보장) 보장하지않음</td></tr><tr><td colspan=\"2\">속도 느림(검사,보정포함)</td><td>빠름(검사없음)</td></tr><tr><td colspan=\"3\">용도예시 웹(HTTP/HTTPS),메일,파일전송등 영상스트리밍,게임,DNS등</td></tr></tbody></table>\n<br><figure id='30'><img alt=\"\" data-coord=\"top-left:(2632,707); bottom-right:(3864,1681)\" /></figure>\n<header id='31' style='font-size:20px'>제가 이런 걸 왜 알아야 하죠..?</header>\n<br><header id='32' style='font-size:14px'>네트워크 기초</header>\n<p id='33' data-category='paragraph' style='font-size:16px'>크롤링을하든!API를호출하든!IOT데이터를모으든!S3에업로드하든!RDS<br>에접속하든!Superset으로시각화하든!FastAPI로모델을서빙하든!Jupyter에<br>서외부DB를붙이든!Streamlit으로데모를만들든!GoogleSpreadsheet로<br>API를연결하든!Airflow로DAG을돌리든!Kafka로메시지를넘기든!</p>\n<h1 id='34' style='font-size:14px'>네트워크 주소 체계</h1>\n<header id='35' style='font-size:14px'>네트워크 주소체계</header>\n<br><h1 id='36' style='font-size:20px'>LAN (Local Area Network) 과 WAN (Wide Area Network)</h1>\n<h1 id='37' style='font-size:18px'>•LAN</h1>\n<br><h1 id='38' style='font-size:16px'>-한정된공간(집,학교,회사등)안에서장치들이서로통신하는로컬네트워크</h1>\n<h1 id='39' style='font-size:18px'>•WAN</h1>\n<br><p id='40' data-category='list' style='font-size:16px'>-넓은지리적영역에걸쳐있는네트워크,LAN과LAN의연결<br>-인터넷서비스제공자(ISP)가제공하는서비스를사용하여구축<br>-국내ISP는KT,U+,SK브로드밴드</p>\n<br><figure id='41'><img alt=\"\" data-coord=\"top-left:(2545,992); bottom-right:(3853,2034)\" /></figure>\n<header id='42' style='font-size:14px'>네트워크 주소체계</header>\n<br><h1 id='43' style='font-size:22px'>IP 주소 & port</h1>\n<h1 id='44' style='font-size:16px'>Ip주소:내컴퓨터가네트워크에서가지는고유주소</h1>\n<br><p id='45' data-category='list' style='font-size:20px'>•IPv4:32비트,4개의10진수(예:192.168.1.1)<br>-약43억개가능,주소고갈은이미현실</p>\n<br><p id='46' data-category='list' style='font-size:20px'>•IPv6:128비트,8개의16진수(예:2002:0221:ABCD:DCBA:0000:0000:FFFF:4002)<br>-모든인터넷이IPv6를사용하기전에는IPv4와동시지원</p>\n<p id='47' data-category='paragraph' style='font-size:16px'>Port:같은IP내에서어떤서비스를사용하는지를구분하는번호</p>\n<p id='48' data-category='paragraph' style='font-size:18px'>•Well-knownport<br>ssh:22<br>http:80<br>https:443</p>\n<br><figure id='49'><img alt=\"\" data-coord=\"top-left:(2491,1316); bottom-right:(3891,2114)\" /></figure>\n<header id='50' style='font-size:14px'>네트워크 주소체계</header>\n<br><h1 id='51' style='font-size:20px'>IPv4</h1>\n<h1 id='52' style='font-size:18px'>IPv4는네트워크ID와호스트ID로구성</h1>\n<br><h1 id='53' style='font-size:18px'>네트워크ID:네트워크를구분하여주는ID<br>호스트ID:해당네트워크에속한사용자에게부여하는고유의번호</h1>\n<p id='54' data-category='paragraph' style='font-size:16px'>클래스기반네트워크분할기법<br>Legacy!!</p>\n<br><figure id='55'><img alt=\"\" data-coord=\"top-left:(1809,1084); bottom-right:(3787,2117)\" /></figure>\n<header id='56' style='font-size:16px'>네트워크 주소체계</header>\n<br><h1 id='57' style='font-size:22px'>Subnet</h1>\n<br><h1 id='58' style='font-size:16px'>:큰네트워크를작은네트워크로나누는기술</h1>\n<h1 id='59' style='font-size:20px'>기존:Class기반고정된서브넷<br>현재:CIDR기반유연한서브넷<br>Ex)172.31.0.0/16</h1>\n<br><figure id='60'><img alt=\"\" data-coord=\"top-left:(2091,525); bottom-right:(3202,1098)\" /></figure>\n\n<br><table id='62' style='font-size:14px'><thead></thead><tbody><tr><td>IP주소1</td><td>192.168.1.10</td></tr><tr><td>IP주소2</td><td>192.168.1.77</td></tr><tr><td>서브넷마스크</td><td>255.255.255.0(또는/24)</td></tr></tbody><caption id='61' style='font-size:16px'>판단방법(AND연산)</caption></table>\n<br><p id='63' data-category='paragraph' style='font-size:18px'>1. IP주소와서브넷마스크를각각이진수로변환<br>2. 각각AND연산수행—>결과가같으면같은네트워크</p>\n<p id='64' data-category='paragraph' style='font-size:16px'>예시네트워크주소:</p>\n<header id='65' style='font-size:14px'>네트워크 주소체계</header>\n<br><h1 id='66' style='font-size:20px'>Router</h1>\n<h1 id='67' style='font-size:16px'>서로다른네트워크(서브넷)간에패킷을전달하는“관문(Gateway)”</h1>\n<figure id='68'><img style='font-size:14px' alt=\"다른동네친구에게\n이것좀전해줘\" data-coord=\"top-left:(343,862); bottom-right:(2372,1517)\" /></figure>\n<p id='69' data-category='paragraph' style='font-size:16px'>Linux/macOS:traceroutegoogle.com<br>windows:tracertgoogle.com</p>\n<header id='70' style='font-size:16px'>네트워크 주소체계</header>\n<br><h1 id='71' style='font-size:20px'>DNS ( Domain Name System )</h1>\n<h1 id='72' style='font-size:18px'>도메인이름을IP주소로바꿔주는시스템</h1>\n<p id='73' data-category='list' style='font-size:16px'>1. 브라우저/코드에서https://github.com요청<br>2. DNS서버에“이도메인의IP주소뭐야?”요청<br>3. DNS서버가140.82.112.3같은IP주소를반환<br>4. 그IP로TCP/HTTP연결시작</p>\n<br><p id='74' data-category='paragraph' style='font-size:14px'>ip 주소를 언제 외우고 앉아 있어 !</p>\n<br><figure id='75'><img alt=\"\" data-coord=\"top-left:(2396,1048); bottom-right:(3615,1428)\" /></figure>\n<header id='76' style='font-size:14px'>네트워크 주소체계</header>\n<br><h1 id='77' style='font-size:22px'>NAT (Network Address Translation)</h1>\n<h1 id='78' style='font-size:22px'>•사설IP</h1>\n<br><h1 id='79' style='font-size:16px'>-IPv4의개수가한정적이기에LAN에서만사용하는가상의IP</h1>\n<h1 id='80' style='font-size:20px'>Why?</h1>\n<br><p id='81' data-category='list' style='font-size:14px'>1.IPv4주소가부족해서,전세계모든장비에고유한공인IP를줄수없음<br>2.집,회사,학교등은내부에서사설IP를사용함<br>3.인터넷과통신하려면→공인IP로바꿔야함<br>→이걸해주는게바로NAT(보통공유기/라우터에서수행)</p>\n<p id='82' data-category='paragraph' style='font-size:18px'>보안+IP절약+포트포워딩역할</p>\n<header id='83' style='font-size:16px'>네트워크 주소체계</header>\n<br><h1 id='84' style='font-size:20px'>NAT (Network Address Translation)</h1>\n<table id='85' style='font-size:14px'><thead></thead><tbody><tr><td colspan=\"3\">실습:공인IP와사설IP확인</td></tr><tr><td colspan=\"3\">공인ipWindows/macOS/Linux</td></tr><tr><td colspan=\"3\">curl ifconfig.me</td></tr><tr><td>사설ipWindows</td><td>사설ipmacOS</td><td>사설iplinux(wsl)</td></tr><tr><td>ipconfig /all</td><td>ipconfig getifaddr en0</td><td>ip addr show eth0 | grep 'inet '</td></tr></tbody></table>\n<header id='86' style='font-size:14px'>네트워크 주소체계</header>\n<br><h1 id='87' style='font-size:22px'>NAT (Network Address Translation)</h1>\n<h1 id='88' style='font-size:18px'>포트포워딩inDocker</h1>\n<h1 id='89' style='font-size:20px'>컨테이너 기반 가상환경 ≈ 사설(내부) ip</h1>\n<br><h1 id='90' style='font-size:14px'>컨테이너is새로운내세상<br>연결하려면포트포워딩or볼륨마운트</h1>\n<br><figure id='91'><img alt=\"\" data-coord=\"top-left:(2098,678); bottom-right:(2874,1335)\" /></figure>\n<p id='92' data-category='paragraph' style='font-size:16px'>내PC의8080포트로들어온요청→DockerNAT→컨테이너의80포트로전달</p>\n<header id='93' style='font-size:14px'>네트워크 주소체계</header>\n<br><h1 id='94' style='font-size:20px'>DHCP (Dynamic Host Conﬁguration Protocol)</h1>\n<h1 id='95' style='font-size:16px'>컴퓨터가자동으로IP주소,서브넷마스크,라우터,DNS를받도록해주는프로토콜</h1>\n<h1 id='96' style='font-size:18px'>D - O - R - A</h1>\n<br><table id='97' style='font-size:14px'><thead><tr><td>단계</td><td>설명 패킷</td></tr></thead><tbody><tr><td colspan=\"2\">1 DHCPDiscover­“누가IP좀주세요!” 브로드캐스트</td></tr><tr><td colspan=\"2\">2 DHCPOffer­“이IP써보실래요?” DHCP서버→클라이언트</td></tr><tr><td>3</td><td>DHCPRequest­“네!그걸로주세요” 클라이언트→서버</td></tr><tr><td colspan=\"2\">4 DHCPACK­“좋아요,이제그IP는당신겁니다” 최종승인</td></tr></tbody></table>\n<br><figure id='98'><img alt=\"\" data-coord=\"top-left:(2922,511); bottom-right:(3832,2019)\" /></figure>\n<header id='99' style='font-size:16px'>네트워크 주소체계</header>\n<br><h1 id='100' style='font-size:20px'>MAC 주소</h1>\n<h1 id='101' style='font-size:16px'>네트워크장치(랜카드)에부여된전세계고유한물리적주소<br>같은LAN(LocalAreaNetwork)내통신은IP가아니라MAC주소</h1>\n<h1 id='102' style='font-size:16px'>실습:내MAC주소확인하기</h1>\n<p id='103' data-category='paragraph' style='font-size:14px'>macOS/Linux</p>\n<p id='104' data-category='paragraph' style='font-size:18px'>ifconfig en0 | grep ether<br>또는<br>ip link show</p>\n<p id='105' data-category='paragraph' style='font-size:14px'>Windows</p>\n<br><p id='106' data-category='paragraph' style='font-size:18px'>ipconfig /all</p>\n<br><figure id='107'><img alt=\"\" data-coord=\"top-left:(2583,690); bottom-right:(3749,1861)\" /></figure>\n<header id='108' style='font-size:14px'>네트워크 주소체계</header>\n<br><h1 id='109' style='font-size:20px'>ARP ( Address Resolution Protocol )</h1>\n<h1 id='110' style='font-size:16px'>IP주소를MAC주소로바꿔주는프로토콜</h1>\n<p id='111' data-category='list' style='font-size:14px'>1. 내가어떤IP주소(예:192.168.0.5)로데이터를보내려함<br>2. 하지만실제전송은MAC주소가필요함<br>3. ARP요청:“192.168.0.5인사람누구야?”(브로드캐스트)<br>4. ARP응답:“나야!MAC주소는xx:xx:xx:xx:xx:xx야.”<br>5. 내ARP캐시에기록됨→바로전송가능</p>\n<p id='112' data-category='paragraph' style='font-size:14px'>똑똑101동801호에<br>김정인님맞으시죠??</p>\n<br><p id='113' data-category='paragraph' style='font-size:18px'>어 형이야</p>\n<br><figure id='114'><img alt=\"\" data-coord=\"top-left:(2388,822); bottom-right:(3767,1771)\" /></figure>\n<h1 id='115' style='font-size:14px'>통신 실습</h1>\n<h1 id='116' style='font-size:14px'>통신 실습</h1>\n<h1 id='117' style='font-size:18px'>소켓통신으로그때그감성을재현..!!</h1>\n<p id='118' data-category='list' style='font-size:14px'>1. 터미널을킨다</p>\n<p id='119' data-category='list' style='font-size:14px'>2. gitclonehttps://github.com/jungin7612/socket.git</p>\n<p id='120' data-category='list' style='font-size:14px'>3. cdsocket</p>\n<p id='121' data-category='list' style='font-size:14px'>4. python3client.pyorpythonclient.py</p>\n<br><figure id='122'><img alt=\"\" data-coord=\"top-left:(2235,420); bottom-right:(3749,2122)\" /></figure>\n<h1 id='123' style='font-size:14px'>클라우드 네트워킹</h1>\n<header id='124' style='font-size:14px'>클라우드 네트워킹</header>\n<br><h1 id='125' style='font-size:20px'>VPC (Virtual Private Cloud)</h1>\n<br><h1 id='126' style='font-size:16px'>퍼블릭클라우드환경에서제공되는고객전용가상네트워크공간</h1>\n<p id='127' data-category='list' style='font-size:18px'>• AWS,GCP,Azure등에서제공</p>\n<p id='128' data-category='list' style='font-size:18px'>• 사용자가원하는대로서브넷,방화벽규칙,라우팅을설정할수있음</p>\n<p id='129' data-category='list' style='font-size:18px'>• 클라우드자원(서버,DB등)은이VPC안에서통신</p>\n<header id='130' style='font-size:16px'>클라우드 네트워킹</header>\n<br><h1 id='131' style='font-size:22px'>SSH (Secure Shell)</h1>\n<br><h1 id='132' style='font-size:18px'>안전한원격접속을위한프로토콜</h1>\n<h1 id='133' style='font-size:18px'>공개키기반인증사용권장(표준)</h1>\n<p id='134' data-category='list' style='font-size:20px'>1. 사용자가키쌍생성<br>2. 서버에공개키등록<br>3. 클라이언트개인키로SSH접속시도</p>\n<br><figure id='135'><img alt=\"\" data-coord=\"top-left:(2345,686); bottom-right:(3804,1601)\" /><br><figcaption id='136' style='font-size:14px'>해킹안당하는법..</figcaption></figure>\n\n<header id='137' style='font-size:14px'>클라우드 네트워킹</header>\n<br><h1 id='138' style='font-size:20px'>SSH (Secure Shell)</h1>\n<h1 id='139' style='font-size:16px'>간단한ssh실습과docker포트포워딩실습을해봅시다</h1>\n<p id='140' data-category='paragraph' style='font-size:18px'>https://labs.play-with-docker.com/</p>\n<header id='141' style='font-size:14px'>클라우드 네트워킹</header>\n<br><h1 id='142' style='font-size:20px'>SSH (Secure Shell)</h1>\n<p id='143' data-category='list' style='font-size:16px'>1. SSH 부분 터미널에서 실행해서 원격 접속을 해봅시다 !<br></p>\n<p id='144' data-category='list' style='font-size:16px'>2. docker pull nginx:1.23.1-alpine<br></p>\n<p id='145' data-category='list' style='font-size:18px'>3. docker run -d -p 8001:80 --name=webserver1 nginx:1.23.1-alpine</p>\n<h1 id='146' style='font-size:14px'>네트워크 보안</h1>\n<header id='147' style='font-size:14px'>네트워크 보안</header>\n<br><h1 id='148' style='font-size:16px'>보안이 그렇게 중요한가?</h1>\n<p id='149' data-category='list' style='font-size:20px'>•Ai로공격하는시대</p>\n<br><p id='150' data-category='list' style='font-size:20px'>•한번뚫리면수년치신뢰하락</p>\n<br><p id='151' data-category='list' style='font-size:20px'>•AI모델학습데이터는‘금’</p>\n<br><figure id='152'><img alt=\"\" data-coord=\"top-left:(2305,802); bottom-right:(3730,1576)\" /></figure>\n<h1 id='153' style='font-size:20px'>암호화 기본 개념</h1>\n<br><header id='154' style='font-size:14px'>네트워크 보안</header>\n<p id='155' data-category='list' style='font-size:18px'>• 평문 vs 암호문<br></p>\n<p id='156' data-category='list' style='font-size:18px'>• 대칭키 vs 공개키(비대칭키)<br></p>\n<p id='157' data-category='list' style='font-size:18px'>• RSA, ECC<br></p>\n<p id='158' data-category='list' style='font-size:22px'>• Sha-256</p>\n<p id='159' data-category='paragraph' style='font-size:16px'>https://nordvpn.com/ko/blog/rsa/</p>\n<br><figure id='160'><img alt=\"\" data-coord=\"top-left:(2081,767); bottom-right:(3648,1555)\" /></figure>\n<header id='161' style='font-size:14px'>네트워크 보안</header>\n<br><h1 id='162' style='font-size:20px'>Http vs Https</h1>\n<h1 id='163' style='font-size:16px'>1. http는평문</h1>\n<br><h1 id='164' style='font-size:16px'>-http://example.com에접속하면,요청(Request)과응답(Response)이암호화없이그대로전송<br>-로그인정보,api요청내용,쿠키,세션토큰등그대로노출</h1>\n<p id='165' data-category='list' style='font-size:16px'>2.Https=http+TLS<br>-https접속시,먼저TLS연결을설정,이과정에서암호화키를교환후모든통신암호화</p>\n<p id='166' data-category='paragraph' style='font-size:16px'>3.공개키암호화로보안유지</p>\n<p id='167' data-category='paragraph' style='font-size:16px'>4.인증서로‘진짜서버’임을보장</p>\n<header id='168' style='font-size:16px'>네트워크 보안</header>\n<br><h1 id='169' style='font-size:20px'>SSH 공개키 인증</h1>\n<p id='170' data-category='list' style='font-size:18px'>1. 공개키,개인키생성<br>-공개키는Host(server),개인키는클라이언트가소유</p>\n<p id='171' data-category='paragraph' style='font-size:18px'>2.개인키를가지고클라이언트에서host에접속</p>\n<p id='172' data-category='paragraph' style='font-size:14px'>*개인키파일권한이다중으로되어있지않은지확인<br>리눅스개인키파일권한주는명령어<br>chmod400~/.ssh/id_rsa</p>\n<br><figure id='173'><img alt=\"\" data-coord=\"top-left:(1718,1261); bottom-right:(3914,2167)\" /></figure>\n<header id='174' style='font-size:14px'>네트워크 보안</header>\n<br><h1 id='175' style='font-size:18px'>기초적인 보안 위협</h1>\n<table id='176' style='font-size:14px'><thead></thead><tbody><tr><td>공격방식</td><td>개념</td></tr><tr><td>포트스캐닝</td><td>열린포트탐색</td></tr><tr><td>ARP스푸핑</td><td>네트워크통제위장</td></tr><tr><td>DNS스푸핑</td><td>가짜IP유도</td></tr></tbody></table>\n<br><p id='177' data-category='paragraph' style='font-size:14px'>귀찮다고인바운드를다열어놓으면사고가일어날수있다(난다)</p>\n<p id='178' data-category='paragraph' style='font-size:14px'>클라우드서비스를사용한다면보안그룹,방화벽을잘사용해보자</p>\n<header id='179' style='font-size:14px'>네트워크 보안</header>\n<br><h1 id='180' style='font-size:20px'>Wireshark</h1>\n<h1 id='181' style='font-size:14px'>네트워크패킷캡처및분석소프트웨어</h1>\n<p id='182' data-category='list' style='font-size:16px'>1. Tcp통신패킷분석</p>\n<p id='183' data-category='list' style='font-size:16px'>2. http와https차이보기</p>\n<br><figure id='184'><img alt=\"\" data-coord=\"top-left:(2700,893); bottom-right:(3337,1495)\" /></figure>\n<h1 id='185' style='font-size:18px'>추가로 공부하면 좋은 topic들</h1>\n<p id='186' data-category='paragraph' style='font-size:14px'>VPN (Virtual Private Network), Proxy / Reverse Proxy, Load Balancer (ALB/NLB),</p>\n<h1 id='187' style='font-size:14px'>감사합니다 !</h1>",
    "1Lo-1m6i4UrJuuj3-nxD_u6THDSuKhSci": "<h1 id='0' style='font-size:14px'>2025-2\u0001YBIGTA</h1>\n<h1 id='1' style='font-size:20px'>Git</h1>\n<footer id='2' style='font-size:16px'>26기\u0001손재훈</footer>\n<h1 id='3' style='font-size:20px'>목\u0001차</h1>\n<p id='4' data-category='list' style='font-size:14px'>1. Basic\u0001Git\u0001Usage</p>\n<p id='5' data-category='list' style='font-size:16px'>2. Branch\u0001and\u0001Merge</p>\n<p id='6' data-category='list' style='font-size:16px'>3. Recovery</p>\n<p id='7' data-category='list' style='font-size:16px'>4. Collaboration</p>\n<h1 id='8' style='font-size:14px'>Basic\u0001Git\u0001Usage</h1>\n<header id='9' style='font-size:14px'>Basic<br>Usage</header>\n<br><h1 id='10' style='font-size:20px'>Git<br>왜<br>쓰나요?</h1>\n<p id='11' data-category='list' style='font-size:16px'>파일<br>변경<br>내역<br>보존<br>및<br>관리<br>코드<br>복구<br>안전한<br>코드<br>수정<br>및<br>업데이트<br>협업</p>\n<h1 id='12' style='font-size:16px'>→<br>Version<br>Control<br>System(VCS)<br>버전<br>관리<br>시스템</h1>\n<br><figure id='13'><img alt=\"\" data-coord=\"top-left:(1958,457); bottom-right:(2754,1225)\" /></figure>\n<h1 id='14' style='font-size:16px'>Basic<br>Usage</h1>\n<br><p id='15' data-category='paragraph' style='font-size:20px'>Version<br>Control<br>System</p>\n<figure id='16'><img alt=\"\" data-coord=\"top-left:(164,569); bottom-right:(903,1204)\" /></figure>\n<br><figure id='17'><img alt=\"\" data-coord=\"top-left:(1087,565); bottom-right:(1901,1135)\" /></figure>\n<br><figure id='18'><img alt=\"\" data-coord=\"top-left:(2095,311); bottom-right:(2836,1209)\" /></figure>\n<br><p id='19' data-category='paragraph' style='font-size:16px'>Local<br>VCS<br>로컬<br>버전관리</p>\n<br><p id='20' data-category='paragraph' style='font-size:16px'>CVCS<br>중앙집중식<br>버전관리</p>\n<br><p id='21' data-category='paragraph' style='font-size:16px'>DVCS<br>분산<br>버전관리<br>시스템</p>\n<p id='22' data-category='paragraph' style='font-size:16px'>RCS</p>\n<br><p id='23' data-category='paragraph' style='font-size:18px'>CVS,<br>Subversion,<br>Perforce Git,<br>Mecurial</p>\n<br><p id='24' data-category='paragraph' style='font-size:14px'>https://git-scm.com/book/ms/v2/Getting-Started-About-Version-Control</p>\n<header id='25' style='font-size:16px'>Basic<br>Usage</header>\n<br><h1 id='26' style='font-size:22px'>Git<br>설치<br>및<br>설정</h1>\n<h1 id='27' style='font-size:20px'>Git을<br>먼저<br>설치해줍시다!</h1>\n<br><figure id='28'><img alt=\"\" data-coord=\"top-left:(1412,399); bottom-right:(1486,483)\" /></figure>\n<br><p id='29' data-category='paragraph' style='font-size:18px'>Git 설치 가이드 페이지</p>\n<h1 id='30' style='font-size:14px'>git<br>--version으로<br>버전<br>정보<br>나오면<br>성공!</h1>\n<p id='31' data-category='paragraph' style='font-size:20px'>Git<br>기본<br>설정을<br>해줍시다!</p>\n<br><p id='32' data-category='list' style='font-size:16px'>git<br>config<br>--global<br>user.name<br>“<user_name>”<br><br>git<br>config<br>--global<br>user.email<br>“<user_email>”<br>git<br>config<br>--global<br>init.defaultBranch<br>main<br>git<br>config<br>--global<br>core.editor<br>“code<br>--wait”</p>\n<br><p id='33' data-category='paragraph' style='font-size:14px'>누가<br>git을<br>사용하고<br>있는지<br>보여주기<br>위한<br>아이디<br>등록</p>\n<p id='34' data-category='paragraph' style='font-size:14px'>기본<br>branch<br>이름을<br>main으로<br>기본<br>에디터를<br>VScode로<br>설정</p>\n<h1 id='35' style='font-size:22px'>Git<br>설치<br>및<br>설정</h1>\n<br><header id='36' style='font-size:14px'>Basic<br>Usage</header>\n<h1 id='37' style='font-size:20px'>Git<br>기본<br>설정을<br>해줍시다!</h1>\n<br><p id='38' data-category='list' style='font-size:18px'>git<br>config<br>--global<br>diff.tool<br>vscode<br>git<br> config<br> --global<br> difftool.vscode.cmd<br> 'code<br> --wait<br> --diff<br> $LOCAL<br>$REMOTE'<br>git<br>config<br>--global<br>difftool.prompt<br>false difftool<br>기본<br>에디터를<br>VScode로<br>설정</p>\n<p id='39' data-category='paragraph' style='font-size:16px'>git<br>config<br>--global<br>-e 이외에도<br>다양한<br>설정값들<br>확인<br>및<br>수정<br>가능</p>\n<footer id='40' style='font-size:14px'>(참고링크) git 최초 설정</footer>\n<header id='41' style='font-size:14px'>Basic\u0001Usage</header>\n<br><h1 id='42' style='font-size:18px'>Git\u0001commands\u0001using\u0001CLI</h1>\n<h1 id='43' style='font-size:14px'>git\u0001--version으로\u0001버전\u0001확인<br>빈\u0001디렉토리를\u0001하나\u0001만들고\u0001해당<br>디렉토리로\u0001이동해줍시다!</h1>\n<br><p id='44' data-category='paragraph' style='font-size:14px'>git\u0001init\u0001명령어를\u0001통해\u0001저장소<br>(repository)를\u0001생성해줍시다.</p>\n<table id='45' style='font-size:14px'><thead></thead><tbody><tr><td></td><td>touch\u0001<filename>\u0001으로\u0001파일\u0001생성 repository에\u0001변화가\u0001생겼으니 stage를\u0001합시다. git\u0001commit\u0001-m\u0001<커밋\u0001메시지>로 스냅샷을\u0001생성해줍시다!</td></tr></tbody></table>\n<header id='46' style='font-size:14px'>Basic\u0001Usage</header>\n<br><h1 id='47' style='font-size:20px'>Git\u0001commands\u0001using\u0001CLI</h1>\n<figure id='48'><img style='font-size:16px' alt=\"staging commit\n이게 찰칵찰칵 저장되는 거\" data-coord=\"top-left:(580,478); bottom-right:(2399,1461)\" /></figure>\n<header id='49' style='font-size:14px'>Basic\u0001Usage</header>\n<br><h1 id='50' style='font-size:18px'>Git\u0001commands\u0001using\u0001CLI</h1>\n<h1 id='51' style='font-size:14px'>빈\u0001텍스트\u0001파일에\u0001변화를\u0001주고\u0001싶어요.</h1>\n<br><h1 id='52' style='font-size:14px'>git\u0001status를\u0001통해서</h1>\n<br><p id='53' data-category='list' style='font-size:14px'>파일의\u0001변화가\u0001감지되었지만<br>파일이\u0001stage되지는\u0001않았음</p>\n<br><h1 id='54' style='font-size:14px'>을\u0001알\u0001수\u0001있습니다!</h1>\n<p id='55' data-category='paragraph' style='font-size:14px'>git\u0001add\u0001.\u0001으로\u0001stage를\u0001한\u0001후에<br>git\u0001status를\u0001다시\u0001해봅시다.</p>\n<p id='56' data-category='paragraph' style='font-size:14px'>git\u0001restore\u0001--staged\u0001<해당\u0001파일\u0001이름><br>으로\u0001stage한\u0001것을\u0001복구할\u0001수\u0001있어요.</p>\n<p id='57' data-category='paragraph' style='font-size:14px'>git\u0001log\u0001--online으로\u0001commit<br>기록을\u0001볼\u0001수\u0001있어요.<br>git\u0001log\u0001--online\u0001--graph는\u0001더<br>이쁘게\u0001보여준답니다~</p>\n<header id='58' style='font-size:16px'>Basic\u0001Usage</header>\n<br><h1 id='59' style='font-size:20px'>Git\u0001commands\u0001using\u0001CLI</h1>\n<h1 id='60' style='font-size:14px'>새로운\u0001파일에\u0001텍스트를\u0001넣으려고\u0001했는데,\u0001실수로\u0001기존<br>파일에\u0001텍스트를\u0001입력해버렸어요.</h1>\n<h1 id='61' style='font-size:14px'>그러고\u0001커밋까지\u0001해버린\u0001상황이라면\u0001어떻게\u0001하죠?ㅠㅠ</h1>\n<h1 id='62' style='font-size:14px'>우선\u0001git\u0001log\u0001--oneline으로\u0001커밋\u0001해시를<br>확인해봅시다.</h1>\n<p id='63' data-category='paragraph' style='font-size:14px'>git\u0001reset\u0001--hard\u0001<commit\u0001hash>로\u0001원하는\u0001커밋<br>해시\u0001시점으로\u0001되돌릴\u0001수\u0001있어요.<br>하지만\u0001해당\u0001시점\u0001이후의\u0001커밋들은\u0001전부\u0001사라지니,<br>조금\u0001위험하겠죠?</p>\n<p id='64' data-category='paragraph' style='font-size:14px'>그래서\u0001git\u0001revert\u0001<commit\u0001hash>를\u0001하는\u0001것을<br>추천드립니다!</p>\n<header id='65' style='font-size:14px'>Basic\u0001Usage</header>\n<br><h1 id='66' style='font-size:18px'>Git\u0001commands\u0001using\u0001VScode</h1>\n<figure id='67'><img alt=\"\" data-coord=\"top-left:(154,374); bottom-right:(2000,1588)\" /></figure>\n<br><h1 id='68' style='font-size:14px'>git\u0001commit\u0001-m\u0001<Message></h1>\n<h1 id='69' style='font-size:14px'>git\u0001add</h1>\n<header id='70' style='font-size:16px'>Basic\u0001Usage</header>\n<br><h1 id='71' style='font-size:20px'>Git\u0001commands\u0001using\u0001VScode</h1>\n<h1 id='72' style='font-size:14px'>Stage\u0001전에\u0001이전과\u0001어떤\u0001차이가\u0001있는지\u0001확인해봅시다!</h1>\n<figure id='73'><img alt=\"\" data-coord=\"top-left:(344,506); bottom-right:(1428,1103)\" /></figure>\n<br><h1 id='74' style='font-size:14px'>git\u0001diff</h1>\n<h1 id='75' style='font-size:14px'>보기에는\u0001조금\u0001지저분한\u0001것\u0001같아요.</h1>\n<h1 id='76' style='font-size:14px'>git\u0001difftool</h1>\n<p id='77' data-category='paragraph' style='font-size:14px'>현재\u0001파일과\u0001최근\u0001commit의\u0001차이점을<br>더\u0001예쁘게\u0001확인할\u0001수\u0001있어요</p>\n<header id='78' style='font-size:16px'>Basic\u0001Usage</header>\n<br><h1 id='79' style='font-size:20px'>Git\u0001commands\u0001using\u0001VScode</h1>\n<figure id='80'><img alt=\"\" data-coord=\"top-left:(318,471); bottom-right:(1398,905)\" /></figure>\n<br><h1 id='81' style='font-size:14px'>git\u0001difftool\u0001<commit\u0001id></h1>\n<h1 id='82' style='font-size:14px'>현재\u0001파일과\u0001특정\u0001commit\u0001id와의\u0001차이점\u0001확인</h1>\n<h1 id='83' style='font-size:14px'>git\u0001difftool\u0001<id1>\u0001<id2></h1>\n<p id='84' data-category='paragraph' style='font-size:14px'>두\u0001commit\u0001id\u0001간의\u0001차이점\u0001확인</p>\n<header id='85' style='font-size:14px'>Basic\u0001Usage</header>\n<br><h1 id='86' style='font-size:18px'>Git\u0001commands\u0001using\u0001VScode</h1>\n<figure id='87'><img alt=\"\" data-coord=\"top-left:(152,397); bottom-right:(2780,1561)\" /></figure>\n<h1 id='88' style='font-size:14px'>Branch\u0001and\u0001Merge</h1>\n<h1 id='89' style='font-size:20px'>git<br>branch</h1>\n<br><header id='90' style='font-size:16px'>Branch<br>and<br>Merge</header>\n<figure id='91'><img alt=\"\" data-coord=\"top-left:(201,539); bottom-right:(1437,963)\" /></figure>\n<br><table id='92' style='font-size:14px'><thead><tr><td>목적</td><td>명령어</td></tr></thead><tbody><tr><td>브랜치만<br>생성<br>(현재<br>브랜치<br>유지)</td><td>git<br>branch<br>브랜치이름</td></tr><tr><td>브랜치<br>생성<br>+<br>바로<br>이동</td><td>git<br>checkout<br>-b<br>브랜치이름</td></tr><tr><td>특정<br>커밋<br>기준으로<br>브랜치<br>생성</td><td>git<br>branch<br>브랜치이름<br>커밋해시</td></tr><tr><td>원격<br>브랜치를<br>로컬로<br>생성</td><td>git<br>checkout<br>-b<br>로컬브랜치 origin/원격브랜치</td></tr><tr><td>main/master에서<br>명시적으로<br>생 성</td><td>git<br>switch<br>main/git<br>switch<br>-c<br>새 브랜치</td></tr></tbody></table>\n<h1 id='93' style='font-size:20px'>git\u0001merge</h1>\n<br><h1 id='94' style='font-size:16px'>Branch\u0001and\u0001Merge</h1>\n<figure id='95'><img alt=\"\" data-coord=\"top-left:(662,581); bottom-right:(2029,965)\" /></figure>\n<p id='96' data-category='list' style='font-size:14px'>기준이\u0001되는\u0001브랜치(main)\u0001이동<br>git\u0001switch\u0001main<br>합치기!</p>\n<br><p id='97' data-category='paragraph' style='font-size:14px'>git\u0001merge\u0001브랜치이름</p>\n<br><p id='98' data-category='paragraph' style='font-size:16px'>그런데...</p>\n<header id='99' style='font-size:14px'>Branch\u0001and\u0001Merge</header>\n<br><h1 id='100' style='font-size:18px'>git\u0001merge\u0001&&\u0001resolve\u0001conflict</h1>\n<figure id='101'><img alt=\"\" data-coord=\"top-left:(560,409); bottom-right:(2343,1031)\" /><br><figcaption id='102' style='font-size:14px'>자주\u0001있는\u0001일이에요!</figcaption></figure>\n\n<p id='103' data-category='paragraph' style='font-size:14px'>따라서\u0001코드를\u0001보면서\u0001수동으로\u0001수정하고,\u0001conflict\u0001해결하고\u0001나서</p>\n<br><p id='104' data-category='list' style='font-size:14px'>git\u0001add\u0001파일명<br>git\u0001commit\u0001-m\u0001“커밋메시지”</p>\n<br><p id='105' data-category='paragraph' style='font-size:14px'>를\u0001해줍시다!</p>\n<header id='106' style='font-size:16px'>Branch\u0001and\u0001Merge</header>\n<br><h1 id='107' style='font-size:20px'>git\u0001merge\u0001+</h1>\n<figure id='108'><img alt=\"\" data-coord=\"top-left:(199,430); bottom-right:(1355,804)\" /></figure>\n<figure id='109'><img alt=\"\" data-coord=\"top-left:(201,840); bottom-right:(1387,1202)\" /></figure>\n<br><h1 id='110' style='font-size:14px'>3-way\u0001merge는\u0001다음과\u0001같이\u0001진행됩니다.</h1>\n<p id='111' data-category='list' style='font-size:14px'>1.\u0001공통\u0001조상\u0001참고\u0001(main과\u0001브랜치가\u0001나뉘기\u0001전의\u0001커밋)<br>2.\u0001main\u0001브랜치의\u0001현재\u0001상태\u0001(HEAD)<br>3.\u0001병합\u0001대상\u0001브랜치의\u0001현재\u0001상태</p>\n<h1 id='112' style='font-size:14px'>이\u0001세\u0001파일들을\u0001참고하면서\u0001수정을\u0001하게\u0001됩니다.</h1>\n<h1 id='113' style='font-size:14px'>참고로,\u0001main\u0001브랜치의\u0001현재\u0001상태가\u0001분기\u0001전의\u0001상태와<br>같을\u0001때의\u0001merge의\u0001경우\u0001fast-foward\u0001merge라고\u0001합니다!</h1>\n<header id='114' style='font-size:16px'>Branch\u0001and\u0001Merge</header>\n<br><h1 id='115' style='font-size:20px'>git\u0001merge\u0001++</h1>\n<figure id='116'><img alt=\"\" data-coord=\"top-left:(162,413); bottom-right:(1500,1224)\" /></figure>\n<br><h1 id='117' style='font-size:14px'>모든\u0001merge\u0001방식을\u00013-way\u0001merge로\u0001하면<br>기록이\u0001지저분하고\u0001복잡하고...\u0001버전\u0001관리도\u0001어려워요!</h1>\n<h1 id='118' style='font-size:14px'>클린\u0001앤\u0001깔끔을\u0001위해서는\u0001어떻게\u0001할까요?</h1>\n<h1 id='119' style='font-size:14px'>merge를\u0001하더라도\u0001브랜치는\u0001자동으로\u0001삭제되지\u0001않습니다.<br>따라서\u0001필요가\u0001없어진\u0001브랜치는\u0001그때그때\u0001삭제하는\u0001것이\u0001좋아요.</h1>\n<h1 id='120' style='font-size:14px'>git\u0001branch\u0001-d\u0001브랜치이름:\u0001병합\u0001완료된\u0001브랜치\u0001삭제</h1>\n<h1 id='121' style='font-size:14px'>git\u0001branch\u0001-D\u0001브랜치이름:\u0001병합되지\u0001않은\u0001브랜치\u0001삭제</h1>\n<header id='122' style='font-size:16px'>Branch\u0001and\u0001Merge</header>\n<br><p id='123' data-category='paragraph' style='font-size:20px'>git\u0001merge\u0001++</p>\n<figure id='124'><img alt=\"\" data-coord=\"top-left:(199,430); bottom-right:(1357,804)\" /></figure>\n<figure id='125'><img alt=\"\" data-coord=\"top-left:(201,840); bottom-right:(1385,1201)\" /></figure>\n<br><h1 id='126' style='font-size:14px'>3-way\u0001merge는\u0001다음과\u0001같이\u0001진행됩니다.</h1>\n<p id='127' data-category='list' style='font-size:14px'>1.\u0001공통\u0001조상\u0001참고\u0001(main과\u0001브랜치가\u0001나뉘기\u0001전의\u0001커밋)<br>2.\u0001main\u0001브랜치의\u0001현재\u0001상태\u0001(HEAD)<br>3.\u0001병합\u0001대상\u0001브랜치의\u0001현재\u0001상태</p>\n<h1 id='128' style='font-size:14px'>이\u0001세\u0001파일들을\u0001참고하면서\u0001수정을\u0001하게\u0001됩니다!</h1>\n<header id='129' style='font-size:16px'>Branch\u0001and\u0001Merge</header>\n<br><p id='130' data-category='paragraph' style='font-size:20px'>git\u0001merge\u0001++</p>\n<figure id='131'><img alt=\"\" data-coord=\"top-left:(165,384); bottom-right:(1415,716)\" /></figure>\n<br><h1 id='132' style='font-size:18px'>rebase\u0001and\u0001merge</h1>\n<h1 id='133' style='font-size:14px'>새로운\u0001브랜치의\u0001시작점을\u0001메인\u0001브랜치\u0001끝으로\u0001옮긴\u0001뒤,<br>fast-forward\u0001merge를\u0001진행합니다!</h1>\n<figure id='134'><img alt=\"\" data-coord=\"top-left:(190,838); bottom-right:(1413,1193)\" /></figure>\n<br><h1 id='135' style='font-size:14px'>git\u0001rebase\u0001main\u0001(새로운\u0001브랜치에서)<br>git\u0001merge\u0001브랜치\u0001이름\u0001(main\u0001브랜치에서)</h1>\n<p id='136' data-category='paragraph' style='font-size:18px'>sqash\u0001and\u0001merge</p>\n<figure id='137'><img alt=\"\" data-coord=\"top-left:(195,1242); bottom-right:(1412,1567)\" /><br><figcaption id='138' style='font-size:14px'>새로운\u0001브랜치에\u0001있던\u0001애들이\u0001main의\u0001새로운\u0001커밋<br>하나로\u0001이동합니다.</figcaption></figure>\n\n<p id='139' data-category='paragraph' style='font-size:14px'>git\u0001merge\u0001--sqash\u0001브랜치이름<br>git\u0001commit\u0001-m\u0001<커밋\u0001메시지></p>\n<h1 id='140' style='font-size:14px'>Recovery</h1>\n<p id='141' data-category='paragraph' style='font-size:20px'>git<br>restore</p>\n<br><h1 id='142' style='font-size:16px'>도르마무</h1>\n<br><h1 id='143' style='font-size:14px'>Recovery</h1>\n<figure id='144'><img style='font-size:14px' alt=\"git\nrestore\n파일명\ngit\nrestore\n.\" data-coord=\"top-left:(165,456); bottom-right:(2063,1142)\" /></figure>\n<br><figure id='145'><img alt=\"\" data-coord=\"top-left:(2138,283); bottom-right:(2887,709)\" /></figure>\n<h1 id='146' style='font-size:14px'>→<br>최근<br>커밋된<br>상태로<br>수정내역<br>되돌리기</h1>\n<p id='147' data-category='paragraph' style='font-size:14px'>git<br>restore<br>--source<br><커밋<br>id><br><파일명><br>→<br>해당<br>커밋<br>id로<br>수정내역<br>되돌리기</p>\n<p id='148' data-category='paragraph' style='font-size:14px'>git<br>restore<br>--staged<br>파일명</p>\n<br><h1 id='149' style='font-size:14px'>→<br>파일의<br>staging<br>취소</h1>\n<header id='150' style='font-size:14px'>Recovery</header>\n<br><h1 id='151' style='font-size:20px'>git<br>revert</h1>\n<p id='152' data-category='paragraph' style='font-size:16px'>커밋을<br>없애자!!</p>\n<figure id='153'><img alt=\"\" data-coord=\"top-left:(184,785); bottom-right:(1251,1017)\" /></figure>\n<br><h1 id='154' style='font-size:14px'>1.<br>git<br>revert<br>커밋<br>id<br>git<br>revert<br>id1<br>id2<br>커밋<br>id에<br>해당하는<br>커밋<br>삭제</h1>\n<h1 id='155' style='font-size:14px'>git<br>revert<br>HEAD:<br>가장<br>최근<br>커밋을<br>삭제</h1>\n<p id='156' data-category='paragraph' style='font-size:14px'>2.<br>에디터창이<br>뜨면<br>커밋메시지<br>수정하고<br>창<br>닫기!</p>\n<h1 id='157' style='font-size:20px'>git<br>reset</h1>\n<p id='158' data-category='paragraph' style='font-size:16px'>시간을되돌려...</p>\n<br><header id='159' style='font-size:14px'>Recovery</header>\n<figure id='160'><img alt=\"\" data-coord=\"top-left:(215,585); bottom-right:(1044,822)\" /></figure>\n<br><p id='161' data-category='paragraph' style='font-size:14px'>git<br>reset<br>--hard<br>커밋id<br>→<br>커밋<br>id<br>시점<br>이후<br>삭제</p>\n<h1 id='162' style='font-size:14px'>git<br>reset<br>--soft<br>커밋id<br>→<br>커밋<br>id<br>시점<br>이후를<br>staging<br>area로</h1>\n<h1 id='163' style='font-size:14px'>git<br>reset<br>--mixed<br>커밋id<br>→<br>커밋<br>id<br>시점<br>이후를<br>staging<br>되지<br>않은<br>상태로</h1>\n<p id='164' data-category='paragraph' style='font-size:14px'>되도록이면<br>하지<br>맙시다!!<br>특히<br>협업<br>시에는...</p>\n<h1 id='165' style='font-size:20px'>git<br>stash,<br>git<br>clean</h1>\n<br><header id='166' style='font-size:16px'>Recovery</header>\n<table id='167' style='font-size:14px'><thead><tr><td>항목</td><td>git<br>stash</td><td>git<br>clean</td></tr></thead><tbody><tr><td>🎯<br>목적</td><td>수정한<br>파일<br>잠시<br>보관(나중에<br>다시<br>꺼내 서<br>이어서<br>작업)</td><td>추적되지<br>않은<br>파일/디렉토리<br>삭제(청소)</td></tr><tr><td>대상</td><td>수정한<br>tracked<br>파일<br>(git<br>add<br>안<br>해도 됨)</td><td>untracked<br>파일,<br>.gitignore<br>제외</td></tr><tr><td>대상</td><td>git<br>stash/git<br>stash<br>pop/git<br>stash<br>list</td><td>git<br>clean<br>-n<br>(미리<br>보기)/git<br>clean<br>-f (강제<br>삭제)/git<br>clean<br>-fd<br>(디렉토리<br>포 함)</td></tr><tr><td>데이터<br>복구<br>가능성</td><td>✅<br>stash<br>pop으로<br>복원<br>가능</td><td>❌<br>삭제되면<br>복구<br>어려움</td></tr><tr><td>사용<br>예시</td><td>브랜치<br>전환<br>전에<br>변경사항을<br>임시<br>보관 하고<br>싶을<br>때</td><td>실수로<br>생긴<br>임시<br>파일,<br>빌드<br>결과물<br>등 제거할<br>때</td></tr></tbody></table>\n<p id='168' data-category='paragraph' style='font-size:18px'>git stash & git clean<br>git 어쩌구들</p>\n<h1 id='169' style='font-size:14px'>Collaboration</h1>\n<header id='170' style='font-size:14px'>Collaboration</header>\n<br><h1 id='171' style='font-size:20px'>GitHub</h1>\n<h1 id='172' style='font-size:16px'>GitHub<br>왜<br>씀?</h1>\n<br><p id='173' data-category='list' style='font-size:14px'>로컬에만<br>저장했다가<br>컴퓨터<br>망가지면<br>어캄!!<br>협업<br>합시다.</p>\n<br><h1 id='174' style='font-size:14px'><br><br></h1>\n<br><h1 id='175' style='font-size:14px'><br><br><br><br>→<br>Online<br>repository</h1>\n<br><h1 id='176' style='font-size:16px'>기본<br>명령어들...</h1>\n<br><p id='177' data-category='list' style='font-size:14px'>레포<br>올리기:<br>git<br>push<br>레포<br>내려받기:<br>git<br>clone<br>업데이트<br>된<br>레포<br>내려받기:<br>git<br>pull</p>\n<br><figure id='178'><img alt=\"\" data-coord=\"top-left:(1946,479); bottom-right:(2765,1280)\" /></figure>\n<header id='179' style='font-size:14px'>Collaboration</header>\n<br><h1 id='180' style='font-size:18px'>.gitignore</h1>\n<h1 id='181' style='font-size:14px'>cache\u0001파일같이\u0001있을\u0001이유가\u0001없는\u0001파일들은\u0001push할\u0001때\u0001github에\u0001올라<br>갈\u0001필요가\u0001없어요.</h1>\n<h1 id='182' style='font-size:14px'>특히\u0001.env같이\u0001중요한\u0001내용을\u0001숨겨야\u0001하는\u0001경우\u0001함부로\u0001push하면\u0001안되<br>겠죠?<br>정말\u0001위험하기는\u0001해요...\u0001ㅎㅎ</h1>\n<h1 id='183' style='font-size:14px'>그래서\u0001.gitignore라는\u0001파일을\u0001두어\u0001staging\u0001자체를\u0001막을\u0001수\u0001있어요.</h1>\n<p id='184' data-category='list' style='font-size:14px'>파일명\u0001자체를\u0001무시:\u0001filename\u0001그대로\u0001입력<br>확장자\u0001전체를\u0001무시:\u0001*.ext\u0001입력<br>접두어\u0001조건:\u0001prefix*\u0001입력\u0001→\u0001해당\u0001prefix를\u0001가진\u0001파일\u0001전부\u0001무시<br>예외\u0001처리:\u0001!filename\u0001이\u0001친구만\u0001예외적으로\u0001추적<br>디렉토리:\u0001dirname/\u0001입력</p>\n<br><figure id='185'><img alt=\"\" data-coord=\"top-left:(1847,744); bottom-right:(2806,928)\" /></figure>\n<header id='186' style='font-size:14px'>Collaboration</header>\n<br><h1 id='187' style='font-size:18px'>.github/workflows</h1>\n<h1 id='188' style='font-size:14px'>지속적\u0001통합,\u0001지속적\u0001배포라는\u0001CI/CD라는\u0001용어를\u0001들어보셨나요?</h1>\n<h1 id='189' style='font-size:14px'>프로그램을\u0001만들고,\u0001업데이트를\u0001한다고\u0001해볼게요.<br>어떤\u0001인프라\u0001환경\u0001내에서\u0001프로그램을\u0001구축한\u0001경우,\u0001새로\u0001업데이트를\u0001해<br>야\u0001하면\u0001또\u0001새로\u0001실행하는\u0001귀찮음이\u0001있을\u0001수\u0001있어요.</h1>\n<h1 id='190' style='font-size:14px'>혹은\u0001새로\u0001업데이트를\u0001했는데\u0001버그가\u0001생겨날\u0001수도\u0001있고요.</h1>\n<p id='191' data-category='paragraph' style='font-size:14px'>GitHub\u0001CI/CD는\u0001특정\u0001조건에\u0001따라(예:\u0001PR을\u0001만드는\u0001경우,\u0001main에\u0001병<br>합하는\u0001경우)\u0001자동으로\u0001테스트\u0001및\u0001빌드를\u0001해주는\u0001시스템이\u0001갖추어져\u0001있<br>습니다.\u0001참\u0001좋죠?</p>\n<br><figure id='192'><img alt=\"\" data-coord=\"top-left:(1833,471); bottom-right:(2720,982)\" /></figure>\n<header id='193' style='font-size:14px'>Collaboration</header>\n<br><h1 id='194' style='font-size:18px'>공공예절</h1>\n<h1 id='195' style='font-size:14px'>협업을<br>할<br>때는<br>크게<br>두<br>가지<br>규칙이<br>있는<br>것<br>같아<br>요.</h1>\n<h1 id='196' style='font-size:14px'>첫<br>번째는<br>임무를<br>분담했을<br>때<br>겹치지<br>않으면서<br>잘<br>이어질<br>수<br>있도록<br>하기.<br>가령<br>인풋과<br>아웃풋을<br>서로<br>합의하고<br>가는<br>것이죠.</h1>\n<h1 id='197' style='font-size:14px'>두<br>번째는<br>불문율과<br>적당한<br>매너에요.<br>코드를<br>작성하면서<br>docstring과<br>주석을<br>남겨주는<br>것처럼<br>말이죠.</h1>\n<p id='198' data-category='paragraph' style='font-size:14px'>그래서<br>목차가<br>Collaboration인<br>만큼,<br>이번에는<br>Github<br>매너에<br>대해서<br>알아보도록<br>하겠습니다!</p>\n<br><figure id='199'><img alt=\"\" data-coord=\"top-left:(1446,385); bottom-right:(2835,1179)\" /></figure>\n<header id='200' style='font-size:14px'>Collaboration</header>\n<br><h1 id='201' style='font-size:18px'>공공예절<br>-<br>Pull<br>Request</h1>\n<h1 id='202' style='font-size:14px'>main<br>브랜치(혹은<br>dev<br>브랜치)에<br>바로<br>push하는<br>것은<br>좋은<br>습관이<br>아니에요.<br>항상<br>브랜치를<br>새로<br>파서,<br>main에<br>merge<br>할<br>때<br>코드<br>리뷰어를<br>꼭<br>등록합시다!</h1>\n<h1 id='203' style='font-size:14px'>브랜치<br>이름<br>또한<br>알기<br>쉽게<br>해주면<br>좋아요!</h1>\n<br><p id='204' data-category='list' style='font-size:14px'>feature/기능명:<br>새로운<br>기능을<br>개발하는<br>경우<br>bugfix/버그이름:<br><br>버그<br>수정<br>refactor/기능명:<br>리팩토링<br>(기능<br>변화<br>X)<br>chore/이름:<br>설정,<br>빌드,<br>의존성<br>등<br>잡일<br>test/이름:<br>테스트<br>코드<br>작성<br>및<br>수정</p>\n<p id='205' data-category='paragraph' style='font-size:14px'>코드<br>리뷰어에게<br>부탁했는데,<br>commit<br>message가<br>“qwwqw”<br>이러면<br>속상하겠죠<br>ㅠㅠ<br>꼭<br>의미<br>있는<br>commit<br>메시지를<br>작성해줍시다!<br>예를<br>들어<br>“feat:<br>add<br>user<br>login<br>API”<br>처럼요.</p>\n<header id='206' style='font-size:16px'>Collaboration</header>\n<br><h1 id='207' style='font-size:20px'>공공예절<br>-<br>Review</h1>\n<figure id='208'><img style='font-size:14px' alt=\"필요한\n경우\n코멘트를\n남겨줍시다!\n리뷰어도\n코멘트를\n남기면\n좋아요!\" data-coord=\"top-left:(749,365); bottom-right:(2250,1605)\" /></figure>\n<header id='209' style='font-size:14px'>Collaboration</header>\n<br><h1 id='210' style='font-size:18px'>공공예절<br>-<br>Branch<br>ruleset</h1>\n<figure id='211'><img alt=\"\" data-coord=\"top-left:(327,342); bottom-right:(2632,1625)\" /></figure>\n<h1 id='212' style='font-size:14px'>감사합니다!</h1>",
    "1S2WbhK2tkySe9mXSGPLT-HKoLte_hj5E": "<h1 id='0' style='font-size:22px'>🙈</h1>\n<br><h1 id='1' style='font-size:22px'>[ 1회차] CS 기초 과제</h1>\n<h1 id='2' style='font-size:18px'>발제자: 손재훈</h1>\n<h1 id='3' style='font-size:20px'>기간</h1>\n<br><p id='4' data-category='paragraph' style='font-size:18px'>마감: 7월 14일 23시 59분<br>지각 제출: 7월 15일 23시 59분</p>\n<h1 id='5' style='font-size:20px'>소개</h1>\n<br><h1 id='6' style='font-size:18px'>안녕하세요! 첫 교육 세션은 어땠나요?</h1>\n<br><h1 id='7' style='font-size:16px'>이번에는 CS 기초 과제입니다!</h1>\n<br><p id='8' data-category='paragraph' style='font-size:16px'>과제가 총 세가지이지만, 그 중 한가지는 Python 과제를 수행해야 할 수 있는 과제이기 때문에<br>Python 과제를 먼저 하실 것을 권장드립니다.</p>\n<br><p id='9' data-category='paragraph' style='font-size:16px'>첫 번째 과제는 VScode에서 WSL 접속하기(매우 쉬워요!), 두 번째 과제는 파이썬 과제에서 작성한<br>.py 파일들을 shell script을 통해 자동으로 실행하는 과제입니다.</p>\n<h1 id='10' style='font-size:20px'>명세</h1>\n<h1 id='11' style='font-size:20px'>WSL 접속하기</h1>\n<br><p id='12' data-category='list' style='font-size:16px'> 교육세션에서 했을 거에요! 그러니 크게 설명할 것은 없겠죠…??<br> VScode로 WSL에 접속하게 되면 다음과 같은 터미널을 볼 수 있을거에요.</p>\n<footer id='13' style='font-size:14px'>[1회차] CS 기초 과제</footer>\n<br><footer id='14' style='font-size:14px'>1</footer>\n<figure id='15'><img alt=\"\" data-coord=\"top-left:(148,148); bottom-right:(1094,459)\" /></figure>\n<p id='16' data-category='paragraph' style='font-size:20px'>위의 화면을 캡처해주시고, terminal.png 로 저장해줍시다.<br>너무 쉽죠! 끝입니다~</p>\n<h1 id='17' style='font-size:22px'>Shell Script 작성</h1>\n<br><p id='18' data-category='list' style='font-size:18px'> 리눅스를 사용할 수 있는 환경이 만들어졌어요.</p>\n<p id='19' data-category='paragraph' style='font-size:18px'> 그러면 Python 과제의 submission 폴더의 파일들을 쉘 스크립트로 실행하면 됩니다. 이때, 쉘 스크<br>립트에는 다음과 같은 조건을 만족시켜야 합니다.</p>\n<br><p id='20' data-category='paragraph' style='font-size:18px'>conda 가상환경 실행</p>\n<br><p id='21' data-category='paragraph' style='font-size:20px'>miniconda가 설치되어 있지 않은 환경에서도 돌아가야 해요! 즉, miniconda가 설치되<br>지 않았다면 설치 명령어가 있어야겠죠?</p>\n<br><p id='22' data-category='paragraph' style='font-size:18px'>submission 폴더의 파일들을 실행</p>\n<br><p id='23' data-category='list' style='font-size:20px'>각 파이썬 파일의 입력은 input directory의 {문제이름}_input 을 input으로 넣기!<br>각 파이썬 파일의 output은 output directory의 {문제 번호}_output 파일로 저장!</p>\n<p id='24' data-category='paragraph' style='font-size:16px'>mypy test 수행</p>\n<p id='25' data-category='paragraph' style='font-size:18px'>수행이 잘 됐는지 확인을 위해, mypy_log.txt 로 자동 저장되도록 해주세요!</p>\n<p id='26' data-category='paragraph' style='font-size:16px'>conda.yml 저장</p>\n<br><p id='27' data-category='paragraph' style='font-size:18px'>물론~ 라이브러리를 하나만 설치했지만 그래도 세션에서 이런 게 있다 했으니 또 자동으<br>로 저장되도록 해주세요!</p>\n<br><p id='28' data-category='paragraph' style='font-size:20px'>주의!!</p>\n<p id='29' data-category='paragraph' style='font-size:18px'>.sh 파일은 제공됩니다! #TODO 부분만 완성해주시면 됩니다! # 건드리지마세요! 부분은 건드리면<br>안돼요 ㅠㅠ</p>\n<p id='30' data-category='paragraph' style='font-size:18px'>채점시 script.sh 가 실행될 디렉토리는 다음과 같습니다. 반드시 이 기준으로 script를 만들어주세요!</p>\n<footer id='31' style='font-size:14px'>[1회차] CS 기초 과제</footer>\n<br><footer id='32' style='font-size:14px'>2</footer>\n<h1 id='33' style='font-size:18px'>- input</h1>\n<br><p id='34' data-category='paragraph' style='font-size:18px'> 2243_input<br> 3080_input # .. 등등의 input 파일들</p>\n<br><p id='35' data-category='list' style='font-size:18px'>- output # output이 저장될 directory<br>- submission</p>\n<br><p id='36' data-category='list' style='font-size:18px'> 2243.py<br> 3080.py # .. 등등의 파이썬 파일들</p>\n<br><h1 id='37' style='font-size:18px'>- script.sh</h1>\n<h1 id='38' style='font-size:22px'>제출 방법</h1>\n<br><p id='39' data-category='paragraph' style='font-size:18px'>앞서 캡쳐했던 두가지 이미지와 쉘스크립트 파일을 제출해주세요</p>\n<h1 id='40' style='font-size:18px'> YBIGTA_newbie_assignment</h1>\n<br><p id='41' data-category='list' style='font-size:18px'> 21Python<br> 22CS_basics</p>\n<br><p id='42' data-category='list' style='font-size:18px'>- vscode.png<br>- script.sh<br>- mypy_log.txt<br>- conda.yml</p>\n<h1 id='43' style='font-size:22px'>채점 기준</h1>\n<br><p id='44' data-category='paragraph' style='font-size:18px'>[조건1] 잘 접속하신것을 이미지 캡처 후에,</p>\n<p id='45' data-category='paragraph' style='font-size:16px'>제 리눅스 쉘에서 script.sh 를 실행했을 때</p>\n<p id='46' data-category='list' style='font-size:18px'>[조건2] 가상환경 activate되고<br>[조건3] {문제번호}_output 이 생성되고<br>[조건4] mypy 테스트까지 통과한다면<br>[조건5] mypy_log.txt 와 conda.yml 파일이 자동 저장된다면</p>\n<p id='47' data-category='paragraph' style='font-size:20px'>통과입니다!!</p>\n<br><p id='48' data-category='paragraph' style='font-size:18px'>위의 다섯 조건 중 하나라도 만족시키지 않는다면 과제 미흡입니다!<br>폴더명 및 파일명은 반드시 제공된 가이드라인을 따라주세요!</p>\n<footer id='49' style='font-size:14px'>[1회차] CS 기초 과제</footer>\n<br><footer id='50' style='font-size:14px'>3</footer>",
    "1O-GdoSRO5FJmV91cKv39BOEK_aoz8D8y": "<h1 id='0' style='font-size:22px'>2회차) CS기초 사전 과제!</h1>\n<h1 id='1' style='font-size:18px'>발제자: 손재훈</h1>\n<h1 id='2' style='font-size:20px'>intro</h1>\n<br><h1 id='3' style='font-size:16px'>즐거운 사전 과제 시간입니다!</h1>\n<h1 id='4' style='font-size:20px'>명세</h1>\n<br><p id='5' data-category='paragraph' style='font-size:16px'>첫 정규 교육 세션을 하기 전 설치해야 할 프로그램들 목록입니다.</p>\n<br><p id='6' data-category='list' style='font-size:16px'> VScode<br> Anaconda<br> Ubuntu 22.04 LTS<br> Docker Desktop</p>\n<h1 id='7' style='font-size:20px'>VScode & Anaconda</h1>\n<br><p id='8' data-category='paragraph' style='font-size:16px'>사전 과제와 함께 Python/개발환경 발표자료가 올라갈거에요. 해당 발표자료의 Prerequisites 파트<br>를 참고해줍시다.</p>\n<br><p id='9' data-category='paragraph' style='font-size:16px'>https://drive.google.com/drive/u/0/folders/1T4l-GnL5tZhnJKhwTEXLKw8TmHgn1epV<br>MacOS 사용자의 경우 아래의 두 링크를 참고해주세요!</p>\n<br><p id='10' data-category='paragraph' style='font-size:16px'>Anaconda 설치 가이드</p>\n<br><p id='11' data-category='paragraph' style='font-size:16px'>https://blog.naver.com/codeitofficial/223497711349</p>\n<br><p id='12' data-category='paragraph' style='font-size:16px'>VScode 설치 가이드</p>\n<br><p id='13' data-category='paragraph' style='font-size:16px'>https://www.codeit.kr/tutorials/67/vscode-tutorial-macos</p>\n<h1 id='14' style='font-size:20px'>Ubuntu 22.04 LTS</h1>\n<br><h1 id='15' style='font-size:18px'><윈도우 사용자></h1>\n<p id='16' data-category='paragraph' style='font-size:16px'>wsl --install</p>\n<footer id='17' style='font-size:14px'>2회차) CS기초 사전 과제!</footer>\n<br><footer id='18' style='font-size:14px'>1</footer>\n<caption id='19' style='font-size:16px'>wsl --install -d Ubuntu-22.04</caption>\n<p id='20' data-category='paragraph' style='font-size:20px'>이 두 줄을 그대로 powershell에서 작성해줍시다! 이후 VScode를 켜서 extension에 들어가줍시다.</p>\n\n<figure id='22'><img alt=\"\" data-coord=\"top-left:(151,326); bottom-right:(1093,695)\" /><br><figcaption id='21' style='font-size:14px'>또는 Ctrl  Shift  X 단축키를 사용해봅시다.</figcaption></figure>\n<p id='23' data-category='paragraph' style='font-size:16px'>설치가 다 되었으면, Ctrl  Shift  P 누르면 > 로 시작하는 Command Palette가 열릴거에요.</p>\n<h1 id='24' style='font-size:20px'>접속해줍시다!</h1>\n<h1 id='25' style='font-size:18px'>MacOS 사용자의 경우 아래를 참고해줍시다!</h1>\n<br><p id='26' data-category='paragraph' style='font-size:16px'>https://velog.io/@o_joon_/Linux-Mac%EC%97%90<br>%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BDUbuntu-Server-<br>%EC%84%A4%EC%B9%98</p>\n<h1 id='27' style='font-size:22px'>Docker Desktop</h1>\n<br><h1 id='28' style='font-size:16px'>https://www.docker.com/products/docker-desktop/</h1>\n<br><h1 id='29' style='font-size:18px'>해당 사이트를 참고해줍시다!</h1>\n<footer id='30' style='font-size:14px'>2회차) CS기초 사전 과제!</footer>\n<br><footer id='31' style='font-size:14px'>2</footer>",
    "1eXC7kluS_Of-QD1PpC1WkzxBpyRDAZ5S": "<header id='0' style='font-size:14px'>2025-2\u0001YBIGTA</header>\n<h1 id='1' style='font-size:20px'>CS 기초</h1>\n<footer id='2' style='font-size:16px'>26기\u0001이서현</footer>\n<h1 id='3' style='font-size:20px'>목<br>차</h1>\n<p id='4' data-category='list' style='font-size:14px'>1. OS</p>\n<p id='5' data-category='list' style='font-size:16px'>2. Linux</p>\n<p id='6' data-category='list' style='font-size:16px'>3. Docker</p>\n<p id='7' data-category='list' style='font-size:16px'>4. 실습</p>\n<h1 id='8' style='font-size:14px'>OS</h1>\n<header id='9' style='font-size:14px'>OS</header>\n<br><h1 id='10' style='font-size:20px'>운영체제<br>(OS)</h1>\n<p id='11' data-category='list' style='font-size:16px'>사용자와<br>컴퓨터<br>간의<br>인터페이스<br>역할<br>하드웨어를<br>직접<br>프로그래밍하는<br>것은<br>매우<br>어렵고<br>비효율적</p>\n<figure id='12'><img alt=\"\" data-coord=\"top-left:(792,934); bottom-right:(994,1120)\" /></figure>\n<br><figure id='13'><img alt=\"\" data-coord=\"top-left:(1620,864); bottom-right:(1957,1063)\" /></figure>\n<figure id='14'><img alt=\"\" data-coord=\"top-left:(1529,1136); bottom-right:(1848,1291)\" /></figure>\n<br><figure id='15'><img alt=\"\" data-coord=\"top-left:(1214,1208); bottom-right:(1399,1389)\" /></figure>\n<header id='16' style='font-size:14px'>OS</header>\n<br><h1 id='17' style='font-size:20px'>커널<br>(Kernel)</h1>\n<p id='18' data-category='list' style='font-size:16px'>운영체제의<br>핵심<br>부분<br>하드웨어와<br>응용<br>프로그램<br>사이에서<br>중간<br>관리자<br>역할<br>컴퓨터<br>시스템의<br>하드웨어와<br>소프트웨어<br>자원을<br>관리<br>OS<br>=<br>커널<br>+<br>시스템<br>유틸리티<br>+<br>사용자<br>인터페이스</p>\n<figure id='19'><img alt=\"\" data-coord=\"top-left:(975,765); bottom-right:(2019,1585)\" /></figure>\n<h1 id='20' style='font-size:14px'>Linux</h1>\n<h1 id='21' style='font-size:20px'>리눅스<br>(Linux)</h1>\n<p id='22' data-category='list' style='font-size:16px'>Unix-like<br>유닉스<br>철학과<br>구조를<br>따르는<br>운영<br>체제<br>리눅스<br>커널<br>기반<br>무려<br>오픈소스!<br>서버,<br>개발,<br>안드로이드<br>등<br>다양한<br>환경에서<br>사용</p>\n<br><header id='23' style='font-size:14px'>Linux</header>\n<figure id='24'><img alt=\"\" data-coord=\"top-left:(2155,553); bottom-right:(2751,1247)\" /></figure>\n<br><p id='25' data-category='paragraph' style='font-size:16px'>리눅스의<br>마스코트,<br>Tux</p>\n<header id='26' style='font-size:14px'>Linux</header>\n<br><h1 id='27' style='font-size:20px'>Linux\u0001Architecture</h1>\n<h1 id='28' style='font-size:16px'>Kernel</h1>\n<br><p id='29' data-category='list' style='font-size:16px'>하드웨어\u0001자원(CPU,\u0001메모리,\u0001디스크\u0001등)을\u0001직접\u0001제어하는\u0001핵심<br>프로세스\u0001관리,\u0001메모리\u0001관리,\u0001파일\u0001시스템,\u0001장치\u0001제어\u0001담당</p>\n<h1 id='30' style='font-size:16px'>Shell</h1>\n<br><p id='31' data-category='list' style='font-size:16px'>\u0001사용자와\u0001커널\u0001사이를\u0001연결해주는\u0001인터페이스<br>\u0001명령어\u0001입력을\u0001받아\u0001커널에\u0001전달\u0001(예:\u0001bash,\u0001zsh\u0001등)</p>\n<h1 id='32' style='font-size:16px'>Application\u0001&\u0001Utilities</h1>\n<br><figure id='33'><img alt=\"\" data-coord=\"top-left:(1894,543); bottom-right:(2983,1129)\" /></figure>\n<br><h1 id='34' style='font-size:16px'>사용자\u0001프로그램\u0001및\u0001시스템\u0001도구\u0001(예:\u0001gcc,\u0001ls,\u0001vim\u0001등)</h1>\n<header id='35' style='font-size:14px'>Linux</header>\n<br><h1 id='36' style='font-size:20px'>GUI\u0001&\u0001CLI</h1>\n<h1 id='37' style='font-size:16px'>GUI\u0001:\u0001Graphical\u0001User\u0001Interface<br>그래픽\u0001요소를\u0001사용하여\u0001컴퓨터와\u0001소통하는\u0001인터페이스<br>ex)\u0001Windows/Mac\u0001OS</h1>\n<h1 id='38' style='font-size:16px'>CLI\u0001:\u0001Command\u0001Line\u0001Interface<br>텍스트\u0001명령어를\u0001입력하여\u0001컴퓨터와\u0001소통하는\u0001인터페이스<br>ex)\u0001Windows\u0001cmd,\u0001Mac\u0001terminal,\u0001Linux\u0001bash</h1>\n<h1 id='39' style='font-size:16px'>사용\u0001예시:</h1>\n<br><p id='40' data-category='list' style='font-size:16px'>서버\u0001관리:\u0001CLI\u0001사용\u0001(ssh\u0001등)<br>데스크탑\u0001사용자:\u0001GUI\u0001환경\u0001선호<br>대규모\u0001작업\u0001자동화:\u0001CLI\u0001+\u0001Shell\u0001script</p>\n<br><figure id='41'><img alt=\"\" data-coord=\"top-left:(1736,633); bottom-right:(2059,951)\" /></figure>\n<br><figure id='42'><img alt=\"\" data-coord=\"top-left:(2401,654); bottom-right:(2738,951)\" /></figure>\n<h1 id='43' style='font-size:20px'>다양한<br>배포판</h1>\n<br><header id='44' style='font-size:14px'>Linux</header>\n<p id='45' data-category='list' style='font-size:16px'>다양한<br>배포판<br>존재<br>대부분<br>오픈소스<br>(무료!)<br>예시:</p>\n<br><p id='46' data-category='list' style='font-size:16px'>Ubuntu:<br>초보자<br>친화,<br>많은<br>튜토리얼<br>CentOS:<br>서버용,<br>안정성<br>위주<br>Arch:<br>최소한의<br>시스템만<br>설치<br></p>\n<br><h1 id='47' style='font-size:16px'>실습에서는<br>Ubuntu<br>사용</h1>\n<br><figure id='48'><img alt=\"\" data-coord=\"top-left:(2247,424); bottom-right:(2379,555)\" /></figure>\n<br><figure id='49'><img alt=\"\" data-coord=\"top-left:(2631,427); bottom-right:(2768,549)\" /></figure>\n<figure id='50'><img alt=\"\" data-coord=\"top-left:(2633,614); bottom-right:(2771,752)\" /></figure>\n<figure id='51'><img alt=\"\" data-coord=\"top-left:(2633,794); bottom-right:(2767,954)\" /></figure>\n<figure id='52'><img alt=\"\" data-coord=\"top-left:(1857,1199); bottom-right:(1990,1329)\" /></figure>\n<br><figure id='53'><img alt=\"\" data-coord=\"top-left:(2030,1175); bottom-right:(2209,1342)\" /></figure>\n<br><figure id='54'><img alt=\"\" data-coord=\"top-left:(2264,1017); bottom-right:(2365,1084)\" /></figure>\n<br><figure id='55'><img alt=\"\" data-coord=\"top-left:(2441,986); bottom-right:(2577,1157)\" /></figure>\n<figure id='56'><img alt=\"\" data-coord=\"top-left:(2230,1177); bottom-right:(2399,1352)\" /></figure>\n<header id='57' style='font-size:14px'>Linux</header>\n<br><h1 id='58' style='font-size:20px'>Why\u0001Linux?</h1>\n<h1 id='59' style='font-size:16px'>보안성</h1>\n<br><h1 id='60' style='font-size:16px'>오픈소스\u0001기반으로\u0001투명한\u0001보안\u0001관리\u0001가능,\u0001사용자\u0001권한\u0001분리로\u0001보안성\u0001우수<br>안정성</h1>\n<br><p id='61' data-category='list' style='font-size:16px'>서버나\u0001시스템을\u0001장시간\u0001실행해도\u0001크래시\u0001없이\u0001안정적으로\u0001동작<br>윈도우랑\u0001다르게\u0001업데이트마다\u0001재부팅할\u0001필요\u0001없음</p>\n<br><h1 id='62' style='font-size:16px'>이식성</h1>\n<br><h1 id='63' style='font-size:16px'>다양한\u0001플랫폼(서버,\u0001데스크탑,\u0001임베디드,\u0001클라우드)에서\u0001동일한\u0001환경\u0001제공</h1>\n<br><h1 id='64' style='font-size:16px'>무료\u0001및\u0001오픈소스</h1>\n<br><p id='65' data-category='paragraph' style='font-size:16px'>누구나\u0001자유롭게\u0001사용,\u0001수정,\u0001배포\u0001가능\u0001→\u0001비용\u0001부담\u0001없음</p>\n<br><h1 id='66' style='font-size:16px'>개발자\u0001친화성</h1>\n<br><p id='67' data-category='paragraph' style='font-size:16px'>터미널\u0001중심\u0001환경,\u0001패키지\u0001시스템,\u0001다양한\u0001개발\u0001도구\u0001지원</p>\n<h1 id='68' style='font-size:20px'>Linux의<br>관리자<br>권한</h1>\n<br><header id='69' style='font-size:14px'>Linux</header>\n<h1 id='70' style='font-size:16px'>sudo</h1>\n<br><p id='71' data-category='list' style='font-size:16px'>superuser<br>do의<br>약자<br>관리자<br>권한(root)으로<br>명령어를<br>실행할<br>수<br>있게<br>해주는<br>명령어<br>시스템을<br>변경하거나<br>중요한<br>설정을<br>바꿀<br>땐<br>반드시<br>관리자<br>권한<br>필요<br>대부분의<br>리눅스<br>배포판에서<br>기본<br>제공</p>\n<h1 id='72' style='font-size:16px'>관련<br>명령어</h1>\n<br><p id='73' data-category='list' style='font-size:16px'>sudo<br>:<br>관리자<br>권한으로<br>명령어<br>실행<br>su<br>:<br>다른<br>사용자<br>또는<br>관리자로<br>전환<br>chmod<br>:<br>파일/디렉토리<br>접근<br>권한<br>변경<br>chown<br>:<br>파일/디렉토리<br>소유자<br>변경<br>usermod<br>:<br>사용자<br>정보<br>수정</p>\n<header id='74' style='font-size:16px'>Linux</header>\n<br><h1 id='75' style='font-size:20px'>Package\u0001Manager</h1>\n<p id='76' data-category='list' style='font-size:18px'>Package\u0001Manager\u0001:\u0001소프트웨어(패키지)를\u0001설치,\u0001업데이트,\u0001삭제,\u0001검색하는\u0001일을\u0001도와주는\u0001도구<br>배포판에\u0001따라\u0001다양한\u0001패키지\u0001매니저\u0001존재<br>\u0001→\u0001apt\u0001(Ubuntu),\u0001yum\u0001(CentOS),\u0001dnf,\u0001brew\u0001(macOS),\u0001choco\u0001(Windows)</p>\n<h1 id='77' style='font-size:18px'>예시\u0001:\u0001apt\u0001(Advanced\u0001Package\u0001Tool)</h1>\n<br><p id='78' data-category='list' style='font-size:18px'>Ubuntu\u0001계열에서\u0001사용하는\u0001대표적인\u0001패키지\u0001매니저<br>apt로\u0001아래와\u0001같은\u0001명령어들을\u0001사용할\u0001수\u0001있음</p>\n<br><figure id='79'><img style='font-size:14px' alt=\"sudo\u0001apt\u0001update\u0001:\u0001패키지\u0001목록\u0001최신화\nsudo\u0001apt\u0001upgrade\u0001:\u0001설치된\u0001패키지\u0001전체\u0001업그레이드\n작동\u0001원리\nsudo\u0001apt\u0001install\u0001[패키지명]\u0001:\u0001새로운\u0001패키지\u0001설치\n1. \u0001사용자가\u0001명령어\u0001입력\u0001(sudo\u0001apt\u0001install)\n2. \u0001Package\u0001Manager가\u0001Repository에\u0001접속\n3. \u0001Metadata\u0001정보\u0001확인\u0001→\u0001패키지\u0001+\u0001의존성\u0001다운로드\n4. \u0001시스템에\u0001설치\u0001및\u0001구성\u0001완료\" data-coord=\"top-left:(337,885); bottom-right:(2999,1615)\" /></figure>\n<header id='80' style='font-size:14px'>Linux</header>\n<br><h1 id='81' style='font-size:20px'>Linux의<br>파일<br>시스템</h1>\n<h1 id='82' style='font-size:16px'>“Everything<br>is<br>a<br>file”</h1>\n<br><p id='83' data-category='list' style='font-size:16px'>Unix<br>철학<br>계승<br>:<br>장치,<br>디렉토리,<br>텍스트,<br>프로세스,<br>소켓<br>등<br>모든<br>것을<br>파일처럼<br>다룸<br>파일<br>시스템은<br>/(루트<br>디렉토리)<br>아래<br>계층적<br>구조로<br>구성됨</p>\n<h1 id='84' style='font-size:16px'><br><br><br><br><br><br>↔<br>윈도우는<br>파일<br>시스템과<br>시스템<br>자원(장치,<br>레지스트리<br>등)을<br>따로<br>구분</h1>\n<figure id='85'><img alt=\"\" data-coord=\"top-left:(764,883); bottom-right:(2252,1580)\" /></figure>\n<header id='86' style='font-size:14px'>Linux</header>\n<br><h1 id='87' style='font-size:20px'>상대경로<br>&<br>절대경로<br></h1>\n<h1 id='88' style='font-size:16px'>현재<br>디렉토리는<br>.<br>으로,<br>상위<br>디렉토리는<br>..<br>으로<br>표현</h1>\n<h1 id='89' style='font-size:16px'>절대경로:<br><br><br><br><br>/(루트)부터<br>시작하는<br>전체<br>경로<br><br><br><br><br><br>예)<br>/home/user/documents<br>상대경로:<br><br><br><br><br>현재<br>위치를<br>기준으로<br>한<br>경로<br><br><br><br><br><br>예)<br>../documents<br>→<br>상위<br>디렉토리의<br>documents<br>폴더</h1>\n<header id='90' style='font-size:14px'>Linux</header>\n<br><h1 id='91' style='font-size:20px'>디렉토리도<br>역시<br>파일</h1>\n<h1 id='92' style='font-size:16px'>Linux의<br>관점:<br>\"Everything<br>is<br>a<br>file\"</h1>\n<br><p id='93' data-category='list' style='font-size:16px'>디렉토리도<br>하나의<br>파일로<br>취급<br>내부에는<br>포함된<br>파일들에<br>대한<br>정보를<br>담고<br>있음<br>디렉토리<br>파일<br>내부에<br>.,<br>..<br>항목의<br>inode<br>정보<br>포함<br><br><br><br><br><br><br><br><br><br><br><br><br>→<br>현재<br>위치와<br>상위<br>디렉토리를<br>추적할<br>수<br>있게<br>해줌</p>\n<h1 id='94' style='font-size:16px'>윈도우에서도<br>cd<br>..<br>명령이<br>가능한<br>이유?</h1>\n<br><p id='95' data-category='list' style='font-size:16px'><br>리눅스와<br>마찬가지로<br>디렉토리<br>구조가<br>계층적으로<br>되어<br>있기<br>때문<br><br>단,<br>윈도우는<br>디렉토리를<br>일반<br>파일과<br>구분해서<br>다룸</p>\n<footer id='96' style='font-size:16px'>inode<br>:<br>Index<br>Node의<br>줄임말,<br>파일의<br>메타<br>데이터<br>저장</footer>\n<h1 id='97' style='font-size:20px'>command<br>(1)</h1>\n<br><header id='98' style='font-size:16px'>Linux</header>\n<table id='99' style='font-size:14px'><thead><tr><td>명령어</td><td>설명</td></tr></thead><tbody><tr><td>ls</td><td>디렉토리<br>내<br>파일<br>목록<br>보기<br>(list)</td></tr><tr><td>ls<br>-l</td><td>파일<br>및<br>폴더에<br>대한<br>자세한<br>정보와<br>함께<br>보여주기</td></tr><tr><td>ls<br>-a</td><td>숨겨진<br>파일을<br>포함하여<br>모든<br>파일을<br>보여주기</td></tr><tr><td>cd</td><td>해당<br>경로로<br>이동<br>(change<br>directory)</td></tr><tr><td>cd<br>myfolder</td><td>현재<br>디렉토리에서<br>myfolder라는<br>폴더로<br>이동</td></tr><tr><td>cd<br>..</td><td>상위<br>디렉토리로<br>이동</td></tr><tr><td>pwd</td><td>현재<br>디렉토리<br>경로<br>출력<br>(print<br>working<br>directory)</td></tr><tr><td>mkdir</td><td>새<br>디렉토리<br>생성<br>(make<br>directory)</td></tr><tr><td>mkdir<br>myfolder</td><td>현재<br>디렉토리에<br>myfolder<br>라는<br>이름의<br>디렉토리<br>생성</td></tr><tr><td>mkdir<br>-p<br>a/b</td><td>a<br>디렉토리<br>안에<br>b<br>디렉토리<br>생성 -p는<br>parent,<br>상위<br>디렉토리가<br>없으면<br>생성하는<br>옵션</td></tr><tr><td>rmdir</td><td>빈<br>디렉토리<br>삭제.<br>단,<br>디렉토리가<br>비어있을<br>때만<br>작동<br>(remove<br>directory)</td></tr><tr><td>rmdir<br>myfolder</td><td>현재<br>디렉토리에<br>myfolder<br>라는<br>이름의<br>디렉토리<br>삭제</td></tr></tbody></table>\n<header id='100' style='font-size:16px'>Linux</header>\n<br><h1 id='101' style='font-size:20px'>command<br>(2)</h1>\n<table id='102' style='font-size:14px'><thead><tr><td>명령어</td><td>설명</td></tr></thead><tbody><tr><td>cp</td><td>파일<br>또는<br>디렉토리<br>복사<br>(copy)</td></tr><tr><td>cp<br>a.txt<br>b.txt</td><td>a.txt를<br>b.txt로<br>복사</td></tr><tr><td>mv</td><td>파일<br>이동<br>또는<br>이름<br>변경<br>(move)</td></tr><tr><td>mv<br>old.txt<br>new.txt</td><td>old.txt의<br>이름을<br>new.txt<br>로<br>변경</td></tr><tr><td>mv<br>myfile.txt<br>myfolder</td><td>현재<br>디렉토리에<br>있는<br>myfile.txt<br>파일을<br>myfolder<br>디렉토리로<br>이동</td></tr><tr><td>rm</td><td>파일<br>삭제<br>(remove)</td></tr><tr><td>rm<br>myfile.txt</td><td>myfile.txt<br>파일<br>삭제</td></tr><tr><td>rm<br>-rf<br>myfolder</td><td>myfolder<br>디렉토리<br>및<br>내부<br>파일<br>강제<br>삭제 -r는<br>recursive,<br>-f는<br>force</td></tr><tr><td>cat</td><td>내용<br>출력<br>혹은<br>파일<br>결합<br>출력<br>(concatenate)</td></tr><tr><td>cat<br>myfile.txt</td><td>myfile.txt<br>파일의<br>내용을<br>화면에<br>표기</td></tr><tr><td>cat<br>a.txt<br>b.txt<br>><br>c.txt</td><td>a.txt<br>와<br>b.txt의<br>내용을<br>합쳐서<br>c.txt로<br>저장 ><br>는<br>출력을<br>파일에<br>기록한다는<br>뜻</td></tr></tbody></table>\n<header id='103' style='font-size:16px'>Linux</header>\n<br><h1 id='104' style='font-size:20px'>command<br>(3)</h1>\n<table id='105' style='font-size:14px'><thead><tr><td>명령어</td><td>설명</td></tr></thead><tbody><tr><td>grep</td><td>문자열<br>검색<br>(global<br>regular<br>expression<br>print)</td></tr><tr><td>grep<br>-i<br>“error”<br>log.txt</td><td>log.txt에서<br>error<br>이라는<br>문자열이<br>포함된<br>모든<br>줄을<br>표시 -i는<br>ignore<br>case,<br>대소문자<br>무시</td></tr><tr><td>grep<br>-r<br>“error”<br>.</td><td>현재<br>디렉토리와<br>하위<br>디렉토리에서<br>error<br>라는<br>문자열을 재귀적으로<br>검색</td></tr><tr><td>echo</td><td>문자열<br>출력<br>또는<br>파일에<br>내용<br>쓰기</td></tr><tr><td>echo<br>“Hello<br>World”</td><td>터미널에<br>Hello<br>World<br>라는<br>문구<br>출력</td></tr><tr><td>echo<br>“Hello<br>World”<br>><br>myfile.txt</td><td>Hello<br>World<br>라는<br>문구를<br>myfile.txt<br>파일에<br>저장</td></tr><tr><td>echo<br>$HOME</td><td>HOME의<br>환경<br>변수<br>값<br>출력</td></tr></tbody></table>\n<header id='106' style='font-size:16px'>Linux</header>\n<br><h1 id='107' style='font-size:20px'>command<br>(4)</h1>\n<table id='108' style='font-size:14px'><thead><tr><td>명령어</td><td>설명</td></tr></thead><tbody><tr><td>touch</td><td>빈<br>파일<br>생성<br>혹은<br>기존<br>파일<br>타임스탬프<br>최신화</td></tr><tr><td>touch<br>myfile.txt</td><td>myfile.txt가<br>없으면<br>새로<br>만들고<br>있으면<br>타임스탬프<br>최신화</td></tr><tr><td>vim</td><td>텍스트<br>편집기<br>실행 vim<br>:<br>리눅스의<br>텍스트<br>편집기 일반모드,<br>편집모드,<br>명령모드<br>가<br>존재</td></tr><tr><td>vim<br>myfile.txt</td><td>myfile.txt<br>파일을<br>vim<br>편집기로<br>열기 파일이<br>없으면<br>새로<br>생성 일반<br>모드가<br>default</td></tr><tr><td>ip<br>addr<br>show</td><td>자신의<br>IP<br>주소<br>및<br>네트워크<br>정보<br>확인</td></tr><tr><td>man</td><td>명령어<br>설명서<br>보기</td></tr><tr><td>man<br>ls</td><td>‘ls’에<br>대한<br>설명서<br>제시</td></tr></tbody></table>\n<h1 id='109' style='font-size:20px'>설치<br></h1>\n<br><header id='110' style='font-size:14px'>Linux</header>\n<h1 id='111' style='font-size:16px'>직접<br>설치</h1>\n<br><p id='112' data-category='list' style='font-size:16px'>실제<br>하드웨어<br>환경에서<br>리눅스<br>실행<br>예:<br>듀얼<br>부팅,<br>USB<br>부팅<br>장점:<br>완전한<br>리눅스<br>환경,<br>성능<br>우수<br>단점:<br>윈도우<br>파티션<br>손상<br>위험,<br>설치<br>및<br>복구<br>번거로움</p>\n<h1 id='113' style='font-size:20px'>설치</h1>\n<h1 id='114' style='font-size:16px'>가상<br>머신에<br>설치하기</h1>\n<br><p id='115' data-category='list' style='font-size:16px'>대표<br>도구<br>:<br>VirtualBox,<br>VMware,<br>Hyper-V<br>장점<br>:<br>윈도우/macOS에서<br>동시에<br>사용<br>가능<br>단점<br>:<br>host<br>컴퓨터의<br>시스템<br>자원에<br>영향</p>\n<h1 id='116' style='font-size:16px'>Virtual<br>Machine(가상<br>머신)이란?</h1>\n<br><p id='117' data-category='list' style='font-size:16px'>하나의<br>물리적<br>컴퓨터<br>위에서<br>여러<br>개의<br>OS를<br><br><br><br><br><br><br><br><br><br><br><br><br>동시에<br>실행하기<br>위한<br>가상화<br>기술<br>각<br>VM은<br>고유의<br>Guest<br>OS와<br>앱<br>실행<br>환경을<br>가짐</p>\n<br><header id='118' style='font-size:14px'>Linux</header>\n<figure id='119'><img alt=\"\" data-coord=\"top-left:(1944,435); bottom-right:(2683,1211)\" /></figure>\n<header id='120' style='font-size:14px'>Linux</header>\n<br><h1 id='121' style='font-size:20px'>가상화<br>(Virtualization)</h1>\n<p id='122' data-category='list' style='font-size:16px'>하나의<br>물리적인<br>컴퓨터(하드웨어)<br>자원을<br>여러<br>개의<br>가상<br>자원처럼<br>나누어<br>사용하는<br>기술<br>하나의<br>서버에서<br>여러<br>가상<br>머신을<br>실행<br>하이퍼바이저<br>:<br>가상<br>머신을<br>생성하고<br>관리해주는<br>가상화<br>관리자</p>\n<figure id='123'><img alt=\"\" data-coord=\"top-left:(786,742); bottom-right:(2217,1546)\" /></figure>\n<header id='124' style='font-size:14px'>Linux</header>\n<br><h1 id='125' style='font-size:20px'>윈도우에서는<br>WSL2</h1>\n<p id='126' data-category='list' style='font-size:16px'>Windows<br>Subsystem<br>for<br>Linux<br>Windows<br>내부에서<br>리눅스를<br>실행하는<br>경량화된<br>리눅스<br>환경<br>장점:</p>\n<br><p id='127' data-category='list' style='font-size:16px'>설치<br>및<br>실행이<br>매우<br>간편<br>(부팅<br>불필요)<br>리눅스<br>명령어<br>및<br>개발<br>환경을<br>그대로<br>사용<br>가능<br>WSL1과<br>달리<br>실제<br>리눅스<br>커널<br>사용</p>\n<br><p id='128' data-category='paragraph' style='font-size:16px'>단점:</p>\n<br><p id='129' data-category='list' style='font-size:16px'>완전한<br>리눅스<br>기능이<br>필요한<br>작업은<br>일부<br>제한<br>GUI<br>환경은<br>별도<br>설정<br>필요</p>\n<br><figure id='130'><img alt=\"\" data-coord=\"top-left:(1512,569); bottom-right:(2865,1346)\" /></figure>\n<header id='131' style='font-size:14px'>Linux</header>\n<br><h1 id='132' style='font-size:20px'>VM의<br>한계</h1>\n<h1 id='133' style='font-size:16px'>그러나<br>VM에는<br>한계가<br>있다</h1>\n<br><p id='134' data-category='list' style='font-size:16px'>무겁다:<br>각<br>VM마다<br>OS가<br>별도로<br>존재<br>→<br>리소스<br>낭비,<br>부팅<br>느림<br>이동이<br>어렵다:<br>개발환경<br>↔<br>배포환경<br>사이<br>설정<br>차이<br>발생<br>속도<br>저하:<br>하이퍼바이저로<br>인해<br>네이티브<br>실행보다<br>느림</p>\n<br><h1 id='135' style='font-size:16px'><br><br><br><br><br><br>⇒<br>비효율적!</h1>\n<h1 id='136' style='font-size:16px'>VM의<br>단점을<br>보완한<br>경량화된<br>가상화<br>기술<br>–<br>컨테이너의<br>등장!</h1>\n<header id='137' style='font-size:14px'>Linux</header>\n<br><h1 id='138' style='font-size:20px'>컨테이너란?</h1>\n<p id='139' data-category='list' style='font-size:16px'>애플리케이션과<br>그<br>실행환경(라이브러리,<br>설정<br>등)의<br>경량<br>실행<br>단위<br>커널은<br>host<br>OS와<br>공유하고<br>필요한<br>부분만<br>격리하여<br>실행</p>\n<figure id='140'><img alt=\"\" data-coord=\"top-left:(586,615); bottom-right:(2416,1517)\" /></figure>\n<h1 id='141' style='font-size:14px'>Docker</h1>\n<h1 id='142' style='font-size:20px'>도커<br>(Docker)</h1>\n<br><header id='143' style='font-size:14px'>Docker</header>\n<p id='144' data-category='list' style='font-size:16px'>애플리케이션을<br>실행하기<br>위한<br>경량<br>가상화<br>기술<br>각<br>애플리케이션을<br>격리된<br>컨테이너로<br>실행하여,<br>효율적인<br>가상<br>환경<br>제공<br>“It<br>works<br>on<br>my<br>computer”<br>문제<br>해결</p>\n<figure id='145'><img alt=\"\" data-coord=\"top-left:(594,739); bottom-right:(1512,1482)\" /></figure>\n<br><figure id='146'><img alt=\"\" data-coord=\"top-left:(1603,760); bottom-right:(2388,1465)\" /></figure>\n<h1 id='147' style='font-size:20px'>도커<br>(Docker)</h1>\n<h1 id='148' style='font-size:16px'>크게<br>세<br>가지로<br>구분</h1>\n<br><header id='149' style='font-size:14px'>Docker</header>\n<h1 id='150' style='font-size:16px'>Dockerfile</h1>\n<br><p id='151' data-category='list' style='font-size:16px'>Docker<br>Image를<br>생성하기<br>위한<br>설정<br>파일<br>어떤<br>OS,<br>어떤<br>패키지,<br>어떤<br>명령어를<br>포함할지<br>명시</p>\n<h1 id='152' style='font-size:16px'>Docker<br>Image</h1>\n<br><p id='153' data-category='list' style='font-size:16px'>Dockerfile로부터<br>만들어진<br>실행<br>가능한<br>패키지<br>애플리케이션<br>+<br>환경이<br>모두<br>포함된<br>\"스냅샷\"<br>불변(immutable)<br>상태로<br>저장됨<br>→<br>재현성<br>보장</p>\n<h1 id='154' style='font-size:16px'>Docker<br>Container</h1>\n<br><p id='155' data-category='list' style='font-size:16px'>Image를<br>기반으로<br>실제로<br>실행되는<br>가상<br>환경<br>이미지에<br>정의된<br>내용이<br>실제로<br>동작</p>\n<br><figure id='156'><img alt=\"\" data-coord=\"top-left:(1594,738); bottom-right:(2899,1187)\" /></figure>\n<h1 id='157' style='font-size:20px'>command<br>(1)</h1>\n<br><header id='158' style='font-size:16px'>Docker</header>\n<table id='159' style='font-size:14px'><thead><tr><td>명령어</td><td>설명</td></tr></thead><tbody><tr><td>docker<br>--version</td><td>도커<br>버전<br>확인</td></tr><tr><td>docker<br>build<br>-t<br>이미지이름<br>.</td><td>Dockerfile을<br>기반으로<br>이미지<br>생성</td></tr><tr><td>docker<br>images</td><td>현재<br>존재하는<br>이미지<br>목록<br>보기</td></tr><tr><td>docker<br>ps</td><td>실행<br>중인<br>컨테이너<br>목록<br>보기</td></tr><tr><td>docker<br>ps<br>-a</td><td>모든<br>컨테이너<br>목록<br>보기<br>(중지된<br>것도<br>포함)</td></tr><tr><td>docker<br>run<br>이미지이름</td><td>이미지로<br>컨테이너<br>실행</td></tr><tr><td>docker<br>run<br>-d<br>이미지이름</td><td>백그라운드로<br>실행</td></tr><tr><td>docker<br>run<br>-it<br>이미지이름</td><td>터미널에서<br>상호작용하며<br>실행</td></tr></tbody></table>\n<header id='160' style='font-size:16px'>Docker</header>\n<br><h1 id='161' style='font-size:20px'>command<br>(2)</h1>\n<table id='162' style='font-size:14px'><thead><tr><td>명령어</td><td>설명</td></tr></thead><tbody><tr><td>docker<br>exec<br>-it<br>컨테이너ID<br>bash</td><td>실행<br>중인<br>컨테이너에<br>접속</td></tr><tr><td>docker<br>stop<br>컨테이너ID</td><td>컨테이너<br>중지</td></tr><tr><td>docker<br>start<br>컨테이너ID</td><td>중지된<br>컨테이너<br>다시<br>실행</td></tr><tr><td>docker<br>rm<br>컨테이너ID</td><td>컨테이너<br>삭제</td></tr><tr><td>docker<br>rmi<br>이미지이름</td><td>이미지<br>삭제</td></tr><tr><td>docker<br>pull<br>이미지이름</td><td>도커<br>허브에서<br>이미지<br>다운로드</td></tr><tr><td>docker<br>push<br>이미지이름</td><td>도커<br>허브에<br>이미지<br>업로드</td></tr><tr><td>docker<br>login</td><td>도커<br>허브<br>로그인</td></tr><tr><td>docker<br>logout</td><td>도커<br>허브<br>로그아웃</td></tr></tbody></table>\n<h1 id='163' style='font-size:14px'>실습</h1>\n<header id='164' style='font-size:14px'>실습</header>\n<br><h1 id='165' style='font-size:20px'>크게<br>두<br>가지</h1>\n<h1 id='166' style='font-size:16px'>1. Docker를<br>통해<br>Linux<br>컨테이너를<br>실행해보자</h1>\n<p id='167' data-category='paragraph' style='font-size:18px'>2. <br>Linux의<br>다양한<br>명령어를<br>사용해보자</p>\n<header id='168' style='font-size:14px'>실습</header>\n<br><h1 id='169' style='font-size:20px'>실습에<br>사용할<br>도커<br>이미지</h1>\n<h1 id='170' style='font-size:16px'>seohyun7/ybigta:summer-25<br>“<br>:<br>”<br>뒤에<br>붙는<br>것은<br>태그.<br>이미지에<br>붙이는<br>버전<br>또는<br>식별자</h1>\n<figure id='171'><img alt=\"\" data-coord=\"top-left:(1166,658); bottom-right:(1835,1559)\" /></figure>\n<header id='172' style='font-size:14px'>실습</header>\n<br><h1 id='173' style='font-size:20px'>도커<br>기본<br>환경<br>세팅</h1>\n<h1 id='174' style='font-size:16px'>기본적으로<br>Docker<br>Desktop이<br>실행<br>중이어야<br>함!</h1>\n<h1 id='175' style='font-size:16px'>(1)<br>윈도우는<br>cmd/powershell,<br>맥은<br>terminal<br>실행</h1>\n<h1 id='176' style='font-size:16px'>(2)<br>docker<br>pull<br>seohyun7/ybigta:summer-25<br><br><br><br><br>→<br>Docker<br>Hub로부터<br>이미지<br>가져오기<br>(생략<br>가능)</h1>\n<h1 id='177' style='font-size:16px'>(3)<br>docker<br>run<br>-it<br>seohyun7/ybigta:summer-25</h1>\n<br><h1 id='178' style='font-size:16px'><br><br><br><br>→<br>컨테이너<br>실행<br>및<br>진입</h1>\n<br><p id='179' data-category='list' style='font-size:16px'><br><br><br><br><br><br><br><br>-i<br>:<br>interactive,<br>입력<br>가능하게<br>유지<br><br><br><br><br><br><br><br><br>-t<br>:<br>tty,<br>가상<br>터미널을<br>할당<br><br><br><br><br><br><br><br><br>→<br>두<br>옵션을<br>함께<br>사용하면<br>컨테이너<br>내부로<br>진입<br>가능</p>\n<header id='180' style='font-size:14px'>실습</header>\n<br><h1 id='181' style='font-size:20px'>리눅스<br>실습<br>(1)</h1>\n<h1 id='182' style='font-size:16px'>(4)<br>uname<br>-s<br><br><br><br><br>→<br>커널<br>이름<br>확인<br><br><br><br><br><br><br><br><br>uname<br>:<br>시스템<br>정보<br>출력<br><br><br><br><br><br><br><br><br>-s<br>:<br>커널<br>이름<br>출력</h1>\n<p id='183' data-category='paragraph' style='font-size:16px'>(5)<br>mkdir<br>ybigta<br><br><br><br><br>→<br>ybigta<br>폴더<br>생성</p>\n<h1 id='184' style='font-size:16px'>(6)<br>ls<br><br><br><br><br>→<br>ybigta<br>폴더가<br>정상적으로<br>생성되었는지<br>확인</h1>\n<p id='185' data-category='paragraph' style='font-size:16px'>(7)<br>cd<br>ybigta<br><br><br><br><br>→<br>ybigta<br>폴더로<br>이동</p>\n<h1 id='186' style='font-size:20px'>리눅스<br>실습<br>(2)</h1>\n<h1 id='187' style='font-size:16px'>(8)<br>touch<br>main.py<br><br><br><br><br>→<br>main.py<br>파일<br>생성<br>(생략<br>가능)</h1>\n<p id='188' data-category='paragraph' style='font-size:16px'>(9)<br>vim<br>main.py<br><br><br><br><br>→<br>vim<br>일반<br>모드<br>진입</p>\n<h1 id='189' style='font-size:16px'>(10)<br>i</h1>\n<br><h1 id='190' style='font-size:16px'><br><br><br><br>→<br>vim<br>편집<br>모드로<br>전환</h1>\n<p id='191' data-category='paragraph' style='font-size:16px'>(11)<br>print(“Welcome<br>to<br>Ybigta!”)<br><br><br><br><br>→<br>파일<br>내에<br>작성</p>\n<p id='192' data-category='paragraph' style='font-size:16px'>(12)<br>esc<br><br>→<br>vim<br>일반<br>모드로<br>전환</p>\n<br><header id='193' style='font-size:14px'>실습</header>\n<header id='194' style='font-size:14px'>실습</header>\n<br><h1 id='195' style='font-size:20px'>리눅스<br>실습<br>(3)</h1>\n<h1 id='196' style='font-size:16px'>(13)<br>:wq<br>입력<br>후<br>엔터</h1>\n<br><h1 id='197' style='font-size:16px'><br><br><br><br>→<br>vim<br>명령<br>모드<br>전환<br>후<br>저장<br>및<br>종료<br><br><br><br><br><br><br><br><br>w<br>:<br>write,<br>현재<br>작성<br>중인<br>내용을<br>파일에<br>저장<br><br><br><br><br><br><br><br><br>q<br>:<br>quit,<br>vim을<br>종료</h1>\n<h1 id='198' style='font-size:16px'>(14)<br>python3<br>main.py</h1>\n<br><p id='199' data-category='list' style='font-size:16px'><br><br><br><br>→<br>파이썬<br>코드<br>실행<br><br><br><br><br>→<br>Welcome<br>to<br>Ybigta!<br>가<br>출력되었다면<br>성공</p>\n<p id='200' data-category='paragraph' style='font-size:16px'>(15)<br>python3<br>main.py<br>><br>output.txt<br><br><br><br><br>→<br>출력<br>redirection</p>\n<h1 id='201' style='font-size:16px'>(16)<br>cat<br>output.txt</h1>\n<br><p id='202' data-category='list' style='font-size:16px'><br><br><br><br>→<br>출력<br>내용이<br>정상적으로<br>저장되었는지<br>확인<br><br><br><br><br>→<br>Welcome<br>to<br>Ybigta!<br>가<br>출력되었다면<br>성공</p>\n<header id='203' style='font-size:14px'>실습</header>\n<br><h1 id='204' style='font-size:20px'>도커<br>종료</h1>\n<h1 id='205' style='font-size:16px'>(17)<br>exit<br><br><br><br><br>→<br>컨테이너<br>종료</h1>\n<h1 id='206' style='font-size:16px'>(18)<br>docker<br>ps<br>-a<br><br><br><br><br>→<br>컨테이너<br>목록<br>확인<br><br><br><br><br><br><br><br><br>-a<br>:<br>all,<br>실행<br>중<br>+<br>종료된<br>컨테이너까지<br>모두<br>표시</h1>\n<h1 id='207' style='font-size:16px'>(19)<br>docker<br>rm<br>[컨테이너<br>ID]</h1>\n<br><p id='208' data-category='list' style='font-size:16px'><br><br><br><br>→<br>컨테이너<br>종료<br>및<br>삭제<br><br><br><br><br>→<br>(18)에서<br>확인한<br>컨테이너<br>ID<br>사용</p>\n<footer id='209' style='font-size:16px'>정보)<br>(17)은<br>컨테이너<br>내의<br>명령어,<br>(18)와<br>(19)은<br>cmd/terminal의<br>명령어.<br>혼동<br>주의.</footer>\n<h1 id='210' style='font-size:14px'>감사합니다!</h1>",
    "10DMjJH1PAupn0Spf8tdH9AKmWLDeW1ax": "<h1 id='0' style='font-size:22px'>1회차) Github 사전 과제</h1>\n<h1 id='1' style='font-size:18px'>발제자: 손재훈</h1>\n<h1 id='2' style='font-size:20px'>intro</h1>\n<br><p id='3' data-category='paragraph' style='font-size:20px'>걱정하지 마세요! Github에서 repository만을 생성하는 과제입니다.</p>\n<h1 id='4' style='font-size:20px'>명세</h1>\n<br><p id='5' data-category='paragraph' style='font-size:16px'> 각자의 레포에 개인 리포지터리를 만들어줍시다.</p>\n<br><p id='6' data-category='list' style='font-size:18px'>Repository 이름: (개인) YBIGTA_newbie_assignment<br>공개 범위: public으로 설정<br>팀플 과제 레포 생성은 추후 팀 배정 후 알려드리도록 하겠습니다!</p>\n<figure id='7'><img alt=\"\" data-coord=\"top-left:(422,713); bottom-right:(863,1136)\" /></figure>\n<p id='8' data-category='paragraph' style='font-size:16px'>위의 설정 후 Create repository 버튼 눌러주세요!</p>\n<p id='9' data-category='paragraph' style='font-size:16px'> 깃헙 레포지터리 주소를 구글 폼에 입력해주시길 바랍니다.</p>\n<br><p id='10' data-category='paragraph' style='font-size:16px'>https://docs.google.com/forms/d/e/1FAIpQLSd8nudzhFZZ081EJIS2mVtZ6LrYNUiKyaQA1K<br>7qMRbP4PPJA/viewform?usp=header</p>\n<footer id='11' style='font-size:14px'>1회차) Github 사전 과제</footer>\n<br><footer id='12' style='font-size:14px'>1</footer>",
    "1z_c-Fn0kG-UDwJqLVBcVA9_asH7Quvuy": "<header id='0' style='font-size:14px'>2025-2\u0001YBIGTA</header>\n<p id='1' data-category='paragraph' style='font-size:20px'>신입기수<br>교육세션 OT</p>\n<p id='2' data-category='paragraph' style='font-size:16px'>26기\u0001손재훈<br>26기\u0001정민지</p>\n<h1 id='3' style='font-size:20px'>목\u0001차</h1>\n<p id='4' data-category='list' style='font-size:14px'>1. 교육세션\u0001일정</p>\n<p id='5' data-category='list' style='font-size:16px'>2. 교육세션\u0001목표</p>\n<p id='6' data-category='list' style='font-size:16px'>3. 과제\u0001안내</p>\n<p id='7' data-category='list' style='font-size:16px'>4. 스터디\u0001안내</p>\n<h1 id='8' style='font-size:14px'>교육세션\u0001일정</h1>\n<header id='9' style='font-size:14px'>교육세션\u0001일정</header>\n<br><h1 id='10' style='font-size:20px'>교육세션\u0001일정</h1>\n<h1 id='11' style='font-size:16px'>1회차(7월\u00014일)\u0001-\u0001OT<br>2회차(7월\u00018일)\u0001-\u0001Python,\u0001개발환경,\u0001CS기초,\u0001Github,\u0001Docker(1)<br>3회차(7월\u000111일)\u0001-\u0001Web,\u0001Network,\u0001Docker(2)<br>4회차(7월\u000115일)\u0001-\u0001기초통계/ML,\u0001크롤링<br>5회차(7월\u000118일)\u0001-\u0001EDA\u0001&\u0001FE,\u0001시각화<br>6회차(7월\u000122일)\u0001-\u0001Dataiku,\u0001DL<br>7회차(7월\u000125일)\u0001-\u0001NLP\u0001/\u0001CV<br>8회차(7월\u000129일)\u0001-\u0001LLM,\u0001AI\u0001Agent<br>9회차(8월\u00011일)\u0001-\u0001Docker(3),\u0001AWS<br>10회차(8월\u00015일)\u0001-\u0001DB,\u0001RAG<br>11회차(8월\u00018일)\u0001-\u0001(오픈세션)\u0001신입기수\u0001프로젝트\u0001발제<br>12회차(8월\u000115일)\u0001-\u0001(오픈세션)\u0001팀\u0001설명회,\u0001중간\u0001발표<br>13회차(8월\u000126일)\u0001-\u0001신입기수\u0001프로젝트\u0001발표</h1>\n<header id='12' style='font-size:14px'>교육세션<br>일정</header>\n<br><h1 id='13' style='font-size:20px'>앞으로<br>하게<br>될<br>것들<br></h1>\n<p id='14' data-category='paragraph' style='font-size:18px'>방학<br>(7-8월)</p>\n<br><p id='15' data-category='paragraph' style='font-size:18px'>정규학기(9월~)</p>\n<table id='16' style='font-size:16px'><thead></thead><tbody><tr><td>신입기수<br>교육세션</td><td>팀<br>세션</td></tr><tr><td>신입기수<br>스터디</td><td>팀<br>프로젝트</td></tr><tr><td>신입<br>기수<br>과제(개인/팀)</td><td>스터디</td></tr><tr><td>신입<br>기수<br>프로젝트</td><td>컨퍼런스!!</td></tr></tbody></table>\n<h1 id='17' style='font-size:14px'>교육세션\u0001목표</h1>\n<h1 id='18' style='font-size:20px'>와빅은<br>어떤<br>구조인가</h1>\n<figure id='19'><img alt=\"\" data-coord=\"top-left:(308,555); bottom-right:(1356,1434)\" /></figure>\n<br><header id='20' style='font-size:14px'>교육세션<br>목표</header>\n<h1 id='21' style='font-size:16px'>각<br>팀이<br>독자적으로<br>세션을<br>진행하는<br>것이<br>아니라,<br>여러<br>팀이<br>섞여서<br>같이<br>프로젝트도<br>진행하고<br>스터디도<br>같이<br>함</h1>\n<h1 id='22' style='font-size:16px'>서로를<br>이해하기<br>위해서는...<br>서로에<br>대한<br>기본지식과<br>이해가<br>있어야<br>합니다!<br>원활한<br>팀워크를<br>위해서도<br>마찬가지죠!</h1>\n<p id='23' data-category='paragraph' style='font-size:16px'>또한<br>아주아주<br>드문<br>경우이지만,<br>팀<br>배정이<br>잘못되는<br>경우,<br>지원하고자<br>하는<br>팀에<br>들어가지<br>못하는<br>경우도<br>있어요<br>ㅠㅠ</p>\n<header id='24' style='font-size:14px'>교육세션<br>목표</header>\n<br><h1 id='25' style='font-size:20px'>중요한<br>것!</h1>\n<h1 id='26' style='font-size:16px'>더이상<br>코랩,<br>주피터<br>노트북,<br>노코딩<br>툴...<br>등등으로<br>딸깍은<br>그만!<br>이런걸<br>프로젝트에서<br>사용할<br>수<br>없음.</h1>\n<p id='27' data-category='paragraph' style='font-size:18px'>우리에게<br>필요한<br>것은<br>구현<br>능력,<br>특히<br>프로젝트에<br>적합한<br>구현<br>능력!</p>\n<header id='28' style='font-size:14px'>교육세션<br>목표</header>\n<br><h1 id='29' style='font-size:20px'>교육세션의<br>목표!</h1>\n<h1 id='30' style='font-size:18px'>프로젝트를<br>잘<br>할<br>수<br>있는<br>신입<br>부원을<br>육성하자!</h1>\n<p id='31' data-category='paragraph' style='font-size:16px'>우리에게<br>필요한<br>것은<br>구현<br>능력,<br>특히<br>프로젝트에<br>적합한<br>구현<br>능력!</p>\n<h1 id='32' style='font-size:16px'>프로젝트를<br>잘<br>하기<br>위해<br>필요한<br>것들</h1>\n<br><p id='33' data-category='list' style='font-size:16px'>협업(의사소통)<br>코드<br>구현<br>파일<br>구조를<br>읽고<br>이해할<br>수<br>있는<br>능력</p>\n<h1 id='34' style='font-size:14px'>과제\u0001안내</h1>\n<h1 id='35' style='font-size:20px'>과제<br>진행<br>방식</h1>\n<br><header id='36' style='font-size:14px'>과제<br>안내</header>\n<p id='37' data-category='list' style='font-size:16px'>내용:<br>해당<br>세션에서<br>배운<br>내용들로<br>구성</p>\n<p id='38' data-category='list' style='font-size:16px'>형태:<br>한<br>세션<br>당<br>개인<br>과제<br>1개<br>또는<br>팀플<br>과제<br>1개</p>\n<p id='39' data-category='list' style='font-size:16px'>팀<br>배정:<br>면접<br>때<br>질문들을<br>바탕으로<br>배정</p>\n<h1 id='40' style='font-size:20px'>과제<br>제출<br>및<br>채점</h1>\n<br><header id='41' style='font-size:14px'>과제<br>안내</header>\n<h1 id='42' style='font-size:16px'>과제<br>제출</h1>\n<br><p id='43' data-category='list' style='font-size:16px'>Github로<br>제출<br>다음<br>세션까지<br>Github<br>Repo를<br>만들어<br>오셔야<br>합니다!</p>\n<h1 id='44' style='font-size:16px'>과제<br>제출용<br>레포<br>생성<br>방법</h1>\n<br><p id='45' data-category='list' style='font-size:16px'>repo<br>이름:<br>(개인)<br>YBIGTA_newbie_assignment<br>공개<br>범위:<br>public으로<br>실정<br>팀플<br>과제<br>레포<br>생성<br>방법은<br>팀<br>배정<br>뒤에<br>알려드리겠습니다!</p>\n<p id='46' data-category='paragraph' style='font-size:16px'>주의점</p>\n<br><p id='47' data-category='paragraph' style='font-size:18px'>과제<br>명세에<br>따르지<br>않을<br>경우<br>미제출<br>처리되니<br>주의해주세요!</p>\n<h1 id='48' style='font-size:14px'>스터디\u0001안내</h1>\n<header id='49' style='font-size:14px'>스터디<br>안내</header>\n<br><h1 id='50' style='font-size:20px'>의미<br>있는<br>스터디를<br>만드는<br>방법</h1>\n<h1 id='51' style='font-size:18px'>1.무조건<br>대면으로</h1>\n<br><p id='52' data-category='list' style='font-size:16px'>비대면:<br>흐지분위<br>0순위<br>영상<br>강의(cs229<br>등...):<br>흐지부지<br>가능성<br>99.9%<br>교재:<br>그나마<br>괜찮음<br>기술<br>입문(라이브러리,<br>프레임워크,<br>툴<br>등):<br>흐지부지<br>2순위</p>\n<br><h1 id='53' style='font-size:18px'>2.주제는<br>좁고<br>깊게</h1>\n<br><h1 id='54' style='font-size:16px'>주제<br>범위가<br>넓다<br>=<br>흐지부지<br>1순위</h1>\n<br><h1 id='55' style='font-size:18px'>3.친해지기</h1>\n<br><p id='56' data-category='list' style='font-size:16px'>사실<br>친해지기가<br>목적이에요<br>ㅎㅎ<br>스터디를<br>가장한<br>밥먹고<br>친해지기!<br>교육세션때<br>같이<br>앉아요~</p>\n<br><p id='57' data-category='paragraph' style='font-size:16px'>친해지는게<br>정말<br>중요해요!!!<br>좋은<br>팀워크는<br>친해지는걸로<br>시작합니다.</p>\n<h1 id='58' style='font-size:14px'>감사합니다!</h1>",
    "14xNctbgwDE8SSzmsDGzbTt9Gbzy829FG": "<figure id='0'><img alt=\"\" data-coord=\"top-left:(752,609); bottom-right:(1232,1079)\" /></figure>\n<br><h1 id='1' style='font-size:14px'>연세대학교 빅데이터 학회</h1>\n<br><h1 id='2' style='font-size:20px'>YBIGTA</h1>\n<p id='3' data-category='paragraph' style='font-size:16px'>2025 학년도 하반기 신입기수 OT</p>\n<p id='4' data-category='paragraph' style='font-size:18px'>YBIGTA 는 국내 최초 대학생 빅데이터 학술 동아리로 , 연세대학교 학부 및 대학원생으로<br>구성되어 있습니다 . YBIGTA 는 빅데이터에 대한 기초지식을 쌓고 , 빅데이터 관련 최신<br>트렌드에 대한 이해를 향상시키며 , 구현 기술 및 구현 툴 사용에 대해 학습하여 , 이를 기반으로<br>빅데이터 분야의 다양한 학술 활동을 진행하는 목적을 가지고 있습니다 .</p>\n<br><p id='5' data-category='paragraph' style='font-size:18px'>데이터 엔지니어링 팀・데이터 사이언스 팀・데이터 애널리틱스 팀 으로 나누어 운영되며 , 팀별로<br>빅데이터의 특정 영역을 집중적으로 공부합니다 .</p>\n<br><p id='6' data-category='paragraph' style='font-size:18px'>학기 중에는 정기적인 세션 을 통해 , 빅데이터의 다양한 주제에 대하여 자체적으로 강의를<br>진행합니다 .</p>\n<p id='7' data-category='paragraph' style='font-size:18px'>또한 , 관심사가 같은 학회원들끼리 스터디 를 개설하여 관심 분야를 심층적으로 공부합니다 .</p>\n<br><p id='8' data-category='paragraph' style='font-size:18px'>학기 말에는 모든 팀의 학회원들이 모여 다양한 주제를 발제하여 프로젝트를 진행하고 , 그<br>결과를 공유하는 자리인 YBIGTA 컨퍼런스 를 개최합니다 .</p>\n<br><p id='9' data-category='paragraph' style='font-size:18px'>방학 중에는 집중적인 신입기수 교육세션 을 통하여 , 신입 학회원들이 프로그래밍과 통계학을<br>비롯한 빅데이터의 기본 지식을 갖출 수 있도록 돕습니다 .</p>\n<br><p id='10' data-category='paragraph' style='font-size:18px'>YBIGTA 에서는 빅데이터가 우리 생활에 어떤 영향을 미치고 있는지 공부하며 , 빅데이터를<br>활용한 프로젝트를 진행함으로써 궁극적으로 현 산업에 이바지할 수 있는 유의미한 성과를<br>내고자 합니다 .</p>\n<br><footer id='11' style='font-size:14px'>2</footer>\n<h1 id='12' style='font-size:20px'>지도교수 소개</h1>\n<br><p id='13' data-category='paragraph' style='font-size:20px'>YBIGTA 연혁 및 수상내역</p>\n<h1 id='14' style='font-size:16px'>연세대학교 컴퓨터과학과</h1>\n<br><h1 id='15' style='font-size:22px'>이원석 교수님</h1>\n<h1 id='16' style='font-size:18px'>연구 분야</h1>\n<br><p id='17' data-category='paragraph' style='font-size:16px'>빅데이터 분석 , 스트림 자율 학습 , 재현데이터 ( 익명데이<br>터 ) 처리 , 영상 인식 , 클라우드 - 엣지</p>\n<table id='18' style='font-size:14px'><thead></thead><tbody><tr><td colspan=\"2\">주요 경력</td></tr><tr><td>1993- 현재</td><td>연세대학교 컴퓨터과학과 교수</td></tr><tr><td>2012- 현재</td><td>한국 빅데이터 포럼 운영위원장</td></tr><tr><td>2018</td><td>연세대학교 기획처 빅데이터 기반 교육혁신 TF 위원장</td></tr><tr><td>2013-2018</td><td><figure><img alt=\"\" data-coord=\"top-left:(986,840); bottom-right:(1470,1584)\" /></figure> 한국 빅데이터 포럼 운영위원장</td></tr><tr><td>2011-2013</td><td>( 전 ) 대통령소속 국가정보화 전략위원회 실무위원</td></tr></tbody></table>\n<br><h1 id='19' style='font-size:14px'>2012</h1>\n<br><h1 id='20' style='font-size:14px'>- YBIGTA 창립</h1>\n<br><p id='21' data-category='paragraph' style='font-size:14px'>・ ・ ・</p>\n<br><p id='22' data-category='paragraph' style='font-size:14px'>2016</p>\n<br><p id='23' data-category='paragraph' style='font-size:14px'>- Naver D2 CAMPUS 우수동아리 지원대상 선정</p>\n<h1 id='24' style='font-size:14px'>2023</h1>\n<br><p id='25' data-category='list' style='font-size:14px'>- KPMG IDEATHON - NLP 활용 기업 서비스 제안 대상<br>- 2023 빅콘테스트 데이터신기술 분야 장려상<br>- 2023 빅콘테스트 비정형데이터 분야 우수상</p>\n<p id='26' data-category='paragraph' style='font-size:14px'>2024</p>\n<br><p id='27' data-category='list' style='font-size:14px'>- 한국정책학회 , 연세대 주최 사회문제 해결을 위한 해커톤 장려상<br>- 강남구 공공데이터 활용 / 분석 아이디어 공모전 최우수상<br>- 2024 [ 삼정 KPMG] 2024 KPMG 아이디어톤 2 등<br>- 임업진흥원 , 산림빅데이터 진흥원 주최 산림빅데이터 활용</p>\n<br><p id='28' data-category='paragraph' style='font-size:14px'>해커톤 대상</p>\n<br><p id='29' data-category='paragraph' style='font-size:14px'>- DACON 2024 Samsung AI Challenge : Black-box Optimization<br>최우수상</p>\n<br><p id='30' data-category='list' style='font-size:14px'>- 2024 문화체육관광 데이터 활용대회 대상<br>- 2024 빅콘테스트 생성형 AI 분야 장려상<br>- 2024 빅콘테스트 데이터 분석 분야 장려상</p>\n<footer id='31' style='font-size:14px'>3</footer>\n<br><p id='32' data-category='paragraph' style='font-size:14px'>・ ・ ・</p>\n<p id='33' data-category='paragraph' style='font-size:14px'>・ ・ ・</p>\n<header id='34' style='font-size:18px'>Alumni YBIGTA 졸업생들은 빅데이터 분야에서 선두 주자로 활약하며 기술과 역량을 발휘하고 있습니다 .</header>\n<h1 id='35' style='font-size:18px'>창업</h1>\n<footer id='36' style='font-size:14px'>4</footer>\n<h1 id='37' style='font-size:18px'>YBIGTA 활동 소개</h1>\n<br><figure id='38'><img style='font-size:18px' alt=\"Data Engineering\nYBIGTA\nCONFERENCE\nData Science Data Analytics\" data-coord=\"top-left:(454,314); bottom-right:(2741,1473)\" /></figure>\n<footer id='39' style='font-size:14px'>5</footer>\n<p id='40' data-category='paragraph' style='font-size:18px'>YBigta 전체 세션 : 팀 간 협업을 통해 , 팀 세션에서 배운 것들을 서로 교류하고 , 프로젝트를 진행하여 심화 학습을 진행한다 .</p>\n<p id='41' data-category='paragraph' style='font-size:16px'>방학</p>\n<br><table id='42' style='font-size:14px'><thead></thead><tbody><tr><td>커리큘럼</td></tr><tr><td>01 Introduction - n8n, - MLOps, - RL 기초 - Dataiku</td></tr><tr><td>02 Agent, Rag - langchain - langgraph - a2a, adk RL 심화</td></tr><tr><td>03 프로젝트 선택 발제 - MLOps 연구 자동화 - Agent 서비스 기획</td></tr><tr><td>04 프로젝트 발표</td></tr></tbody></table>\n<br><h1 id='43' style='font-size:20px'>전체 세션 목표 :</h1>\n<p id='44' data-category='list' style='font-size:20px'>● 2 회의 팀별 공유 세션<br>- DE : n8n 업무자동화 / MLOps 기초 / Agent<br>- DS : RL<br>- DA : Dataiku ( 실무 툴 )</p>\n<p id='45' data-category='list' style='font-size:20px'>● 팀별 공유 세션 이후 , 팀간 협업을 통해 프로젝트 진행</p>\n<p id='46' data-category='list' style='font-size:20px'>● 투 트랙 프로젝트 중 희망 주제 선택하여 진행 ( 총 4 팀 예상 )<br>- MLOps 연구 자동화<br>- Agent 업무 자동화</p>\n<h1 id='47' style='font-size:20px'>● 방학 중 진행</h1>\n<br><p id='48' data-category='list' style='font-size:20px'>- 팀 세션과 격주로 진행<br>- 전체 세션 ( 7 월 - 8 일 , 22 일 / 8 월 - 5 일 , 19 일 )<br>- 팀 세션 ( 7 월 15 일 , 29 일 / 8 월 12 일 , 26 일 )</p>\n<h1 id='49' style='font-size:18px'>Data Engineering: 데이터를 위한 시스템과 인프라를 안정적 및 효율적으로 구축하고 자동화하여 , 의사결정과 모델링 등의 가치</h1>\n<br><h1 id='50' style='font-size:16px'>창출에 기여한다</h1>\n<br><p id='51' data-category='paragraph' style='font-size:16px'>.</p>\n<br><h1 id='52' style='font-size:16px'>커리큘럼</h1>\n<table id='53' style='font-size:14px'><thead></thead><tbody><tr><td>학기 방학</td><td>01 Introduction (ETL, ELT)</td></tr><tr><td>02</td><td>Docker, Docker Compose</td></tr><tr><td>03</td><td>NoSQL</td></tr><tr><td>04</td><td>Airflow</td></tr><tr><td>05</td><td>Cloud Computing, AWS</td></tr><tr><td>06</td><td>Kafka</td></tr><tr><td>07</td><td>Kafka Streams</td></tr><tr><td>08</td><td>Kafka Cluster, Kafka Connect</td></tr><tr><td>09</td><td>MLOps</td></tr><tr><td>01</td><td>Hadoop 기초 , Cluster</td></tr><tr><td>02</td><td>HDFS, MapReduce</td></tr><tr><td>03</td><td>Spark Cluster, dataframe</td></tr><tr><td>04</td><td>Spark SQL, Streaming</td></tr></tbody></table>\n<br><h1 id='54' style='font-size:20px'>팀 목표 :</h1>\n<br><p id='55' data-category='list' style='font-size:20px'>● 대규모의 데이터를 수집 및 저장하며 , 추가 분석을 수행할 수<br>있는 데이터를 준비하기 위한 시스템의 필요성을 알고 이를<br>설계하는 것을 목표로 활동한다 .<br>● 실무 중심의 다양한 도구를 익히고 , 자동화 및 배포까지 포함한<br>end-to-end 데이터 파이프라인을 구현할 수 있는 실력을 기르는<br>것을 목표로 한다 .</p>\n<h1 id='56' style='font-size:20px'>25-2 세션 목표 :</h1>\n<br><p id='57' data-category='list' style='font-size:20px'>● 데이터 엔지니어링의 전체 프로세스 ( 수집 – 처리 – 저장 – 배포 ) 및<br>그 필요성을 이해한다 .<br>● Docker, Airflow, AWS, Spark 등의 실무 도구를 익히고 목적에<br>맞는 파이프라인을 설계 · 구현할 수 있다 .<br>● MLOps 및 CI/CD 의 개념과 필요성을 이해하고 이를 팀<br>프로젝트에 적용할 수 있다 .<br>● 배운 기술을 바탕으로 실제 데이터를 활용한 end-to-end 서비스<br>및 데이터 파이프라인을 설계한다 .</p>\n<p id='58' data-category='paragraph' style='font-size:18px'>Data Science: 딥러닝 이론을 학습하여 인공지능 모델을 구현한다 . 또한 컴퓨터비전과 자연어처리 분야에서 다양한 모델링 프로젝트를<br>진행한다 .<br>커리큘럼</p>\n<br><h1 id='59' style='font-size:20px'>팀 목표 :</h1>\n<br><p id='60' data-category='list' style='font-size:20px'>● 데이터의 종류에 따라 적합한 인공지능 모델을 구현할 수 있는<br>데이터 사이언티스트를 양성하는 것을 목표로 활동한다 .<br>● CV, NLP, RL 등의 딥러닝 패러다임을 연구하며 , TensorFlow,<br>PyTorch, Keras 등의 딥러닝 프레임워크를 다룬다 .<br>● 산학 협력 프로젝트를 통해 현업에서의 데이터 처리 및 모델 설계<br>과정을 직접 경험함으로써 , 실무 현장에서 요구되는 응용<br>능력을 키우는 것을 목표로 한다 .</p>\n<br><p id='61' data-category='paragraph' style='font-size:14px'>학기</p>\n<h1 id='62' style='font-size:20px'>25-2 세션 목표 :</h1>\n<p id='63' data-category='paragraph' style='font-size:14px'>방학</p>\n<br><table id='64' style='font-size:16px'><thead></thead><tbody><tr><td colspan=\"2\">CV</td></tr><tr><td>01</td><td>CNN/Transformers</td></tr><tr><td>02</td><td>Object Detection</td></tr><tr><td>03</td><td>Segmentation</td></tr><tr><td>04</td><td>Generative Models</td></tr><tr><td>05</td><td>Diffusion</td></tr><tr><td>06</td><td>Vision Transformers</td></tr><tr><td>07</td><td>Advanced ViT</td></tr><tr><td>08</td><td>Representation Learning</td></tr><tr><td>09</td><td>Video/3D</td></tr><tr><td colspan=\"2\">RL</td></tr><tr><td>01</td><td>MDP & MC & TD</td></tr><tr><td>02</td><td>DQN & Policy gradient</td></tr><tr><td>03</td><td>REINFORCE & Actor critic & A2C</td></tr><tr><td>04</td><td>TRPO&PPO</td></tr></tbody></table>\n<br><p id='65' data-category='list' style='font-size:20px'>● Computer Vision 분야 패러다임을 원리와 응용방안을 이해하<br>고 , 프로젝트에 필요한 RL 과 NLP 활용방식을 추가로 익힌<br>다 .<br>● 최신 AI 논문을 기반으로 이론과 구현을 병행하며 모델의 구조<br>및 트렌드를 분석할 수 있다 .<br>● PyTorch 기반의 구현 역량을 바탕으로 팀 프로젝트 및 리더보드<br>기반 과제를 수행하고 최신 트렌드를 반영한 커리큘럼을 따라<br>실전 문제 해결 능력을 기른다 .</p>\n<p id='66' data-category='paragraph' style='font-size:16px'>Data Analytics: 데이터 기반 의사결정과 인사이트 도출을 위해 문제정의부터 전처리 , 시각화 , 모델링 , 프론트 등 프로젝트를 통해 실무<br>역량을 기른다 .</p>\n<h1 id='67' style='font-size:14px'>학기</h1>\n<br><table id='68' style='font-size:14px'><thead></thead><tbody><tr><td colspan=\"2\">커리큘럼</td></tr><tr><td>00</td><td>분포 / 회귀 / 기초 ML 빡세게 복습</td></tr><tr><td>01</td><td>Cohort Analysis& RFM Analysis</td></tr><tr><td>02</td><td>가설검정 및 회귀분석 실전</td></tr><tr><td>03</td><td>A/B Testing: 이변량 , 다변량</td></tr><tr><td>04</td><td>ML 모델 심화</td></tr><tr><td>05</td><td>Memory Based 협업필터링 , 컨텐츠 기반 필터링</td></tr><tr><td>06</td><td>Model Based 협업필터링 , Hybrid Ensemble Model</td></tr><tr><td>07</td><td>기말고사 이후 : 공모전 / 산학 딥다이브 신청 시 DS/DE 세션 참관 가능</td></tr><tr><td>08</td><td>커리어세션 : Alumni 초청 레주메 , 실무 , 고민상담 등</td></tr><tr><td colspan=\"2\">필수스터디 : Python/SQL 택 1 선택스터디 : 세션 복습 및 유관 논문리뷰 / 금융 , 게임 , 마케팅 등 도메인 ..</td></tr></tbody></table>\n<br><h1 id='69' style='font-size:20px'>팀 목표 :</h1>\n<p id='70' data-category='paragraph' style='font-size:20px'>● EDA 부터 인사이트 도출 , 통계적 분석 , 인과 추론 , 그리고 모델<br>기반의 의사결정까지 실무 중심의 분석 프로세스를 체계적으로<br>경험하며 , 데이터 기반 문제 해결 능력을 갖춘 분석가를 양성하는<br>것을 목표로 한다 .</p>\n<h1 id='71' style='font-size:20px'>25-2 세션 목표 :</h1>\n<p id='72' data-category='list' style='font-size:20px'>● 1. A/B Testing, 추천시스템 등의 통계 기반 분석 기법과<br>머신러닝 / 딥러닝을 활용한 분석 모델의 개념 및 원리를 이해한다 .<br>● 2. 데이터를 기반으로 실질적인 문제 정의 – 진단 – 해결을 수행하는<br>실전형 프로젝트를 기획 · 수행한다 .<br>● 3. 전처리 , 시각화 , 통계분석 , 모델링까지 데이터 분석의 전<br>과정을 팀 프로젝트를 통해 협업한다 .<br>● 4. Real-world 데이터를 기반으로 공모전 및 산학 프로젝트에<br>참여하여 실무 수준의 포트폴리오를 구축한다 .<br>● 5. 프로젝트 , 스터디 퀄리티 제고 : 공모전 /DA 산학 / 전체산<br>학 / 컨퍼 中<br>최소 2 개 최대 3 개 선택</p>\n<h1 id='73' style='font-size:22px'>Study</h1>\n<br><h1 id='74' style='font-size:18px'>모든 팀에서 교차 스터디 개설 ,<br>자율적인 학술 활동 진행</h1>\n<p id='75' data-category='list' style='font-size:18px'>● 개인화 알고리즘<br>● 인과추론<br>● ML/DL<br>● SQL<br>● AI Agent<br>● 강화학습<br>● 논문 1 일 1 독<br>● SOTA 팔로업<br>● 코테 대비 스터디<br>● MLOps<br>● Kafka & Airflow</p>\n<br><h1 id='76' style='font-size:22px'>Homecoming</h1>\n<br><h1 id='77' style='font-size:18px'>상반기에 팀별 홈커밍 진행<br>하반기에 YBIGTA 전체 진행 예정 ,</h1>\n<br><p id='78' data-category='paragraph' style='font-size:20px'>Hackathon & Lectures<br>산학협력 프로젝트 및<br>타 학회 연합 행사 진행</p>\n<figure id='79'><img alt=\"\" data-coord=\"top-left:(1046,638); bottom-right:(1821,1103)\" /></figure>\n<p id='80' data-category='paragraph' style='font-size:16px'>진로 조언 , 진학 상담 ,<br>알럼나이 - 활동기수 네트워크 생성 등</p>\n<br><figure id='81'><img alt=\"\" data-coord=\"top-left:(2076,443); bottom-right:(2693,908)\" /></figure>\n<br><h1 id='82' style='font-size:14px'>YBIGTA X DTOL 산학협력</h1>\n<figure id='83'><img alt=\"\" data-coord=\"top-left:(2081,966); bottom-right:(2700,1428)\" /></figure>\n<br><p id='84' data-category='paragraph' style='font-size:14px'>YBIGTA X Upstage AGI AGENT 해커톤</p>\n<h1 id='85' style='font-size:20px'>YBIGTA<br>CONFERENCE</h1>\n<br><p id='86' data-category='paragraph' style='font-size:18px'>YBIGTA CONFERENCE 는 매 학기 말 , 모든 학회원들이 모여 , 다양한 주제를<br>발제하고 , 각자 다른 팀의 학회원들이 새로운 프로젝트 팀을 꾸려 프로젝트를<br>진행하고 , 그 결과를 공유하는 YBIGTA 최대 규모의 행사입니다 .</p>\n<h1 id='87' style='font-size:18px'>CONFERENCE 목표 :</h1>\n<p id='88' data-category='paragraph' style='font-size:16px'>컨퍼런스 자료 - YBIGTA 유튜브에서 확인 가능</p>\n<br><p id='89' data-category='list' style='font-size:18px'>● 처음부터 끝까지 서비스 등의 결과물을 기획하여 결과물 / 성과를 만들어냄<br>● 각 팀 커리큘럼에서 함양한 Data Engineering, Data Science, Data Analytics<br>역량을 수렴하여 학회 전체 차원으로서 보다 규모가 큰 결과물을 생산함<br>● 중간발표 등을 통한 학회 내 / 외의 건설적인 피드백을 통해 필요에 따른<br>추가적인 학습을 도모하고 역량을 강화함 .<br>● 협업 , 소통 , 구조화 , 기술 및 서비스적 차원 등 다양한 방면의 문제 해결<br>능력을 함양함</p>\n<h1 id='90' style='font-size:18px'>CONFERENCE 기대효과 :</h1>\n<br><p id='91' data-category='list' style='font-size:18px'>● 학회원의 관심사 및 진로 탐색을 위한 경험 및 역량 강화<br>● 외부 협업과 최종발표 외부인 초청을 통한 네트워크 강화</p>\n<footer id='92' style='font-size:14px'>11</footer>\n<figure id='93'><img alt=\"\" data-coord=\"top-left:(752,609); bottom-right:(1232,1079)\" /></figure>\n<br><h1 id='94' style='font-size:14px'>연세대학교 빅데이터 학회</h1>\n<br><h1 id='95' style='font-size:20px'>YBIGTA</h1>\n<p id='96' data-category='paragraph' style='font-size:16px'>2025 학년도 하반기 : 운영진 소개</p>\n<h1 id='97' style='font-size:20px'>27 대 운영진 소개 :</h1>\n<h1 id='98' style='font-size:14px'>회장단</h1>\n<br><p id='99' data-category='paragraph' style='font-size:14px'>회장 윤희찬<br>부회장 조태연 , 이재영</p>\n<br><h1 id='100' style='font-size:14px'>운영진</h1>\n<br><p id='101' data-category='paragraph' style='font-size:14px'>교육국 손재훈 ( 정 )<br>정민지 ( 부 ) 김이지 ( 부<br>기획국 송휘린 ( 정 ) 조석희 ( 부 )<br>총무국 엄윤희 ( 정 )</p>\n<p id='102' data-category='paragraph' style='font-size:14px'>연락처</p>\n<br><p id='103' data-category='paragraph' style='font-size:14px'>회장 윤희찬 010-9135-0295<br>yonseibigdata@gmail.com<br>카카오채널 ybigta<br>인스타그램 @yonsei_ybigta</p>\n<br><figure id='104'><img style='font-size:16px' alt=\"Data Engineering\n팀장 김정인\n부팀장 조요셉\n)\nData Science Data Analytics\n팀장 김형진 팀장 김현운\n부팀장 이준찬 부팀장 성우제\" data-coord=\"top-left:(734,300); bottom-right:(2782,1567)\" /></figure>\n<p id='105' data-category='paragraph' style='font-size:20px'>운영진 소개 : 회장 윤희찬</p>\n<figure id='106'><img alt=\"\" data-coord=\"top-left:(327,372); bottom-right:(1181,1404)\" /></figure>\n<br><h1 id='107' style='font-size:20px'>윤희찬</h1>\n<h1 id='108' style='font-size:16px'>인적사항</h1>\n<br><p id='109' data-category='paragraph' style='font-size:16px'>응용통계학과 20 : 휴학을 길 ~ 게 해서 다음 학기 3-1<br>Edge AI Lab, DE 팀<br>00 년생 , YBIGTA 통수권자</p>\n<p id='110' data-category='paragraph' style='font-size:16px'>MBTI</p>\n<br><h1 id='111' style='font-size:16px'>INFJ</h1>\n<p id='112' data-category='paragraph' style='font-size:16px'>관심사</p>\n<br><p id='113' data-category='paragraph' style='font-size:16px'>피아노 , 논문<br>토이 플젝 ( 강화학습 트레이딩 관심 있으신 분 ?)</p>\n<p id='114' data-category='paragraph' style='font-size:16px'>희망 진로<br>대학원 진학 고민 중</p>\n<footer id='115' style='font-size:14px'>14</footer>\n<p id='116' data-category='paragraph' style='font-size:20px'>운영진 소개 : 부회장 조태연</p>\n<figure id='117'><img alt=\"\" data-coord=\"top-left:(424,469); bottom-right:(1120,1389)\" /></figure>\n<br><h1 id='118' style='font-size:20px'>조태연</h1>\n<h1 id='119' style='font-size:16px'>인적사항</h1>\n<br><p id='120' data-category='paragraph' style='font-size:16px'>응용통계학과 20, DA 팀<br>01 년생 , 다음학기 4-1, 노는게 제일 좋음</p>\n<p id='121' data-category='paragraph' style='font-size:16px'>MBTI<br>ISFJ</p>\n<p id='122' data-category='paragraph' style='font-size:16px'>관심사<br>게임 ( 온라인 , 보드게임 등등 ), 운동 ( 주짓수 ),<br>로그 데이터 분석</p>\n<h1 id='123' style='font-size:16px'>희망 진로</h1>\n<br><p id='124' data-category='paragraph' style='font-size:16px'>게임 밸런스 기획 , Anti-cheat Engineer</p>\n<footer id='125' style='font-size:14px'>15</footer>\n<h1 id='126' style='font-size:20px'>운영진 소개 : 부회장 이재영</h1>\n<figure id='127'><img alt=\"\" data-coord=\"top-left:(390,413); bottom-right:(1107,1359)\" /></figure>\n<br><p id='128' data-category='paragraph' style='font-size:18px'>내기하지 않기 ... (Challenge Accepted)</p>\n<br><h1 id='129' style='font-size:20px'>이재영</h1>\n<p id='130' data-category='paragraph' style='font-size:18px'>인적사항<br>응용통계학과 21, DE 팀<br>02 년생 , YBIGTA 지정생존자</p>\n<p id='131' data-category='paragraph' style='font-size:18px'>MBTI<br>ENFP</p>\n<h1 id='132' style='font-size:18px'>관심사</h1>\n<br><p id='133' data-category='paragraph' style='font-size:18px'>YBIGTA 홈서버 구축 , 자전거 타기 , 걸어다니기 , 스파게티<br>해먹기</p>\n<br><table id='134' style='font-size:14px'><thead></thead><tbody><tr><td>희망 진로 CS or AI 석사</td><td>안녕하세요 , 부회장을 맡고 있는 응통 21 이재영입니다 . 적혀있는 것처럼 스파게티 좋아해요 . 방금도 연어크림파스타 해먹었어요 !! 자전거 타는 것도 매우 좋아합니다 ! 자전거 타는 분 계시면 저랑 같이 남산 라이딩 가요 ~ 걸어다니는 것도 좋아해요 ! 돌아다니면서 세상 관찰하기가 재밌더라고요 :) 최근 학술적으로는 AI 인프라 전반에 관심을 가지고 있습니다 . 개인적으로 notebookLM 을 로컬에서 end2end 로 돌리고자 홈서버 구축을 해보고 있어 요 ! 3090 하나 더 사서 다양한 실험을 해보고 싶네요 ~ 와빅 홈서버 구축에도 관심있습니다 ! 앞으로 와빅을 빛내주실 분들을 OT 자리에서 만나뵙지 못한다는게 너무 슬프네요 ㅜㅜ 한국 돌아가면 뵙겠습니다 ! 다음에 만나요 ~</td></tr></tbody></table>\n<br><p id='135' data-category='paragraph' style='font-size:16px'>16 16</p>\n<p id='136' data-category='paragraph' style='font-size:20px'>운영진 소개 : DE 팀장 김정인</p>\n<figure id='137'><img alt=\"\" data-coord=\"top-left:(332,482); bottom-right:(1164,1236)\" /></figure>\n<br><h1 id='138' style='font-size:20px'>김정인</h1>\n<h1 id='139' style='font-size:16px'>인적사항</h1>\n<br><p id='140' data-category='paragraph' style='font-size:16px'>컴퓨터과학과 24 04 년생 26 기 막내<br>대 DE 의 시대를 열어줄 젊은 피</p>\n<p id='141' data-category='paragraph' style='font-size:16px'>MBTI<br>INFP</p>\n<p id='142' data-category='paragraph' style='font-size:16px'>관심사<br>CS, DE 혁명 , 컴과 부흥 , 인디 ( 검정치마 , 한로로 ),<br>피아노 , 롯데리아 케찹 도둑</p>\n<p id='143' data-category='paragraph' style='font-size:16px'>희망 진로<br>CS 석사 진학</p>\n<footer id='144' style='font-size:14px'>17</footer>\n<h1 id='145' style='font-size:20px'>운영진 소개 : DE 부팀장 조요셉</h1>\n<figure id='146'><img alt=\"\" data-coord=\"top-left:(373,365); bottom-right:(1123,1405)\" /></figure>\n<br><h1 id='147' style='font-size:20px'>조요셉</h1>\n<h1 id='148' style='font-size:16px'>인적사항</h1>\n<br><h1 id='149' style='font-size:16px'>응용통계학과 21<br>02 년생<br>현재 데이터 엔지니어로 근무중 ( 개발자 병특 )</h1>\n<p id='150' data-category='paragraph' style='font-size:16px'>MBTI<br>INFJ</p>\n<p id='151' data-category='paragraph' style='font-size:16px'>관심사<br>앱 개발 (typescript)<br>hci/ux</p>\n<p id='152' data-category='paragraph' style='font-size:16px'>희망 진로<br>데이터 엔지니어 , ux 대학원</p>\n<footer id='153' style='font-size:14px'>18</footer>\n<h1 id='154' style='font-size:20px'>운영진 소개 : DS 팀장 김형진</h1>\n<figure id='155'><img alt=\"\" data-coord=\"top-left:(207,305); bottom-right:(1151,1566)\" /></figure>\n<br><h1 id='156' style='font-size:20px'>김형진</h1>\n<h1 id='157' style='font-size:16px'>인적사항</h1>\n<br><p id='158' data-category='paragraph' style='font-size:16px'>응용통계학과 20 / 00 년생<br>수업하나 들으면 졸업<br>현재 현대 모비스 선행연구실에서 인턴 중<br>무표정이면 그냥 아무 생각 없는거니 오해하지 말하주세요 … ㅠ</p>\n<h1 id='159' style='font-size:16px'>MBTI</h1>\n<br><h1 id='160' style='font-size:16px'>INTP (T 99%..)</h1>\n<p id='161' data-category='paragraph' style='font-size:16px'>관심사</p>\n<br><p id='162' data-category='paragraph' style='font-size:16px'>여행가는거 좋아함 ( 최근 1 년간 5 번 ) 한자 좋아함<br>디저트 좋아함 최근 F1<br>보는 중</p>\n<br><p id='163' data-category='paragraph' style='font-size:16px'>LLM 관심 많음 . 근데 슬슬 다른것도 관심 가져야할듯 ..<br>같이 보드게임 할 사람 모집 중 … (1 / n)</p>\n<p id='164' data-category='paragraph' style='font-size:16px'>희망 진로<br>취업 or 대학원</p>\n<footer id='165' style='font-size:14px'>19</footer>\n<h1 id='166' style='font-size:20px'>운영진 소개 : DS 부팀장 이준찬</h1>\n<figure id='167'><img alt=\"\" data-coord=\"top-left:(256,299); bottom-right:(1050,1484)\" /></figure>\n<br><h1 id='168' style='font-size:20px'>이준찬</h1>\n<h1 id='169' style='font-size:18px'>인적사항</h1>\n<br><p id='170' data-category='paragraph' style='font-size:18px'>산업공학과 19<br>99 년생<br>초과학기 중 - 다음학기 막학기</p>\n<p id='171' data-category='paragraph' style='font-size:18px'>MBTI<br>INFJ</p>\n<p id='172' data-category='paragraph' style='font-size:18px'>관심사</p>\n<br><p id='173' data-category='paragraph' style='font-size:16px'>사진 ( 타임랩스 ), 보드게임 , 스위치 , 러닝 (2 학기 마라토너<br>구해요 !)<br>IT B2C 도메인 엔지니어 / 에듀테크</p>\n<h1 id='174' style='font-size:18px'>희망 진로</h1>\n<br><p id='175' data-category='paragraph' style='font-size:18px'>TPM 희망 , 하고 싶은건 많은데 시간은 없는 ..</p>\n<footer id='176' style='font-size:14px'>20</footer>\n<h1 id='177' style='font-size:20px'>운영진 소개 : DA 팀장 김현운</h1>\n<figure id='178'><img style='font-size:14px' alt=\"뉴스등장 :\nhttps://www.jeonmae.co.kr/news/articleVie\nw.html?idxno=1162475\" data-coord=\"top-left:(19,379); bottom-right:(1335,1589)\" /></figure>\n<br><h1 id='179' style='font-size:20px'>김현운</h1>\n<h1 id='180' style='font-size:18px'>인적사항</h1>\n<br><p id='181' data-category='paragraph' style='font-size:18px'>응용통계학과 23, DA<br>2-2 끝나고 와빅 및 인턴 하려고 휴학 , 복학 준비 예정<br>Linkedin: hyunwoon kim -> 친추 부탁드립니다</p>\n<p id='182' data-category='paragraph' style='font-size:18px'>MBTI</p>\n<br><h1 id='183' style='font-size:18px'>ESFP ESTP 그 사이 어딘가</h1>\n<p id='184' data-category='paragraph' style='font-size:18px'>관심사</p>\n<br><p id='185' data-category='paragraph' style='font-size:18px'>한민고 / 시대인재 환영<br>2.5 세대 아이돌 음악 ( 케이팝 대황금기 16~18 에<br>중학생이었음 )<br>진로 , 커리어 관련한 모든것<br>( 아직금융권의꿈을포기하지못함 )<br>두산 골수팬</p>\n<p id='186' data-category='paragraph' style='font-size:18px'>희망 진로</p>\n<br><p id='187' data-category='paragraph' style='font-size:18px'>컨설팅인턴 한번 더 해보고 아니다싶으면 대학원 !!</p>\n<footer id='188' style='font-size:16px'>21</footer>\n<h1 id='189' style='font-size:22px'>운영진 소개 : DA 부팀장 성우제</h1>\n<figure id='190'><img alt=\"\" data-coord=\"top-left:(288,339); bottom-right:(1310,1412)\" /></figure>\n<br><h1 id='191' style='font-size:22px'>성우제</h1>\n<h1 id='192' style='font-size:20px'>인적사항</h1>\n<br><p id='193' data-category='paragraph' style='font-size:18px'>산업공학과 19 제가<br>있을텐데<br>빠른 01 년생 더<br>DT 컨설팅 데이터 RA 로 인턴 중<br>다음 학기나 다다음학기 5 학년 예정</p>\n<p id='194' data-category='paragraph' style='font-size:20px'>MBTI<br>ISFP</p>\n<p id='195' data-category='paragraph' style='font-size:20px'>관심사</p>\n<br><p id='196' data-category='paragraph' style='font-size:20px'>야구 하기<br>야구 보면서 스트레스 받기 ( 삼성 라이온즈 잘 좀 하자 )<br>위스키 마시면서 야구로 받은 스트레스 풀기</p>\n<h1 id='197' style='font-size:20px'>희망 진로</h1>\n<br><p id='198' data-category='paragraph' style='font-size:20px'>데이터분석 쪽으로 .. 도메인은 모르겠음 .. 흘러흘러 발 닿는<br>곳으로</p>\n<br><p id='199' data-category='paragraph' style='font-size:14px'>안녕하세요 DA 부팀장 맡고 있는 성우제입니다 !</p>\n<br><p id='200' data-category='paragraph' style='font-size:14px'>산업공학과 19 학번이고 빠른년생이라 족보 깨부순 전적<br>무수히 많아요 .. 학교에서는 00 으로 지내고 있기는 한데<br>항상 의도치 않은 족보 브레이킹이 발생하더라고요 ..</p>\n<p id='201' data-category='paragraph' style='font-size:14px'>사진은 온통 야구뿐이지만 야구를 많이 좋아할</p>\n<br><p id='202' data-category='paragraph' style='font-size:14px'>뿐입니다ㅋㅋ 데이터분석의 길을 택한 것도 야구 때문일</p>\n<br><p id='203' data-category='paragraph' style='font-size:14px'>만큼 야구 좋아하니까 야구 얘기하고 싶으신 분들 , 야구</p>\n<br><p id='204' data-category='paragraph' style='font-size:14px'>직관 번개 열고 싶으신 분들 모두 대환영이에요 .</p>\n<br><p id='205' data-category='paragraph' style='font-size:14px'>( 야구 티켓 잘 구하는 능력자들 급구 )</p>\n<br><p id='206' data-category='paragraph' style='font-size:14px'>퇴근시간이 좀 늦어서 대신 누군가가 소개해주고<br>아마 회장님이시겠죠 ? ( 회장님 사랑합니다 )<br>자세한 이야기는 만나서 해요 ! 다들 환영합니다 ~</p>\n<footer id='207' style='font-size:16px'>22</footer>\n<h1 id='208' style='font-size:20px'>운영진 소개 : 교육국장 손재훈</h1>\n<figure id='209'><img alt=\"\" data-coord=\"top-left:(297,341); bottom-right:(1202,1056)\" /></figure>\n<br><h1 id='210' style='font-size:20px'>손재훈</h1>\n<h1 id='211' style='font-size:16px'>인적사항</h1>\n<br><p id='212' data-category='paragraph' style='font-size:16px'>응용통계학과 21, DE 팀<br>00 년생 , 교육국 최고권력자</p>\n<p id='213' data-category='paragraph' style='font-size:16px'>MBTI</p>\n<br><h1 id='214' style='font-size:18px'>ENTP? 저도 저를 잘 몰라요</h1>\n<h1 id='215' style='font-size:16px'>관심사</h1>\n<br><h1 id='216' style='font-size:16px'>프로그램 만들기 , 과제 제작 , 운동하기</h1>\n<h1 id='217' style='font-size:16px'>희망 진로</h1>\n<br><p id='218' data-category='paragraph' style='font-size:16px'>대학원과 취업 그 사이 어딘가를 고민하다가 주식 잘돼서<br>부자 되기</p>\n<footer id='219' style='font-size:14px'>23</footer>\n<h1 id='220' style='font-size:20px'>운영진 소개 : 교육국원 정민지</h1>\n<figure id='221'><img alt=\"\" data-coord=\"top-left:(318,367); bottom-right:(1178,1404)\" /></figure>\n<br><h1 id='222' style='font-size:20px'>정민지</h1>\n<h1 id='223' style='font-size:16px'>인적사항</h1>\n<br><p id='224' data-category='paragraph' style='font-size:16px'>인공지능학과 23, 짱 DS<br>04 년생 , 담학기 3-2</p>\n<p id='225' data-category='paragraph' style='font-size:16px'>MBTI</p>\n<br><h1 id='226' style='font-size:16px'>ENFP (TJ 아님 ..)</h1>\n<p id='227' data-category='paragraph' style='font-size:16px'>관심사<br>DS 전도 , AI 전문가 되기 , 산책 , 집</p>\n<h1 id='228' style='font-size:16px'>희망 진로</h1>\n<br><p id='229' data-category='paragraph' style='font-size:16px'>석사까진 해야하려나 .. or 취업 ??</p>\n<footer id='230' style='font-size:14px'>24</footer>\n<h1 id='231' style='font-size:20px'>운영진 소개 : 교육국원 김이지</h1>\n<figure id='232'><img alt=\"\" data-coord=\"top-left:(109,370); bottom-right:(1175,1407)\" /></figure>\n<br><h1 id='233' style='font-size:20px'>김이지</h1>\n<p id='234' data-category='paragraph' style='font-size:16px'>인적사항<br>컴퓨터과학과 20, DA 팀<br>01 년생</p>\n<p id='235' data-category='paragraph' style='font-size:16px'>MBTI</p>\n<br><p id='236' data-category='paragraph' style='font-size:16px'>?NT?</p>\n<p id='237' data-category='paragraph' style='font-size:16px'>관심사<br>고양이 , 귀여운거 다 , 뮤지컬 , hdi, 산책</p>\n<p id='238' data-category='paragraph' style='font-size:16px'>희망 진로<br>대학원과 취업 사이 갈팡질팡 중</p>\n<footer id='239' style='font-size:14px'>25</footer>\n<h1 id='240' style='font-size:20px'>운영진 소개 : 기획국장 송휘린</h1>\n<figure id='241'><img alt=\"\" data-coord=\"top-left:(326,356); bottom-right:(1171,1414)\" /></figure>\n<br><h1 id='242' style='font-size:20px'>송휘린</h1>\n<h1 id='243' style='font-size:16px'>인적사항</h1>\n<br><p id='244' data-category='paragraph' style='font-size:16px'>응용통계학과 23, 짱 DS (DE 이적 계획 … )<br>03 년생</p>\n<p id='245' data-category='paragraph' style='font-size:16px'>MBTI</p>\n<br><h1 id='246' style='font-size:16px'>ISFJ 에겐청순상냥친절느좋녀 (?)</h1>\n<h1 id='247' style='font-size:16px'>관심사</h1>\n<br><h1 id='248' style='font-size:16px'>독서 편지쓰기 상냥하기 친절하기</h1>\n<h1 id='249' style='font-size:16px'>희망 진로</h1>\n<br><p id='250' data-category='paragraph' style='font-size:16px'>추구미 : 기획도 잘하고 코딩도 잘하고 공부도 잘하는<br>똑똑이</p>\n<br><p id='251' data-category='paragraph' style='font-size:16px'>세계가 놀라고 한국이 두려워하는 취업</p>\n<br><p id='252' data-category='paragraph' style='font-size:16px'>인재<br>현실미 : 더 잘래용</p>\n<footer id='253' style='font-size:14px'>26</footer>\n<h1 id='254' style='font-size:20px'>운영진 소개 : 기획국장 송휘린</h1>\n<figure id='255'><img alt=\"\" data-coord=\"top-left:(326,356); bottom-right:(1172,1414)\" /></figure>\n<br><h1 id='256' style='font-size:20px'>송휘린</h1>\n<h1 id='257' style='font-size:18px'>인적사항</h1>\n<br><p id='258' data-category='paragraph' style='font-size:18px'>응용통계학과 23, 짱 DS (DE 이적 계획 … )<br>03 년생</p>\n<p id='259' data-category='paragraph' style='font-size:18px'>MBTI</p>\n<br><h1 id='260' style='font-size:18px'>죄송해요 ENTP 입니다</h1>\n<br><p id='261' data-category='paragraph' style='font-size:14px'>ㄴ순수 100% T<br>ㄴ 아닙니다 55% 밖에 안됩니다</p>\n<p id='262' data-category='paragraph' style='font-size:18px'>관 심사</p>\n<br><h1 id='263' style='font-size:18px'>수영 콘서트관람 독서 글쓰기 축구보기 잠자기</h1>\n<h1 id='264' style='font-size:18px'>희망 진로</h1>\n<br><p id='265' data-category='paragraph' style='font-size:18px'>추구미 : 기획도 잘하고 코딩도 잘하고 공부도 잘하는<br>똑똑이</p>\n<br><p id='266' data-category='paragraph' style='font-size:18px'>세계가 놀라고 한국이 두려워하는 취업</p>\n<br><p id='267' data-category='paragraph' style='font-size:18px'>인재</p>\n<br><p id='268' data-category='paragraph' style='font-size:18px'>현실미 : 더 잘래용</p>\n<footer id='269' style='font-size:16px'>27</footer>\n<h1 id='270' style='font-size:20px'>운영진 소개 : 기획국원 조석희</h1>\n<figure id='271'><img alt=\"\" data-coord=\"top-left:(318,367); bottom-right:(1178,1398)\" /></figure>\n<br><h1 id='272' style='font-size:20px'>조석희</h1>\n<p id='273' data-category='paragraph' style='font-size:16px'>인적사항<br>문헌정보학과 20<br>00 년생</p>\n<p id='274' data-category='paragraph' style='font-size:16px'>MBTI</p>\n<br><h1 id='275' style='font-size:16px'>INFJ</h1>\n<p id='276' data-category='paragraph' style='font-size:16px'>관심사<br>CV, 러닝 , 새</p>\n<p id='277' data-category='paragraph' style='font-size:16px'>희망 진로<br>학사 취업 ( 서비스 개발 , AI Engineer)</p>\n<footer id='278' style='font-size:14px'>28</footer>\n<h1 id='279' style='font-size:20px'>운영진 소개 : 총무국장 엄윤희</h1>\n<figure id='280'><img alt=\"\" data-coord=\"top-left:(331,367); bottom-right:(962,1400)\" /></figure>\n<p id='281' data-category='paragraph' style='font-size:14px'>엄 윤희 ( 찬 )<br>ㄴ 엄윤희 찬 ! 엄윤희 찬 !</p>\n<br><h1 id='282' style='font-size:20px'>엄윤희</h1>\n<p id='283' data-category='paragraph' style='font-size:18px'>인적사항<br>컴퓨터과학과 22<br>03 년생<br>회장님의 66.6% HDD</p>\n<h1 id='284' style='font-size:18px'>MBTI</h1>\n<br><h1 id='285' style='font-size:18px'>ESTP</h1>\n<p id='286' data-category='paragraph' style='font-size:18px'>관심사</p>\n<br><p id='287' data-category='paragraph' style='font-size:18px'>돈 잘 보내주세요 . 빠른 정산 . 빠른 송금 . 돈 없습니다 .</p>\n<p id='288' data-category='paragraph' style='font-size:18px'>희망 진로<br>절 감당할 회사를 찾고 있습니다</p>\n<footer id='289' style='font-size:16px'>29</footer>\n<h1 id='290' style='font-size:20px'>운영진 소개 : 총무국장 엄윤희</h1>\n<figure id='291'><img alt=\"\" data-coord=\"top-left:(344,362); bottom-right:(1048,1422)\" /></figure>\n<br><h1 id='292' style='font-size:20px'>엄윤희</h1>\n<p id='293' data-category='paragraph' style='font-size:16px'>인적사항<br>컴퓨터과학과 22<br>03 년생</p>\n<p id='294' data-category='paragraph' style='font-size:16px'>MBTI<br>ESTP</p>\n<p id='295' data-category='paragraph' style='font-size:16px'>관심사</p>\n<br><p id='296' data-category='paragraph' style='font-size:16px'>돈 잘 보내주세요 . 빠른 정산 . 빠른 송금 .</p>\n<p id='297' data-category='paragraph' style='font-size:16px'>희망 진로<br>절 데려갈 회사를 찾고 있습니다</p>\n<footer id='298' style='font-size:14px'>30</footer>\n<p id='299' data-category='paragraph' style='font-size:20px'>객원 소개 : 김지학 교수님</p>\n<figure id='300'><img alt=\"\" data-coord=\"top-left:(145,472); bottom-right:(1289,1230)\" /></figure>\n<br><h1 id='301' style='font-size:20px'>김지학</h1>\n<h1 id='302' style='font-size:16px'>인적사항</h1>\n<br><p id='303' data-category='paragraph' style='font-size:16px'>일반대학원 언어정보학협동과정 24, 82 년생<br>( 현 ) 숭실대학교 외래교수 , 국립목포대학교 외래교수 ,<br>고려사이버대학교 외래교수 , 숭실사이버대학교 외래교수<br>등</p>\n<p id='304' data-category='paragraph' style='font-size:16px'>MBTI</p>\n<br><h1 id='305' style='font-size:16px'>INTJ$ISTJ</h1>\n<p id='306' data-category='paragraph' style='font-size:16px'>관심사<br>한국어교육에 관한 모든 것 , 융합 연구와 강의</p>\n<h1 id='307' style='font-size:16px'>희망 진로</h1>\n<br><p id='308' data-category='paragraph' style='font-size:16px'>희망한 진로를 이루어서 빌드업 지속 중</p>\n<footer id='309' style='font-size:14px'>31</footer>\n<figure id='310'><img alt=\"\" data-coord=\"top-left:(751,609); bottom-right:(1231,1080)\" /></figure>\n<br><h1 id='311' style='font-size:14px'>연세대학교 빅데이터 학회</h1>\n<br><h1 id='312' style='font-size:20px'>YBIGTA</h1>\n<p id='313' data-category='paragraph' style='font-size:16px'>2025 학년도 하반기 :<br>교육세션 안내 및 공지</p>\n<h1 id='314' style='font-size:18px'>(1) 25-2 신입기수 교육세션 : 일정표</h1>\n<figure id='315'><img alt=\"\" data-coord=\"top-left:(385,323); bottom-right:(1327,1494)\" /></figure>\n<br><figure id='316'><img alt=\"\" data-coord=\"top-left:(1656,326); bottom-right:(2586,1480)\" /></figure>\n<footer id='317' style='font-size:14px'>33</footer>\n<h1 id='318' style='font-size:20px'>(1) 25-1 신입기수 교육세션 : 일정표</h1>\n<h1 id='319' style='font-size:16px'>교육세션 일정 :</h1>\n<br><p id='320' data-category='list' style='font-size:16px'>- 일시 : 화 / 금 19:00 ~ 21:30<br>- 장소 : 제 4 공학관 강의실 ( 사전 공지 예정 )</p>\n<br><h1 id='321' style='font-size:16px'>교육세션 자료 : 구글 드라이브 초대 확인 필요 ( 25-2 YBIGTA 공유 드라이브 )</h1>\n<br><h1 id='322' style='font-size:16px'>첫 세션 이후 과제 제출 : 교육세션 OT 자료 참고</h1>\n<footer id='323' style='font-size:14px'>34</footer>\n<h1 id='324' style='font-size:22px'>(1) 신입기수 교육세션 : 회칙 ( 출결 )</h1>\n<p id='325' data-category='paragraph' style='font-size:18px'>.</p>\n<br><p id='326' data-category='list' style='font-size:18px'>● 신입기수는 교육세션 , 경고 4 회 누적 시 제명 대상입니다 .<br>● 세션 시작 시간 후 15 분 이내로 도착하지 않으면 지각 , 30 분 이상 늦은 경우 결석 처리됩니다<br>○ 세션 지각 2 번 → 경고 1 번 / 세션 결석 1 번 → 경고 1 번<br>● 세션 중 이탈의 경우 , 사유 이탈 및 무단 이탈을 지각 및 결석과 같이 간주합니다 .<br>○ 사유 이탈 2 번 → 경고 1 번 / 무단 이탈 1 번 → 경고 1 번<br>● 지각 및 결석의 경우 , 세션 2 일 전까지 교육부장에게 말씀해주세요 .<br>○ 지각 및 결석 사유 인정 여부는 회칙에 따릅니다 .<br>○ 사유가 인정되는 경우에 한해 과제 제출로 출결을 대신할 수 있습니다 .</p>\n<p id='327' data-category='paragraph' style='font-size:20px'>교육세션진행및출석관련문의는교육국장손재훈에게해주세요.</p>\n<br><p id='328' data-category='paragraph' style='font-size:16px'>※ 정당한 결석 사유가 있다면 , 비대면 참여를 허용합니다 . <br>    세션 당일 낮 12 시까지 ' 교육국장 ' 에게 말씀해주세요 .</p>\n<footer id='329' style='font-size:14px'>35</footer>\n<h1 id='330' style='font-size:20px'>(1) 신입기수 교육세션 : 회칙 ( 과제 )</h1>\n<h1 id='331' style='font-size:16px'>● 과제 기한은 세션 6 일 후 자정까지입니다 .</h1>\n<br><p id='332' data-category='list' style='font-size:16px'>○ 화요일 세션 과제는 내주 월요일 23:59 까지 제출<br>○ 금요일 세션 과제는 내주 목요일 23:59 까지 제출</p>\n<h1 id='333' style='font-size:16px'>● 과제 지각 기한은 과제 기한의 다음 날 자정까지입니다 .</h1>\n<br><p id='334' data-category='list' style='font-size:16px'>○ 화요일 세션 과제는 내주 화요일 23:59 까지 지각 제출 허용<br>○ 금요일 세션 과제는 내주 금요일 23:59 까지 지각 제출 허용</p>\n<p id='335' data-category='paragraph' style='font-size:16px'>● 사전 과제 기한은 세션 한 시간 전 ( 당일 18:30) 까지입니다 .<br>○ 사전 과제가 있는 세션의 경우 , 일주일 전 세션이 끝날 때 과제가 고지됩니다 .</p>\n<footer id='336' style='font-size:14px'>36</footer>\n<h1 id='337' style='font-size:20px'>(2) 스터디 : 신입기수</h1>\n<h1 id='338' style='font-size:18px'>OT 이후 , 스터디 가수요조사에 참여해주세요 . 신입기수는 최소 1 개의 스터디에 필수 참여해야<br>합니다 .</h1>\n<br><p id='339' data-category='list' style='font-size:16px'>● 수요조사 이후 , 주제당 2 인 이상의 인원이 모이면 스터디가 개설됩니다 .<br>● 모든 스터디는 스터디 계획서 를 작성하여 제출해야 합니다 . ( 제출처 : 2025-2 교육세션 > 신입기수<br>스터디 > 스터디 계획서 제출 ) ( 스터디계획서양식& 예시 문서 , 신입기수스터디현황및결과물<br>스프레드시트 참고 가능 )<br>● 신입기수 스터디에는 지원금이 지급됩니다 . 영수증을 항상 챙겨주세요 . 단 , 다과류 ( 카페 등 )<br>는 지원이 불가합니다 . ( 도서 / 강의비 / 서버비 등 회장단 심의 하에 지원 가능 )</p>\n<h1 id='340' style='font-size:18px'>진행방식</h1>\n<br><p id='341' data-category='list' style='font-size:18px'>● 커리큘럼 및 날짜는 신입기수 스터디원들이 자율적으로 정합니다 .<br>● 스터디에 26 기 멘토가 배정됩니다 . 멘토는 길라잡이일 뿐 , 모든 스터디 활동은 신입기수<br>스터디원들이 진행합니다 .</p>\n<footer id='342' style='font-size:14px'>37</footer>\n<h1 id='343' style='font-size:20px'>(3) 최종 팀 배정</h1>\n<h1 id='344' style='font-size:16px'>팀 배정은 교육세션과 신입기수 프로젝트가 모두 종료된 8 월 27~29 일에 이루어집니다 .</h1>\n<h1 id='345' style='font-size:16px'>팀 배정 기준</h1>\n<br><p id='346' data-category='list' style='font-size:16px'>● 신입기수 교육세션 참여도 ( 출결 ) 및 과제 점수<br>● 리크루팅 시 팀 지망 순위</p>\n<h1 id='347' style='font-size:16px'>팀 활동 안내</h1>\n<br><p id='348' data-category='list' style='font-size:16px'>● 최종 배정된 팀에서 2 학기 ( 방학 2 회 , 정규학기 2 회 ) 간 활동해야 합니다 .<br>● 수료 이후 팀장의 승인 하에 동일 팀에서 , 혹은 팀을 변경하여 연장기수로서 활동하실 수 있습니<br>다 .<br>● 모든 팀의 세션과 교육 등의 자료는 활동기수 학회원 전체에게 구글드라이브로 공유됩니다 .<br>● 적성에 맞지 않을 경우 , 중도 팀 변경이 가능하나 방학 세션을 1 회 추가 이수해야합니다 .</p>\n<footer id='349' style='font-size:14px'>38</footer>\n<h1 id='350' style='font-size:20px'>(4) 회비 납부 (26 기 & 신입기수 공통 )</h1>\n<p id='351' data-category='paragraph' style='font-size:16px'>수료하지 않은 활동 회원 전체는 의무적으로 회비를 납부해야 합니다 .<br>회비는 스터디 , 컨퍼런스 , 홈커밍 등 학회의 다양한 활동과 행사 , 그리고 운영을 지원하는 등<br>공공을 위해서만 사용됩니다 . 뒤풀이와 같은 선택적 비공식 행사의 비용은 각출됩니다 .</p>\n<p id='352' data-category='list' style='font-size:16px'>● 납부 계좌 : 카카오뱅크 3333344370601 엄윤희<br>● 납부 금액 : 40,000 원<br>● 납부 기간 : 2025 년 7 월 11 일 ( 금 ) 23:59 까지</p>\n<p id='353' data-category='paragraph' style='font-size:16px'>학회의 발전 및 운영을 위해 많은 협조 부탁드리며 , 문의사항이 있으시면 총무국장 엄윤희에게<br>언제든지 연락 주시기 바랍니다 .</p>\n<footer id='354' style='font-size:14px'>39</footer>\n<figure id='355'><img alt=\"\" data-coord=\"top-left:(752,609); bottom-right:(1232,1080)\" /></figure>\n<br><h1 id='356' style='font-size:14px'>연세대학교 빅데이터 학회</h1>\n<br><h1 id='357' style='font-size:20px'>YBIGTA</h1>\n<h1 id='358' style='font-size:16px'>27 대 운영진은 여러분을 환영합니다 !</h1>",
    "1hRVSl8IwUgep56wMYzjphkAiX5D4XsyL": "<h1 id='0' style='font-size:14px'>안다르커피 제휴 안내서</h1>\n<h1 id='1' style='font-size:14px'>To. 서대문구 연세로9길 25, 2F</h1>\n<h1 id='2' style='font-size:20px'>01. 안다르커피 소개</h1>\n<br><h1 id='3' style='font-size:14px'>서울 서대문구 연세로9길 25, 2층 (고래고래 건물 2층)</h1>\n<figure id='4'><img alt=\"\" data-coord=\"top-left:(88,246); bottom-right:(503,1043)\" /></figure>\n<br><figure id='5'><img alt=\"\" data-coord=\"top-left:(522,241); bottom-right:(951,1058)\" /></figure>\n<br><h1 id='6' style='font-size:16px'>[andar는 스페인어로 걷다, 걸어가다라는 의미에요.]</h1>\n<br><h1 id='7' style='font-size:16px'>크로플이 맛있고 공부/팀플하기 최적인</h1>\n<br><h1 id='8' style='font-size:16px'>신촌카페입니다 :)</h1>\n<h1 id='9' style='font-size:18px'>AM 11:00 ~ PM 23:30 (방학 12:00~23:00)</h1>\n<p id='10' data-category='list' style='font-size:16px'>▪ 4인 ~ 10인 단체석<br>▪ 멀티탭 다수 구비<br>▪ 두유 무료 변경<br>▪ 미팅룸 (TV, 화이트보드 구비) 예약 가능<br>▪ 무료간식 / 담요 / 스탠드 제공</p>\n<p id='11' data-category='paragraph' style='font-size:16px'>네이버지도 ‘알림받기’, 해주시면 더 많은 소식<br>빠르게 확인하실 수 있습니다!</p>\n<h1 id='12' style='font-size:20px'>01. 안다르커피 소개</h1>\n<br><h1 id='13' style='font-size:14px'>서울 서대문구 연세로9길 25, 2층 (고래고래 건물 2층)</h1>\n<figure id='14'><img alt=\"\" data-coord=\"top-left:(58,204); bottom-right:(1215,1024)\" /></figure>\n<br><h1 id='15' style='font-size:16px'>연세대학교 정문 도보 5분</h1>\n<h1 id='16' style='font-size:16px'>신촌역 2호선 도보 6분</h1>\n<h1 id='17' style='font-size:18px'>01. 안다르커피 소개</h1>\n<br><h1 id='18' style='font-size:14px'>입구 사진</h1>\n<figure id='19'><img alt=\"\" data-coord=\"top-left:(76,205); bottom-right:(1220,1066)\" /></figure>\n<br><figure id='20'><img alt=\"\" data-coord=\"top-left:(1264,202); bottom-right:(1922,1069)\" /></figure>\n<h1 id='21' style='font-size:18px'>01. 안다르커피 소개</h1>\n<br><h1 id='22' style='font-size:14px'>외부 사진</h1>\n<figure id='23'><img alt=\"\" data-coord=\"top-left:(71,204); bottom-right:(733,1067)\" /></figure>\n<br><figure id='24'><img alt=\"\" data-coord=\"top-left:(782,201); bottom-right:(1947,1071)\" /></figure>\n<h1 id='25' style='font-size:18px'>01. 안다르커피 소개</h1>\n<br><h1 id='26' style='font-size:14px'>내부 사진 (홀, 1인석)</h1>\n<figure id='27'><img alt=\"\" data-coord=\"top-left:(72,203); bottom-right:(1232,1073)\" /></figure>\n<br><figure id='28'><img alt=\"\" data-coord=\"top-left:(1279,201); bottom-right:(1938,1073)\" /></figure>\n<h1 id='29' style='font-size:18px'>01. 안다르커피 소개</h1>\n<br><h1 id='30' style='font-size:14px'>내부 사진</h1>\n<figure id='31'><img alt=\"\" data-coord=\"top-left:(52,202); bottom-right:(1215,1076)\" /></figure>\n<br><figure id='32'><img alt=\"\" data-coord=\"top-left:(1261,201); bottom-right:(1921,1071)\" /></figure>\n<h1 id='33' style='font-size:18px'>01. 안다르커피 소개</h1>\n<br><h1 id='34' style='font-size:14px'>미팅룸 사진 (4인 이상, 예약은 네이버지도 공지 확인</h1>\n<br><figure id='35'><img style='font-size:14px' alt=\"부탁드립니다)\" data-coord=\"top-left:(53,200); bottom-right:(1215,1073)\" /></figure>\n<br><figure id='36'><img alt=\"\" data-coord=\"top-left:(1262,199); bottom-right:(1925,1071)\" /></figure>\n<h1 id='37' style='font-size:20px'>02. 미팅룸 사용방법</h1>\n<br><h1 id='38' style='font-size:16px'>4인 이상 예약우선제로 운영되며, 아래 사이트를 통해 예약해주세요.</h1>\n<br><figure id='39'><img style='font-size:14px' alt=\"이용가능시간 확인 후, 예약폼\n제출!\" data-coord=\"top-left:(62,168); bottom-right:(1822,1016)\" /></figure>\n<h1 id='40' style='font-size:20px'>02. 제휴 내용 (~2025/12)</h1>\n<br><h1 id='41' style='font-size:16px'>활동기수 전용 제휴카드 제공</h1>\n<figure id='42'><img alt=\"\" data-coord=\"top-left:(139,298); bottom-right:(895,980)\" /></figure>\n<br><h1 id='43' style='font-size:16px'>제휴 혜택 전 음료메뉴 15% 할인</h1>\n<h1 id='44' style='font-size:14px'>디저트, 세트메뉴 할인, 1일권, 선불권은 혜택상품에서 제외<br>기타 중복할인 불가<br>포인트 적립 가능</h1>\n<h1 id='45' style='font-size:16px'>제휴 기간 2025년7월~12월</h1>\n<br><h1 id='46' style='font-size:16px'>사용 방법 카드 지참 후 주문 시 직원에게 제시 (키오스크</h1>\n<br><p id='47' data-category='paragraph' style='font-size:16px'>X)</p>\n<h1 id='48' style='font-size:16px'>주의 사항 멤버십 카드 타인에게 양도/대여 금지</h1>\n<p id='49' data-category='paragraph' style='font-size:14px'>동행자 혜택 적용 가능<br>양도/대여 적발 3회 시 제휴 파기 가능<br>카드 분실 시, 학회대표자를 통해 재발급 신청</p>\n<h1 id='50' style='font-size:20px'>02. 제휴 내용 (~2025/06)</h1>\n<br><h1 id='51' style='font-size:14px'>잠시 멈춰 제휴카드에 아래와 같이 정보기입 부탁드립니다<br>미기입 시 사용불가합니다</h1>\n<h1 id='52' style='font-size:16px'>YBIGTA<br>박OO</h1>\n<br><h1 id='53' style='font-size:16px'>25/12</h1>\n<h1 id='54' style='font-size:14px'>미팅룸 일정확인/예약QR</h1>\n<h1 id='55' style='font-size:14px'>03. 안다르커피 이용정책</h1>\n<p id='56' data-category='paragraph' style='font-size:14px'>1. 1인1메뉴 주문 부탁드립니다<br>2. 라스트 오더는 마감 1시간 전입니다<br>3. 미팅룸은 4인 이상, 예약우선제 입니다<br>4. 5시간 이상 이용 시 추가 주문 or 1일권 이용<br>부탁드립니다</p>\n<h1 id='57' style='font-size:14px'>추가 문의사항은 010-3209-1716으로<br>부탁드립니다:)</h1>\n<figure id='58'><img alt=\"\" data-coord=\"top-left:(0,345); bottom-right:(570,1113)\" /></figure>\n<br><h1 id='59' style='font-size:14px'>감사합니다☺</h1>\n<figure id='60'><img alt=\"\" data-coord=\"top-left:(1668,652); bottom-right:(2000,1107)\" /></figure>"
}
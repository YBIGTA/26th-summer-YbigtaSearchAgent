# read_chromadb_direct.py
import chromadb
from chromadb.config import Settings
import os

def read_chromadb_direct():
    """ChromaDB ÌååÏùºÏóêÏÑú ÏßÅÏ†ë Îç∞Ïù¥ÌÑ∞Î•º ÏùΩÏñ¥ÏÑú Î≥¥Ïó¨Ï§çÎãàÎã§."""
    
    chroma_path = "data/indexes/chroma_db"
    
    if not os.path.exists(chroma_path):
        print(f"‚ùå ChromaDB Í≤ΩÎ°úÍ∞Ä ÏóÜÏäµÎãàÎã§: {chroma_path}")
        return
    
    try:
        # ChromaDB ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ Ï¥àÍ∏∞Ìôî
        client = chromadb.PersistentClient(
            path=chroma_path,
            settings=Settings(anonymized_telemetry=False)
        )
        
        print(f"üîç ChromaDB ÏßÅÏ†ë ÏùΩÍ∏∞")
        print(f"=" * 50)
        
        # Î™®Îì† Ïª¨Î†âÏÖò Î™©Î°ù ÌôïÏù∏
        collections = client.list_collections()
        print(f"üìã ChromaDB Ïª¨Î†âÏÖò Î™©Î°ù:")
        
        if not collections:
            print("  - Ïª¨Î†âÏÖòÏù¥ ÏóÜÏäµÎãàÎã§.")
            return
        
        for collection in collections:
            print(f"  - {collection.name}: {collection.count()}Í∞ú Î¨∏ÏÑú")
            
            # Í∞Å Ïª¨Î†âÏÖòÏùò Îç∞Ïù¥ÌÑ∞ ÏùΩÍ∏∞
            try:
                # Ïª¨Î†âÏÖòÏóêÏÑú Î™®Îì† Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞
                results = collection.get(
                    include=['metadatas', 'documents', 'embeddings']
                )
                
                if results['ids']:
                    print(f"    üìä Î¨∏ÏÑú ÌÜµÍ≥Ñ:")
                    print(f"      - Ï¥ù Î¨∏ÏÑú Ïàò: {len(results['ids'])}Í∞ú")
                    
                    # ÏÜåÏä§Î≥Ñ ÌÜµÍ≥Ñ
                    source_stats = {}
                    for metadata in results['metadatas']:
                        if metadata:
                            source = metadata.get('source', 'unknown')
                            source_stats[source] = source_stats.get(source, 0) + 1
                    
                    print(f"      - ÏÜåÏä§Î≥Ñ Î∂ÑÌè¨:")
                    for source, count in source_stats.items():
                        print(f"        ‚Ä¢ {source}: {count}Í∞ú")
                    
                    # Ï≤òÏùå 10Í∞ú Î¨∏ÏÑú Î≥¥Ïó¨Ï£ºÍ∏∞
                    print(f"      - Î¨∏ÏÑú Î™©Î°ù (Ï≤òÏùå 10Í∞ú):")
                    for i in range(min(10, len(results['ids']))):
                        doc_id = results['ids'][i]
                        metadata = results['metadatas'][i] if results['metadatas'] else {}
                        document = results['documents'][i] if results['documents'] else ""
                        
                        title = metadata.get('title', 'Unknown')
                        source = metadata.get('source', 'unknown')
                        last_updated = metadata.get('last_updated', 'Unknown')
                        
                        # Î¨∏ÏÑú ÎÇ¥Ïö© ÎØ∏Î¶¨Î≥¥Í∏∞ (Ï≤òÏùå 100Ïûê)
                        content_preview = document[:100] + "..." if len(document) > 100 else document
                        
                        print(f"        {i+1:2d}. {title} ({source})")
                        print(f"            ID: {doc_id}")
                        print(f"            ÏóÖÎç∞Ïù¥Ìä∏: {last_updated}")
                        print(f"            ÎÇ¥Ïö©: {content_preview}")
                        print()
                    
                    if len(results['ids']) > 10:
                        print(f"        ... Í∑∏Î¶¨Í≥† {len(results['ids']) - 10}Í∞ú Îçî")
                    
                    # Ï†ÑÏ≤¥ Î¨∏ÏÑú Î™©Î°ù Î≥¥Í∏∞ ÏòµÏÖò
                    show_all = input("Ï†ÑÏ≤¥ Î¨∏ÏÑú Î™©Î°ùÏùÑ Î≥¥ÏãúÍ≤†ÏäµÎãàÍπå? (y/n): ").lower()
                    if show_all == 'y':
                        print(f"\nüìã Ï†ÑÏ≤¥ Î¨∏ÏÑú Î™©Î°ù:")
                        for i in range(len(results['ids'])):
                            doc_id = results['ids'][i]
                            metadata = results['metadatas'][i] if results['metadatas'] else {}
                            title = metadata.get('title', 'Unknown')
                            source = metadata.get('source', 'unknown')
                            last_updated = metadata.get('last_updated', 'Unknown')
                            print(f"  {i+1:3d}. {title} ({source}) - {last_updated}")
                
                else:
                    print(f"    üì≠ Ïª¨Î†âÏÖòÏóê Î¨∏ÏÑúÍ∞Ä ÏóÜÏäµÎãàÎã§.")
                    
            except Exception as e:
                print(f"    ‚ùå Ïª¨Î†âÏÖò ÏùΩÍ∏∞ Ïò§Î•ò: {e}")
        
        # ChromaDB ÌååÏùº Ï†ïÎ≥¥
        print(f"\nÔøΩÔøΩ ChromaDB ÌååÏùº Ï†ïÎ≥¥:")
        sqlite_file = os.path.join(chroma_path, "chroma.sqlite3")
        if os.path.exists(sqlite_file):
            size = os.path.getsize(sqlite_file)
            print(f"  - chroma.sqlite3: {size / (1024*1024):.1f} MB")
        
        # ÏûÑÎ≤†Îî© Ìè¥ÎçîÎì§
        embedding_dirs = [d for d in os.listdir(chroma_path) 
                         if os.path.isdir(os.path.join(chroma_path, d)) 
                         and len(d) == 36]  # UUID ÌòïÏãù
        
        print(f"  - ÏûÑÎ≤†Îî© Ìè¥Îçî: {len(embedding_dirs)}Í∞ú")
        for i, folder in enumerate(embedding_dirs[:5]):  # Ï≤òÏùå 5Í∞úÎßå
            folder_path = os.path.join(chroma_path, folder)
            size = sum(os.path.getsize(os.path.join(folder_path, f)) 
                      for f in os.listdir(folder_path) 
                      if os.path.isfile(os.path.join(folder_path, f)))
            print(f"    ‚Ä¢ {folder}: {size / 1024:.1f} KB")
        
        if len(embedding_dirs) > 5:
            print(f"    ‚Ä¢ ... Í∑∏Î¶¨Í≥† {len(embedding_dirs) - 5}Í∞ú Îçî")
        
    except Exception as e:
        print(f"‚ùå ChromaDB ÏùΩÍ∏∞ Ïò§Î•ò: {e}")

if __name__ == "__main__":
    read_chromadb_direct()